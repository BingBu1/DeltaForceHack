
#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace Dumper {
// Class DFMGameplay.DFMAbilityThrowBlockingBaseActor
// Size: 0x388 (Inherited: 0x378)
class ADFMAbilityThrowBlockingBaseActor : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)

	void SetIsBurning(); // Function DFMGameplay.DFMAbilityThrowBlockingBaseActor.SetIsBurning // (Native|Public) // @ game+0xbcc1a0
	void DoCustomDestroy(struct TArray<struct FOverlapResult>& Overlaps); // Function DFMGameplay.DFMAbilityThrowBlockingBaseActor.DoCustomDestroy // (Native|Public|HasOutParms) // @ game+0x62384b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StingerMissileProjectileMovementComponent
// Size: 0x5f0 (Inherited: 0x5c0)
class UStingerMissileProjectileMovementComponent : public UGPWeaponProjectileMovementComponent {
public:

	char pad_5C0[0xd]; // 0x5c0(0x0d)
	bool bSimpleMove; // 0x5cd(0x01)
	bool bIsSimulated; // 0x5ce(0x01)
	char pad_5CF[0x1]; // 0x5cf(0x01)
	struct FStingerMissileMovementParam MovementParam; // 0x5d0(0x18)
	char pad_5E8[0x8]; // 0x5e8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemPreviewActor
// Size: 0x450 (Inherited: 0x378)
class AItemPreviewActor : public AActor {
public:

	float StepbackDistance; // 0x378(0x04)
	bool IgnoreCharacter; // 0x37c(0x01)
	char pad_37D[0x3]; // 0x37d(0x03)
	float PreviewLocInterpSpeed; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct TArray<struct UClass*> UnLocateObjectClass; // 0x388(0x10)
	char pad_398[0x38]; // 0x398(0x38)
	struct UPrimitiveComponent* PrimComp; // 0x3d0(0x08)
	struct USkeletalMeshComponent* CacheSkeMeshComp; // 0x3d8(0x08)
	struct UStaticMeshComponent* CacheStaticMeshComp; // 0x3e0(0x08)
	char pad_3E8[0x68]; // 0x3e8(0x68)

	void LocationValidChange(bool Valid); // Function DFMGameplay.ItemPreviewActor.LocationValidChange // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_GPAudioBase
// Size: 0x48 (Inherited: 0x40)
class UAnimNotify_GPAudioBase : public UAnimNotify {
public:

	enum class EGPAnimNotifyType AnimNotifyType; // 0x40(0x01)
	bool bOnlyAsMark; // 0x41(0x01)
	enum class EGPAudioBlueprintType AudioTypeOverride; // 0x42(0x01)
	char pad_43[0x5]; // 0x43(0x05)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ActionScheduleComponent
// Size: 0x148 (Inherited: 0x100)
class UActionScheduleComponent : public UActorComponent {
public:

	struct AAIController* Controller; // 0x100(0x08)
	struct FActionScheduler ActionScheduler; // 0x108(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTask_ActionBase
// Size: 0x80 (Inherited: 0x78)
class UBTask_ActionBase : public UBTTaskNode {
public:

	struct UAction* Action; // 0x78(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AddAmbientLightFatorVolumeActor
// Size: 0x3d0 (Inherited: 0x378)
class AAddAmbientLightFatorVolumeActor : public AActor {
public:

	struct UBoxComponent* CollisionBox; // 0x378(0x08)
	struct FName AmbientLightGroupName; // 0x380(0x08)
	struct FName AmbientLightGroupNameHD; // 0x388(0x08)
	bool bUseAmbientLightParms; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	struct FCharacterAmbientLightParms VolumeAddLightFator; // 0x394(0x1c)
	struct FCharacterAmbientLightParms VolumeAddLightFatorHD; // 0x3b0(0x1c)
	char pad_3CC[0x4]; // 0x3cc(0x04)

	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AddAmbientLightFatorVolumeActor.OnEndOverlap // (Final|Native|Public) // @ game+0x61c1920
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AddAmbientLightFatorVolumeActor.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x61c1610
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AdjutantNoticeActor
// Size: 0x440 (Inherited: 0x378)
class AAdjutantNoticeActor : public AActor {
public:

	struct FAdjutantInfo AdjutantInfo; // 0x378(0x28)
	struct FText AdjutantKilledTips; // 0x3a0(0x18)
	float AdjutantKilledTipsShowTime; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct FText AdjutantShowTips; // 0x3c0(0x18)
	float AdjutantShowTipsShowTime; // 0x3d8(0x04)
	float AdjutantShowRange; // 0x3dc(0x04)
	struct FName ShowAdjutantBornVO; // 0x3e0(0x08)
	struct FName KillAdjutantWithActivityVO; // 0x3e8(0x08)
	struct FName KillAdjutantWithoutActivityVO; // 0x3f0(0x08)
	float MaxCheckTime; // 0x3f8(0x04)
	float CheckFrequencyTime; // 0x3fc(0x04)
	struct TArray<struct FString> AdjutantActivityGoalIdStrArray; // 0x400(0x10)
	struct FString AdjutantAITargetName; // 0x410(0x10)
	struct FName AdjutantNameID; // 0x420(0x08)
	bool bLoadedAllControllerClassEnd; // 0x428(0x01)
	bool bSOLStartMatchInfoHUDShowEnd; // 0x429(0x01)
	char pad_42A[0x2]; // 0x42a(0x02)
	float StartCheckTime; // 0x42c(0x04)
	struct UAdjutantLocationViewController* AdjutantLocationViewController; // 0x430(0x08)
	struct UMapItemRangeViewController* RangeViewController; // 0x438(0x08)

	void ShowAdjutantMapInfo(); // Function DFMGameplay.AdjutantNoticeActor.ShowAdjutantMapInfo // (Final|Native|Private) // @ game+0x61c6330
	void SetNeedShowAdjutantInfo(); // Function DFMGameplay.AdjutantNoticeActor.SetNeedShowAdjutantInfo // (Final|Native|Public) // @ game+0x61c6310
	void ServerShowSubtitleSequence(struct AGPCharacter* CHARACTER, struct FName& SubtitleId); // Function DFMGameplay.AdjutantNoticeActor.ServerShowSubtitleSequence // (Final|Native|Private|HasOutParms|Const) // @ game+0x61c61c0
	void ServerShowAdjutantKilledTips(struct AGPCharacter* CHARACTER); // Function DFMGameplay.AdjutantNoticeActor.ServerShowAdjutantKilledTips // (Final|Native|Private|Const) // @ game+0x61c6140
	void OnRep_AdjutantInfo(); // Function DFMGameplay.AdjutantNoticeActor.OnRep_AdjutantInfo // (Final|Native|Private) // @ game+0x61c5f80
	void OnPlayerKilledServerNotify(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* Desc); // Function DFMGameplay.AdjutantNoticeActor.OnPlayerKilledServerNotify // (Final|Native|Private|HasOutParms) // @ game+0x61c5e80
	void OnLoadedAllControllerClass(); // Function DFMGameplay.AdjutantNoticeActor.OnLoadedAllControllerClass // (Final|Native|Private) // @ game+0x61c5e60
	struct ABaseHUD* GetHUD(); // Function DFMGameplay.AdjutantNoticeActor.GetHUD // (Final|Native|Private) // @ game+0x61c5c30
	void CheckStartMatchInfo(); // Function DFMGameplay.AdjutantNoticeActor.CheckStartMatchInfo // (Final|Native|Private) // @ game+0x61c58d0
	void CheckIfHasAdjutantActivity(); // Function DFMGameplay.AdjutantNoticeActor.CheckIfHasAdjutantActivity // (Final|Native|Private) // @ game+0x61c58b0
	bool CheckAdjutantActivityValid(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.AdjutantNoticeActor.CheckAdjutantActivityValid // (Final|Native|Private|Const) // @ game+0x61c5820
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AdjutantNoticeSpawner
// Size: 0x3b0 (Inherited: 0x378)
class AAdjutantNoticeSpawner : public AActor {
public:

	struct UClass* AdjutantNoticeActorToSpawn; // 0x378(0x08)
	struct TArray<struct FString> AdjutantActivityGoalIdStrArray; // 0x380(0x10)
	struct FString AdjutantAITargetName; // 0x390(0x10)
	struct FName AdjutantNameID; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	struct AAdjutantNoticeActor* SpawnAdjutantNoticeActor(); // Function DFMGameplay.AdjutantNoticeSpawner.SpawnAdjutantNoticeActor // (Final|Native|Private|Const) // @ game+0x61c6350
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AerialVehicle
// Size: 0x430 (Inherited: 0x400)
class AAerialVehicle : public ADefaultPawn {
public:

	/*struct FMulticastInlineDelegate*/char OnDied[0x10]; // 0x400(0x10)
	struct UGPTeamComponent* TeamComp; // 0x410(0x08)
	struct UAerialVehicleHealthComponent* HealthComp; // 0x418(0x08)
	bool bIsAlive; // 0x420(0x01)
	char pad_421[0x7]; // 0x421(0x07)
	struct USkeletalMeshComponent* Mesh; // 0x428(0x08)

	void OnDead(); // Function DFMGameplay.AerialVehicle.OnDead // (Native|Public) // @ game+0x128b6d0
	void BPOnDead(); // Function DFMGameplay.AerialVehicle.BPOnDead // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AerialVehicleHealthComponent
// Size: 0x160 (Inherited: 0x100)
class UAerialVehicleHealthComponent : public UActorComponent {
public:

	bool bIsDead; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float CurrentHealth; // 0x104(0x04)
	bool bIsInvincible; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float MaxHealth; // 0x10c(0x04)
	struct TMap<enum class EWeaponItemType, float> DamageScaling; // 0x110(0x50)

	void SetHP(float HP); // Function DFMGameplay.AerialVehicleHealthComponent.SetHP // (Final|Native|Public) // @ game+0x61c6290
	void OnRep_OnHealthChange(); // Function DFMGameplay.AerialVehicleHealthComponent.OnRep_OnHealthChange // (Final|Native|Protected) // @ game+0x61c5fa0
	bool IsDead(); // Function DFMGameplay.AerialVehicleHealthComponent.IsDead // (Final|Native|Public|Const) // @ game+0x35f6f20
	float GetHP(); // Function DFMGameplay.AerialVehicleHealthComponent.GetHP // (Final|Native|Public) // @ game+0x61c5c10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AI3AnimMetaData
// Size: 0x48 (Inherited: 0x30)
class UAI3AnimMetaData : public UAnimMetaData {
public:

	bool bLoop; // 0x30(0x01)
	bool bStop; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct TArray<struct FAnimPathMoveSegment> MoveSegments; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICharacterAnimSnapshotManager
// Size: 0x90 (Inherited: 0x38)
class UAICharacterAnimSnapshotManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x58]; // 0x38(0x58)

	bool GetBoneTransform(struct FName ConfigName, enum class EGPCharacterPoseStateType Pose, enum class EGPCharacterFightStateType FightState, struct FName BoneName, struct FTransform& OutTransform); // Function DFMGameplay.AICharacterAnimSnapshotManager.GetBoneTransform // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x61c59e0
	enum class EGPCharacterPoseStateType STATIC_GetAICharacterSnapShotPoseType(struct ADFMAICharacter* InAICharacter); // Function DFMGameplay.AICharacterAnimSnapshotManager.GetAICharacterSnapShotPoseType // (Final|Native|Static|Public) // @ game+0x61c5930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICharacterSignificanceStrategyInterface
// Size: 0x30 (Inherited: 0x30)
class UAICharacterSignificanceStrategyInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICoordinator
// Size: 0x580 (Inherited: 0x378)
class AAICoordinator : public ALevelSubsystem {
public:

	struct TMap<enum class ESkillType, float> SkillCoolTime; // 0x378(0x50)
	struct TMap<struct ADFMCharacter*, float> LastSkillTime; // 0x3c8(0x50)
	struct FAICoordinatorConfig CoordinatorConfig; // 0x418(0xe0)
	struct UClass* AIGroupClass; // 0x4f8(0x08)
	struct AAIJobManager* AIJobManager; // 0x500(0x08)
	struct TArray<struct UAISearchJob*> SearchJobs; // 0x508(0x10)
	struct TArray<struct UAIPatrolJob*> PatrolJobs; // 0x518(0x10)
	struct TArray<struct UAIDashJob*> DashJobs; // 0x528(0x10)
	struct TArray<struct UAIInvestigateJob*> InvestigateJobs; // 0x538(0x10)
	float ThreatBroadcastDistance; // 0x548(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
	struct TArray<struct AAIPatrolArea*> PatrolAreas; // 0x550(0x10)
	struct UPvPBotPlayerMoniter* PlayerMonitor; // 0x560(0x08)
	struct UAIMapSearch* MapSearch; // 0x568(0x08)
	struct UGroupAISystem* GroupAISystem; // 0x570(0x08)
	struct UAIStyleSystem* AIStyleSystem; // 0x578(0x08)

	struct AAICoordinator* STATIC_Instance(struct UObject* WorldContextObj); // Function DFMGameplay.AICoordinator.Instance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61c5c60
	struct UGroupAISystem* GetGroupAISystem(); // Function DFMGameplay.AICoordinator.GetGroupAISystem // (Final|Native|Public|BlueprintCallable) // @ game+0x61c5be0
	struct UAIStyleSystem* GetAIStyleSystem(); // Function DFMGameplay.AICoordinator.GetAIStyleSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x61c59b0
	bool CanBeAttackBySkill(struct ADFMCharacter* Player, enum class ESkillType SkillType); // Function DFMGameplay.AICoordinator.CanBeAttackBySkill // (Final|Native|Public|BlueprintCallable) // @ game+0x61c5760
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PvPBotPlayerMoniter
// Size: 0x80 (Inherited: 0x30)
class UPvPBotPlayerMoniter : public UObject {
public:

	char pad_30[0x50]; // 0x30(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIMapSearch
// Size: 0x70 (Inherited: 0x30)
class UAIMapSearch : public UObject {
public:

	char pad_30[0x40]; // 0x30(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIDashJob
// Size: 0x70 (Inherited: 0x58)
class UAIDashJob : public UAIJob {
public:

	struct AActor* DashTarget; // 0x58(0x08)
	char pad_60[0x10]; // 0x60(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DashJobFilter
// Size: 0x30 (Inherited: 0x30)
class UDashJobFilter : public UJobFilterBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIDebugConfig
// Size: 0x48 (Inherited: 0x40)
class UAIDebugConfig : public UDeveloperSettings {
public:

	bool EnableDebugDrawAITrace; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIFlameDetectorActor
// Size: 0x430 (Inherited: 0x378)
class AAIFlameDetectorActor : public AActor {
public:

	float Speed; // 0x378(0x04)
	float SpeedDelay; // 0x37c(0x04)
	float SpreadDelay; // 0x380(0x04)
	float DelayStopTime; // 0x384(0x04)
	char pad_388[0x8]; // 0x388(0x08)
	struct FTransform TransOffset; // 0x390(0x30)
	char pad_3C0[0x4]; // 0x3c0(0x04)
	struct FVector TargetLocation; // 0x3c4(0x0c)
	char pad_3D0[0x18]; // 0x3d0(0x18)
	struct UFXResourceContainerComponent* FlameShortSeg; // 0x3e8(0x08)
	struct UFXResourceContainerComponent* FlameLongSeg; // 0x3f0(0x08)
	char pad_3F8[0x20]; // 0x3f8(0x20)
	struct UActorComponent* FlameCom; // 0x418(0x08)
	char pad_420[0x10]; // 0x420(0x10)

	void StopEffectInternal(); // Function DFMGameplay.AIFlameDetectorActor.StopEffectInternal // (Final|Native|Private) // @ game+0x61c63a0
	void StopEffect(); // Function DFMGameplay.AIFlameDetectorActor.StopEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x61c6380
	void PlayEffectInternal(); // Function DFMGameplay.AIFlameDetectorActor.PlayEffectInternal // (Final|Native|Private) // @ game+0x61c5fe0
	void PlayEffect(); // Function DFMGameplay.AIFlameDetectorActor.PlayEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x61c5fc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupDramaVoiceComponent
// Size: 0x238 (Inherited: 0x100)
class UAIGroupDramaVoiceComponent : public UActorComponent {
public:

	struct UDataTable* GroupDramaVoiceTable; // 0x100(0x08)
	struct UDFMSpeakComponent* SpeakComponent; // 0x108(0x08)
	char pad_110[0x128]; // 0x110(0x128)

	bool PlayGroupDramaVoice(struct FName RowName, struct FName Type); // Function DFMGameplay.AIGroupDramaVoiceComponent.PlayGroupDramaVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x61c6000
	void OnCharacterDied(struct AGPCharacterBase* InCharacter, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AIGroupDramaVoiceComponent.OnCharacterDied // (Final|Native|Private) // @ game+0x61c5d60
	void OnCharacterDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.AIGroupDramaVoiceComponent.OnCharacterDestroyed // (Final|Native|Private) // @ game+0x61c5ce0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupSpawnerBase
// Size: 0x390 (Inherited: 0x378)
class AAIGroupSpawnerBase : public AGPSpawnerBase {
public:

	/*struct FMulticastInlineDelegate*/char OnSpawnEnd[0x10]; // 0x378(0x10)
	bool bAlreadySpawned; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)

	void StartSpawn(); // Function DFMGameplay.AIGroupSpawnerBase.StartSpawn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct AAIGroup*> GetSpawnedGroupList(); // Function DFMGameplay.AIGroupSpawnerBase.GetSpawnedGroupList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct APawn*> GetSpawnedActorList(); // Function DFMGameplay.AIGroupSpawnerBase.GetSpawnedActorList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void FireSpawnEnd(); // Function DFMGameplay.AIGroupSpawnerBase.FireSpawnEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x61c58f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupSpawnerInterface
// Size: 0x30 (Inherited: 0x30)
class UAIGroupSpawnerInterface : public UInterface {
public:


	bool StartSpawn(); // Function DFMGameplay.AIGroupSpawnerInterface.StartSpawn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void OnSpawnEnd_Broadcast(); // Function DFMGameplay.AIGroupSpawnerInterface.OnSpawnEnd_Broadcast // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xbd3040
	void OnActorDied_Broadcast(); // Function DFMGameplay.AIGroupSpawnerInterface.OnActorDied_Broadcast // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x9281d0
	struct TArray<struct FSpawnedActorInfo> GetSpawnedActorList(); // Function DFMGameplay.AIGroupSpawnerInterface.GetSpawnedActorList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct AActor* GetFirstSpawnedActor(); // Function DFMGameplay.AIGroupSpawnerInterface.GetFirstSpawnedActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	int32_t GetCurrentActorNum(); // Function DFMGameplay.AIGroupSpawnerInterface.GetCurrentActorNum // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIHelicopterSteeringComponent
// Size: 0x2b0 (Inherited: 0x100)
class UAIHelicopterSteeringComponent : public UActorComponent {
public:

	char pad_100[0xd]; // 0x100(0x0d)
	bool bCollisonAvoidance; // 0x10d(0x01)
	bool bEnableDebugDrawPath; // 0x10e(0x01)
	char pad_10F[0x1]; // 0x10f(0x01)
	float MaxSpeed; // 0x110(0x04)
	float MaxAcceleration; // 0x114(0x04)
	float MaxAngularSpeed; // 0x118(0x04)
	float MaxAngularAcceleration; // 0x11c(0x04)
	float CrashRotateRate; // 0x120(0x04)
	struct FakeOrientationConf FakeOrientationConf; // 0x124(0x18)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct FRepVelocityData RepVelocityData; // 0x140(0x60)
	bool bDrawDebug; // 0x1a0(0x01)
	char pad_1A1[0x17]; // 0x1a1(0x17)
	struct FRepSteeringData DefaultSteeringData; // 0x1b8(0x14)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct APawn* PawnOwner; // 0x1d0(0x08)
	struct UMeshComponent* Mesh; // 0x1d8(0x08)
	struct UPawnKinematic* Kinematic; // 0x1e0(0x08)
	struct UCollisonAvoidance* CollisonAvoidance; // 0x1e8(0x08)
	struct UPropertySteering* PropertySteering; // 0x1f0(0x08)
	struct UBlendSteering* RootSteering; // 0x1f8(0x08)
	struct UPathFollowSteering* PathFollowSteering; // 0x200(0x08)
	struct UCrashSteering* CrashSteering; // 0x208(0x08)
	struct UPropertySteering* FacePropertySteering; // 0x210(0x08)
	char pad_218[0x90]; // 0x218(0x90)
	bool bCrashed; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)

	void ServerSetSteeringData(struct FRepSteeringData InData); // Function DFMGameplay.AIHelicopterSteeringComponent.ServerSetSteeringData // (Final|Native|Public|BlueprintCallable) // @ game+0x61cc680
	void ServerRevertSteeringData(); // Function DFMGameplay.AIHelicopterSteeringComponent.ServerRevertSteeringData // (Final|Native|Public|BlueprintCallable) // @ game+0x61cc660
	void ResetPathFollowSteering(); // Function DFMGameplay.AIHelicopterSteeringComponent.ResetPathFollowSteering // (Final|Native|Public|BlueprintCallable) // @ game+0x61cc640
	void OnRepVelocityData(); // Function DFMGameplay.AIHelicopterSteeringComponent.OnRepVelocityData // (Final|Native|Public) // @ game+0x61cc600
	void DebugDrawPath(struct TArray<struct FVector> Points); // Function DFMGameplay.AIHelicopterSteeringComponent.DebugDrawPath // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x61cb520
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIInteractorComponent
// Size: 0x5a0 (Inherited: 0x580)
class UAIInteractorComponent : public USphereComponent {
public:

	struct TArray<enum class ECampType> CampType; // 0x580(0x10)
	char pad_590[0x10]; // 0x590(0x10)

	void OnPawnOut(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AIInteractorComponent.OnPawnOut // (Native|Public) // @ game+0x61cc4c0
	void OnPawnEnter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AIInteractorComponent.OnPawnEnter // (Native|Public|HasOutParms) // @ game+0x61cc2c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabAIJobManagerComponent
// Size: 0x138 (Inherited: 0x100)
class UAILabAIJobManagerComponent : public UActorComponent {
public:

	struct AAILabPlayerAIController* Controller; // 0x100(0x08)
	char pad_108[0x20]; // 0x108(0x20)
	struct APOITriggerActor* CurrPOI; // 0x128(0x08)
	char pad_130[0x8]; // 0x130(0x08)

	struct FVector GetCurrMoveTargetPosition(); // Function DFMGameplay.AILabAIJobManagerComponent.GetCurrMoveTargetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61cb870
	enum class EAILabJobType GetAIJobType(struct ADFMCharacter* Cha); // Function DFMGameplay.AILabAIJobManagerComponent.GetAIJobType // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb670
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabConfManager
// Size: 0x80 (Inherited: 0x30)
class UAILabConfManager : public UObject {
public:

	char pad_30[0x50]; // 0x30(0x50)

	struct UAILabConfManager* STATIC_GetSingleton(struct UObject* WorldContextObject); // Function DFMGameplay.AILabConfManager.GetSingleton // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61cbf00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabSpawnArea
// Size: 0x498 (Inherited: 0x378)
class AAILabSpawnArea : public AActor {
public:

	struct UBoxComponent* TrigArea; // 0x378(0x08)
	struct UBoxComponent* SpawnArea; // 0x380(0x08)
	bool IsBanArea; // 0x388(0x01)
	bool IsActive; // 0x389(0x01)
	bool UseSpawnArea; // 0x38a(0x01)
	char pad_38B[0x1]; // 0x38b(0x01)
	int32_t DeliverStyle; // 0x38c(0x04)
	int32_t MaxTrigNum; // 0x390(0x04)
	int32_t CourseId; // 0x394(0x04)
	float TrigTimeSecs; // 0x398(0x04)
	char pad_39C[0xfc]; // 0x39c(0xfc)

	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AILabSpawnArea.OnEndOverlap // (Final|Native|Public) // @ game+0x61cc180
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AILabSpawnArea.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x61cbf80
	void ForceCreateAILab(int32_t Num); // Function DFMGameplay.AILabSpawnArea.ForceCreateAILab // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb5f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabSpawner
// Size: 0x3f8 (Inherited: 0x378)
class AAILabSpawner : public AActor {
public:

	struct ADFMCharacter* SpawnCharacter; // 0x378(0x08)
	int32_t AILabUin; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct FString NickName; // 0x388(0x10)
	int32_t AILabCampId; // 0x398(0x04)
	int32_t AILabTeamId; // 0x39c(0x04)
	struct TMap<int64_t, int32_t> AILabEquips; // 0x3a0(0x50)
	float DelaySpawnSecs; // 0x3f0(0x04)
	float AILabCurrecy; // 0x3f4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabSpawnRuleBase
// Size: 0x620 (Inherited: 0x378)
class AAILabSpawnRuleBase : public AActor {
public:

	struct TArray<struct FAILabDeliverModel> DeliverModels; // 0x378(0x10)
	struct TArray<struct FAILabFullMapModel> FullMapModels; // 0x388(0x10)
	char pad_398[0x1d0]; // 0x398(0x1d0)
	struct TArray<struct AAILabSpawnArea*> SpawnAreas; // 0x568(0x10)
	char pad_578[0xa8]; // 0x578(0xa8)

	float GetPlayerNearExitDist(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerNearExitDist // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbe60
	float GetPlayerLastHurtTime(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerLastHurtTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbdc0
	float GetPlayerLastFireTime(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerLastFireTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbd20
	float GetPlayerHpRate(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerHpRate // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbc80
	bool GetPlayerBloody(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerBloody // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbbf0
	float GetPlayerArmRate(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetPlayerArmRate // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbb50
	float GetModelNoDeliverAssets(float TimeSecs); // Function DFMGameplay.AILabSpawnRuleBase.GetModelNoDeliverAssets // (Final|Native|Public|BlueprintCallable) // @ game+0x61cbac0
	float GetModelExtDeliverInterval(float TimeSecs); // Function DFMGameplay.AILabSpawnRuleBase.GetModelExtDeliverInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x61cba30
	float GetModelDeliverTime(float TimeSecs); // Function DFMGameplay.AILabSpawnRuleBase.GetModelDeliverTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb9a0
	float GetModelDeliverInterval(float TimeSecs); // Function DFMGameplay.AILabSpawnRuleBase.GetModelDeliverInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb910
	int32_t GetModelAINum(); // Function DFMGameplay.AILabSpawnRuleBase.GetModelAINum // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb8e0
	float GetModelAIDiffcult(); // Function DFMGameplay.AILabSpawnRuleBase.GetModelAIDiffcult // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb8b0
	struct FAILabFullMapModel GetCurTeamDeliverModel(struct ADFMCharacter* CHARACTER, int32_t CourseId); // Function DFMGameplay.AILabSpawnRuleBase.GetCurTeamDeliverModel // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb7a0
	struct FAILabDeliverModel GetCurDeliverModel(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.GetCurDeliverModel // (Final|Native|Public|BlueprintCallable) // @ game+0x61cb700
	bool BP_IfDeliverAILabForTeam(struct ADFMCharacter* CHARACTER, int32_t CourseId); // Function DFMGameplay.AILabSpawnRuleBase.BP_IfDeliverAILabForTeam // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb450
	bool BP_IfDeliverAILabForPlayer(struct ADFMCharacter* CHARACTER, float LastMoveTime); // Function DFMGameplay.AILabSpawnRuleBase.BP_IfDeliverAILabForPlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb380
	float BP_GetSpawnInterval(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetSpawnInterval // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb2e0
	int32_t BP_GetFinalAILabDiffcult(float Index); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetFinalAILabDiffcult // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb250
	int32_t BP_GetAILabNum(float DiffIndex); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabNum // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb1c0
	bool BP_GetAILabLastIdle(struct ADFMCharacter* CHARACTER, float LastIdleTime); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabLastIdle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb0f0
	bool BP_GetAILabLastHurt(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabLastHurt // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cb050
	bool BP_GetAILabLastFire(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabLastFire // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cafb0
	float BP_GetAILabKillScore(struct ADFMCharacter* CHARACTER, int32_t KillNum); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabKillScore // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61caee0
	float BP_GetAILabHpScore(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabHpScore // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cae40
	float BP_GetAILabDiffcult(struct ADFMCharacter* CHARACTER, int32_t KillNum); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabDiffcult // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cad70
	float BP_GetAILabBloodyScore(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabBloodyScore // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cacd0
	float BP_GetAILabArmScore(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.AILabSpawnRuleBase.BP_GetAILabArmScore // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61cac30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIMovePath
// Size: 0x440 (Inherited: 0x378)
class AAIMovePath : public AActor {
public:

	char pad_378[0x11]; // 0x378(0x11)
	bool bProjectToNavmesh; // 0x389(0x01)
	bool bSplineReverse; // 0x38a(0x01)
	char pad_38B[0x5]; // 0x38b(0x05)
	struct USplineComponent* Spline; // 0x390(0x08)
	char pad_398[0x20]; // 0x398(0x20)
	struct TArray<struct FVector> WayPoints; // 0x3b8(0x10)
	struct TArray<struct UAIPathLootPoint*> LootPoints; // 0x3c8(0x10)
	int32_t RandomWeight; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct FString OwnerPlayerStartPoint; // 0x3e0(0x10)
	struct TMap<int32_t, struct UAIPathLootPoint*> WayPointContainsLootPoint; // 0x3f0(0x50)

	struct TArray<struct FVector> GetWayPoint(); // Function DFMGameplay.AIMovePath.GetWayPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x61d3300
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPathLootPoint
// Size: 0x580 (Inherited: 0x570)
class UAIPathLootPoint : public UArrowComponent {
public:

	struct TArray<struct AActor*> NearlyLootPoints; // 0x570(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIMovePathManager
// Size: 0x88 (Inherited: 0x38)
class UAIMovePathManager : public UWorldSubsystem {
public:

	struct TMap<struct FString, struct FAIMovePathList> RegisteredPathGroupMap; // 0x38(0x50)

	struct UAIMovePathManager* STATIC_GetAIMovePathManager(struct UObject* WorldContextObject); // Function DFMGameplay.AIMovePathManager.GetAIMovePathManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x61d1b20
	struct TArray<struct AAIMovePath*> STATIC_FindMovePathByUniqueKey(struct UObject* WorldContextObject, struct FString Key); // Function DFMGameplay.AIMovePathManager.FindMovePathByUniqueKey // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x61d1940
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGuardPoint
// Size: 0x580 (Inherited: 0x570)
class UAIGuardPoint : public UArrowComponent {
public:

	float GuardTime; // 0x570(0x04)
	float CoolDown; // 0x574(0x04)
	struct AAIController* GuardAI; // 0x578(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPatrolPath
// Size: 0x418 (Inherited: 0x378)
class AAIPatrolPath : public AActor {
public:

	char pad_378[0x11]; // 0x378(0x11)
	bool bProjectToNavmesh; // 0x389(0x01)
	bool bSplineReverse; // 0x38a(0x01)
	char pad_38B[0x5]; // 0x38b(0x05)
	struct USplineComponent* Spline; // 0x390(0x08)
	struct UTextRenderComponent* PathText; // 0x398(0x08)
	bool bBiDirection; // 0x3a0(0x01)
	char pad_3A1[0x3]; // 0x3a1(0x03)
	int32_t Capacity; // 0x3a4(0x04)
	bool bFullFill; // 0x3a8(0x01)
	char pad_3A9[0x7]; // 0x3a9(0x07)
	struct UClass* FormationPatternClass; // 0x3b0(0x08)
	struct TArray<struct FVector> WayPoints; // 0x3b8(0x10)
	bool bUseForPathFollower; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct TArray<struct AActor*> PathFollowWayPoints; // 0x3d0(0x10)
	struct TArray<struct UAIGuardPoint*> GuardPoints; // 0x3e0(0x10)
	char pad_3F0[0x28]; // 0x3f0(0x28)

	struct TArray<struct FVector> GetWayPoint(); // Function DFMGameplay.AIPatrolPath.GetWayPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x61d3340
	struct UClass* GetFormationPatternClass(); // Function DFMGameplay.AIPatrolPath.GetFormationPatternClass // (Final|Native|Public|BlueprintCallable) // @ game+0x61d2220
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPatrolArea
// Size: 0x3b0 (Inherited: 0x378)
class AAIPatrolArea : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct AAISpawnChecker* AISpawnChecker; // 0x388(0x08)
	int32_t Camp; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct TArray<struct FPathGroup> PatrolPathGroup; // 0x398(0x10)
	bool bDrawDebug; // 0x3a8(0x01)
	char pad_3A9[0x7]; // 0x3a9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPatrolJob
// Size: 0xc0 (Inherited: 0x58)
class UAIPatrolJob : public UAIJob {
public:

	struct ARecastNavMesh* NavMesh; // 0x58(0x08)
	struct AAIPatrolArea* PatrolArea; // 0x60(0x08)
	struct TMap<struct TWeakObjectPtr<struct AAIController>, struct FPatrolAIState> AIControllers; // 0x68(0x50)
	char pad_B8[0x8]; // 0xb8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NewPatrolJob
// Size: 0xe0 (Inherited: 0x58)
class UNewPatrolJob : public UAIJob {
public:

	struct ADramaArea* DramaArea; // 0x58(0x08)
	struct TMap<struct TWeakObjectPtr<struct AAIController>, struct FNewPatrolState> AIControllers; // 0x60(0x50)
	struct TArray<struct FVector> WayPoints; // 0xb0(0x10)
	int32_t MaxPatrolNum; // 0xc0(0x04)
	float CoolDownTime; // 0xc4(0x04)
	float PathWidth; // 0xc8(0x04)
	int32_t DramaAreaCD; // 0xcc(0x04)
	int32_t DramaAreaSearchRadius; // 0xd0(0x04)
	struct FName DramaAreaTag; // 0xd4(0x08)
	char pad_DC[0x4]; // 0xdc(0x04)

	bool GetDestinationWithRandom(struct AAIController* AIController, struct FVector CurDestLocation, struct FVector& Dest); // Function DFMGameplay.NewPatrolJob.GetDestinationWithRandom // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d20f0
	bool GetDestination(struct AAIController* AIController, struct FVector& Dest); // Function DFMGameplay.NewPatrolJob.GetDestination // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d2010
	struct ADramaArea* FindDramaAreaOrJoin(struct AAIController* AIController, struct ADramaArea* CurDramaArea); // Function DFMGameplay.NewPatrolJob.FindDramaAreaOrJoin // (Final|Native|Public|BlueprintCallable) // @ game+0x61d1880
	struct UNewPatrolJob* STATIC_CreatePatrolJobByKP(struct ADramaArea* Area, struct TArray<struct FVector>& Keypoints); // Function DFMGameplay.NewPatrolJob.CreatePatrolJobByKP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61d1770
	struct UNewPatrolJob* STATIC_CreatePatrolJob(struct ADramaArea* Area); // Function DFMGameplay.NewPatrolJob.CreatePatrolJob // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d16f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NewGuardJob
// Size: 0xd0 (Inherited: 0x58)
class UNewGuardJob : public UAIJob {
public:

	struct TArray<struct UGuardPoint*> GuardPoints; // 0x58(0x10)
	struct ADramaArea* DramaArea; // 0x68(0x08)
	struct TMap<struct TWeakObjectPtr<struct AAIController>, struct FNewGuardState> AIControllers; // 0x70(0x50)
	int32_t MaxGuardNum; // 0xc0(0x04)
	float CoolDownTime; // 0xc4(0x04)
	char pad_C8[0x8]; // 0xc8(0x08)

	struct UGuardPoint* GetNextGruardPoint(struct AAIController* Controller); // Function DFMGameplay.NewGuardJob.GetNextGruardPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x61d2d40
	struct UNewGuardJob* STATIC_CreateGuardJob(struct ADramaArea* Area); // Function DFMGameplay.NewGuardJob.CreateGuardJob // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d1670
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPersetMovePathManager
// Size: 0x98 (Inherited: 0x38)
class UAIPersetMovePathManager : public UWorldSubsystem {
public:

	struct TMap<struct FString, struct TWeakObjectPtr<struct AAIPresetMovePathGroup>> RegisteredPathGroupMap; // 0x38(0x50)
	char pad_88[0x10]; // 0x88(0x10)

	struct UAIPersetMovePathManager* STATIC_GetAIPresetMovePathManager(struct UObject* WorldContextObject); // Function DFMGameplay.AIPersetMovePathManager.GetAIPresetMovePathManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x61d6990
	struct AAIPresetMovePathGroup* STATIC_FindPresetPathGroupByUniqueKey(struct UObject* WorldContextObject, struct FString Key); // Function DFMGameplay.AIPersetMovePathManager.FindPresetPathGroupByUniqueKey // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x61d6830
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPresetMovePathGroup
// Size: 0x398 (Inherited: 0x378)
class AAIPresetMovePathGroup : public AActor {
public:

	struct FString PathGroupName; // 0x378(0x10)
	struct TArray<struct AAIPresetMovePathPoint*> MovePathGroupList; // 0x388(0x10)

	struct AAIPresetMovePathPoint* GetRandomGroupPoint(); // Function DFMGameplay.AIPresetMovePathGroup.GetRandomGroupPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x61d6b30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIPresetMovePathPoint
// Size: 0x380 (Inherited: 0x378)
class AAIPresetMovePathPoint : public AActor {
public:

	int32_t PathGroupId; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropActor
// Size: 0x550 (Inherited: 0x378)
class AAirDropActor : public AActor {
public:

	struct UAirDropMovementComponent* MovementComponent; // 0x378(0x08)
	struct USceneComponent* root; // 0x380(0x08)
	struct USceneComponent* AttachedJoint; // 0x388(0x08)
	struct FSoftObjectPath CompletedAnimPath1; // 0x390(0x18)
	struct FSoftObjectPath CompletedSkeletalMeshPath1; // 0x3a8(0x18)
	struct FSoftObjectPath CompletedAnimPath2; // 0x3c0(0x18)
	struct FSoftObjectPath CompletedSkeletalMeshPath2; // 0x3d8(0x18)
	struct FName DecelerateEffectID; // 0x3f0(0x08)
	struct FName StopFlyingEffectID; // 0x3f8(0x08)
	struct FName LandingEffectID; // 0x400(0x08)
	struct UGPAudioEventAsset* StartLoopDropAudioEvent; // 0x408(0x08)
	struct UGPAudioEventAsset* StopLoopDropAudioEvent; // 0x410(0x08)
	struct UGPAudioEventAsset* StartFallAudioEvent; // 0x418(0x08)
	struct UGPAudioEventAsset* LandingAudioEvent; // 0x420(0x08)
	struct UGPSkeletalMeshComponent* GPSkeletalMeshComponent1; // 0x428(0x08)
	struct UGPSkeletalMeshComponent* GPSkeletalMeshComponent2; // 0x430(0x08)
	struct UGPSkeletalMeshComponent* GPSkeletalJointMeshComponent; // 0x438(0x08)
	struct UStaticMeshComponent* RopeMeshComponent1; // 0x440(0x08)
	struct UStaticMeshComponent* RopeMeshComponent2; // 0x448(0x08)
	struct UStaticMeshComponent* RopeMeshComponent3; // 0x450(0x08)
	struct UStaticMeshComponent* RopeMeshComponent4; // 0x458(0x08)
	struct TArray<struct UStaticMeshComponent*> RopeComponents; // 0x460(0x10)
	char pad_470[0x10]; // 0x470(0x10)
	float RopeLength; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct AActor* AttachedActor; // 0x488(0x08)
	bool bIsFlying; // 0x490(0x01)
	char pad_491[0x3]; // 0x491(0x03)
	int32_t AirDropID; // 0x494(0x04)
	float SpawnHeight; // 0x498(0x04)
	char pad_49C[0x14]; // 0x49c(0x14)
	struct FTransform TargetTransform; // 0x4b0(0x30)
	char pad_4E0[0x8]; // 0x4e0(0x08)
	struct UAnimationAsset* CompletedAnim1; // 0x4e8(0x08)
	struct USkeletalMesh* CompletedMesh1; // 0x4f0(0x08)
	struct UAnimationAsset* CompletedAnim2; // 0x4f8(0x08)
	struct USkeletalMesh* CompletedMesh2; // 0x500(0x08)
	struct AActor* DecalActor; // 0x508(0x08)
	uint64_t OwnerUin; // 0x510(0x08)
	bool bLanding; // 0x518(0x01)
	char pad_519[0x7]; // 0x519(0x07)
	struct TArray<struct UFXResourceContainerComponent*> DecleareResourceArray; // 0x520(0x10)
	struct UFXResourceContainerComponent* StopFlyingEffect; // 0x530(0x08)
	char pad_538[0x18]; // 0x538(0x18)

	void ServerStopFly(); // Function DFMGameplay.AirDropActor.ServerStopFly // (Final|Native|Public|BlueprintCallable) // @ game+0x61d7620
	void ServerPlayTimeOver(); // Function DFMGameplay.AirDropActor.ServerPlayTimeOver // (Final|Native|Protected) // @ game+0x61d7600
	void ServerPlay(int64_t InOwnerUin, struct AActor* InAttachedActor, struct FTransform InTargetTransform, int32_t InAirDropID, float InSpawnHeight); // Function DFMGameplay.AirDropActor.ServerPlay // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61d7430
	bool ServerCheckLanded(struct FVector DeltaMove); // Function DFMGameplay.AirDropActor.ServerCheckLanded // (Final|Native|Public|HasDefaults) // @ game+0x61d7390
	void OnRepIsFlying(); // Function DFMGameplay.AirDropActor.OnRepIsFlying // (Final|Native|Protected) // @ game+0x61d71b0
	void OnRepAirDropID(); // Function DFMGameplay.AirDropActor.OnRepAirDropID // (Final|Native|Protected) // @ game+0x17621d0
	void OnRep_bLanding(); // Function DFMGameplay.AirDropActor.OnRep_bLanding // (Final|Native|Protected) // @ game+0x61d7210
	void OnRep_AttachedActor(); // Function DFMGameplay.AirDropActor.OnRep_AttachedActor // (Final|Native|Protected) // @ game+0x61d71d0
	void DebugDrawCapsule(struct FVector Center, float HalfHeight, float radius, struct FColor Color); // Function DFMGameplay.AirDropActor.DebugDrawCapsule // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x61d66e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropDeadZoneVolumeActor
// Size: 0x388 (Inherited: 0x378)
class AAirDropDeadZoneVolumeActor : public AActor {
public:

	struct USphereComponent* CollisionSphere; // 0x378(0x08)
	bool OnlyKillAI; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)

	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AirDropDeadZoneVolumeActor.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x61d6be0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropGeneratorGroup
// Size: 0x398 (Inherited: 0x378)
class AAirDropGeneratorGroup : public AActor {
public:

	int32_t GroupID; // 0x378(0x04)
	uint32_t TriggerProbability; // 0x37c(0x04)
	struct TArray<struct AAirDropGenerator*> AirDropGeneratorArr; // 0x380(0x10)
	bool bIsAutoTrigger; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)

	void ActiveGroup(); // Function DFMGameplay.AirDropGeneratorGroup.ActiveGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x61d66c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropItemComponent
// Size: 0x150 (Inherited: 0x100)
class UAirDropItemComponent : public UActorComponent {
public:

	int32_t AirDropID; // 0x100(0x04)
	char pad_104[0xc]; // 0x104(0x0c)
	struct FTransform TargetTransform; // 0x110(0x30)
	bool bIsLanding; // 0x140(0x01)
	char pad_141[0x7]; // 0x141(0x07)
	struct UFXResourceContainerComponent* SmokeEffect; // 0x148(0x08)

	void OnRep_bIsLanding(); // Function DFMGameplay.AirDropItemComponent.OnRep_bIsLanding // (Final|Native|Public) // @ game+0x61d71f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropMovementComponent
// Size: 0x178 (Inherited: 0x140)
class UAirDropMovementComponent : public UMovementComponent {
public:

	char pad_140[0x4]; // 0x140(0x04)
	struct FAirDropMoveConfig MoveConfig; // 0x144(0x14)
	char pad_158[0x18]; // 0x158(0x18)
	struct AAirDropActor* AirDropActor; // 0x170(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropVehicleSubsystem
// Size: 0x528 (Inherited: 0x378)
class AAirDropVehicleSubsystem : public ALevelSubsystem {
public:

	struct UClass* VehicleAirDropTemplate; // 0x378(0x08)
	float MaxAirDropVehicleDistance; // 0x380(0x04)
	float AirDropRadius; // 0x384(0x04)
	int32_t UpLineTraceNum; // 0x388(0x04)
	float UpLineTraceHeight; // 0x38c(0x04)
	int32_t DownLineTraceNum; // 0x390(0x04)
	float DownLineTraceHeight; // 0x394(0x04)
	float SpawnAirDropHeight; // 0x398(0x04)
	float AirDropTime; // 0x39c(0x04)
	float AirDropDecelerateHeightPercentage; // 0x3a0(0x04)
	float VehicleFallingHeight; // 0x3a4(0x04)
	struct FSoftObjectPath SelectPosMaterialPath; // 0x3a8(0x18)
	struct FSoftObjectPath SelectPosMaterialErrorPath; // 0x3c0(0x18)
	struct FSoftObjectPath AirDropPointMaterialPath; // 0x3d8(0x18)
	struct TArray<struct FSoftObjectPath> AirDropMaterialPathArray; // 0x3f0(0x10)
	float EmptyVehicleDecreaseHPMinTime; // 0x400(0x04)
	float MinVehicleDecreaseHPDist; // 0x404(0x04)
	float EmptyVehicleDecreaseHPPercent; // 0x408(0x04)
	char pad_40C[0xc4]; // 0x40c(0xc4)
	struct TArray<struct FSectionAirDrop> AirDropVehicleArray1; // 0x4d0(0x10)
	struct TArray<struct FSectionAirDrop> AirDropVehicleArray2; // 0x4e0(0x10)
	char pad_4F0[0x8]; // 0x4f0(0x08)
	struct TArray<struct UObject*> AirDropMaterialCacheArray; // 0x4f8(0x10)
	struct TArray<struct AGPVehicleBase*> SpawnedVehicles; // 0x508(0x10)
	char pad_518[0x10]; // 0x518(0x10)

	void PreloadAirDropMaterials(); // Function DFMGameplay.AirDropVehicleSubsystem.PreloadAirDropMaterials // (Final|Native|Public|BlueprintCallable) // @ game+0x61d7370
	void OnVehicleDeadNtf(struct AGPVehicleBase* DFMVehicle); // Function DFMGameplay.AirDropVehicleSubsystem.OnVehicleDeadNtf // (Final|Native|Protected) // @ game+0x61d72f0
	void OnServerMatchEnded(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.AirDropVehicleSubsystem.OnServerMatchEnded // (Final|Native|Public) // @ game+0x61d7230
	void OnPreloadAirDropMaterialsCompleted(struct TArray<struct FSoftObjectPath> AssetRefs); // Function DFMGameplay.AirDropVehicleSubsystem.OnPreloadAirDropMaterialsCompleted // (Final|Native|Protected|BlueprintCallable) // @ game+0x61d7020
	void LocalPlayerEnterAirDropState(int64_t VehicleId); // Function DFMGameplay.AirDropVehicleSubsystem.LocalPlayerEnterAirDropState // (Final|Native|Public|BlueprintCallable) // @ game+0x61d6b60
	struct AAirDropVehicleSubsystem* STATIC_GetAirDropVehicleSubsystem(struct UObject* ObjectContext); // Function DFMGameplay.AirDropVehicleSubsystem.GetAirDropVehicleSubsystem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d6a10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirHitDetectorComponent
// Size: 0x5d0 (Inherited: 0x588)
class UAirHitDetectorComponent : public UCapsuleComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnAirHit[0x10]; // 0x588(0x10)
	/*struct FMulticastInlineDelegate*/char OnConsecutiveFired[0x10]; // 0x598(0x10)
	struct TArray<int32_t> AirHitBuffId; // 0x5a8(0x10)
	int32_t ConsecutiveFiredCount; // 0x5b8(0x04)
	int32_t ConsecutiveAirHitCount; // 0x5bc(0x04)
	float LastAirHitTime; // 0x5c0(0x04)
	char pad_5C4[0xc]; // 0x5c4(0x0c)

	void OnDetectAirHit(struct APawn* SourcePawn, struct FHitResult& HitReslut); // Function DFMGameplay.AirHitDetectorComponent.OnDetectAirHit // (Final|Native|Public|HasOutParms) // @ game+0x61d6f00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirHitManager
// Size: 0x90 (Inherited: 0x38)
class UAirHitManager : public UWorldSubsystem {
public:

	char pad_38[0x58]; // 0x38(0x58)

	void OnCharacterAirHit(struct APawn* SourcePawn, struct FHitResult& HitReslut); // Function DFMGameplay.AirHitManager.OnCharacterAirHit // (Final|Native|Public|HasOutParms) // @ game+0x61d6de0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISearchSpot
// Size: 0x50 (Inherited: 0x30)
class UAISearchSpot : public UObject {
public:

	char pad_30[0x18]; // 0x30(0x18)
	struct AAIController* AssignedController; // 0x48(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISearchJob
// Size: 0xa0 (Inherited: 0x58)
class UAISearchJob : public UAIJob {
public:

	struct AActor* SearchTarget; // 0x58(0x08)
	char pad_60[0x20]; // 0x60(0x20)
	struct TArray<struct UAISearchSpot*> SearchSpots; // 0x80(0x10)
	struct UEnvQuery* SearchEnvQuery; // 0x90(0x08)
	char pad_98[0x8]; // 0x98(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIInvestigateJob
// Size: 0x80 (Inherited: 0x58)
class UAIInvestigateJob : public UAIJob {
public:

	char pad_58[0x10]; // 0x58(0x10)
	struct AActor* InvestigateTarget; // 0x68(0x08)
	struct FVector InvestigateLocation; // 0x70(0x0c)
	char pad_7C[0x4]; // 0x7c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_SearchSpot
// Size: 0x218 (Inherited: 0x200)
class UEnvQueryTest_SearchSpot : public UEnvQueryTest {
public:

	struct UClass* QuerierContext; // 0x200(0x08)
	struct UClass* TesterContext; // 0x208(0x08)
	enum class EDrawDebugTrace DrawType; // 0x210(0x01)
	char pad_211[0x3]; // 0x211(0x03)
	float WidthMargin; // 0x214(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryContext_SearchLastLocation
// Size: 0x30 (Inherited: 0x30)
class UEnvQueryContext_SearchLastLocation : public UEnvQueryContext {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISense_HearingDFM
// Size: 0xf0 (Inherited: 0xf0)
class UAISense_HearingDFM : public UAISense_Hearing {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISense_HearingOnlyDetectPlayer
// Size: 0xf0 (Inherited: 0xf0)
class UAISense_HearingOnlyDetectPlayer : public UAISense_Hearing {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISpawnChecker
// Size: 0x540 (Inherited: 0x378)
class AAISpawnChecker : public AActor {
public:

	/*struct FMulticastInlineDelegate*/char OnSpawnEnd[0x10]; // 0x378(0x10)
	/*struct FMulticastInlineDelegate*/char OnRegionClear[0x10]; // 0x388(0x10)
	/*struct FMulticastInlineDelegate*/char OnCharacterDied[0x10]; // 0x398(0x10)
	/*struct FMulticastInlineDelegate*/char OnSpawnActorEventDispatcher[0x10]; // 0x3a8(0x10)
	/*struct FDelegate*/char DefaultSpawnEvent[0x10]; // 0x3b8(0x10)
	struct FString UniqueKey; // 0x3c8(0x10)
	struct TArray<struct AAISpawnPoint*> SpawnPoints; // 0x3d8(0x10)
	struct ADramaArea* OwnerDrama; // 0x3e8(0x08)
	struct FString OwnerLevelName; // 0x3f0(0x10)
	struct TArray<struct AAIGroup*> AIGroups; // 0x400(0x10)
	int32_t SpawnTryTimes; // 0x410(0x04)
	float SpawnTryNextTime; // 0x414(0x04)
	bool bAllowedReplenish; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	float SpawnProbility; // 0x41c(0x04)
	bool bGoodLocationCheck; // 0x420(0x01)
	char pad_421[0x7]; // 0x421(0x07)
	struct FAISpawnFactor SpawnFactorInfo; // 0x428(0x28)
	struct TArray<struct AActor*> NewSpawnedActors; // 0x450(0x10)
	struct TArray<struct FSpawnedActorInfo> SpawnedActorList; // 0x460(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> DeadActorList; // 0x470(0x10)
	int32_t TotalSpawnedActorCount; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct FSpawnerFlag FlagData; // 0x488(0x10)
	float ForcePauseTime; // 0x498(0x04)
	char pad_49C[0x4]; // 0x49c(0x04)
	struct TArray<struct AActor*> ZoneActors; // 0x4a0(0x10)
	struct TArray<struct FAIZone> Zones; // 0x4b0(0x10)
	bool bForceSpawn; // 0x4c0(0x01)
	bool UseDefaultFactor; // 0x4c1(0x01)
	char pad_4C2[0x6]; // 0x4c2(0x06)
	struct FAISpawnFactor DefaultSpawnFactorInfo; // 0x4c8(0x28)
	struct TArray<struct FString> DefaultMovePathGroupList; // 0x4f0(0x10)
	char pad_500[0x5]; // 0x500(0x05)
	bool bSpawnAtDesignatedTransform; // 0x505(0x01)
	char pad_506[0xa]; // 0x506(0x0a)
	struct FTransform BirthTransform; // 0x510(0x30)

	void StopSpawn(); // Function DFMGameplay.AISpawnChecker.StopSpawn // (Final|Native|Public) // @ game+0x61dd070
	void StartSpawn(struct FAISpawnFactor factor); // Function DFMGameplay.AISpawnChecker.StartSpawn // (Final|Native|Public) // @ game+0x61dcac0
	struct ADFMCharacter* STATIC_SpawnTestAIUnitTest(struct UObject* WorldContextObject, struct UDataTable* DataTable, struct FName NpcName, struct FVector Location); // Function DFMGameplay.AISpawnChecker.SpawnTestAIUnitTest // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x61dc980
	void STATIC_SpawnTestAIAtDesignatedTransform(struct AActor* WorldContext, struct FVector Location, struct FName NpcName); // Function DFMGameplay.AISpawnChecker.SpawnTestAIAtDesignatedTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x61dc880
	void STATIC_SpawnTestAIArgsEx(struct UObject* WorldContext, struct FName NpcName, struct FVector Location, struct FString extraArg); // Function DFMGameplay.AISpawnChecker.SpawnTestAIArgsEx // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x61dc6c0
	struct ADFMCharacter* STATIC_SpawnTestAIArgs(struct UObject* WorldContextObject, struct FName NpcName, struct FVector Location, struct FString extraArg, bool bIsWearingEquipment, bool TPToStart); // Function DFMGameplay.AISpawnChecker.SpawnTestAIArgs // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x61dc3d0
	struct TArray<struct AAIController*> STATIC_SpawnSimulateAIAtDesignatedTransform(struct ADFMCharacter* Player, struct FCharacterTemplateTable& npcTemplateRow, struct FSpawnBaseAIInfo AIInfo, struct FVector CentLocation); // Function DFMGameplay.AISpawnChecker.SpawnSimulateAIAtDesignatedTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61dc120
	void SpawnAIWithDefaultFactor(); // Function DFMGameplay.AISpawnChecker.SpawnAIWithDefaultFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x61dbef0
	struct AAIGroup* STATIC_SpawnAIAtDesignatedTransform(struct TArray<struct AAIController*>& AIControllerList, struct AActor* WorldContext, struct FTransform Transform, struct FAINpcSelector npcSelector, struct UDataTable* NpcTemplateTable, struct UDataTable* NpcGroupTable, bool bSpawnCheck, bool bSpawnGroup); // Function DFMGameplay.AISpawnChecker.SpawnAIAtDesignatedTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61dbac0
	struct AAIGroup* STATIC_SpawnAIAtDesignatedPoint(struct TArray<struct AAIController*>& AIControllerList, struct AAISpawnPoint* SpawnPoint, struct FAINpcSelector npcSelector, struct UDataTable* NpcTemplateTable, struct UDataTable* NpcGroupTable, bool bSpawnCheck, bool bSpawnGroup); // Function DFMGameplay.AISpawnChecker.SpawnAIAtDesignatedPoint // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61db740
	struct AAIGroup* STATIC_SpawnAerialVehicle(struct TArray<struct AAerialVehicleController*>& AerialVehicleControllerList, struct AAISpawnPoint* SpawnPoint, struct FAerialVehicleSelector AerialVehicleSelector); // Function DFMGameplay.AISpawnChecker.SpawnAerialVehicle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61dbf10
	void SetSpawnTransfrom(bool bEnable, struct FTransform& Trans); // Function DFMGameplay.AISpawnChecker.SetSpawnTransfrom // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x61db620
	void SetPauseSpawnTime(float Duration); // Function DFMGameplay.AISpawnChecker.SetPauseSpawnTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61db5a0
	void RemoveSpawnAvoidArea(struct UAISpawnNearbyPawnDetectorComponent* avoidArea); // Function DFMGameplay.AISpawnChecker.RemoveSpawnAvoidArea // (Final|Native|Public) // @ game+0x895130
	void OnSpawnedCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AISpawnChecker.OnSpawnedCharacterDied // (Final|Native|Public|BlueprintCallable) // @ game+0x61db1f0
	void OnSpawnedActorDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.AISpawnChecker.OnSpawnedActorDestroyed // (Final|Native|Public|BlueprintCallable) // @ game+0x61db170
	struct TArray<struct ACHARACTER*> GetSpawnedCharacters(struct FName Tag); // Function DFMGameplay.AISpawnChecker.GetSpawnedCharacters // (Final|Native|Public|BlueprintCallable) // @ game+0x61dae80
	struct TArray<struct AAIController*> GetSpawnedCharacterAIControllers(struct FName Tag); // Function DFMGameplay.AISpawnChecker.GetSpawnedCharacterAIControllers // (Final|Native|Public|BlueprintCallable) // @ game+0x61dada0
	int32_t GetCurrentActorNum(); // Function DFMGameplay.AISpawnChecker.GetCurrentActorNum // (Final|Native|Public|BlueprintCallable) // @ game+0x61dad70
	void DestroyAllSpawnedActor(); // Function DFMGameplay.AISpawnChecker.DestroyAllSpawnedActor // (Final|Native|Public|BlueprintCallable) // @ game+0x61dacd0
	void DefaultOnSpawnEvent(struct AAISpawnChecker* Checker, struct AActor* SpawnedActor, int32_t SpawnIndex); // Function DFMGameplay.AISpawnChecker.DefaultOnSpawnEvent // (Final|Native|Public) // @ game+0x61dabd0
	void BPOnSpawn(struct AActor* SpawnedActor); // Function DFMGameplay.AISpawnChecker.BPOnSpawn // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xc37860
	void BPOnDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AISpawnChecker.BPOnDied // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61daad0
	void BPOnDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.AISpawnChecker.BPOnDestroyed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x61daa40
	void AIReset(); // Function DFMGameplay.AISpawnChecker.AIReset // (Final|Native|Public) // @ game+0x61da9a0
	void AddSpawnAvoidArea(struct UAISpawnNearbyPawnDetectorComponent* avoidArea); // Function DFMGameplay.AISpawnChecker.AddSpawnAvoidArea // (Final|Native|Public) // @ game+0x895130
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AsyncAISpawnAction
// Size: 0x58 (Inherited: 0x38)
class UAsyncAISpawnAction : public UBlueprintAsyncActionBase {
public:

	/*struct FMulticastInlineDelegate*/char OnSpawnActionEnd[0x10]; // 0x38(0x10)
	/*struct FMulticastInlineDelegate*/char OnActionRegionClear[0x10]; // 0x48(0x10)

	struct UAsyncAISpawnAction* STATIC_StartSpawnByFactorWithFunc(/*struct AAISpawnChecker* Checker, struct FAISpawnFactor factor, struct FDelegate& OnSpawnActor*/); // Function DFMGameplay.AsyncAISpawnAction.StartSpawnByFactorWithFunc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61dce40
	struct UAsyncAISpawnAction* STATIC_StartSpawnByFactor(struct AAISpawnChecker* Checker, struct FAISpawnFactor factor); // Function DFMGameplay.AsyncAISpawnAction.StartSpawnByFactor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61dcc60
	void OnEnd(struct AAISpawnChecker* Checker); // Function DFMGameplay.AsyncAISpawnAction.OnEnd // (Final|Native|Protected) // @ game+0x61db0f0
	void OnClear(struct AAISpawnChecker* Checker); // Function DFMGameplay.AsyncAISpawnAction.OnClear // (Final|Native|Protected) // @ game+0x61db070
	void OnActorEnd(struct AActor* A, enum class EEndPlayReason reason); // Function DFMGameplay.AsyncAISpawnAction.OnActorEnd // (Final|Native|Protected) // @ game+0x61dafb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISpawnCheckerConfig
// Size: 0x80 (Inherited: 0x40)
class UAISpawnCheckerConfig : public UDeveloperSettings {
public:

	float AISpawnDistanceAvoidPlayer; // 0x40(0x04)
	float AISpawnDegreeAvoidPlayer; // 0x44(0x04)
	float AISpawnSightDistanceAvoidPlayer; // 0x48(0x04)
	bool AISpawnCheckEnableAnywhere; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	float AIDelaySpawnAfterPlayerReady; // 0x50(0x04)
	float AISpawnDistanceForAILab; // 0x54(0x04)
	bool DontAvoidPlayerInEditor; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct TArray<struct FAISpawnEnableInfo> AISpawnCheckEnableModes; // 0x60(0x10)
	struct TArray<struct FAISpawnDistanceTagConf> AISpawnTagConf; // 0x70(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AsyncTaskAISpawnCheck
// Size: 0x80 (Inherited: 0x38)
class UAsyncTaskAISpawnCheck : public UBlueprintAsyncActionBase {
public:

	/*struct FMulticastInlineDelegate*/char OnRealSpawn[0x10]; // 0x38(0x10)
	struct ADramaArea* DramaArea; // 0x48(0x08)
	char pad_50[0x30]; // 0x50(0x30)

	struct UAsyncTaskAISpawnCheck* STATIC_RegisterSpawnCheck(struct ADramaArea* Drama, float ForceDistance, bool DirectSpawn, float RetryDelay); // Function DFMGameplay.AsyncTaskAISpawnCheck.RegisterSpawnCheck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61db440
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIDelaySpawnSystem
// Size: 0x88 (Inherited: 0x38)
class UAIDelaySpawnSystem : public UWorldSubsystem {
public:

	char pad_38[0x8]; // 0x38(0x08)
	struct TArray<struct UAsyncTaskAISpawnCheck*> DramaSpawnInfos; // 0x40(0x10)
	struct TArray<struct FQASpawnAIDrama> QADramas; // 0x50(0x10)
	struct TArray<struct ADramaArea*> NeedRespawnDramas; // 0x60(0x10)
	char pad_70[0x18]; // 0x70(0x18)

	void RespawnDramas(); // Function DFMGameplay.AIDelaySpawnSystem.RespawnDramas // (Final|Native|Public|BlueprintCallable) // @ game+0x61db580
	bool RegisterAISpawnDrama(struct UAsyncTaskAISpawnCheck* Checker); // Function DFMGameplay.AIDelaySpawnSystem.RegisterAISpawnDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x61db3b0
	bool QARegisterAISpawnDrama(struct ADramaArea* Drama, bool UseBP); // Function DFMGameplay.AIDelaySpawnSystem.QARegisterAISpawnDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x61db2f0
	struct UAIDelaySpawnSystem* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.AIDelaySpawnSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61dacf0
	void AddNeedRespawnDrama(struct ADramaArea* Drama); // Function DFMGameplay.AIDelaySpawnSystem.AddNeedRespawnDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x61da9c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISpawnNearbyPawnDetectorComponent
// Size: 0x5c0 (Inherited: 0x590)
class UAISpawnNearbyPawnDetectorComponent : public UBoxComponent {
public:

	struct TArray<struct APawn*> PawnInCheckArea; // 0x590(0x10)
	char pad_5A0[0x8]; // 0x5a0(0x08)
	struct AAISpawnChecker* SpawnChecker; // 0x5a8(0x08)
	struct TArray<struct APawn*> PendingPawn; // 0x5b0(0x10)

	void RegisterChecker(struct AAISpawnChecker* Checker); // Function DFMGameplay.AISpawnNearbyPawnDetectorComponent.RegisterChecker // (Native|Public) // @ game+0x36c7f90
	void OnDetectedPawnOut(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AISpawnNearbyPawnDetectorComponent.OnDetectedPawnOut // (Native|Public) // @ game+0x61e01b0
	void OnDetectedPawnEnter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AISpawnNearbyPawnDetectorComponent.OnDetectedPawnEnter // (Native|Public|HasOutParms) // @ game+0x61dffb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISpawnPoint
// Size: 0x398 (Inherited: 0x378)
class AAISpawnPoint : public AActor {
public:

	struct USphereComponent* PawnDetector; // 0x378(0x08)
	float SpawnPointRadius; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct AAISpawnChecker* SpawnChecker; // 0x388(0x08)
	int32_t MaxSpawnNum; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISpeakContextManager
// Size: 0x58 (Inherited: 0x38)
class UAISpeakContextManager : public UWorldSubsystem {
public:

	char pad_38[0x20]; // 0x38(0x20)

	bool STATIC_UpdateContext(struct ACHARACTER* responsor, int32_t Handler, struct FAISpeakContext& newContext); // Function DFMGameplay.AISpeakContextManager.UpdateContext // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61e0f80
	bool STATIC_ResponseContext(struct ACHARACTER* responsor, int32_t Handler, int32_t nextStatus); // Function DFMGameplay.AISpeakContextManager.ResponseContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61e0cd0
	int32_t STATIC_QueryContextByDistance(struct ACHARACTER* responsor, enum class EAISpeakContextType Type, float DistanceLimit); // Function DFMGameplay.AISpeakContextManager.QueryContextByDistance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61e0660
	bool STATIC_GetContext(struct ACHARACTER* responsor, int32_t Handler, struct FAISpeakContext& Result); // Function DFMGameplay.AISpeakContextManager.GetContext // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x61df970
	bool STATIC_DestroyContextDelay(struct ACHARACTER* responsor, int32_t Handler, float Timeout); // Function DFMGameplay.AISpeakContextManager.DestroyContextDelay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61df500
	bool STATIC_DestroyContext(struct ACHARACTER* responsor, int32_t Handler); // Function DFMGameplay.AISpeakContextManager.DestroyContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61df440
	int32_t STATIC_CreateContext(struct ACHARACTER* creator, enum class EAISpeakContextType Type, float DistanceLimit, float Timeout, float CoolDown); // Function DFMGameplay.AISpeakContextManager.CreateContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61df2c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIStyleSystem
// Size: 0xa0 (Inherited: 0x30)
class UAIStyleSystem : public UObject {
public:

	struct TArray<struct FAIStyleSetting> AIStyleSetting; // 0x30(0x10)
	struct TArray<struct FGlobalAIStyleInfo> GlobalAIStyles; // 0x40(0x10)
	struct TMap<struct APrefecture*, struct FPrefectureAIStyleInfo> PrefectureAIStyleInfo; // 0x50(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIUnitTestManager
// Size: 0x490 (Inherited: 0x378)
class AAIUnitTestManager : public AActor {
public:

	char pad_378[0x88]; // 0x378(0x88)
	struct UDataTable* AIConfigTable; // 0x400(0x08)
	struct TArray<struct FName> KillEnemyAIConfigs; // 0x408(0x10)
	struct TArray<struct FAIUnitTestEquipPair> KillEnemyPlayerEquipConfigs; // 0x418(0x10)
	struct TArray<float> DistanceConfigs; // 0x428(0x10)
	int32_t KillEnemyTestRounds; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
	struct TArray<struct FName> HearingAIConfigs; // 0x440(0x10)
	struct TArray<enum class EAIUnitTestPlayerState> HearingPlayerConfigs; // 0x450(0x10)
	float HearingStartDistance; // 0x460(0x04)
	char pad_464[0x4]; // 0x464(0x04)
	struct TArray<struct FName> SightAIConfigs; // 0x468(0x10)
	struct TArray<float> SightPlayerAngleConfigs; // 0x478(0x10)
	float SightStartDistance; // 0x488(0x04)
	char pad_48C[0x4]; // 0x48c(0x04)

	void ResetTestResult(); // Function DFMGameplay.AIUnitTestManager.ResetTestResult // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0cb0
	void ReportSightTestResult(struct FName AiName, enum class EGPCharacterFightStateType FightState, float Angle, float Distance); // Function DFMGameplay.AIUnitTestManager.ReportSightTestResult // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0b40
	void ReportKillEnemyTestResult(struct FName AiName, struct FString Equipment, float Distance, float KillTime, struct AActor* Killer, struct AActor* Target); // Function DFMGameplay.AIUnitTestManager.ReportKillEnemyTestResult // (Final|Native|Public|BlueprintCallable) // @ game+0x61e08f0
	void ReportHearingTestResult(struct FName AiName, enum class EAIUnitTestPlayerState PlayerState, float Distance); // Function DFMGameplay.AIUnitTestManager.ReportHearingTestResult // (Final|Native|Public|BlueprintCallable) // @ game+0x61e07f0
	void OnGlobalPreTakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.AIUnitTestManager.OnGlobalPreTakeDamage // (Final|Native|Private|HasOutParms) // @ game+0x61e02f0
	void FinishTest(bool TestDone); // Function DFMGameplay.AIUnitTestManager.FinishTest // (Final|Native|Public|BlueprintCallable) // @ game+0x61df6a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIZoneBox
// Size: 0x5a0 (Inherited: 0x590)
class UAIZoneBox : public UBoxComponent {
public:

	char pad_590[0x10]; // 0x590(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Prefecture
// Size: 0x668 (Inherited: 0x378)
class APrefecture : public AActor {
public:

	bool bOpenSquad; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	struct FName SquadTactic; // 0x37c(0x08)
	char pad_384[0x4]; // 0x384(0x04)
	struct USquadCommanderComponent* SquadCommanderComponent; // 0x388(0x08)
	struct FString AILayoutName; // 0x390(0x10)
	char pad_3A0[0x8]; // 0x3a0(0x08)
	struct FString PrefectureName; // 0x3a8(0x10)
	bool bIsEnable; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)
	/*struct TSet<struct TWeakObjectPtr<struct AActor>>*/char SpawnedActorList[0x50]; // 0x3c0(0x50)
	/*struct TSet<struct AGPAlarmTower*>*/char AlarmTowerList[0x50]; // 0x410(0x50)
	/*struct TSet<struct TWeakObjectPtr<struct AActor>>*/char DeadActorList[0x50]; // 0x460(0x50)
	/*struct TSet<struct UAIZoneBox*>*/char ZoneExtent[0x50]; // 0x4b0(0x50)
	float AttractionRatio; // 0x500(0x04)
	bool bForcedInPrefecture; // 0x504(0x01)
	char pad_505[0x3]; // 0x505(0x03)
	float AllAISpeakNextCoolDown; // 0x508(0x04)
	bool PrefectureStyleFirst; // 0x50c(0x01)
	char pad_50D[0x3]; // 0x50d(0x03)
	struct FAIStyleWeight PrefectureStyleRateConfig; // 0x510(0x10)
	struct TArray<struct FPrefectureStyleSetting> PrefectureStylesSetting; // 0x520(0x10)
	struct TMap<enum class EAIStyleType, int32_t> PrefectureInitStylesSetting; // 0x530(0x50)
	struct AReinforceSubstitution* ReplenishSubstitution; // 0x580(0x08)
	struct TArray<struct FPrefectureBoardcastThreatConfig> PrefectureBoardcastThreatSetting; // 0x588(0x10)
	float BoardcastThreatDist; // 0x598(0x04)
	char pad_59C[0x4]; // 0x59c(0x04)
	struct TArray<float> ReplenishTimeForAI; // 0x5a0(0x10)
	float SpawnWithoutHumanRange; // 0x5b0(0x04)
	float SpawnWithoutHumanRetryInterval; // 0x5b4(0x04)
	int32_t SpawnWithoutHumanMaxRetry; // 0x5b8(0x04)
	float ReplenishAIThreatDuration; // 0x5bc(0x04)
	float ReplenishAIThreatDistance; // 0x5c0(0x04)
	char pad_5C4[0x4]; // 0x5c4(0x04)
	struct TArray<enum class EAIThreatDetailName> ReplenishAIInterestThreat; // 0x5c8(0x10)
	enum class EPrefectureReplenishScheme ReplenishScheme; // 0x5d8(0x01)
	char MaxRelenishTimes; // 0x5d9(0x01)
	char pad_5DA[0x2]; // 0x5da(0x02)
	float RelenishInterval; // 0x5dc(0x04)
	/*struct TSet<struct AReinforceAgent*>*/char RelatedReinforceAgents[0x50]; // 0x5e0(0x50)
	int32_t CurrentReplenishNum; // 0x630(0x04)
	char pad_634[0x34]; // 0x634(0x34)

	void SetReplenishScheme(enum class EPrefectureReplenishScheme NewReplenishScheme); // Function DFMGameplay.Prefecture.SetReplenishScheme // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0f00
	void SetPrefectureEnabled(bool IsEnable); // Function DFMGameplay.Prefecture.SetPrefectureEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0e80
	void SetPrefectureAllAISpeakNextCoolDown(float cdMin, float cdMax); // Function DFMGameplay.Prefecture.SetPrefectureAllAISpeakNextCoolDown // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0dc0
	void RequestStyle(); // Function DFMGameplay.Prefecture.RequestStyle // (Final|Native|Public) // @ game+0x61e0c90
	void ReplenishAI(); // Function DFMGameplay.Prefecture.ReplenishAI // (Final|Native|Public) // @ game+0x61e07d0
	void RegisterAlarmTower(struct AGPAlarmTower* AlarmTower); // Function DFMGameplay.Prefecture.RegisterAlarmTower // (Final|Native|Public|BlueprintCallable) // @ game+0x61e0750
	void OnSpawnedCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.Prefecture.OnSpawnedCharacterDied // (Final|Native|Public) // @ game+0x61e0560
	void OnSpawnedActorDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.Prefecture.OnSpawnedActorDestroyed // (Final|Native|Public) // @ game+0x61e04e0
	void OnReplenishAISpawned(struct TArray<struct ACHARACTER*> SpawnedAIs); // Function DFMGameplay.Prefecture.OnReplenishAISpawned // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x61e03c0
	void OnCharacterSpawn(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.Prefecture.OnCharacterSpawn // (Final|Native|Public) // @ game+0x61dff30
	bool IsInPrefecture(struct FVector& GoalLoc, struct FVector Extent); // Function DFMGameplay.Prefecture.IsInPrefecture // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x61dfe30
	struct TArray<struct AGPCharacterBase*> STATIC_GetTotalAIByPOI(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.Prefecture.GetTotalAIByPOI // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61dfcc0
	struct TArray<struct APrefecture*> STATIC_GetPrefecturesByTag(struct UObject* WorldContextObject, bool ContainsNotEnabledPrefecture, struct FName Tag); // Function DFMGameplay.Prefecture.GetPrefecturesByTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61dfb20
	bool GetPrefectureEnabled(); // Function DFMGameplay.Prefecture.GetPrefectureEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x61dfb00
	float GetPrefectureAllAISpeakNextCoolDownTime(); // Function DFMGameplay.Prefecture.GetPrefectureAllAISpeakNextCoolDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61dfae0
	int32_t GetLivingAINumInPrefecture(); // Function DFMGameplay.Prefecture.GetLivingAINumInPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x61dfaa0
	bool GetForcedInPrefecture(); // Function DFMGameplay.Prefecture.GetForcedInPrefecture // (Final|Native|Public) // @ game+0x61dfa80
	float GetAttractionRatio(); // Function DFMGameplay.Prefecture.GetAttractionRatio // (Final|Native|Public|BlueprintCallable) // @ game+0x61df950
	struct TArray<struct AGPCharacterBase*> GetAllAIInPrefecture(); // Function DFMGameplay.Prefecture.GetAllAIInPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x61df870
	void GetAlarmTowerList(); // Function DFMGameplay.Prefecture.GetAlarmTowerList // (Final|Native|Public|BlueprintCallable) // @ game+0x61df730
	struct FVector FindClosestPoint(struct FVector& Point); // Function DFMGameplay.Prefecture.FindClosestPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x61df5f0
	void ChangeDrawPrefecture(); // Function DFMGameplay.Prefecture.ChangeDrawPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x61df2a0
	void BPOnDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.Prefecture.BPOnDied // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BPOnDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.Prefecture.BPOnDestroyed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnLevelSelectionChanged(); // Function DFMGameplay.Prefecture.BP_OnLevelSelectionChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x61df280
	bool AIRequestStyle(struct ADFMAIController* AIController, struct TArray<enum class EAIStyleType> AllowedStyles, enum class EAIStyleType& OutStyle); // Function DFMGameplay.Prefecture.AIRequestStyle // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61df0d0
	bool AIRequestSpecifyStyle(struct ADFMAIController* AIController, enum class EAIStyleType Style); // Function DFMGameplay.Prefecture.AIRequestSpecifyStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x61df010
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIAlertBroadcastVolume
// Size: 0x380 (Inherited: 0x380)
class AAIAlertBroadcastVolume : public ATriggerBox {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AmbientLightEditorPreviewActor
// Size: 0x398 (Inherited: 0x378)
class AAmbientLightEditorPreviewActor : public AActor {
public:

	struct FName AvatarName; // 0x378(0x08)
	struct UDataTable* AmbientLightGroupTable; // 0x380(0x08)
	struct UDataTable* CharacterAvatarTable; // 0x388(0x08)
	struct UDataTable* CharacterAvatarTable_HD; // 0x390(0x08)

	struct UObject* EditorSyncLoadMesh(struct FSoftObjectPath Path); // Function DFMGameplay.AmbientLightEditorPreviewActor.EditorSyncLoadMesh // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61e6630
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AmbientLightVolumeActor
// Size: 0x388 (Inherited: 0x378)
class AAmbientLightVolumeActor : public AActor {
public:

	struct UBoxComponent* CollisionBox; // 0x378(0x08)
	struct ADFMCharacter* LocalCharacter; // 0x380(0x08)

	void OnLocalPlayerPawnCreated(); // Function DFMGameplay.AmbientLightVolumeActor.OnLocalPlayerPawnCreated // (Final|Native|Protected) // @ game+0x61e6ef0
	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AmbientLightVolumeActor.OnEndOverlap // (Final|Native|Public) // @ game+0x61e6db0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AmbientLightVolumeActor.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x61e6bb0
	struct UBoxComponent* GetBoxFromBlueprint(); // Function DFMGameplay.AmbientLightVolumeActor.GetBoxFromBlueprint // (Native|Event|Public|BlueprintEvent) // @ game+0x61e6a30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadbodyAmmoBoxDataManager
// Size: 0x48 (Inherited: 0x38)
class UDeadbodyAmmoBoxDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PortableAmmoBoxManager
// Size: 0x48 (Inherited: 0x38)
class UPortableAmmoBoxManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AmmoUtil
// Size: 0x30 (Inherited: 0x30)
class UAmmoUtil : public UObject {
public:


	void STATIC_UpdateAmmoItems(struct TArray<struct FAmmoDataItem>& AmmoDataItems, int32_t CurAmmoNum); // Function DFMGameplay.AmmoUtil.UpdateAmmoItems // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e7420
	void STATIC_UpdateAmmoContextOnDynamicAttribute(struct FModularWeaponDynamicAttrbuites& DynamicAttrbuites, uint64_t RootGid, int32_t CurAmmoNum); // Function DFMGameplay.AmmoUtil.UpdateAmmoContextOnDynamicAttribute // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e7190
	void STATIC_UpdateAmmoContext(struct FAmmoContext& AmmoContext, int32_t CurAmmoNum); // Function DFMGameplay.AmmoUtil.UpdateAmmoContext // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e7080
	void STATIC_PushAmmoToContext(struct FAmmoContext& AmmoContext, struct FAmmoDataItem& AmmoDataItem); // Function DFMGameplay.AmmoUtil.PushAmmoToContext // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e6f50
	float STATIC_GetWeaponReloadTime(struct FWeaponDataAttribute& WeaponDataAttribute, int32_t CurrentAmmoCount, int32_t ItemAmmoNum); // Function DFMGameplay.AmmoUtil.GetWeaponReloadTime // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e6a60
	void STATIC_FillReloadAmmoParams(struct UObject* WorldContextObj, uint64_t WeaponID, struct TArray<struct FInventoryItemInfo>& ItemInfos, struct TArray<struct FAmmoDataItem>& OutReloadParams, int32_t InMaxReloadCount, int32_t& OutFindAmmoNum, bool bPreviewOnly); // Function DFMGameplay.AmmoUtil.FillReloadAmmoParams // (Final|Native|Static|Public|HasOutParms) // @ game+0x61e6770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_BreakableDebrisHitAudio
// Size: 0x70 (Inherited: 0x40)
class UAnimNotify_BreakableDebrisHitAudio : public UAnimNotify {
public:

	struct FName SocketName; // 0x40(0x08)
	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char LandAudio[0x28]; // 0x48(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.UAnimNotify_BreakableOnHitAudio
// Size: 0x48 (Inherited: 0x40)
class UUAnimNotify_BreakableOnHitAudio : public UAnimNotify {
public:

	struct FName SocketName; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_DFMPlayParticleEffect
// Size: 0xb0 (Inherited: 0xa0)
class UAnimNotify_DFMPlayParticleEffect : public UAnimNotify_GPPlayParticleEffect {
public:

	enum class EGPPlayParticleEffectTeamRole ParticleEffectTeamRole; // 0xa0(0x01)
	char pad_A1[0xf]; // 0xa1(0x0f)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_FootstepEffect
// Size: 0xf8 (Inherited: 0x40)
class UAnimNotify_FootstepEffect : public UAnimNotify {
public:

	struct TMap<enum class ETerrainType, struct FName> EffectConfig; // 0x40(0x50)
	struct TMap<enum class ETerrainType, struct FName> EffectConfig_HD; // 0x90(0x50)
	struct FName SocketName; // 0xe0(0x08)
	int32_t Percentage; // 0xe8(0x04)
	int32_t Percentage_River; // 0xec(0x04)
	char pad_F0[0x8]; // 0xf0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_PlayParticleAtRandomSockect
// Size: 0x80 (Inherited: 0x40)
class UAnimNotify_PlayParticleAtRandomSockect : public UAnimNotify {
public:

	struct FString SockectPrefixion; // 0x40(0x10)
	int32_t SelectSocketNum; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	/*struct TSoftObjectPtr<UParticleSystem>*/char ParticleSystemPtr[0x28]; // 0x58(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_ShowSpecialWeapon
// Size: 0x90 (Inherited: 0x40)
class UAnimNotify_ShowSpecialWeapon : public UAnimNotify {
public:

	bool Show; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName AttachSocket; // 0x44(0x08)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FTransform RelativeTransform; // 0x50(0x30)
	uint64_t WeaponID; // 0x80(0x08)
	struct UAnimationAsset* PlayAnim; // 0x88(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_SmallAction
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_SmallAction : public UAnimNotify {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_SpawnOneBullet
// Size: 0x58 (Inherited: 0x40)
class UAnimNotify_SpawnOneBullet : public UAnimNotify {
public:

	uint64_t BulletId; // 0x40(0x08)
	struct FVector FireBoneLocation; // 0x48(0x0c)
	int32_t SkillFireRoatationIdx; // 0x54(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_ThrowGrenade
// Size: 0x58 (Inherited: 0x40)
class UAnimNotify_ThrowGrenade : public UAnimNotify {
public:

	uint64_t GrenadeWeaponId; // 0x40(0x08)
	struct FVector FireBoneLocation; // 0x48(0x0c)
	int32_t SkillFireRotationIdx; // 0x54(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_AIForbidGunShooting
// Size: 0x38 (Inherited: 0x38)
class UAnimNotifyState_AIForbidGunShooting : public UAnimNotifyState {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_AITimedParticleEffect
// Size: 0x70 (Inherited: 0x68)
class UAnimNotifyState_AITimedParticleEffect : public UAnimNotifyState_TimedParticleEffect {
public:

	struct FName FXResourceName; // 0x68(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_AITurnInPlace
// Size: 0x48 (Inherited: 0x38)
class UAnimNotifyState_AITurnInPlace : public UAnimNotifyState {
public:

	struct UCurveFloat* AnimRotationPercentCurve; // 0x38(0x08)
	struct FName TurningInstanceName; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_AIUseOverrideAO
// Size: 0x48 (Inherited: 0x38)
class UAnimNotifyState_AIUseOverrideAO : public UAnimNotifyState {
public:

	struct FName AOAnimName; // 0x38(0x08)
	struct UAimOffsetBlendSpace* AOAnim; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_BreakableLoopAudio
// Size: 0x40 (Inherited: 0x38)
class UAnimNotifyState_BreakableLoopAudio : public UAnimNotifyState {
public:

	struct FName SocketName; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_FirebatDeathPerformance
// Size: 0x48 (Inherited: 0x38)
class UAnimNotifyState_FirebatDeathPerformance : public UAnimNotifyState {
public:

	struct FName HealthLockBuff; // 0x38(0x08)
	bool IsGod; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_LockYawOnTarget
// Size: 0x40 (Inherited: 0x38)
class UAnimNotifyState_LockYawOnTarget : public UAnimNotifyState {
public:

	float InterpSpeed; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AreaTriggerActor
// Size: 0x3a0 (Inherited: 0x378)
class AAreaTriggerActor : public AActor {
public:

	struct UBoxComponent* BoxComponent; // 0x378(0x08)
	struct FName AreaAmbientAudioRowName; // 0x380(0x08)
	struct UDataTable* AreaAmbientAudioDataTable; // 0x388(0x08)
	char pad_390[0x10]; // 0x390(0x10)

	void OnOverlapEndDoing(); // Function DFMGameplay.AreaTriggerActor.OnOverlapEndDoing // (Final|Native|Public|BlueprintCallable) // @ game+0x61e6f30
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.AreaTriggerActor.OnOverlapEnd // (Native|Public|BlueprintCallable) // @ game+0x36ceb50
	void OnOverlapBeginDoing(); // Function DFMGameplay.AreaTriggerActor.OnOverlapBeginDoing // (Final|Native|Public|BlueprintCallable) // @ game+0x61e6f10
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AreaTriggerActor.OnOverlapBegin // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x36ce950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BodyArmorMgr
// Size: 0x48 (Inherited: 0x38)
class UBodyArmorMgr : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetFunctionMgr
// Size: 0x48 (Inherited: 0x38)
class UHelmetFunctionMgr : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ProtectBodyDefineMgr
// Size: 0x48 (Inherited: 0x38)
class UProtectBodyDefineMgr : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDurabilityFormulaMgr
// Size: 0x48 (Inherited: 0x38)
class UArmorDurabilityFormulaMgr : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorGlobalConfig
// Size: 0x40 (Inherited: 0x40)
class UArmorGlobalConfig : public UDeveloperSettings {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDurabilityMgr
// Size: 0x98 (Inherited: 0x38)
class UArmorDurabilityMgr : public UWorldSubsystem {
public:

	struct TMap<uint64_t, struct FProcessDurabilityRecordCollection> ProcessDurabilityRecord; // 0x38(0x50)
	struct UArmorDurabilityHandler_Sol* ArmorDurabilityHandler_Sol; // 0x88(0x08)
	struct UArmorDurabilityHandler* ArmorDurabilityHandler_Default; // 0x90(0x08)

	struct UArmorDurabilityMgr* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.ArmorDurabilityMgr.Get // (Final|Native|Static|Public) // @ game+0x61eb3d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AvoidanceBoxComponent
// Size: 0x5c0 (Inherited: 0x590)
class UAvoidanceBoxComponent : public UBoxComponent {
public:

	enum class EAvoidanceBoxType AvoidanceBoxType; // 0x590(0x01)
	char pad_591[0x3]; // 0x591(0x03)
	float DuringTime; // 0x594(0x04)
	struct TArray<struct FName> AllowTags; // 0x598(0x10)
	struct TArray<struct FName> Tags; // 0x5a8(0x10)
	enum class EMovePlanAvoidanceStatus MovePlanStatus; // 0x5b8(0x01)
	char pad_5B9[0x3]; // 0x5b9(0x03)
	float RestoreIdleTime; // 0x5bc(0x04)

	void OnStartMove(); // Function DFMGameplay.AvoidanceBoxComponent.OnStartMove // (Final|Native|Public) // @ game+0x61ebdd0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.AvoidanceBoxComponent.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x61ebbd0
	void OnFinishMove(); // Function DFMGameplay.AvoidanceBoxComponent.OnFinishMove // (Final|Native|Public) // @ game+0x61ebbb0
	void MovePlan(struct AActor* OtherActor, struct UAvoidanceBoxComponent* OtherComp); // Function DFMGameplay.AvoidanceBoxComponent.MovePlan // (Final|Native|Private) // @ game+0x61eb770
	void ForceStopMove(); // Function DFMGameplay.AvoidanceBoxComponent.ForceStopMove // (Final|Native|Private) // @ game+0x61eb3b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BattleFieldBackgroundCharacterVoiceDataManager
// Size: 0x58 (Inherited: 0x38)
class UBattleFieldBackgroundCharacterVoiceDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)
	struct TArray<struct UGPAudioEventAsset*> AudioEventAssets; // 0x48(0x10)

	void OnVoiceDataLoadComplete(struct TArray<struct FSoftObjectPath> Assets); // Function DFMGameplay.BattleFieldBackgroundCharacterVoiceDataManager.OnVoiceDataLoadComplete // (Final|Native|Public) // @ game+0x61ebdf0
	void GetBackgroundCharacterVoiceRow(int32_t InMapID, struct FBattleFieldBackgroundCharacterVoiceRow& OutRow); // Function DFMGameplay.BattleFieldBackgroundCharacterVoiceDataManager.GetBackgroundCharacterVoiceRow // (Final|Native|Public|HasOutParms) // @ game+0x61eb490
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BattleFieldDeduceDataManager
// Size: 0x58 (Inherited: 0x38)
class UBattleFieldDeduceDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)
	struct TArray<struct UObject*> SequenceActors; // 0x48(0x10)

	void OnDeduceDataLoadComplete(struct TArray<struct FSoftObjectPath> Assets); // Function DFMGameplay.BattleFieldDeduceDataManager.OnDeduceDataLoadComplete // (Final|Native|Public) // @ game+0x61eba20
	void GetDeduceRow(int32_t InMapID, struct FBattleFieldDeduceRow& OutRow); // Function DFMGameplay.BattleFieldDeduceDataManager.GetDeduceRow // (Final|Native|Public|HasOutParms) // @ game+0x61eb600
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakthroughDataExtraManager
// Size: 0x168 (Inherited: 0x38)
class UBreakthroughDataExtraManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x130]; // 0x38(0x130)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ConquestDataExtraManager
// Size: 0x188 (Inherited: 0x38)
class UConquestDataExtraManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x150]; // 0x38(0x150)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BehaviorScoreExtraTableManager
// Size: 0xb0 (Inherited: 0x38)
class UBehaviorScoreExtraTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x78]; // 0x38(0x78)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BattleRouteNav
// Size: 0x210 (Inherited: 0x30)
class UBattleRouteNav : public UObject {
public:

	char pad_30[0x10]; // 0x30(0x10)
	struct TArray<struct ABattleRoutePoint*> RoutePoints; // 0x40(0x10)
	char pad_50[0x130]; // 0x50(0x130)
	struct TMap<struct AActor*, struct FBattleRouteArrayList> SectorRoutePointMap; // 0x180(0x50)
	struct TArray<struct FSectorBattleRoutePointPair> PendingCalcSectorBoundArray; // 0x1d0(0x10)
	char pad_1E0[0x30]; // 0x1e0(0x30)

	void SecondTick(); // Function DFMGameplay.BattleRouteNav.SecondTick // (Final|Native|Public) // @ game+0x61f1960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BattleRoutePoint
// Size: 0x410 (Inherited: 0x378)
class ABattleRoutePoint : public AActor {
public:

	bool DrawDoubleWayPath; // 0x378(0x01)
	enum class EBattleRoutePointType PointType; // 0x379(0x01)
	char pad_37A[0x6]; // 0x37a(0x06)
	struct TArray<struct FBattleRouteLink> NextPoints; // 0x380(0x10)
	/*struct TSoftObjectPtr<AActor>*/char BindSector[0x28]; // 0x390(0x28)
	float FlankWeight; // 0x3b8(0x04)
	int32_t SectorPriority; // 0x3bc(0x04)
	float StaticPathScale; // 0x3c0(0x04)
	float DynamicPathScale; // 0x3c4(0x04)
	float DynamicRandomDeviation; // 0x3c8(0x04)
	float LinkCostScale; // 0x3cc(0x04)
	float VaultCostScale; // 0x3d0(0x04)
	float EditorCreateLinkerDistance; // 0x3d4(0x04)
	float EditorCreateLinkerDegLimit; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct ULineBatchComponent* LineComp; // 0x3e0(0x08)
	struct ABattleRoutePoint* TestDestPoint; // 0x3e8(0x08)
	uint32_t TestSearchUin; // 0x3f0(0x04)
	uint32_t TestSearchCamp; // 0x3f4(0x04)
	bool TestOccupyPath; // 0x3f8(0x01)
	char pad_3F9[0x3]; // 0x3f9(0x03)
	float TestPathConsume; // 0x3fc(0x04)
	char pad_400[0x10]; // 0x400(0x10)

	void OnLevelSelectionChanged(struct UObject* NewSelection); // Function DFMGameplay.BattleRoutePoint.OnLevelSelectionChanged // (Final|Native|Public) // @ game+0x61f0cb0
	void FixInnerLinkAfterLevelCopy(); // Function DFMGameplay.BattleRoutePoint.FixInnerLinkAfterLevelCopy // (Final|Native|Public) // @ game+0x61f0470
	void EditorTestReleaseAllOccupy(); // Function DFMGameplay.BattleRoutePoint.EditorTestReleaseAllOccupy // (Final|Native|Public) // @ game+0x61f0450
	void EditorTestFindDest(); // Function DFMGameplay.BattleRoutePoint.EditorTestFindDest // (Final|Native|Public) // @ game+0x61f0430
	void EditorTestCheckRouteVaild(); // Function DFMGameplay.BattleRoutePoint.EditorTestCheckRouteVaild // (Final|Native|Public) // @ game+0x61f0410
	void EditorRefresh(); // Function DFMGameplay.BattleRoutePoint.EditorRefresh // (Final|Native|Public) // @ game+0x61f03f0
	void EditorHideRoutePath(); // Function DFMGameplay.BattleRoutePoint.EditorHideRoutePath // (Final|Native|Public) // @ game+0x61f03d0
	void EditorFillBindSector(); // Function DFMGameplay.BattleRoutePoint.EditorFillBindSector // (Final|Native|Public) // @ game+0x61f03b0
	void EditorDrawRoutePathUpdateCost(); // Function DFMGameplay.BattleRoutePoint.EditorDrawRoutePathUpdateCost // (Final|Native|Public) // @ game+0x61f0390
	void EditorDrawRoutePathOnly(); // Function DFMGameplay.BattleRoutePoint.EditorDrawRoutePathOnly // (Final|Native|Public) // @ game+0x61f0370
	void EditorCreateLink(); // Function DFMGameplay.BattleRoutePoint.EditorCreateLink // (Final|Native|Public) // @ game+0x61f0350
	void AllAttachToNav(); // Function DFMGameplay.BattleRoutePoint.AllAttachToNav // (Final|Native|Public) // @ game+0x61f0210
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BlueprintPlunder
// Size: 0xd58 (Inherited: 0x378)
class ABlueprintPlunder : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct FBlueprintPlunderInfo BlueprintWeaponInfo; // 0x380(0xb0)
	char pad_430[0x8]; // 0x430(0x08)
	bool bTriggerEvent; // 0x438(0x01)
	bool bDelayStart; // 0x439(0x01)
	char pad_43A[0x2]; // 0x43a(0x02)
	int32_t DelayStartTimeMin; // 0x43c(0x04)
	int32_t DelayStartTimeMax; // 0x440(0x04)
	struct FName TargetPoolIdName; // 0x444(0x08)
	struct FName TargetPoolIdName_Level2; // 0x44c(0x08)
	int32_t DefaultDecipherDuration; // 0x454(0x04)
	int32_t DefaultWaitingRecycleDuration; // 0x458(0x04)
	char pad_45C[0xc]; // 0x45c(0x0c)
	float EnemyDecipherDistanceRange; // 0x468(0x04)
	struct FBlueprintPlunderDangerDistanceConfig DangerDistanceConfig; // 0x46c(0x0c)
	struct FBlueprintPlunderUIConfig UIConfig; // 0x478(0x60)
	struct FBlueprintPlunderBannerTextConfig BannerTextConfig; // 0x4d8(0xe8)
	struct FBlueprintPlunderMainHudTextConfig MainHudTextConfig; // 0x5c0(0xd8)
	struct FBlueprintPlunderTipsBoxTextConfig TipsBoxTextConfig; // 0x698(0x78)
	struct FProgressBarConfig ProgressBarConfig; // 0x710(0x50)
	struct FUI2DAudioConfig UI2DAudioConfig; // 0x760(0x60)
	struct FInteract3DAudioConfig Interact3DAudioConfig; // 0x7c0(0x50)
	struct FVOConfig VOConfig; // 0x810(0x70)
	float PickUpVOTimeCD; // 0x880(0x04)
	float MapWorldRange; // 0x884(0x04)
	float DSUpdateLocRate; // 0x888(0x04)
	float MapRippleTrackRate; // 0x88c(0x04)
	bool bDrawLine; // 0x890(0x01)
	char pad_891[0x3]; // 0x891(0x03)
	float InDangerVOTimer; // 0x894(0x04)
	float FindGroundStartOffSetZ; // 0x898(0x04)
	float FindGroundEndOffSetZ; // 0x89c(0x04)
	float ScreenMarkerZOffSet_NoPickup; // 0x8a0(0x04)
	float ScreenMarkerZOffSet_Pickup; // 0x8a4(0x04)
	float DSReportLocRate; // 0x8a8(0x04)
	bool bCheckStartMatchInfo; // 0x8ac(0x01)
	char pad_8AD[0x2b]; // 0x8ad(0x2b)
	struct TArray<struct ABlueprintWeaponGenerator*> AllSpawners; // 0x8d8(0x10)
	struct TArray<struct ABlueprintWeaponGenerator*> RandomSpawners; // 0x8e8(0x10)
	char pad_8F8[0xc0]; // 0x8f8(0xc0)
	struct UWeaponBlueprintIconViewController* WeaponBlueprintIconViewController; // 0x9b8(0x08)
	struct TArray<struct UMapLineViewController*> MapLineViewControllerArr; // 0x9c0(0x10)
	char pad_9D0[0x38]; // 0x9d0(0x38)
	struct TArray<struct UGPAudioEventAsset*> MandelUIAudioArr; // 0xa08(0x10)
	char pad_A18[0x8]; // 0xa18(0x08)
	struct TMap<enum class EInteract3DAudioType, struct UGPAudioEventAsset*> Mandel3DAudioMap; // 0xa20(0x50)
	struct TArray<struct UGPAudioEventAsset*> Mandel3DAudioArr; // 0xa70(0x10)
	char pad_A80[0x68]; // 0xa80(0x68)
	struct AInteractor_DecipherDevice* ClientPutInDecipherDevice; // 0xae8(0x08)
	char pad_AF0[0x10]; // 0xaf0(0x10)
	float ShowEstimatedTime; // 0xb00(0x04)
	float ExistEstimatedTime; // 0xb04(0x04)
	float FlyEstimatedTime; // 0xb08(0x04)
	float ConfigRange; // 0xb0c(0x04)
	float ConfigStopTime; // 0xb10(0x04)
	float DirectEngageRange; // 0xb14(0x04)
	float StayingEngageRange; // 0xb18(0x04)
	float StayingEngageTime; // 0xb1c(0x04)
	float DamageEngageRange; // 0xb20(0x04)
	char pad_B24[0x174]; // 0xb24(0x174)
	struct TMap<struct ADFMCharacter*, float> PendingRangeCharacterMap; // 0xc98(0x50)
	char pad_CE8[0x10]; // 0xce8(0x10)
	struct TMap<struct ADFMCharacter*, float> PendingRangeCharacterMap_New; // 0xcf8(0x50)
	char pad_D48[0x8]; // 0xd48(0x08)
	float ClientNotCheckStartMatchTime; // 0xd50(0x04)
	char pad_D54[0x4]; // 0xd54(0x04)

	void SOLEventEstimatedTimeCreated(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.SOLEventEstimatedTimeCreated // (Final|Native|Public) // @ game+0x61f1860
	void SOLEventBannerInit(bool bInit); // Function DFMGameplay.BlueprintPlunder.SOLEventBannerInit // (Final|Native|Public) // @ game+0x61f17d0
	void ServerWaitingRecycleEnd(); // Function DFMGameplay.BlueprintPlunder.ServerWaitingRecycleEnd // (Final|Native|Public) // @ game+0x61f19a0
	void ServerResetDecipherDeviceEnd(); // Function DFMGameplay.BlueprintPlunder.ServerResetDecipherDeviceEnd // (Final|Native|Public) // @ game+0x61f1980
	void RandomSpawnBlueprintWeapon(); // Function DFMGameplay.BlueprintPlunder.RandomSpawnBlueprintWeapon // (Final|Native|Public) // @ game+0x61f17b0
	void PlayerDangerVONextTick(); // Function DFMGameplay.BlueprintPlunder.PlayerDangerVONextTick // (Final|Native|Public) // @ game+0x61f1790
	void OnTakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.BlueprintPlunder.OnTakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x61f16c0
	void OnSOLTrainHighValueBoxEvacuate(struct AActor* TrainHighValueBox); // Function DFMGameplay.BlueprintPlunder.OnSOLTrainHighValueBoxEvacuate // (Final|Native|Public) // @ game+0x61f1400
	void OnSOLTimelineEventStateChange(struct TArray<enum class ESOLEventState>& EventStates); // Function DFMGameplay.BlueprintPlunder.OnSOLTimelineEventStateChange // (Final|Native|Public|HasOutParms) // @ game+0x61f1330
	void OnShowSOLEventBannerFlyIcon(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.OnShowSOLEventBannerFlyIcon // (Final|Native|Public) // @ game+0x61f15c0
	void OnServerLocalPlayerIsAliveChanged(struct AController* InPlayer); // Function DFMGameplay.BlueprintPlunder.OnServerLocalPlayerIsAliveChanged // (Final|Native|Public) // @ game+0x61f1540
	void OnServerGameEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.BlueprintPlunder.OnServerGameEnd // (Final|Native|Public) // @ game+0x61f1480
	void OnRep_BlueprintPlunderInfo_Intro(); // Function DFMGameplay.BlueprintPlunder.OnRep_BlueprintPlunderInfo_Intro // (Final|Native|Public) // @ game+0x61f1310
	void OnRep_BlueprintPlunderInfo(); // Function DFMGameplay.BlueprintPlunder.OnRep_BlueprintPlunderInfo // (Final|Native|Public) // @ game+0x61f12f0
	void OnPlayerKilledServerNotify(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* WeaponDesc); // Function DFMGameplay.BlueprintPlunder.OnPlayerKilledServerNotify // (Final|Native|Public|HasOutParms) // @ game+0x61f11f0
	void OnPlayerEscape(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.BlueprintPlunder.OnPlayerEscape // (Final|Native|Public) // @ game+0x61f1130
	void OnMandelUIAudioLoadedComplete(struct TArray<struct FSoftObjectPath> EventAssetsToLoad); // Function DFMGameplay.BlueprintPlunder.OnMandelUIAudioLoadedComplete // (Final|Native|Public) // @ game+0x61f0fa0
	void OnMandel3DAudioLoadedComplete(struct TArray<struct FSoftObjectPath> EventAssetsToLoad, struct TArray<enum class EInteract3DAudioType> AudioTypes); // Function DFMGameplay.BlueprintPlunder.OnMandel3DAudioLoadedComplete // (Final|Native|Public) // @ game+0x61f0d50
	void OnLoadedAllControllerClass(); // Function DFMGameplay.BlueprintPlunder.OnLoadedAllControllerClass // (Final|Native|Public) // @ game+0x61f0d30
	void OnClientPlayerEnterOrLeftExitPoint(struct APlayerExitBase* ExitPoint, bool ExitOrNotice, bool bEnterOrLeft); // Function DFMGameplay.BlueprintPlunder.OnClientPlayerEnterOrLeftExitPoint // (Final|Native|Public) // @ game+0x61f0ad0
	void OnClientPlayerEnteredExitPoint(struct APlayerExitBase* ExitPoint, bool ExitOrNotice); // Function DFMGameplay.BlueprintPlunder.OnClientPlayerEnteredExitPoint // (Final|Native|Public) // @ game+0x61f0be0
	void OnBlueprintPlunderRefreshGenerator(int32_t SpawnerID); // Function DFMGameplay.BlueprintPlunder.OnBlueprintPlunderRefreshGenerator // (Final|Native|Public) // @ game+0x61f0a50
	void OnBlueprintPlunderDisableDelay(); // Function DFMGameplay.BlueprintPlunder.OnBlueprintPlunderDisableDelay // (Final|Native|Public) // @ game+0x61f0a30
	void OBClientBroadcastPlunderInfo(); // Function DFMGameplay.BlueprintPlunder.OBClientBroadcastPlunderInfo // (Final|Native|Public) // @ game+0x61f0a10
	void NotCheckStartMatchHandle(); // Function DFMGameplay.BlueprintPlunder.NotCheckStartMatchHandle // (Final|Native|Public) // @ game+0x61f09f0
	void MultiCastLoseMandelBrick(int32_t TeamId); // Function DFMGameplay.BlueprintPlunder.MultiCastLoseMandelBrick // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xbcc460
	void LocalPlayerEnterBattleDecipherDevice(struct AInteractor_DecipherDevice* DecipherDevice, bool bEnter); // Function DFMGameplay.BlueprintPlunder.LocalPlayerEnterBattleDecipherDevice // (Final|Native|Public) // @ game+0x61f0920
	void HudLoaded_SOLEventBanner(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.HudLoaded_SOLEventBanner // (Final|Native|Public) // @ game+0x61f0820
	void HudLoaded_LeftProgressTipsHudView(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.HudLoaded_LeftProgressTipsHudView // (Final|Native|Public) // @ game+0x61f0720
	void HudLoaded_EventProgress(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.HudLoaded_EventProgress // (Final|Native|Public) // @ game+0x61f0620
	void HudLoaded_CenterEventHintView(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.BlueprintPlunder.HudLoaded_CenterEventHintView // (Final|Native|Public) // @ game+0x61f0520
	int32_t GetDecipherRemainCountDownTime(); // Function DFMGameplay.BlueprintPlunder.GetDecipherRemainCountDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61f04f0
	float GetDecipherAndRecycleProgress(); // Function DFMGameplay.BlueprintPlunder.GetDecipherAndRecycleProgress // (Final|Native|Public) // @ game+0x61f04c0
	int32_t GetCurrentCountDownTime(); // Function DFMGameplay.BlueprintPlunder.GetCurrentCountDownTime // (Final|Native|Public) // @ game+0x61f0490
	void DSUpdateBlueprintWeaponLocation(); // Function DFMGameplay.BlueprintPlunder.DSUpdateBlueprintWeaponLocation // (Final|Native|Public) // @ game+0x61f0310
	void DSReportLoc(); // Function DFMGameplay.BlueprintPlunder.DSReportLoc // (Final|Native|Public) // @ game+0x61f02f0
	void DelayPlayMandelLp(); // Function DFMGameplay.BlueprintPlunder.DelayPlayMandelLp // (Final|Native|Public) // @ game+0x61f0330
	void ClientShowEstimatedTimeHud_Inner2Copy(); // Function DFMGameplay.BlueprintPlunder.ClientShowEstimatedTimeHud_Inner2Copy // (Final|Native|Public) // @ game+0x61f02b0
	void ClientShowEstimatedTimeHud_Inner(); // Function DFMGameplay.BlueprintPlunder.ClientShowEstimatedTimeHud_Inner // (Final|Native|Public) // @ game+0x61f02d0
	void ClientEnemyUpdateScreenMarkersInner(); // Function DFMGameplay.BlueprintPlunder.ClientEnemyUpdateScreenMarkersInner // (Final|Native|Public) // @ game+0x61f0290
	void ClientCreateMapIcons(); // Function DFMGameplay.BlueprintPlunder.ClientCreateMapIcons // (Final|Native|Public) // @ game+0x61f0270
	void CheckMandelBrickOccur(); // Function DFMGameplay.BlueprintPlunder.CheckMandelBrickOccur // (Final|Native|Public) // @ game+0x61f0250
	void BroadcastPlunderInfoUpdate(); // Function DFMGameplay.BlueprintPlunder.BroadcastPlunderInfoUpdate // (Final|Native|Public) // @ game+0x61f0230
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BlueprintWeaponGenerator
// Size: 0x3a8 (Inherited: 0x378)
class ABlueprintWeaponGenerator : public AActor {
public:

	uint32_t SpawnerID; // 0x378(0x04)
	uint32_t SpawnWeight; // 0x37c(0x04)
	struct AInteractor_DecipherDevice* SpawnerPoint; // 0x380(0x08)
	struct TArray<struct AInteractor_DecipherDevice*> DecipherDeviceArr; // 0x388(0x10)
	struct FName CallAITag; // 0x398(0x08)
	char pad_3A0[0x8]; // 0x3a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BossLocationActor
// Size: 0x388 (Inherited: 0x378)
class ABossLocationActor : public AActor {
public:

	struct FName BossNameID; // 0x378(0x08)
	float BigMapBossWorldRange; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BoxCollisionCollectionActor
// Size: 0x398 (Inherited: 0x378)
class ABoxCollisionCollectionActor : public AActor {
public:

	struct TArray<struct UBoxComponent*> BoxComponents; // 0x378(0x10)
	struct FString CollectionName; // 0x388(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableAnimInstance
// Size: 0xa00 (Inherited: 0x280)
class UBreakableAnimInstance : public UAnimInstance {
public:

	struct FBreakableAnimAnimProxy AnimProxy; // 0x280(0x780)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableDeveloperSetting
// Size: 0x58 (Inherited: 0x40)
class UBreakableDeveloperSetting : public UDeveloperSettings {
public:

	bool bReplaceWarningMatForInvalidBP; // 0x40(0x01)
	bool bAllowInvalidBPUseInLevel; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
	struct TArray<struct FString> InValidBPAllowWhiteLevelPaths; // 0x48(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableEnvDetectorComponent
// Size: 0x118 (Inherited: 0x100)
class UBreakableEnvDetectorComponent : public UActorComponent {
public:

	char bDetectKickDoorEvent : 1; // 0x100(0x01)
	char pad_100_1 : 7; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float KickDoorDetectionDistance; // 0x104(0x04)
	float KickDoorResponseTime; // 0x108(0x04)
	char bDetectAirHit : 1; // 0x10c(0x01)
	char pad_10C_1 : 7; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	float AirHitDetectionDistance; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	void OnDetecteAirHit(struct APawn* SourcePawn, struct FHitResult& HitReslut); // Function DFMGameplay.BreakableEnvDetectorComponent.OnDetecteAirHit // (Final|Native|Protected|HasOutParms) // @ game+0x61f56c0
	void NotifyBreak(); // Function DFMGameplay.BreakableEnvDetectorComponent.NotifyBreak // (Final|Native|Protected) // @ game+0x61f51d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableFoliage
// Size: 0x758 (Inherited: 0x378)
class ABreakableFoliage : public AActor {
public:

	char pad_378[0x20]; // 0x378(0x20)
	bool bIsGlobal; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	float DamageInterestRadius; // 0x39c(0x04)
	struct UPhysXSerialComponent* PhysxProxyComp; // 0x3a0(0x08)
	struct UBreakableFoliageHealthComponent* TreeHealthComp; // 0x3a8(0x08)
	struct UBreakableFoliageHealthComponent* GrassHealthComp; // 0x3b0(0x08)
	struct TMap<struct FString, struct UClass*> MeshName2BreakableBP; // 0x3b8(0x50)
	char pad_408[0x50]; // 0x408(0x50)
	struct FFoliageRadialDamageArray RadialDamageArray; // 0x458(0x120)
	struct FFoliagePointDamageArray PointDamageArray; // 0x578(0x120)
	struct FName AssetName; // 0x698(0x08)
	char pad_6A0[0xb8]; // 0x6a0(0xb8)

	void SpawnFoliagePerformanceBpAsync(struct FString MeshName, struct FTransform& Transform); // Function DFMGameplay.BreakableFoliage.SpawnFoliagePerformanceBpAsync // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x61f5f60
	void OnTakeRadialDamage(struct FVector HitPosition, float HitRadius, float DamageVal); // Function DFMGameplay.BreakableFoliage.OnTakeRadialDamage // (Final|Native|Public|HasDefaults) // @ game+0x61f5bd0
	void OnTakePointDamage(int32_t UniqueId, float DamageVal); // Function DFMGameplay.BreakableFoliage.OnTakePointDamage // (Final|Native|Public) // @ game+0x61f5b10
	void OnServerPostRadialDamage(struct FDamageSourceInfo& DamageSource, struct TArray<struct FDamageResultInfo>& DamageResults); // Function DFMGameplay.BreakableFoliage.OnServerPostRadialDamage // (Final|Native|Public|HasOutParms) // @ game+0x61f5820
	void OnDestructRigid(struct UBreakableFoliageHealthComponent* Comp, int32_t UnitIndex); // Function DFMGameplay.BreakableFoliage.OnDestructRigid // (Final|Native|Public) // @ game+0x61f5600
	void OnDestructEnd(struct AActor* From, struct FString MeshName, struct TArray<int32_t> InsIndices, struct TArray<struct FTransform> Scatters); // Function DFMGameplay.BreakableFoliage.OnDestructEnd // (Final|Native|Public) // @ game+0x61f5320
	void OnDestructCover(struct UBreakableFoliageHealthComponent* Comp, struct FVector Position, float radius); // Function DFMGameplay.BreakableFoliage.OnDestructCover // (Final|Native|Public|HasDefaults) // @ game+0x61f5210
	void MultiPlayTreeDestructibleEffect(struct FString MeshName, struct FTransform WorldTrans); // Function DFMGameplay.BreakableFoliage.MultiPlayTreeDestructibleEffect // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x61f5080
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesFoliageWorldSubsystem
// Size: 0xd8 (Inherited: 0x38)
class UDesFoliageWorldSubsystem : public UWorldSubsystem {
public:

	struct TMap<struct FName, struct ABreakableFoliage*> BreakableFoliages; // 0x38(0x50)
	struct TMap<struct FName, struct UPhysXSerialComponent*> PhysXSerialComps; // 0x88(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableFoliageHealthComponent
// Size: 0x128 (Inherited: 0x100)
class UBreakableFoliageHealthComponent : public UActorComponent {
public:

	struct TArray<struct FPlantUnitHeathInfo> UnitHPs; // 0x100(0x10)
	float MaxHP; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	/*struct FMulticastInlineDelegate*/char OnPlantUnitDamaged[0x10]; // 0x118(0x10)

	float GetHPPercent(int32_t UnitID); // Function DFMGameplay.BreakableFoliageHealthComponent.GetHPPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x61f4bb0
	float GetHealth(int32_t UnitID); // Function DFMGameplay.BreakableFoliageHealthComponent.GetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x61f4c70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableHealthComponent
// Size: 0x150 (Inherited: 0x100)
class UBreakableHealthComponent : public UActorComponent {
public:

	struct FBreakableDamageInfo DamageInfo; // 0x100(0x20)
	float MaxHP; // 0x120(0x04)
	bool WillNotDie; // 0x124(0x01)
	char pad_125[0x3]; // 0x125(0x03)
	float RespawnHP; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)
	/*struct FMulticastInlineDelegate*/char OnHealthChanged[0x10]; // 0x130(0x10)
	/*struct FMulticastInlineDelegate*/char OnBreakableEndChanged[0x10]; // 0x140(0x10)

	void SetHP(float HP); // Function DFMGameplay.BreakableHealthComponent.SetHP // (Final|Native|Public|BlueprintCallable) // @ game+0x61f5ec0
	void OnRep_DamageInfoChanged(); // Function DFMGameplay.BreakableHealthComponent.OnRep_DamageInfoChanged // (Final|Native|Protected) // @ game+0x61f5800
	float GetHPRate(); // Function DFMGameplay.BreakableHealthComponent.GetHPRate // (Final|Native|Public|BlueprintCallable) // @ game+0x61f4c40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableHealthLossComponent
// Size: 0x1b0 (Inherited: 0x100)
class UBreakableHealthLossComponent : public UActorComponent {
public:

	float LossHealthThreshold; // 0x100(0x04)
	float LossHealthRatePerSecond; // 0x104(0x04)
	struct FName ParticleFName; // 0x108(0x08)
	bool isParticleFollowHitPosition; // 0x110(0x01)
	char pad_111[0xf]; // 0x111(0x0f)
	struct FTransform FollowHitPositionOffsetTransform; // 0x120(0x30)
	struct FTransform NormalOffsetTransform; // 0x150(0x30)
	bool isFollowActorRotationPitch; // 0x180(0x01)
	bool isFollowActorRotationYaw; // 0x181(0x01)
	bool isFollowActorRotationRoll; // 0x182(0x01)
	char pad_183[0x5]; // 0x183(0x05)
	struct ABreakableItem* BreakableItem; // 0x188(0x08)
	char pad_190[0x10]; // 0x190(0x10)
	struct UFXResourceContainerComponent* PSComponent; // 0x1a0(0x08)
	char pad_1A8[0x8]; // 0x1a8(0x08)

	void GetHitDoing(float& HealthAfterHit, struct FDamageResultInfo& DamageResult); // Function DFMGameplay.BreakableHealthLossComponent.GetHitDoing // (Final|Native|Protected|HasOutParms) // @ game+0x61f4d00
	void ExplosionDoing(); // Function DFMGameplay.BreakableHealthLossComponent.ExplosionDoing // (Final|Native|Protected) // @ game+0x61f4b70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemsReplication
// Size: 0x468 (Inherited: 0x378)
class ABreakableItemsReplication : public AActor {
public:

	char pad_378[0x50]; // 0x378(0x50)
	struct TMap<struct FName, bool> ItemBreakStateMap; // 0x3c8(0x50)
	char pad_418[0x50]; // 0x418(0x50)

	void OnRep_ItemBreakStateChange(); // Function DFMGameplay.BreakableItemsReplication.OnRep_ItemBreakStateChange // (Final|Native|Protected) // @ game+0x61f9070
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakablePawn
// Size: 0x5b8 (Inherited: 0x3d8)
class ABreakablePawn : public APawn {
public:

	char pad_3D8[0x38]; // 0x3d8(0x38)
	bool bIgnoreDamageOnPrematch; // 0x410(0x01)
	enum class EBreakableMeshDisappearMode MeshDisappearMode; // 0x411(0x01)
	char pad_412[0x6]; // 0x412(0x06)
	struct TArray<struct FName> DisappearMeshNameList; // 0x418(0x10)
	float ActorLifeTime; // 0x428(0x04)
	enum class EBreakableDebrisLoadMode DebrisLoadMode; // 0x42c(0x01)
	char pad_42D[0x3]; // 0x42d(0x03)
	/*struct TSoftObjectPtr<UStaticMesh>*/char BreakableDebrisStaticMesh[0x28]; // 0x430(0x28)
	struct FName DebrisStaticMeshCompName; // 0x458(0x08)
	bool bIsChangeToDebrisAtAnimationEnd; // 0x460(0x01)
	bool bIsIgnoreRootComponentCollision; // 0x461(0x01)
	enum class EBreakableTriggerMode TriggerMode; // 0x462(0x01)
	char pad_463[0x5]; // 0x463(0x05)
	struct TArray<struct FBreakableCollisionFilterInfo> CollisionFilterInfoArray; // 0x468(0x10)
	struct TArray<struct FBreakableDamageFilterInfo> DamageFilterInfoArray; // 0x478(0x10)
	struct TArray<struct FBreakableDamageFilterInfo> DamageRejectFilterInfoArray; // 0x488(0x10)
	struct TArray<struct FBreakableTriggerPairInfo> TriggerInfoArray; // 0x498(0x10)
	struct FName DefaultNavAreaBoxName; // 0x4a8(0x08)
	bool bIsIgnoreManagerControl; // 0x4b0(0x01)
	bool bIsHiddenInteractor; // 0x4b1(0x01)
	bool bServerControl; // 0x4b2(0x01)
	char pad_4B3[0x5]; // 0x4b3(0x05)
	/*struct FMulticastInlineDelegate*/char OnStateChange[0x10]; // 0x4b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayDestructionAnimation[0x10]; // 0x4c8(0x10)
	struct UGeneralSignificanceComponent* Significance; // 0x4d8(0x08)
	struct UBoxComponent* BoxComponent; // 0x4e0(0x08)
	struct UBreakableHealthComponent* HealthComponent; // 0x4e8(0x08)
	/*struct UGPDestructibleComponent**/char DestructibleComponent[0x8]; // 0x4f0(0x08)
	struct TArray<struct UBoxComponent*> NavAreaComponentList; // 0x4f8(0x10)
	struct TArray<struct UBreakableHealthComponent*> HealthComponentList; // 0x508(0x10)
	/*struct TArray<struct UGPDestructibleComponent*>*/char DestructibleComponentList[0x10]; // 0x518(0x10)
	struct TArray<struct UBoxComponent*> BoxComponentList; // 0x528(0x10)
	struct TArray<struct UActorComponent*> OriginPrimitiveCompnentList; // 0x538(0x10)
	struct TArray<struct UGPSkeletalMeshComponent*> SkeletalMeshsFromBlueprint; // 0x548(0x10)
	char pad_558[0x29]; // 0x558(0x29)
	bool bHasBreaked; // 0x581(0x01)
	char pad_582[0x16]; // 0x582(0x16)
	struct UStaticMeshComponent* GlassMeshComp_Mobile; // 0x598(0x08)
	struct UStaticMeshComponent* InGlassMeshComp_HD; // 0x5a0(0x08)
	struct UStaticMeshComponent* OutGlassMeshComp_HD; // 0x5a8(0x08)
	bool bIsGlass; // 0x5b0(0x01)
	bool bNeedOpenVisibilityCollision; // 0x5b1(0x01)
	char pad_5B2[0x6]; // 0x5b2(0x06)

	void SetTickEnable(bool bEnabled); // Function DFMGameplay.BreakablePawn.SetTickEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x61f98c0
	void SetSkeletalMeshInManagerControl(struct UGPSkeletalMeshComponent* SkeletalMeshComponent, bool IsPlayAnim, bool IsPlayPhysic); // Function DFMGameplay.BreakablePawn.SetSkeletalMeshInManagerControl // (Final|Native|Public|BlueprintCallable) // @ game+0x61f97b0
	void SetPawnState(enum class EPawnState NewState); // Function DFMGameplay.BreakablePawn.SetPawnState // (Final|Native|Public|BlueprintCallable) // @ game+0x61f9730
	void SetIsDestructibleEnd(bool IsEnd); // Function DFMGameplay.BreakablePawn.SetIsDestructibleEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x61f96a0
	bool SetHP(float HP); // Function DFMGameplay.BreakablePawn.SetHP // (Final|Native|Public) // @ game+0x61f9610
	void ServerSuicide(struct AActor* AttackerActor, struct FHitResult HitInfo); // Function DFMGameplay.BreakablePawn.ServerSuicide // (Final|Native|Public|BlueprintCallable) // @ game+0x61f93b0
	void Reset(); // Function DFMGameplay.BreakablePawn.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x21b34a0
	void PlayBreakAndClearHealthAll(); // Function DFMGameplay.BreakablePawn.PlayBreakAndClearHealthAll // (Final|Native|Public|BlueprintCallable) // @ game+0x61f9090
	void OnRep_HasBreaked(bool Pre); // Function DFMGameplay.BreakablePawn.OnRep_HasBreaked // (Final|Native|Private) // @ game+0x61f8fe0
	void OnDestructionComponentPlayEffectEnd(/*struct UGPDestructibleComponent* DestructibleComponent, struct UGPSkeletalMeshComponent* SkeletalMeshComponent*/); // Function DFMGameplay.BreakablePawn.OnDestructionComponentPlayEffectEnd // (Final|Native|Private) // @ game+0x61f8ee0
	void OnDestructionComponentPlayEffectBegin(/*struct UGPDestructibleComponent* DestructibleComponent, struct UGPSkeletalMeshComponent* SkeletalMeshComponent*/); // Function DFMGameplay.BreakablePawn.OnDestructionComponentPlayEffectBegin // (Final|Native|Private) // @ game+0x61f8e20
	void OnDestructionComponentPhysicsSimulation(/*struct UGPDestructibleComponent* DestructibleComponent, struct UGPSkeletalMeshComponent* SkeletalMeshComponent*/); // Function DFMGameplay.BreakablePawn.OnDestructionComponentPhysicsSimulation // (Final|Native|Private) // @ game+0x61f8d60
	void OnCollisionLogic(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor); // Function DFMGameplay.BreakablePawn.OnCollisionLogic // (Final|Native|Private) // @ game+0x61f8ca0
	void OnCollisionHitted(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function DFMGameplay.BreakablePawn.OnCollisionHitted // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x61f8ad0
	void OnCollisionBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.BreakablePawn.OnCollisionBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x61f88d0
	void OnBreakablePlayDestructionAnimation__DelegateSignature(struct USkeletalMeshComponent* SkeletalMeshComp); // DelegateFunction DFMGameplay.BreakablePawn.OnBreakablePlayDestructionAnimation__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x7ed88c0
	void OnBreakablePawnStateChange__DelegateSignature(struct ABreakablePawn* BreakablePawnObj, enum class EPawnState NewState); // DelegateFunction DFMGameplay.BreakablePawn.OnBreakablePawnStateChange__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x7ed88c0
	void OnBeginPreLoadFinishComplete(struct TArray<struct FSoftObjectPath> Path); // Function DFMGameplay.BreakablePawn.OnBeginPreLoadFinishComplete // (Final|Native|Private) // @ game+0x61f8740
	enum class EPawnState GetPawnState(); // Function DFMGameplay.BreakablePawn.GetPawnState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61f7ef0
	float GetHP(); // Function DFMGameplay.BreakablePawn.GetHP // (Final|Native|Public) // @ game+0x61f7ec0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakablePawnManager
// Size: 0x3a0 (Inherited: 0x378)
class ABreakablePawnManager : public AActor {
public:

	char pad_378[0x28]; // 0x378(0x28)

	void SetIsSimulatePhysics(/*bool IsSimulate, struct UGPDestructibleComponent* DestructComp, struct UGPSkeletalMeshComponent* InSkeletalMeshComp*/); // Function DFMGameplay.BreakablePawnManager.SetIsSimulatePhysics // (Final|Native|Public) // @ game+0x61fe7a0
	void SetIsPlayAnimation(/*bool IsPlaying, struct UGPDestructibleComponent* DestructComp, struct UGPSkeletalMeshComponent* InSkeletalMeshComp*/); // Function DFMGameplay.BreakablePawnManager.SetIsPlayAnimation // (Final|Native|Public) // @ game+0x61fe6a0
	void SetConfig(int32_t InMaxBreakActorCount, int32_t InMaxBreakingBoneCount, int32_t InMaxPhysicsSimualteCount); // Function DFMGameplay.BreakablePawnManager.SetConfig // (Final|Native|Public) // @ game+0x61fe5a0
	void RemoveBreakablePawn(struct ABreakablePawn* BreakablePawn); // Function DFMGameplay.BreakablePawnManager.RemoveBreakablePawn // (Final|Native|Public) // @ game+0x61fe520
	struct ABreakablePawnManager* STATIC_GetInstIfExist(); // Function DFMGameplay.BreakablePawnManager.GetInstIfExist // (Final|Native|Static|Public) // @ game+0x61fdf40
	struct ABreakablePawnManager* STATIC_GetInst(struct UWorld* World); // Function DFMGameplay.BreakablePawnManager.GetInst // (Final|Native|Static|Public) // @ game+0x61fdec0
	void EndPlay(enum class EEndPlayReason EndPlayReason); // Function DFMGameplay.BreakablePawnManager.EndPlay // (Native|Public) // @ game+0x61fde40
	bool CanPlayMorePhysics(/*struct UGPDestructibleComponent* DestructComp, struct UGPSkeletalMeshComponent* InSkeletalMeshComp*/); // Function DFMGameplay.BreakablePawnManager.CanPlayMorePhysics // (Final|Native|Public) // @ game+0x61fdbf0
	void BeginPlay(); // Function DFMGameplay.BreakablePawnManager.BeginPlay // (Native|Public) // @ game+0x9212d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakablePhysics
// Size: 0x7a8 (Inherited: 0x30)
class UBreakablePhysics : public UObject {
public:

	struct FBreakablePhysicsData PhysicsConfig; // 0x30(0x750)
	char pad_780[0x28]; // 0x780(0x28)

	void OnHitEffect(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function DFMGameplay.BreakablePhysics.OnHitEffect // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x61fe160
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableSkeletalMeshLODTimer
// Size: 0x48 (Inherited: 0x30)
class UBreakableSkeletalMeshLODTimer : public UObject {
public:

	char pad_30[0x18]; // 0x30(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableSpawnPickupComponent
// Size: 0x260 (Inherited: 0x240)
class UBreakableSpawnPickupComponent : public USceneComponent {
public:

	int64_t PointID; // 0x240(0x08)
	struct TArray<struct UClass*> PickupAttachComponents; // 0x248(0x10)
	char pad_258[0x8]; // 0x258(0x08)

	void SpawnPickup(struct ABreakablePawn* BreakablePawnObj, enum class EPawnState NewState); // Function DFMGameplay.BreakableSpawnPickupComponent.SpawnPickup // (Final|Native|Protected) // @ game+0x61fe960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTDecorator_RandomCooldown
// Size: 0x78 (Inherited: 0x70)
class UBTDecorator_RandomCooldown : public UBTDecorator {
public:

	float MinCoolDownTime; // 0x70(0x04)
	float MaxCoolDownTime; // 0x74(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTDecorator_RandomTimeLimit
// Size: 0x78 (Inherited: 0x70)
class UBTDecorator_RandomTimeLimit : public UBTDecorator {
public:

	float MinTimeLimit; // 0x70(0x04)
	float MaxTimeLimit; // 0x74(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTask_DFMMoveTo
// Size: 0xb8 (Inherited: 0xa0)
class UBTTask_DFMMoveTo : public UBTTask_BlackboardBase {
public:

	float AcceptableRadius; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct UClass* FilterClass; // 0xa8(0x08)
	float ObservedBlackboardValueTolerance; // 0xb0(0x04)
	char bObserveBlackboardValue : 1; // 0xb4(0x01)
	char bAllowStrafe : 1; // 0xb4(0x01)
	char bAllowPartialPath : 1; // 0xb4(0x01)
	char bTrackMovingGoal : 1; // 0xb4(0x01)
	char bProjectGoalLocation : 1; // 0xb4(0x01)
	char bReachTestIncludesAgentRadius : 1; // 0xb4(0x01)
	char bReachTestIncludesGoalRadius : 1; // 0xb4(0x01)
	char bStopOnOverlap : 1; // 0xb4(0x01)
	char bStopOnOverlapNeedsUpdate : 1; // 0xb5(0x01)
	char pad_B5_1 : 7; // 0xb5(0x01)
	char pad_B6[0x2]; // 0xb6(0x02)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTask_DroneFollow
// Size: 0x88 (Inherited: 0x78)
class UBTTask_DroneFollow : public UBTTaskNode {
public:

	float AcceptableRadius; // 0x78(0x04)
	int32_t Unit; // 0x7c(0x04)
	bool VisualizeRawPath; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTask_DynamicRunEQS
// Size: 0x100 (Inherited: 0xa0)
class UBTTask_DynamicRunEQS : public UBTTask_BlackboardBase {
public:

	struct FEQSParametrizedQueryExecutionRequest EQSRequest; // 0xa0(0x48)
	int32_t EQSResultRange; // 0xe8(0x04)
	bool bAllowFailed; // 0xec(0x01)
	char pad_ED[0x13]; // 0xed(0x13)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTask_HealOverTime
// Size: 0x90 (Inherited: 0x80)
class UBTTask_HealOverTime : public UGPBTTaskBase {
public:

	char pad_80[0x10]; // 0x80(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTask_RunDynamicTemplateBehavior
// Size: 0x130 (Inherited: 0x90)
class UBTTask_RunDynamicTemplateBehavior : public UBTTask_RunBehaviorDynamic {
public:

	struct TMap<struct FString, struct UBTNode*> BhtNodeMap; // 0x90(0x50)
	struct TMap<struct FString, struct UBehaviorTree*> DupTrees; // 0xe0(0x50)

	bool SetBtNodeValueUint8(struct FString TargetNodeName, struct FString FieldName, char Val); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.SetBtNodeValueUint8 // (Final|Native|Public|BlueprintCallable) // @ game+0x6203d20
	bool SetBtNodeValueInt(struct FString TargetNodeName, struct FString FieldName, int32_t Val); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.SetBtNodeValueInt // (Final|Native|Public|BlueprintCallable) // @ game+0x6203b00
	bool SetBtNodeValueFloat(struct FString TargetNodeName, struct FString FieldName, float Val); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.SetBtNodeValueFloat // (Final|Native|Public|BlueprintCallable) // @ game+0x62038e0
	bool SetBtNodeValueBool(struct FString TargetNodeName, struct FString FieldName, bool Val); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.SetBtNodeValueBool // (Final|Native|Public|BlueprintCallable) // @ game+0x62036c0
	struct FName SelectTemplateName(struct UBehaviorTreeComponent* OwnerComp, struct AAIController* AIController); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.SelectTemplateName // (Native|Event|Public|BlueprintEvent) // @ game+0x62035f0
	void OnNewTempBhtSwitched(struct AAIController* AIController); // Function DFMGameplay.BTTask_RunDynamicTemplateBehavior.OnNewTempBhtSwitched // (Native|Event|Public|BlueprintEvent) // @ game+0xcb2910
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTQ_SmartShoot
// Size: 0xb8 (Inherited: 0x80)
class UBTTQ_SmartShoot : public UGPBTTaskBase {
public:

	enum class EShootType ShootType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	int32_t BurstShootCount; // 0x84(0x04)
	int32_t BurstShootCountRange; // 0x88(0x04)
	float ContinuousShootTime; // 0x8c(0x04)
	float ContinuousShootRange; // 0x90(0x04)
	bool bIsAiming; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	float DelayShootTime; // 0x98(0x04)
	bool bShootAfterAimReachedTarget; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float AimMaxTime; // 0xa0(0x04)
	float AimAcceptAngle; // 0xa4(0x04)
	bool bTakeBullet; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	float OverrideHitRate; // 0xac(0x04)
	float FireVaildYawDiff; // 0xb0(0x04)
	float OutOffProneForbidFireTime; // 0xb4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BTTQ_UseSkill
// Size: 0x80 (Inherited: 0x80)
class UBTTQ_UseSkill : public UGPBTTaskBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BuffActions
// Size: 0x30 (Inherited: 0x30)
class UBuffActions : public UObject {
public:


	void STATIC_HandleBuffActionTrigger(struct UDFMCharacterBuffEntityBase* InBuffEntity, enum class EBuffActionTriggerType TriggerType); // Function DFMGameplay.BuffActions.HandleBuffActionTrigger // (Final|Native|Static|Public) // @ game+0x6203220
	void STATIC_CureSOLHealthBody(struct UDFMCharacterBuffEntityBase* InBuffEntity, int32_t Num); // Function DFMGameplay.BuffActions.CureSOLHealthBody // (Final|Native|Static|Public) // @ game+0x6203170
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffBaseClassTableManager
// Size: 0x90 (Inherited: 0x38)
class UDFMBuffBaseClassTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)
	struct TMap<uint32_t, struct UClass*> BuffEntityClassCache; // 0x40(0x50)

	void OnLoadBuffEntityClassFinish(struct TArray<struct FSoftObjectPath> Paths); // Function DFMGameplay.DFMBuffBaseClassTableManager.OnLoadBuffEntityClassFinish // (Final|Native|Public) // @ game+0x62032d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffMonitorConfigTableManager
// Size: 0x50 (Inherited: 0x38)
class UDFMBuffMonitorConfigTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)
	struct TArray<struct UClass*> BuffMonitorClassCache; // 0x40(0x10)

	void OnLoadClassFinish(struct TArray<struct FSoftObjectPath> Paths); // Function DFMGameplay.DFMBuffMonitorConfigTableManager.OnLoadClassFinish // (Final|Native|Public) // @ game+0x6203460
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BuffSubSystem
// Size: 0x38 (Inherited: 0x38)
class UBuffSubSystem : public UWorldSubsystem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.C202FlashDroneLightBase
// Size: 0x3a8 (Inherited: 0x378)
class AC202FlashDroneLightBase : public AActor {
public:

	struct TArray<struct FFlashDroneLightCurveConfig> FlashDroneLightCurveConfig; // 0x378(0x10)
	struct TArray<struct FFlashDroneLightSpotLightCurveConfig> FlashDroneLightSpotLightCurveConfig; // 0x388(0x10)
	char pad_398[0x10]; // 0x398(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CCTVInterface
// Size: 0x30 (Inherited: 0x30)
class UCCTVInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ChangeableContainer
// Size: 0x3a0 (Inherited: 0x378)
class AChangeableContainer : public AActor {
public:

	struct AActor* PreviewActor; // 0x378(0x08)
	struct AActor* CacheSpawnActor; // 0x380(0x08)
	char pad_388[0x8]; // 0x388(0x08)
	struct UBoxComponent* NavMeshComponent; // 0x390(0x08)
	enum class EChangeableContainerType CurType; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)

	void GenerateCorrespondingActorByEventId(struct TArray<uint64_t>& BattlefieldEventId, uint64_t Timestamp); // Function DFMGameplay.ChangeableContainer.GenerateCorrespondingActorByEventId // (Final|Native|Public|HasOutParms) // @ game+0x62077b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterFashionComponent_20V20
// Size: 0x128 (Inherited: 0x100)
class UCharacterFashionComponent_20V20 : public UActorComponent {
public:

	int32_t CurCamp; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct TArray<struct FCampFashionInfo> FashionInfos; // 0x108(0x10)
	struct FName FashionConfigName; // 0x118(0x08)
	struct AGPPlayerState* GPPlayerState; // 0x120(0x08)

	void OnUpdateTeamInfo(uint64_t Camp); // Function DFMGameplay.CharacterFashionComponent_20V20.OnUpdateTeamInfo // (Native|Public) // @ game+0xbd8ba0
	void OnRep_FashionConfigName(); // Function DFMGameplay.CharacterFashionComponent_20V20.OnRep_FashionConfigName // (Final|Native|Public) // @ game+0x6207f20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterHeroResourceDataSingleton
// Size: 0x270 (Inherited: 0x30)
class UCharacterHeroResourceDataSingleton : public UObject {
public:

	char pad_30[0x10]; // 0x30(0x10)
	struct TMap<struct FName, struct UGPAudioEventAsset*> AudioLoadingResourceMap; // 0x40(0x50)
	struct TMap<struct FName, struct UObject*> LoadedResourceMap; // 0x90(0x50)
	struct TMap<uint64_t, struct FCharacterResourceDataNameMap> CharacterResourceNameMap; // 0xe0(0x50)
	struct TMap<uint64_t, struct FCharacterHeroResourceDataMap> CharacterHeroAudioResourceMap; // 0x130(0x50)
	struct TMap<uint64_t, struct FCharacterHeroResourceDataMap> CharacterHeroFXResourceMap; // 0x180(0x50)
	struct TMap<uint64_t, struct FCharacterHeroResourceAnimDataMap> CharacterHeroAnimResourceMap; // 0x1d0(0x50)
	struct TMap<uint64_t, struct FCharacterHeroResourceAttachMeshDataMap> CharacterHeroAttachMeshResourceMap; // 0x220(0x50)

	void PreloadAudio(struct AGPCharacter* AvatarCharacter, struct FName AudioName); // Function DFMGameplay.CharacterHeroResourceDataSingleton.PreloadAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x62133b0
	void PreloadAllAudio(struct FName AudioName); // Function DFMGameplay.CharacterHeroResourceDataSingleton.PreloadAllAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x6213330
	struct FGPAudioFuturePlayingID PlayLocationAudio(struct AGPCharacter* AvatarCharacter, struct FName AudioName, struct FVector Location, struct AActor* SourceActor); // Function DFMGameplay.CharacterHeroResourceDataSingleton.PlayLocationAudio // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62131b0
	struct UFXResourceContainerComponent* PlayEffect(struct AGPCharacter* AvatarCharacter, struct FName EffectId, struct FTransform& PlayTransform, struct AActor* CreatorOwner, bool bUseObjectPool, struct USceneComponent* Socket, bool bIsHighFrequency, enum class EFXResourceCompPriority Priority, bool bEnableInstanceLimit); // Function DFMGameplay.CharacterHeroResourceDataSingleton.PlayEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6212ec0
	struct FGPAudioFuturePlayingID PlayActorAudio(struct AGPCharacter* AvatarCharacter, struct FName AudioName, struct AActor* TargetActor); // Function DFMGameplay.CharacterHeroResourceDataSingleton.PlayActorAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x6212db0
	void OnLoadedPreload(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.CharacterHeroResourceDataSingleton.OnLoadedPreload // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6212bb0
	struct FName GetResourcePathByName(struct FName Key, struct FName AvatarID); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetResourcePathByName // (Final|Native|Public|BlueprintCallable) // @ game+0x62129a0
	struct FName GetLocalResourcePath(struct FName Key); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetLocalResourcePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6212910
	struct FName GetLocalAudioResourcePath(struct FName Key); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetLocalAudioResourcePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6212880
	struct UCharacterHeroResourceDataSingleton* STATIC_GetInstance(struct UObject* WorldContextObject); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x62127d0
	bool GetCharacterResourceData(struct FAbilityPlayMontageResources& ResourceData, struct FName Key, struct AGPCharacter* GPCharacter, enum class EChracterPoseType Pose, bool IsSlidingTackle, enum class EWeaponItemType WeaponType); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetCharacterResourceData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62125b0
	struct FName GetAvatarSourceNameBySkillId(int32_t SkillId, struct AGPCharacter* GPCharacter); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAvatarSourceNameBySkillId // (Final|Native|Public|BlueprintCallable) // @ game+0x62124e0
	struct FName GetAvatarResourcePath(struct FName Key, struct AGPCharacter* GPCharacter); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAvatarResourcePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6212410
	struct FName GetAvatarAudioResourcePath(struct FName Key, struct AGPCharacter* GPCharacter); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAvatarAudioResourcePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6212340
	bool GetAvatarAttachMeshResourcePath(/*struct FName Key, struct AGPCharacter* GPCharacter, struct TSoftObjectPtr<USkeletalMesh>& MeshPath, struct TSoftObjectPtr<USkeletalMesh>& MeshPath3P, struct TSoftObjectPtr<UAnimSequenceBase>& AnimSeq*/); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAvatarAttachMeshResourcePath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6212080
	bool GetAvatarAttachMeshResourceInfo(struct FName Key, struct AGPCharacter* GPCharacter, struct FCharacterHeroResourceAttachMeshData& MeshInfo); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAvatarAttachMeshResourceInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6211f30
	struct FName GetAudioResourcePathByName(struct FName Key, struct FName AvatarID); // Function DFMGameplay.CharacterHeroResourceDataSingleton.GetAudioResourcePathByName // (Final|Native|Public|BlueprintCallable) // @ game+0x6211e60
	uint64_t AsyncLoadResource(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.CharacterHeroResourceDataSingleton.AsyncLoadResource // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6211d40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterSequenceAssemblyComponent
// Size: 0x198 (Inherited: 0x130)
class UCharacterSequenceAssemblyComponent : public UGPSequenceMannequinAssemblyComponent {
public:

	struct TArray<struct FName> FPPSceneComponents; // 0x130(0x10)
	struct FName FacialAnimationMeshComponent; // 0x140(0x08)
	char pad_148[0x50]; // 0x148(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterSignificanceComponent
// Size: 0x1e8 (Inherited: 0x178)
class UCharacterSignificanceComponent : public USignificanceBase {
public:

	char pad_178[0x70]; // 0x178(0x70)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIStaggerConfigDataAsset
// Size: 0x70 (Inherited: 0x38)
class UDFMAIStaggerConfigDataAsset : public UDataAsset {
public:

	struct FName DktdRlxStaggerConfigName; // 0x38(0x08)
	struct FName DktdAltStaggerConfigName; // 0x40(0x08)
	struct FName HdsnRlxStaggerConfigName; // 0x48(0x08)
	struct FName HdsnAltStaggerConfigName; // 0x50(0x08)
	struct FName SprintStaggerConfigName; // 0x58(0x08)
	struct FName DefaultStaggerConfigName; // 0x60(0x08)
	struct UDataTable* StaggerMotionConfigTable; // 0x68(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterStaggerComponent
// Size: 0x1b8 (Inherited: 0x100)
class UCharacterStaggerComponent : public UActorComponent {
public:

	struct TArray<struct FWeaponStaggerSequence> StaggerSequences; // 0x100(0x10)
	char pad_110[0x4]; // 0x110(0x04)
	struct TWeakObjectPtr<struct ADFMCharacter> LastCauser; // 0x114(0x08)
	float LeisureStaggerHurtThreshold; // 0x11c(0x04)
	float AlertStaggerHurtThreshold; // 0x120(0x04)
	float FightStaggerHurtThreshold; // 0x124(0x04)
	float StaggerCooldown; // 0x128(0x04)
	float StaggerInMoveThreshold; // 0x12c(0x04)
	char pad_130[0x50]; // 0x130(0x50)
	float StaggerTriggerProbability; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UStaggerAction* StaggerAction; // 0x188(0x08)
	char pad_190[0x4]; // 0x190(0x04)
	struct FName StaggerFxName; // 0x194(0x08)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UDFMAIStaggerConfigDataAsset* AIStaggerConfigData; // 0x1a0(0x08)
	char pad_1A8[0x10]; // 0x1a8(0x10)

	void SetStaggerable(bool Value); // Function DFMGameplay.CharacterStaggerComponent.SetStaggerable // (Final|Native|Public|BlueprintCallable) // @ game+0x6213780
	void SetDamageScale(float Value); // Function DFMGameplay.CharacterStaggerComponent.SetDamageScale // (Final|Native|Public|BlueprintCallable) // @ game+0x6213700
	struct UAnimMontage* RequestStagger(struct FName& StaggerMotionConfigName, bool bOverrideCurStagger, float TargetYawWorld, enum class ECharacterPart HitPart, enum class EWeaponStaggerType WeaponType); // Function DFMGameplay.CharacterStaggerComponent.RequestStagger // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6213470
	void OnServerTakeDamage(struct FDamageResultInfo& DamageResult, enum class ECharacterPart& HitPart); // Function DFMGameplay.CharacterStaggerComponent.OnServerTakeDamage // (Final|Native|Protected|HasOutParms) // @ game+0x6212c90
	bool IsStaggering(enum class ECharacterStaggerType StaggerType); // Function DFMGameplay.CharacterStaggerComponent.IsStaggering // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6212b20
	bool IsStaggerable(); // Function DFMGameplay.CharacterStaggerComponent.IsStaggerable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6212af0
	enum class EWeaponStaggerType STATIC_GetWeaponDamageType(struct ADFMWeapon* Weapon); // Function DFMGameplay.CharacterStaggerComponent.GetWeaponDamageType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6212a70
	float GetLastStaggerTimeTillNow(); // Function DFMGameplay.CharacterStaggerComponent.GetLastStaggerTimeTillNow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6212850
	float GetDamageScale(); // Function DFMGameplay.CharacterStaggerComponent.GetDamageScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62127a0
	void ClearStaggerCooldown(); // Function DFMGameplay.CharacterStaggerComponent.ClearStaggerCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x6211e40
	void ClearDamageSum(); // Function DFMGameplay.CharacterStaggerComponent.ClearDamageSum // (Final|Native|Public|BlueprintCallable) // @ game+0x6211e20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIDifficultyEquipTable
// Size: 0x98 (Inherited: 0x38)
class UAIDifficultyEquipTable : public UDataTableSystemManagerBase {
public:

	char pad_38[0x60]; // 0x38(0x60)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterTemplate
// Size: 0x30 (Inherited: 0x30)
class UCharacterTemplate : public UInterface {
public:


	void ResetToCharacterTemplate(struct FCharacterTemplateTable& templateRow); // Function DFMGameplay.CharacterTemplate.ResetToCharacterTemplate // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x6213630
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SerilizedBaseAIInfo
// Size: 0x40 (Inherited: 0x30)
class USerilizedBaseAIInfo : public UObject {
public:

	struct TArray<struct FPreloadBaseAIInfoInLevels> PreloadBaseAIInfoInLevelsArray; // 0x30(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CollisionAvoidanceAgentInterface
// Size: 0x30 (Inherited: 0x30)
class UCollisionAvoidanceAgentInterface : public UInterface {
public:


	void SetCollisionAvoidanceVelocity(struct FVector Vel); // Function DFMGameplay.CollisionAvoidanceAgentInterface.SetCollisionAvoidanceVelocity // (Native|Public|HasDefaults) // @ game+0x6218db0
	struct FVector GetCollisionAvoidanceAgentVelocity(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentVelocity // (Native|Public|HasDefaults) // @ game+0x10366b0
	float GetCollisionAvoidanceAgentTimeHorizon(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentTimeHorizon // (Native|Public) // @ game+0x174ef30
	float GetCollisionAvoidanceAgentRadius(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentRadius // (Native|Public) // @ game+0x1758d80
	float GetCollisionAvoidanceAgentNeighborDist(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentNeighborDist // (Native|Public) // @ game+0x62188c0
	float GetCollisionAvoidanceAgentMaxSpeed(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentMaxSpeed // (Native|Public) // @ game+0x6218890
	struct FVector GetCollisionAvoidanceAgentLocation(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentLocation // (Native|Public|HasDefaults) // @ game+0x6218850
	float GetCollisionAvoidanceAgentHeight(); // Function DFMGameplay.CollisionAvoidanceAgentInterface.GetCollisionAvoidanceAgentHeight // (Native|Public) // @ game+0x1767090
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PawnCollisonAvoidanceAgent
// Size: 0x40 (Inherited: 0x30)
class UPawnCollisonAvoidanceAgent : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)
	struct APawn* Pawn; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ORCAAvoidance
// Size: 0x100 (Inherited: 0x38)
class UORCAAvoidance : public UWorldSubsystem {
public:

	char pad_38[0xa8]; // 0x38(0xa8)
	struct TArray<struct UPawnCollisonAvoidanceAgent*> PlayerAgents; // 0xe0(0x10)
	char pad_F0[0x10]; // 0xf0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ContainerSpawnPoint
// Size: 0x428 (Inherited: 0x378)
class AContainerSpawnPoint : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct AInteractorBase* PreviewActor; // 0x388(0x08)
	uint32_t boxId; // 0x390(0x04)
	uint32_t BoxLevel; // 0x394(0x04)
	enum class ELootLimitType LootLimit; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)
	uint64_t EventIDForSpawn; // 0x3a0(0x08)
	struct FHighValueBoxInfo HighValueBoxInfo; // 0x3a8(0x60)
	bool bSpawnerOnlyOnLevel2; // 0x408(0x01)
	char pad_409[0x7]; // 0x409(0x07)
	struct UBoxComponent* NavMeshComponent; // 0x410(0x08)
	bool bUpdateNavMesh; // 0x418(0x01)
	char pad_419[0x7]; // 0x419(0x07)
	struct UClass* InteractorClass; // 0x420(0x08)

	void OnSolTimelineEventIdChange(struct TArray<uint64_t>& SOLEventIdArray); // Function DFMGameplay.ContainerSpawnPoint.OnSolTimelineEventIdChange // (Final|Native|Public|HasOutParms) // @ game+0x6218910
	struct FString GetUniqueName(); // Function DFMGameplay.ContainerSpawnPoint.GetUniqueName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetSmallAreaCustomName(); // Function DFMGameplay.ContainerSpawnPoint.GetSmallAreaCustomName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct UClass* GetPreviewActorClass(); // Function DFMGameplay.ContainerSpawnPoint.GetPreviewActorClass // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetOpenBoxTypeName(); // Function DFMGameplay.ContainerSpawnPoint.GetOpenBoxTypeName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetMapName(); // Function DFMGameplay.ContainerSpawnPoint.GetMapName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetBigAreaName(); // Function DFMGameplay.ContainerSpawnPoint.GetBigAreaName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnCreate(struct AInteractorBase* Interactor); // Function DFMGameplay.ContainerSpawnPoint.BP_OnCreate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CountDownVolumeActor
// Size: 0x3e0 (Inherited: 0x378)
class ACountDownVolumeActor : public AActor {
public:

	enum class ECountDownPriority CountdownType; // 0x378(0x01)
	bool UseBox; // 0x379(0x01)
	bool IsServer; // 0x37a(0x01)
	bool LeaveResetCountDown; // 0x37b(0x01)
	float CountDownTime; // 0x37c(0x04)
	struct FText CountDownTitle; // 0x380(0x18)
	struct UShapeComponent* CollisionComponent; // 0x398(0x08)
	struct TArray<struct FSoftObjectPath> AlarmStartAudioPaths; // 0x3a0(0x10)
	struct TArray<struct FSoftObjectPath> AlarmStopAudioPaths; // 0x3b0(0x10)
	bool bIsEnable; // 0x3c0(0x01)
	char pad_3C1[0x1f]; // 0x3c1(0x1f)

	void ServerSetVolumeEnable(bool bEnable); // Function DFMGameplay.CountDownVolumeActor.ServerSetVolumeEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x6218d20
	void OnVolumeEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.CountDownVolumeActor.OnVolumeEndOverlap // (Final|Native|Public) // @ game+0x6218be0
	void OnVolumeBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.CountDownVolumeActor.OnVolumeBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x62189e0
	void OnRep_SetVolumeEnable(); // Function DFMGameplay.CountDownVolumeActor.OnRep_SetVolumeEnable // (Final|Native|Protected) // @ game+0x62188f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CrashableDrone
// Size: 0x460 (Inherited: 0x378)
class ACrashableDrone : public AActor {
public:

	char pad_378[0x18]; // 0x378(0x18)
	float CruiseSpeed; // 0x390(0x04)
	float Range; // 0x394(0x04)
	int64_t ExplodeAttackerValueId; // 0x398(0x08)
	struct TArray<struct UClass*> DamageEffect; // 0x3a0(0x10)
	float AABulletIntervalMax; // 0x3b0(0x04)
	float AABulletIntervalMin; // 0x3b4(0x04)
	float AABulletAngle; // 0x3b8(0x04)
	float DropRollValuePerSecond; // 0x3bc(0x04)
	struct FVector BounceVelocity; // 0x3c0(0x0c)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct UGPSkeletalMeshComponent* SkeletalMeshComponent; // 0x3d0(0x08)
	struct UProjectileMovementComponent* ProjectileMovementComponent; // 0x3d8(0x08)
	struct USkeletalMesh* NormalDrone; // 0x3e0(0x08)
	struct USkeletalMesh* CrashedDrone; // 0x3e8(0x08)
	struct UClass* DroneContainer; // 0x3f0(0x08)
	struct FVector DestLocation; // 0x3f8(0x0c)
	struct FVector CruiseVelocity; // 0x404(0x0c)
	struct FVector ProjectileVelocity; // 0x410(0x0c)
	enum class ECrashableDroneState DroneState; // 0x41c(0x01)
	char pad_41D[0x3]; // 0x41d(0x03)
	float DamageToleranceTime; // 0x420(0x04)
	char pad_424[0x14]; // 0x424(0x14)
	struct ASOLTimeLineEventActor* EventActor; // 0x438(0x08)
	struct AActor* DroneContainerActor; // 0x440(0x08)
	struct ADroneFlightPathSpline* FlightPath; // 0x448(0x08)
	float CruiseTime; // 0x450(0x04)
	char pad_454[0xc]; // 0x454(0x0c)

	struct AActor* SpawnDroneContainer(); // Function DFMGameplay.CrashableDrone.SpawnDroneContainer // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnAntiAircraftBullet(); // Function DFMGameplay.CrashableDrone.SpawnAntiAircraftBullet // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SetDestinationAndFlightPath(struct FVector Dest, struct ADroneFlightPathSpline* Spline); // Function DFMGameplay.CrashableDrone.SetDestinationAndFlightPath // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x621e630
	void RegisterDroneInteract(struct ASOLTimeLineEventActor* TLActor); // Function DFMGameplay.CrashableDrone.RegisterDroneInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x621e510
	void OnRep_DroneState(); // Function DFMGameplay.CrashableDrone.OnRep_DroneState // (Final|Native|Public) // @ game+0x621e1e0
	void OnLootSearchDone(struct AInventoryPickup_Container* OpenBox); // Function DFMGameplay.CrashableDrone.OnLootSearchDone // (Final|Native|Public) // @ game+0x621dcc0
	void IntoLanded(); // Function DFMGameplay.CrashableDrone.IntoLanded // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void IntoDamaged(); // Function DFMGameplay.CrashableDrone.IntoDamaged // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void IntoCrashed(); // Function DFMGameplay.CrashableDrone.IntoCrashed // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CustomizeNavLinker
// Size: 0x388 (Inherited: 0x378)
class ACustomizeNavLinker : public AActor {
public:

	enum class ENavLinkType LinkType; // 0x378(0x01)
	bool IsTwoWay; // 0x379(0x01)
	char pad_37A[0x6]; // 0x37a(0x06)
	struct ULineBatchComponent* LineComp; // 0x380(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DamageValidateRule_CheckCharacterPose
// Size: 0x78 (Inherited: 0x60)
class UDamageValidateRule_CheckCharacterPose : public UDamageValidationRuleBase {
public:

	bool bValidateAIHeadAbortOnlyLog; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct TArray<enum class ECharacterSnatshotBasePose> IgnoreValidatePose; // 0x68(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DataStatisticsBaseComponent
// Size: 0x1d0 (Inherited: 0x100)
class UDataStatisticsBaseComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct TArray<struct ADFMCharacter*> PlayerList; // 0x108(0x10)
	struct TArray<struct FDamageInfos> DamageData; // 0x118(0x10)
	float TeamDamageValue; // 0x128(0x04)
	char pad_12C[0xa4]; // 0x12c(0xa4)

	void SetDamageInfo(struct FDamageInfo& DamageInfo); // Function DFMGameplay.DataStatisticsBaseComponent.SetDamageInfo // (Final|Native|Protected|HasOutParms) // @ game+0x621e590
	void OnDamageTake(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DataStatisticsBaseComponent.OnDamageTake // (Native|Public|HasOutParms) // @ game+0x621dbf0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadbodyAmmoBox
// Size: 0x480 (Inherited: 0x378)
class ADeadbodyAmmoBox : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct FDeadbodyAmmoBoxConfig Config; // 0x388(0x50)
	struct FText Tips; // 0x3d8(0x18)
	float DistanceShowUITips; // 0x3f0(0x04)
	uint32_t IncreaseAmmoBuffID; // 0x3f4(0x04)
	uint32_t ExtraBuffID; // 0x3f8(0x04)
	char pad_3FC[0x4]; // 0x3fc(0x04)
	struct UAmmoBoxComponent* AmmoBoxComp; // 0x400(0x08)
	struct UStaticMeshComponent* StaticMesh; // 0x408(0x08)
	int32_t TeamId; // 0x410(0x04)
	struct TWeakObjectPtr<struct AGPCharacterBase> Killer; // 0x414(0x08)
	struct TWeakObjectPtr<struct AGPCharacterBase> OwnerChar; // 0x41c(0x08)
	char pad_424[0x54]; // 0x424(0x54)
	enum class ETacticalEquipmentMarkerType TacticalEquipmentMarker; // 0x478(0x01)
	char pad_479[0x7]; // 0x479(0x07)

	void OnSimulateEnd(); // Function DFMGameplay.DeadbodyAmmoBox.OnSimulateEnd // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0xbd2900
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DeadbodyAmmoBox.OnOverlapBegin // (Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x621dd40
	struct FVector GetInitVelocity(); // Function DFMGameplay.DeadbodyAmmoBox.GetInitVelocity // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x621d8b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadbodyAmmoBoxSubsystem
// Size: 0x48 (Inherited: 0x38)
class UDeadbodyAmmoBoxSubsystem : public UWorldSubsystem {
public:

	struct TArray<struct ADeadbodyAmmoBox*> AmmoBoxArr; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadBodyAmmoComponent
// Size: 0x170 (Inherited: 0x100)
class UDeadBodyAmmoComponent : public UActorComponent {
public:

	enum class EWeaponAddAmmoType AddAmmoType; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float AddAmmoValue; // 0x104(0x04)
	float TriggerDistance; // 0x108(0x04)
	char MaxTriggerTimes; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	float TipsDuration; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UActorComponent* CreatedComp; // 0x118(0x08)
	char pad_120[0x50]; // 0x120(0x50)

	void OnOverlapedCharacter(struct AActor* OtherActor); // Function DFMGameplay.DeadBodyAmmoComponent.OnOverlapedCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x621e140
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DeadBodyAmmoComponent.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x621df40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadBodyDrug
// Size: 0x390 (Inherited: 0x378)
class ADeadBodyDrug : public AActor {
public:

	struct TArray<uint64_t> GivenCharacters; // 0x378(0x10)
	int32_t UseTimes; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)

	void OnRep_GivenCharacters(); // Function DFMGameplay.DeadBodyDrug.OnRep_GivenCharacters // (Final|Native|Protected) // @ game+0x621e200
	void OnCliendDestroy(); // Function DFMGameplay.DeadBodyDrug.OnCliendDestroy // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DeadZoneVolumeActor
// Size: 0x388 (Inherited: 0x378)
class ADeadZoneVolumeActor : public AActor {
public:

	struct USphereComponent* CollisionSphere; // 0x378(0x08)
	bool OnlyKillAI; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)

	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DeadZoneVolumeActor.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x621d9f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DebugLogGenerator
// Size: 0x40 (Inherited: 0x38)
class UDebugLogGenerator : public UGameInstanceSubsystem {
public:

	char pad_38[0x8]; // 0x38(0x08)

	struct UDebugLogGenerator* STATIC_Get(struct UWorld* WorldContextObject); // Function DFMGameplay.DebugLogGenerator.Get // (Final|Native|Static|Public) // @ game+0x621d830
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DebugTextActor
// Size: 0x388 (Inherited: 0x378)
class ADebugTextActor : public AActor {
public:

	struct UTextRenderComponent* TextRender; // 0x378(0x08)
	struct UBillboardComponent* SpriteComponent; // 0x380(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesBatchSetting
// Size: 0x58 (Inherited: 0x30)
class UDesBatchSetting : public UObject {
public:

	/*struct TSoftObjectPtr<UDataTable>*/char DesBatchPrimitiveHLODParentDataTablePtr[0x28]; // 0x30(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesBatchRuntimeComponent
// Size: 0x148 (Inherited: 0x100)
class UDesBatchRuntimeComponent : public UActorComponent {
public:

	/*struct TSoftObjectPtr<UDataTable>*/char DesBatchPrimitiveHLODParentDataTablePtr[0x28]; // 0x100(0x28)
	struct UDesPrimitiveHLODDataAsset* DesBatchPrimitiveHLODParentDataAsset; // 0x128(0x08)
	struct TArray<float> HLODDrawDistances; // 0x130(0x10)
	char pad_140[0x8]; // 0x140(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesBatchSubsystem
// Size: 0x2d0 (Inherited: 0x38)
class UDesBatchSubsystem : public UWorldSubsystem {
public:

	struct TArray<struct UDFMDesStaticMeshComponent*> RegisteredDSMCs; // 0x38(0x10)
	char pad_48[0x190]; // 0x48(0x190)
	struct AActor* LevelBatchActor; // 0x1d8(0x08)
	struct TMap<struct FString, struct AActor*> LevelBatchActors; // 0x1e0(0x50)
	char pad_230[0xa0]; // 0x230(0xa0)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesCraterMeshComponent
// Size: 0x800 (Inherited: 0x7f0)
class UDesCraterMeshComponent : public UStaticMeshComponent {
public:

	char pad_7F0[0x10]; // 0x7f0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesTerrainAreaComponent
// Size: 0x2a0 (Inherited: 0x240)
class UDesTerrainAreaComponent : public USceneComponent {
public:

	bool bIsGlobalArea; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	struct FName SectorID; // 0x244(0x08)
	struct FVector BoxExtent; // 0x24c(0x0c)
	float SphereRadius; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	/*struct TSoftObjectPtr<UDesTerrainLevelArea>*/char LevelAreaDataPtr[0x28]; // 0x260(0x28)
	struct UDesTerrainLevelArea* RuntimeAreaData; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesTerrainRuntimeComponent
// Size: 0x168 (Inherited: 0x100)
class UDesTerrainRuntimeComponent : public UActorComponent {
public:

	struct TMap<int32_t, struct ADesTerrainCraterActor*> ExistedCraters; // 0x100(0x50)
	struct TArray<struct UDesCraterMeshComponent*> ClientOnlyCraters; // 0x150(0x10)
	char pad_160[0x8]; // 0x160(0x08)

	void MultiTryCreateCraterMesh(struct FName SectorID, struct FVector InRelativeLocation, int32_t CraterID); // Function DFMGameplay.DesTerrainRuntimeComponent.MultiTryCreateCraterMesh // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x621d8f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesTerrainGameplayComponent
// Size: 0x220 (Inherited: 0x100)
class UDesTerrainGameplayComponent : public UActorComponent {
public:

	char pad_100[0xa8]; // 0x100(0xa8)
	/*struct UDestructibleItemDamagePrest**/char CraterDamagePreset[0x8]; // 0x1a8(0x08)
	struct UDesTerrainRuntimeComponent* CraterRuntimeComp; // 0x1b0(0x08)
	struct UDesCraterSubsystem* DesCraterSubsystem; // 0x1b8(0x08)
	struct TArray<struct FDesTerrainCraterRepInfo> ClientCraterArray; // 0x1c0(0x10)
	char pad_1D0[0x50]; // 0x1d0(0x50)

	void OnServerPostRadialDamage(struct FDamageSourceInfo& DamageSource, struct TArray<struct FDamageResultInfo>& DamageResults); // Function DFMGameplay.DesTerrainGameplayComponent.OnServerPostRadialDamage // (Final|Native|Public|HasOutParms) // @ game+0x621e220
	void OnRep_ClientCraterArray(); // Function DFMGameplay.DesTerrainGameplayComponent.OnRep_ClientCraterArray // (Final|Native|Private) // @ game+0x621e1c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesTerrainRuntimeActor
// Size: 0x3d8 (Inherited: 0x378)
class ADesTerrainRuntimeActor : public AActor {
public:

	struct UDesTerrainRuntimeComponent* RuntimeComp; // 0x378(0x08)
	struct UDesTerrainGameplayComponent* GameplayComp; // 0x380(0x08)
	struct TMap<int32_t, struct ADesTerrainCraterActor*> ExistedCraters; // 0x388(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesTerrainCraterActor
// Size: 0x380 (Inherited: 0x378)
class ADesTerrainCraterActor : public AActor {
public:

	struct UStaticMeshComponent* CraterMeshComp; // 0x378(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesCraterSubsystem
// Size: 0x148 (Inherited: 0x38)
class UDesCraterSubsystem : public UWorldSubsystem {
public:

	struct TMap<int32_t, struct FDesCraterRuntimeConfig> RepColidCraterConfig; // 0x38(0x50)
	struct TMap<int32_t, struct FDesCraterRuntimeConfig> ClientCraterConfig; // 0x88(0x50)
	struct TMap<struct FName, struct UDesTerrainAreaComponent*> RuntimeAreas; // 0xd8(0x50)
	char pad_128[0x10]; // 0x128(0x10)
	struct UDesTerrainRuntimeComponent* RuntimeComp; // 0x138(0x08)
	char pad_140[0x8]; // 0x140(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructionCraterConfigManager
// Size: 0x40 (Inherited: 0x38)
class UDestructionCraterConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesAllPartEdgeAsset
// Size: 0x48 (Inherited: 0x38)
class UDesAllPartEdgeAsset : public UDataAsset {
public:

	struct TArray<struct FDesPartEdgeData> Parts; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesEdgeModelComponent
// Size: 0x240 (Inherited: 0x240)
class UDesEdgeModelComponent : public USceneComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesEdgeModelDataManager
// Size: 0x48 (Inherited: 0x38)
class UDesEdgeModelDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesEdgeDecalDataManager
// Size: 0x40 (Inherited: 0x38)
class UDesEdgeDecalDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesInstancedStaticMeshComponent
// Size: 0x9f0 (Inherited: 0x9a8)
class UDesInstancedStaticMeshComponent : public UInstancedStaticMeshComponent {
public:

	char pad_9A8[0x18]; // 0x9a8(0x18)
	/*struct TArray<struct TSoftObjectPtr<ABreakableItemBase>>*/char TargetActors[0x10]; // 0x9c0(0x10)
	struct TArray<struct FName> TargetActorCompNames; // 0x9d0(0x10)
	char pad_9E0[0x10]; // 0x9e0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesEdgeModelMeshComponent
// Size: 0x9d0 (Inherited: 0x9a8)
class UDesEdgeModelMeshComponent : public UInstancedStaticMeshComponent {
public:

	int32_t EdgeModelType; // 0x9a8(0x04)
	char pad_9AC[0x24]; // 0x9ac(0x24)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleAudioDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDestructibleAudioDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleFoliageDataManager
// Size: 0x40 (Inherited: 0x38)
class UDestructibleFoliageDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleFXDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDestructibleFXDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleItemDamagePrest
// Size: 0x88 (Inherited: 0x38)
class UDestructibleItemDamagePrest : public UDataAsset {
public:

	/*struct TMap<struct FName, struct FDestructibleItemDamageModification>*/char ModificationArray[0x50]; // 0x38(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleItemPhxPreset
// Size: 0x798 (Inherited: 0x38)
class UDestructibleItemPhxPreset : public UDataAsset {
public:

	struct FBreakableRigidPhysicsData RigidPhysicsData; // 0x38(0x10)
	struct FBreakablePhysicsData PhysicsData; // 0x48(0x750)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesPrimitiveHLODDataAsset
// Size: 0x48 (Inherited: 0x38)
class UDesPrimitiveHLODDataAsset : public UDataAsset {
public:

	struct TArray<struct FDesPrimitiveHLODPair> Pairs; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DesSkeletalMeshComponentPool
// Size: 0x88 (Inherited: 0x30)
class UDesSkeletalMeshComponentPool : public UObject {
public:

	struct TMap<struct USkeletalMesh*, struct FDSMCPool> WorldDSCPools; // 0x30(0x50)
	char pad_80[0x8]; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructionAnimPoolDataManager
// Size: 0x40 (Inherited: 0x38)
class UDestructionAnimPoolDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFCommercializationComponent
// Size: 0x478 (Inherited: 0x478)
class UDFCommercializationComponent : public UGPCommercializationComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFElevatorMovementComponent
// Size: 0x140 (Inherited: 0x140)
class UDFElevatorMovementComponent : public UMovementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFFlameComponent
// Size: 0x430 (Inherited: 0x100)
class UDFFlameComponent : public UActorComponent {
public:

	char pad_100[0x18]; // 0x100(0x18)
	struct UFXResourceContainerComponent* FlameLoopFX; // 0x118(0x08)
	struct AActor* Owner; // 0x120(0x08)
	struct USceneComponent* Socket; // 0x128(0x08)
	struct FName SocketName; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)
	struct FTransform Trans; // 0x140(0x30)
	bool bFiring; // 0x170(0x01)
	char pad_171[0x3]; // 0x171(0x03)
	float CurrentBurnScaleRange; // 0x174(0x04)
	float FireMaxDistance; // 0x178(0x04)
	float FireFXDistance; // 0x17c(0x04)
	struct FName FloorBurnFXName; // 0x180(0x08)
	struct FName FlameLoopFXResourceID; // 0x188(0x08)
	struct FTransform LoopFXTransform; // 0x190(0x30)
	struct UCurveFloat* LoopFadein; // 0x1c0(0x08)
	char pad_1C8[0x10]; // 0x1c8(0x10)
	struct UCurveFloat* LoopFadeout; // 0x1d8(0x08)
	char pad_1E0[0x8]; // 0x1e0(0x08)
	struct UCurveFloat* LoopMaxDistance; // 0x1e8(0x08)
	char pad_1F0[0x8]; // 0x1f0(0x08)
	struct UCurveFloat* LoopFXScale; // 0x1f8(0x08)
	struct UGPAudioEventAsset* FireAudio; // 0x200(0x08)
	struct UGPAudioEventAsset* FireLoopAudio; // 0x208(0x08)
	struct UGPAudioEventAsset* StopFireAudio; // 0x210(0x08)
	float DamageCheckDelta; // 0x218(0x04)
	char FlameBuffTriggerTimes; // 0x21c(0x01)
	char pad_21D[0x3]; // 0x21d(0x03)
	float FlameRadius; // 0x220(0x04)
	float FirePointFlameRadius; // 0x224(0x04)
	float OffsetRate; // 0x228(0x04)
	int32_t MaxFlameStopGrowRaycastCount; // 0x22c(0x04)
	int32_t FlameBuffId; // 0x230(0x04)
	int32_t PainBuffId; // 0x234(0x04)
	int32_t TagBuffId; // 0x238(0x04)
	int32_t DamageId; // 0x23c(0x04)
	uint32_t BurnVolumeCDBuff; // 0x240(0x04)
	enum class ECharacterPart PainPart; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	struct FName Burn1PFx; // 0x248(0x08)
	int32_t MaxNum; // 0x250(0x04)
	float FlameVolumeGap; // 0x254(0x04)
	float FlameVolumeGap_Mobile; // 0x258(0x04)
	float FlameVolumeRadius; // 0x25c(0x04)
	float FlameVolumeRadius_Mobile; // 0x260(0x04)
	struct FName BurnDecalId; // 0x264(0x08)
	struct FVector BurnScale; // 0x26c(0x0c)
	struct FVector BurnDecalOffset; // 0x278(0x0c)
	float BurnVolumeDur; // 0x284(0x04)
	float BurnVolumeInterval; // 0x288(0x04)
	float DropFireHeight; // 0x28c(0x04)
	float DropFireHeight_Mobile; // 0x290(0x04)
	struct FFloatRange FloorFireRange; // 0x294(0x10)
	struct FName ScreenPostFXName; // 0x2a4(0x08)
	char pad_2AC[0x184]; // 0x2ac(0x184)

	void TryProcessFlameBurnDamage(struct AActor* Cha, struct FHitResult Hit); // Function DFMGameplay.DFFlameComponent.TryProcessFlameBurnDamage // (Final|Native|Protected|BlueprintCallable) // @ game+0x6222a30
	void ServerStopFlame(); // Function DFMGameplay.DFFlameComponent.ServerStopFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x6222990
	void ServerStartFlame(struct AActor* InOwner, struct USceneComponent* InSocket, struct FName InSocketName, struct FTransform InTrans); // Function DFMGameplay.DFFlameComponent.ServerStartFlame // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62227f0
	void OnRep_bFiring(); // Function DFMGameplay.DFFlameComponent.OnRep_bFiring // (Final|Native|Protected) // @ game+0x62227d0
	void BroadcastMsg_StopBurnVolume(int32_t Key); // Function DFMGameplay.DFFlameComponent.BroadcastMsg_StopBurnVolume // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x35f1870
	void BroadcastMsg_PlayBurnVolume(int32_t Key, struct FVector Location, struct FVector Normal); // Function DFMGameplay.DFFlameComponent.BroadcastMsg_PlayBurnVolume // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x62224a0
	void BroadcastMsg_PlayBurnDecal(struct FHitResult Hit, float ScaleRange); // Function DFMGameplay.DFFlameComponent.BroadcastMsg_PlayBurnDecal // (Net|Native|Event|NetMulticast|Protected) // @ game+0x6222340
	void BroadcastMsg_Debug(struct FHitResult Hit, float ScaleRange); // Function DFMGameplay.DFFlameComponent.BroadcastMsg_Debug // (Net|Native|Event|NetMulticast|Protected) // @ game+0x62221e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDDisplayInputActionHandler
// Size: 0x210 (Inherited: 0x30)
class UDFHDDisplayInputActionHandler : public UObject {
public:

	char pad_30[0x1e0]; // 0x30(0x1e0)

	struct FString GetStringFromActionBindings(); // Function DFMGameplay.DFHDDisplayInputActionHandler.GetStringFromActionBindings // (Final|Native|Public) // @ game+0x6229d70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDDisplayInputActionManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDDisplayInputActionManager : public UGameInstanceSubsystem {
public:

	struct UDFHDDisplayInputActionHandler* ActionHandler; // 0x38(0x08)

	void OnInputGateChanged(bool bBlocked); // Function DFMGameplay.DFHDDisplayInputActionManager.OnInputGateChanged // (Final|Native|Public) // @ game+0x622a550
	struct UDFHDDisplayInputActionManager* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.DFHDDisplayInputActionManager.Get // (Final|Native|Static|Public) // @ game+0x62281e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDInputSettings
// Size: 0x90 (Inherited: 0x30)
class UDFHDInputSettings : public UObject {
public:

	struct TArray<struct FInputActionKeyMapping> DisplayActionMappings; // 0x30(0x10)
	struct TMap<struct FName, struct FText> ActionDisplayNames; // 0x40(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyIconDataTableManager
// Size: 0x48 (Inherited: 0x38)
class UDFHDKeyIconDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	int32_t STATIC_GetRowKeyInfoAxisKeyDir(struct FKeyMappingsDataTableRow InRow); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetRowKeyInfoAxisKeyDir // (Final|Native|Static|Public) // @ game+0x6229820
	int32_t STATIC_GetRowKeyInfo_SecondAxisKeyDir(struct FKeyMappingsDataTableRow InRow); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetRowKeyInfo_SecondAxisKeyDir // (Final|Native|Static|Public) // @ game+0x6229950
	struct FText STATIC_GetNameByKeyName(struct FName KeyName); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetNameByKeyName // (Final|Native|Static|Public) // @ game+0x62294d0
	struct FText STATIC_GetNameByFKey(struct FKey Key); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetNameByFKey // (Final|Native|Static|Public) // @ game+0x6229390
	struct FSoftObjectPath STATIC_GetKeyIconPathByKeyName(struct FName KeyName, int32_t dir, enum class EKeyIconType KeyIconType); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetKeyIconPathByKeyName // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x6229280
	struct FSoftObjectPath STATIC_GetKeyIconPathByFKey(struct FKey Key, int32_t dir, enum class EKeyIconType KeyIconType); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetKeyIconPathByFKey // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x6229100
	struct FSoftObjectPath STATIC_GetKeyIconPath(struct FKeyIconDataTableRow Row, enum class EKeyIconType KeyIconType); // Function DFMGameplay.DFHDKeyIconDataTableManager.GetKeyIconPath // (Final|Native|Static|Public|HasDefaults) // @ game+0x6228e00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyMappingsDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDKeyMappingsDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyMappingsGMDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDKeyMappingsGMDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyMappingsGamepadDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDKeyMappingsGamepadDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyMappingsBHDDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDKeyMappingsBHDDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeyMappingsBHDGMDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDKeyMappingsBHDGMDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDMouseCursorManager
// Size: 0x140 (Inherited: 0x38)
class UDFHDMouseCursorManager : public UGameInstanceSubsystem {
public:

	struct APlayerController* PlayerController; // 0x38(0x08)
	bool bIsAppHasFocus; // 0x40(0x01)
	bool bEnableTickCenterizeInvisibleMouse; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	int32_t NumOfRequireDisableMouseShowHide; // 0x44(0x04)
	struct FIntPoint TickGetCursorPosition; // 0x48(0x08)
	struct FVector2D ViewportSize; // 0x50(0x08)
	struct FVector2D ViewportCenter; // 0x58(0x08)
	float TickCenterizeMouseCursorCount; // 0x60(0x04)
	float TickCenterizeMouseCursorInterval; // 0x64(0x04)
	float CenterizeMouseCursorTriggerLimit; // 0x68(0x04)
	struct FVector2D CenterizeMouseCursorTriggerSize; // 0x6c(0x08)
	char pad_74[0x4]; // 0x74(0x04)
	struct TArray<struct FMouseInteractHUDDataTableRow> MouseInteractHUDTable; // 0x78(0x10)
	struct TArray<struct FMouseInteractHUDDataTableRow> MouseInteractSafeHouseUITable; // 0x88(0x10)
	struct TMap<struct FString, int32_t> MouseInteractHUDShowMap; // 0x98(0x50)
	struct TMap<struct FString, int32_t> MouseInteractSafeHouseUIShowMap; // 0xe8(0x50)
	struct UGameFlowDelegates* GameFlowDelegates; // 0x138(0x08)

	struct APlayerController* UpdateCachedPlayerController(); // Function DFMGameplay.DFHDMouseCursorManager.UpdateCachedPlayerController // (Final|Native|Private) // @ game+0x622e8a0
	void TickCenterizeMouseCursor(float DeltaTime); // Function DFMGameplay.DFHDMouseCursorManager.TickCenterizeMouseCursor // (Final|Native|Public) // @ game+0x622e820
	void SetMouseCursorShowHide(bool bEnable); // Function DFMGameplay.DFHDMouseCursorManager.SetMouseCursorShowHide // (Final|Native|Public|BlueprintCallable) // @ game+0x622e790
	void SetIsAppHasFocus(bool bHasFocus); // Function DFMGameplay.DFHDMouseCursorManager.SetIsAppHasFocus // (Final|Native|Private) // @ game+0x622e700
	void SetCenterizeInvisibleMouseCursor(bool bEnable); // Function DFMGameplay.DFHDMouseCursorManager.SetCenterizeInvisibleMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x622e670
	void OnEnterGameFlow(enum class EGameFlowStageType GameFlowStageType); // Function DFMGameplay.DFHDMouseCursorManager.OnEnterGameFlow // (Final|Native|Private) // @ game+0x622e170
	struct UDFHDMouseCursorManager* STATIC_Get(struct UObject* GameInstanceContext); // Function DFMGameplay.DFHDMouseCursorManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x622d860
	bool CheckCachedPlayerController(); // Function DFMGameplay.DFHDMouseCursorManager.CheckCachedPlayerController // (Final|Native|Private) // @ game+0x622d6c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDMouseInteractHUDDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDMouseInteractHUDDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDMouseInteractSafeHouseUIDataTableManager
// Size: 0x40 (Inherited: 0x38)
class UDFHDMouseInteractSafeHouseUIDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDPlayerInput
// Size: 0x6b8 (Inherited: 0x670)
class UDFHDPlayerInput : public UHDPlayerInput {
public:

	char pad_670[0x10]; // 0x670(0x10)
	float DefaultHFOV; // 0x680(0x04)
	float DefaultVFOV; // 0x684(0x04)
	float MDV; // 0x688(0x04)
	float VehicleMDV; // 0x68c(0x04)
	float DefaultVMDRadians; // 0x690(0x04)
	float DefaultVehicleMDVRadians; // 0x694(0x04)
	float MinMDV; // 0x698(0x04)
	float AdjustRate; // 0x69c(0x04)
	bool bUsingGamepadJustNow; // 0x6a0(0x01)
	char pad_6A1[0x7]; // 0x6a1(0x07)
	struct TArray<struct FKey> PressingKeys; // 0x6a8(0x10)

	float VehicleSensitivityRealTimeRatio(); // Function DFMGameplay.DFHDPlayerInput.VehicleSensitivityRealTimeRatio // (Final|Native|Public) // @ game+0x622e8d0
	float SensitivityRealTime(); // Function DFMGameplay.DFHDPlayerInput.SensitivityRealTime // (Final|Native|Public) // @ game+0x622e4f0
	float SensitivityHip(); // Function DFMGameplay.DFHDPlayerInput.SensitivityHip // (Final|Native|Public) // @ game+0x622e4c0
	float SensitivityByWeapon(); // Function DFMGameplay.DFHDPlayerInput.SensitivityByWeapon // (Final|Native|Public) // @ game+0x622e490
	void RefreshSensitivity(); // Function DFMGameplay.DFHDPlayerInput.RefreshSensitivity // (Final|Native|Public) // @ game+0x622e470
	bool IsUsingGamepad(); // Function DFMGameplay.DFHDPlayerInput.IsUsingGamepad // (Final|Native|Public) // @ game+0x622e120
	bool IsPlayerFPP(); // Function DFMGameplay.DFHDPlayerInput.IsPlayerFPP // (Final|Native|Public) // @ game+0x622dfa0
	bool IsKeyPressing(struct FKey InKey); // Function DFMGameplay.DFHDPlayerInput.IsKeyPressing // (Final|Native|Public) // @ game+0x622deb0
	void InitVehicleDefaultSensitivity(); // Function DFMGameplay.DFHDPlayerInput.InitVehicleDefaultSensitivity // (Final|Native|Public) // @ game+0x622dba0
	void InitDefaultSensitivity(); // Function DFMGameplay.DFHDPlayerInput.InitDefaultSensitivity // (Final|Native|Public) // @ game+0x622db80
	float HDistToVDist(float HDist); // Function DFMGameplay.DFHDPlayerInput.HDistToVDist // (Final|Native|Public) // @ game+0x622daf0
	float GetCurWeaponZoomRate(); // Function DFMGameplay.DFHDPlayerInput.GetCurWeaponZoomRate // (Final|Native|Public) // @ game+0x622dac0
	void FetchDefaultFOV(); // Function DFMGameplay.DFHDPlayerInput.FetchDefaultFOV // (Final|Native|Public) // @ game+0x622d840
	float CalcMDRadiansWithZoomRate(float BaseVFOV, float InMDV, float ZoomRate); // Function DFMGameplay.DFHDPlayerInput.CalcMDRadiansWithZoomRate // (Final|Native|Public) // @ game+0x622d5b0
	float CalcMDRadians(float FOV, float MD); // Function DFMGameplay.DFHDPlayerInput.CalcMDRadians // (Final|Native|Public) // @ game+0x622d4e0
	float CalcDist(float FOV); // Function DFMGameplay.DFHDPlayerInput.CalcDist // (Final|Native|Public) // @ game+0x622d450
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableInterface
// Size: 0x30 (Inherited: 0x30)
class UDFInteractableInterface : public UInterface {
public:


	struct FGameplayTagContainer GetAllActiveTags(struct ACHARACTER* InOperatorCharacter, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableInterface.GetAllActiveTags // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x6231990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAbilityLockerComponent
// Size: 0x170 (Inherited: 0x100)
class UDFMAbilityLockerComponent : public UActorComponent {
public:

	/*struct TScriptInterface<IStingerMissileTakerInterface>*/char CurLockingObject[0x10]; // 0x100(0x10)
	char pad_110[0x10]; // 0x110(0x10)
	struct TMap<struct UObject*, struct UGPLaserPointerMarkItem*> Items; // 0x120(0x50)

	void SetFPPLockingState(enum class EStingerMissileLockingState LockingState); // Function DFMGameplay.DFMAbilityLockerComponent.SetFPPLockingState // (Final|Native|Public) // @ game+0x6233610
	void SetFPPLockingObject(/*struct TScriptInterface<IStingerMissileTakerInterface> LockingObject*/); // Function DFMGameplay.DFMAbilityLockerComponent.SetFPPLockingObject // (Final|Native|Public) // @ game+0x6233570
	void RemoveVisableCounter(bool bIsVehicleWeapon); // Function DFMGameplay.DFMAbilityLockerComponent.RemoveVisableCounter // (Final|Native|Public) // @ game+0x6232cb0
	void RefreshState(); // Function DFMGameplay.DFMAbilityLockerComponent.RefreshState // (Final|Native|Public) // @ game+0x88f4d0
	void RefreshEffectState(/*struct TScriptInterface<IStingerMissileTakerInterface> LockingObject, bool bUseFPPState*/); // Function DFMGameplay.DFMAbilityLockerComponent.RefreshEffectState // (Final|Native|Public) // @ game+0x6232bd0
	void PoolItem(/*struct TScriptInterface<IStingerMissileTakerInterface> LockingObject*/); // Function DFMGameplay.DFMAbilityLockerComponent.PoolItem // (Final|Native|Public) // @ game+0x62329e0
	void MulticastTargetLockingStateInfo(struct AActor* Taker, int32_t CampId, enum class EStingerMissileLockingState ServerLockingState); // Function DFMGameplay.DFMAbilityLockerComponent.MulticastTargetLockingStateInfo // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x62321a0
	void MulticastTargetLockingParamInfo(struct AActor* Taker, int32_t CampId, float IncreaseSpeed, float DecreaseSpeed, float PersistentTime); // Function DFMGameplay.DFMAbilityLockerComponent.MulticastTargetLockingParamInfo // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6232020
	void AddVisableCounter(bool bIsVehicleWeapon); // Function DFMGameplay.DFMAbilityLockerComponent.AddVisableCounter // (Final|Native|Public) // @ game+0x6230d60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAbilityLockerGroup
// Size: 0x88 (Inherited: 0x30)
class UDFMAbilityLockerGroup : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)
	struct TMap<struct UObject*, struct FCommonLockerInfo> LockerInfos; // 0x38(0x50)

	void OnUnregisterActor(struct AActor* NewActor); // Function DFMGameplay.DFMAbilityLockerGroup.OnUnregisterActor // (Final|Native|Private) // @ game+0x6232960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAbilityPathTracingComponent
// Size: 0x4e0 (Inherited: 0x100)
class UDFMAbilityPathTracingComponent : public UActorComponent {
public:

	struct UClass* PathActorClass; // 0x100(0x08)
	int32_t MaxTargetCnt; // 0x108(0x04)
	float MaxScanDistance; // 0x10c(0x04)
	float MarkEnenmyTime; // 0x110(0x04)
	float PathTracingTotalTime; // 0x114(0x04)
	float PathTracingTotalTime_BF; // 0x118(0x04)
	float ScanFaceAngle; // 0x11c(0x04)
	float PathNodeSelectDelta; // 0x120(0x04)
	float RefreshCurPathsInterval; // 0x124(0x04)
	int32_t ReScanCnt; // 0x128(0x04)
	float RefreshWarningInterval; // 0x12c(0x04)
	uint32_t BeScanBuffID; // 0x130(0x04)
	uint32_t BeTracingBuffID; // 0x134(0x04)
	struct FName TracingEnemyHudName; // 0x138(0x08)
	struct FString PostProcessEffectName; // 0x140(0x10)
	struct FName MobileEffectName; // 0x150(0x08)
	struct FString PostProcessEffectParameterName; // 0x158(0x10)
	bool bTracingAI; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	float WarningDis_2; // 0x16c(0x04)
	float WarningDis_3; // 0x170(0x04)
	float TracingLineZ; // 0x174(0x04)
	float StartLocDis; // 0x178(0x04)
	struct FVector2D ScreenStartLocDif; // 0x17c(0x08)
	float ResetFlashDronePathTime; // 0x184(0x04)
	char pad_188[0x4]; // 0x188(0x04)
	struct FName ScanEnemyAudioName; // 0x18c(0x08)
	struct FName StartScanAudioName; // 0x194(0x08)
	struct FName TracingLineAudioName; // 0x19c(0x08)
	float MaxSelectPathDis; // 0x1a4(0x04)
	struct FName FindEnenmyVO; // 0x1a8(0x08)
	struct FName FindHeavyArmorEnenmyVO; // 0x1b0(0x08)
	struct FName CatSnakeScreenEffectName; // 0x1b8(0x08)
	struct FVector StartScanPos; // 0x1c0(0x0c)
	int32_t TracingEnemyFlag; // 0x1cc(0x04)
	int32_t BeTracingLevel; // 0x1d0(0x04)
	bool bMarkOnMap; // 0x1d4(0x01)
	char pad_1D5[0x3]; // 0x1d5(0x03)
	struct TArray<struct FAbilityTracingPathData> TracingPaths; // 0x1d8(0x10)
	struct TArray<struct FAbilityTracingPathData> KnifeTracingPaths; // 0x1e8(0x10)
	struct TArray<struct AGPPreviewLineActor*> PathLineMeshs; // 0x1f8(0x10)
	/*struct TSet<int32_t>*/char TracingCharSet[0x50]; // 0x208(0x50)
	float PathTracingStartTime; // 0x258(0x04)
	float Curtime; // 0x25c(0x04)
	float NextScanTime; // 0x260(0x04)
	int32_t CurScanCnt; // 0x264(0x04)
	int32_t MaxScanCnt; // 0x268(0x04)
	bool bIsRefreshPaths; // 0x26c(0x01)
	bool bStartTick; // 0x26d(0x01)
	char pad_26E[0x2]; // 0x26e(0x02)
	float ScanRadius; // 0x270(0x04)
	int32_t CurPathCnt; // 0x274(0x04)
	int32_t CurPathIndex; // 0x278(0x04)
	int32_t CurFlashDronePathIndex; // 0x27c(0x04)
	int32_t ClientCurFlashDronePathIndex; // 0x280(0x04)
	float LastSetFlashDronePathTime; // 0x284(0x04)
	float ChooseFlashDronePathTime; // 0x288(0x04)
	bool bForceKnifeTracing; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
	struct FVector LastHitPos; // 0x290(0x0c)
	bool bActiveProceeEffect; // 0x29c(0x01)
	bool bClientPreprocessPath; // 0x29d(0x01)
	char pad_29E[0x2]; // 0x29e(0x02)
	float NextRefreshWarningTime; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct ADFMCharacter*> TracingTargets; // 0x2a8(0x10)
	/*struct TSet<int32_t>*/char TracingTargetSet[0x50]; // 0x2b8(0x50)
	struct TArray<struct FAbilityClientDrawPathData> ClientDrawPaths; // 0x308(0x10)
	struct TMap<int32_t, int32_t> BeTracingLevelMap; // 0x318(0x50)
	/*struct TSet<int32_t>*/char ScanCharSet[0x50]; // 0x368(0x50)
	struct TArray<int32_t> CurScanItemUinList; // 0x3b8(0x10)
	/*struct TSet<int32_t>*/char FirstTracingTargetSet[0x50]; // 0x3c8(0x50)
	bool bHasTracingTarget; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	float LastStartTracingTime; // 0x41c(0x04)
	struct TArray<struct AActor*> Ignores; // 0x420(0x10)
	bool bLstShowed; // 0x430(0x01)
	char pad_431[0x3]; // 0x431(0x03)
	int32_t TeamOrCampID; // 0x434(0x04)
	struct UFXResourceContainerComponent* MobileFXComp; // 0x438(0x08)
	int32_t MobileFXCompHandle; // 0x440(0x04)
	int32_t ClientScanCnt; // 0x444(0x04)
	struct TArray<struct AActor*> ClimbLadderList; // 0x448(0x10)
	struct TArray<struct FPathTracingClimbLadderData> ClimbLadderDataList; // 0x458(0x10)
	struct TMap<int32_t, struct FPathTracingClimbLadderData> ClimbLadderMap; // 0x468(0x50)
	struct TArray<struct FPathTracingEdge> Edges; // 0x4b8(0x10)
	struct TArray<struct FPathTracingVertex> Vertices; // 0x4c8(0x10)
	float ClientSkillEndTime; // 0x4d8(0x04)
	char pad_4DC[0x4]; // 0x4dc(0x04)

	void UpdateSneakHUDState(); // Function DFMGameplay.DFMAbilityPathTracingComponent.UpdateSneakHUDState // (Final|Native|Protected) // @ game+0x6233c10
	void UpdateClientPostProcessEffect(); // Function DFMGameplay.DFMAbilityPathTracingComponent.UpdateClientPostProcessEffect // (Final|Native|Private) // @ game+0x6233bf0
	void UpdateBeTracingLevel(bool IsAdd, int32_t SourceUin, float Dis); // Function DFMGameplay.DFMAbilityPathTracingComponent.UpdateBeTracingLevel // (Final|Native|Private) // @ game+0x6233af0
	void UpdataTotalTracingTime(bool HasTracingTarget); // Function DFMGameplay.DFMAbilityPathTracingComponent.UpdataTotalTracingTime // (Final|Native|Private) // @ game+0x6233a60
	bool TryTrackingTarget(struct ADFMCharacter* OwnerChar, struct ADFMCharacter* TargetChar, struct FVector& PathStartPos, struct FAbilityTracingPathData& PathData); // Function DFMGameplay.DFMAbilityPathTracingComponent.TryTrackingTarget // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6233890
	void TryInitPathMeshInstance(); // Function DFMGameplay.DFMAbilityPathTracingComponent.TryInitPathMeshInstance // (Final|Native|Private) // @ game+0x6233870
	void TrackingTargetTeammates(struct ADFMCharacter* TargetChar); // Function DFMGameplay.DFMAbilityPathTracingComponent.TrackingTargetTeammates // (Final|Native|Public) // @ game+0x62337f0
	void SyncOutLineItemLocationsToTeamMates(); // Function DFMGameplay.DFMAbilityPathTracingComponent.SyncOutLineItemLocationsToTeamMates // (Final|Native|Public) // @ game+0x62337d0
	void SyncDetectorLocationsToTeamMates(); // Function DFMGameplay.DFMAbilityPathTracingComponent.SyncDetectorLocationsToTeamMates // (Final|Native|Public) // @ game+0x62337b0
	void StopPathTracing(); // Function DFMGameplay.DFMAbilityPathTracingComponent.StopPathTracing // (Final|Native|Public) // @ game+0x6233790
	void StartPathTracing(float SkillTotalTime); // Function DFMGameplay.DFMAbilityPathTracingComponent.StartPathTracing // (Final|Native|Public) // @ game+0x6233710
	void SetFlashDronePathIndex(int32_t Index); // Function DFMGameplay.DFMAbilityPathTracingComponent.SetFlashDronePathIndex // (Final|Native|Public) // @ game+0x6233690
	void ServerStartScan(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerStartScan // (Final|Native|Public) // @ game+0x6233550
	void ServerSetFlashDronePathIndex(int32_t Index); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerSetFlashDronePathIndex // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3677b90
	void ServerRefreshWarning(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerRefreshWarning // (Final|Native|Public) // @ game+0x6233530
	void ServerRefreshPaths(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerRefreshPaths // (Final|Native|Public) // @ game+0x6233510
	void ServerPrepareForShortPath(struct FAbilityTracingPathData& PathData, bool bIsBlocked); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerPrepareForShortPath // (Final|Native|Public|HasOutParms) // @ game+0x62333c0
	float ServerGetEdgeLength(struct FPathTracingVertex& StartVertex, struct FPathTracingVertex& EndVertex); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerGetEdgeLength // (Final|Native|Public|HasOutParms) // @ game+0x6233280
	bool ServerFindShortestPath(int32_t StartVertexIndex, int32_t EndVertexIndex, struct TArray<struct FVector>& Path); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerFindShortestPath // (Final|Native|Public|HasOutParms) // @ game+0x6233130
	bool ServerFindNavMeshPath(struct FVector StartPos, struct FVector EndPos, float& Length, struct TArray<struct FVector>& ResPath); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerFindNavMeshPath // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6232f60
	void ServerFindClimbLadder(struct FVector StartPos, float ScanDis); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerFindClimbLadder // (Final|Native|Public|HasDefaults) // @ game+0x6232e90
	void ServerAddTracingBuff(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerAddTracingBuff // (Final|Native|Public) // @ game+0x6232e70
	void ServerAddFlashBuff(uint32_t FlashBuffID, struct AActor* SourceChar); // Function DFMGameplay.DFMAbilityPathTracingComponent.ServerAddFlashBuff // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6232da0
	void ResetFlashDronePathIndex(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ResetFlashDronePathIndex // (Final|Native|Public) // @ game+0x6232d80
	void Rep_UpdateTracingEnemyFlag(); // Function DFMGameplay.DFMAbilityPathTracingComponent.Rep_UpdateTracingEnemyFlag // (Final|Native|Protected) // @ game+0x6232d60
	void Rep_UpdateBeTracingLevel(); // Function DFMGameplay.DFMAbilityPathTracingComponent.Rep_UpdateBeTracingLevel // (Final|Native|Protected) // @ game+0x6232d40
	bool PrintShortPath(int32_t StartVertexIndex, int32_t EndVertexIndex, struct TArray<struct FVector>& Path); // Function DFMGameplay.DFMAbilityPathTracingComponent.PrintShortPath // (Final|Native|Public|HasOutParms) // @ game+0x6232a80
	void OnCharacterOBStateChanged(bool bIsStartOB); // Function DFMGameplay.DFMAbilityPathTracingComponent.OnCharacterOBStateChanged // (Final|Native|Protected) // @ game+0x62328d0
	void OnAsyncPathTracingCallBack(int32_t PathIndex, int32_t DrawStartIndex, struct FVector PathStartPos); // Function DFMGameplay.DFMAbilityPathTracingComponent.OnAsyncPathTracingCallBack // (Final|Native|Private|HasDefaults) // @ game+0x62327c0
	void OBClientStopTracing(); // Function DFMGameplay.DFMAbilityPathTracingComponent.OBClientStopTracing // (Final|Native|Public) // @ game+0x62327a0
	void OBClientDrawPath(struct TArray<struct FAbilityTracingPathData>& ServerTracingPaths, struct TArray<struct FAbilityTracingPathData>& ServerKnifeTracingPaths, float SkillStartTime, bool bIsRefreshPath); // Function DFMGameplay.DFMAbilityPathTracingComponent.OBClientDrawPath // (Final|Native|Public|HasOutParms) // @ game+0x6232530
	void NotifyOBClientStopTracing(); // Function DFMGameplay.DFMAbilityPathTracingComponent.NotifyOBClientStopTracing // (Final|Native|Public) // @ game+0x6232510
	void NotifyOBClientDrawPath(struct TArray<struct FAbilityTracingPathData>& ServerTracingPaths, struct TArray<struct FAbilityTracingPathData>& ServerKnifeTracingPaths, float SkillStartTime, bool bIsRefreshPath); // Function DFMGameplay.DFMAbilityPathTracingComponent.NotifyOBClientDrawPath // (Final|Native|Public|HasOutParms) // @ game+0x62322a0
	void LocalPlayerSilentMoveStateChanged(bool IsSilentMove); // Function DFMGameplay.DFMAbilityPathTracingComponent.LocalPlayerSilentMoveStateChanged // (Final|Native|Protected) // @ game+0x3662de0
	void LocalPlayerBasePoseStatusChanged(); // Function DFMGameplay.DFMAbilityPathTracingComponent.LocalPlayerBasePoseStatusChanged // (Final|Native|Protected) // @ game+0x6232000
	bool IsOnwerEnemyWithCharacter(struct AGPCharacterBase* Charecter); // Function DFMGameplay.DFMAbilityPathTracingComponent.IsOnwerEnemyWithCharacter // (Final|Native|Public) // @ game+0x6231f70
	float GetShortestDistancePointToLineSegment(struct FVector& Point, struct FVector& LineStart, struct FVector& LineEnd); // Function DFMGameplay.DFMAbilityPathTracingComponent.GetShortestDistancePointToLineSegment // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x6231e30
	float GetShortestDistanceBetweenLines(struct FVector& Line1Start, struct FVector& Line1End, struct FVector& Line2Start, struct FVector& Line2End); // Function DFMGameplay.DFMAbilityPathTracingComponent.GetShortestDistanceBetweenLines // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x6231c90
	bool GetPathByIndex(int32_t PathIndex, struct FAbilityTracingPathData& Result); // Function DFMGameplay.DFMAbilityPathTracingComponent.GetPathByIndex // (Final|Native|Public|HasOutParms) // @ game+0x6231b40
	int32_t GetFlashDronePathIndex(); // Function DFMGameplay.DFMAbilityPathTracingComponent.GetFlashDronePathIndex // (Final|Native|Public) // @ game+0x6231b20
	struct FVector FindNearestPointOnPath(struct FVector& PointA, struct TArray<struct FVector>& PathPoints, struct TArray<float>& PathLengths, int32_t& NextIndex); // Function DFMGameplay.DFMAbilityPathTracingComponent.FindNearestPointOnPath // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6231770
	void ClientTryChoosePath(float DeltaTime); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientTryChoosePath // (Final|Native|Public) // @ game+0x62316d0
	void ClientTryChooseFlashDronePath(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientTryChooseFlashDronePath // (Final|Native|Public) // @ game+0x62316b0
	void ClientStopTracing(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientStopTracing // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35e4a10
	void ClientPreprocessPaths(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientPreprocessPaths // (Final|Native|Public) // @ game+0x6231690
	bool ClientPreprocessPath(struct FAbilityTracingPathData& Path); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientPreprocessPath // (Final|Native|Public|HasOutParms) // @ game+0x6231580
	int32_t ClientGetViewPointPathIndex(struct FVector& ViewPoint); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientGetViewPointPathIndex // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62314e0
	struct FVector ClientGetScreenPointWorldLocation(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientGetScreenPointWorldLocation // (Final|Native|Public|HasDefaults) // @ game+0x62314a0
	struct FVector2D ClientGetScreenPointStartLocation(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientGetScreenPointStartLocation // (Final|Native|Public|HasDefaults) // @ game+0x6231460
	struct FVector ClientGetLineStartLocation(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientGetLineStartLocation // (Final|Native|Public|HasDefaults) // @ game+0x6231420
	void ClientDrawPathTracing(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientDrawPathTracing // (Final|Native|Public) // @ game+0x6231400
	void ClientDrawPath(struct TArray<struct FAbilityTracingPathData> ServerTracingPaths, struct TArray<struct FAbilityTracingPathData> ServerKnifeTracingPaths, float SkillStartTime, bool bIsRefreshPath); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientDrawPath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62311c0
	void ClientConfirmFlashDronePathIndex(int32_t Index); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientConfirmFlashDronePathIndex // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x36404f0
	void ClientCalculatePath(bool bAttachToSurface); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientCalculatePath // (Final|Native|Public) // @ game+0x6231130
	void ClientCalculateFlashLevel(struct AActor* FlashDrone, float FaceAngle, float NearDis, float FarDis, uint32_t FlashBuffID_Back, uint32_t FlashBuffID_Near, uint32_t FlashBuffID_Mid, uint32_t FlashBuffID_Far); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientCalculateFlashLevel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6230f00
	struct FVector ClientAttachToSurface(struct FVector& pos); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClientAttachToSurface // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x6230e50
	void ClearAllPath(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClearAllPath // (Final|Native|Private) // @ game+0x6230e30
	void ClearAllAsyncTrace(); // Function DFMGameplay.DFMAbilityPathTracingComponent.ClearAllAsyncTrace // (Final|Native|Private) // @ game+0x6230e10
	void CaculatePath(); // Function DFMGameplay.DFMAbilityPathTracingComponent.CaculatePath // (Final|Native|Private) // @ game+0x6230df0
	void ActiveClientPostProcessEffect(bool Active); // Function DFMGameplay.DFMAbilityPathTracingComponent.ActiveClientPostProcessEffect // (Final|Native|Private) // @ game+0x6230cd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAbilitySystemGlobals
// Size: 0x298 (Inherited: 0x298)
class UDFMAbilitySystemGlobals : public UGPAbilitySystemGlobals {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMActionWithCastTime
// Size: 0x88 (Inherited: 0x30)
class UDFMActionWithCastTime : public UObject {
public:

	char pad_30[0x48]; // 0x30(0x48)
	struct ADFMCharacter* OwnerCharacter; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAI3AnimInstance
// Size: 0xa20 (Inherited: 0x290)
class UDFMAI3AnimInstance : public UGPAnimInstanceBase {
public:

	struct FDFMAI3AnimInstanceProxy LocalProxy; // 0x290(0x790)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIAnalysisComponent
// Size: 0x3c8 (Inherited: 0x100)
class UAIAnalysisComponent : public UActorComponent {
public:

	char pad_100[0x2c8]; // 0x100(0x2c8)

	void TlogFightFlow(enum class EAIAnalysisFightState State, struct FString reason, struct ADFMCharacter* mainTarget); // Function DFMGameplay.AIAnalysisComponent.TlogFightFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x6239a80
	void OnMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.AIAnalysisComponent.OnMatchEnd // (Final|Native|Public) // @ game+0x6239090
	void OnLeaveFight(struct FVector SelfLocation, struct FVector enemyLocation, struct ADFMCharacter* Enemy); // Function DFMGameplay.AIAnalysisComponent.OnLeaveFight // (Final|Native|Public|HasDefaults) // @ game+0x6238f60
	void OnIntoFight(struct FVector SelfLocation, struct FVector enemyLocation, struct ADFMCharacter* Enemy); // Function DFMGameplay.AIAnalysisComponent.OnIntoFight // (Final|Native|Public|HasDefaults) // @ game+0x6238e30
	void CollectThreatNum(struct FVector PlayerLocation, struct FVector AILocation); // Function DFMGameplay.AIAnalysisComponent.CollectThreatNum // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62383d0
	void CollectThreatData(enum class EAIThreatFlagName Flag); // Function DFMGameplay.AIAnalysisComponent.CollectThreatData // (Final|Native|Public|BlueprintCallable) // @ game+0x6238350
	void CollectFightData(bool isOut, struct FVector Location, struct FVector PlayerLocation, struct ADFMCharacter* mainTarget); // Function DFMGameplay.AIAnalysisComponent.CollectFightData // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62381d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIBaseMarkerItem
// Size: 0x580 (Inherited: 0x580)
class UDFMAIBaseMarkerItem : public UGPAIBaseMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICharacterScoringComponent
// Size: 0x1b8 (Inherited: 0x100)
class UDFMAICharacterScoringComponent : public UActorComponent {
public:

	struct FScoreRange KillEnemyScore; // 0x100(0x08)
	struct FScoreRange PickupItemScore; // 0x108(0x08)
	struct FScoreRange MakeDamageScore; // 0x110(0x08)
	struct FScoreRange RecoverHealthScore; // 0x118(0x08)
	struct FScoreRange GetDamageScore; // 0x120(0x08)
	struct FScoreRange TickingScore; // 0x128(0x08)
	struct FScoreRange ScoreBound; // 0x130(0x08)
	float TickingDelay; // 0x138(0x04)
	bool EnableDebugLog; // 0x13c(0x01)
	char pad_13D[0x3]; // 0x13d(0x03)
	float SumupScore; // 0x140(0x04)
	float LastEvalSeconds; // 0x144(0x04)
	char pad_148[0x70]; // 0x148(0x70)

	void OnPlayerMakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMAICharacterScoringComponent.OnPlayerMakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x623ee00
	void OnPickupItem(struct FItemMoveCmd& MoveCmd); // Function DFMGameplay.DFMAICharacterScoringComponent.OnPickupItem // (Final|Native|Public|HasOutParms) // @ game+0x623ed50
	void OnKillPlayer(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMAICharacterScoringComponent.OnKillPlayer // (Final|Native|Public|HasOutParms) // @ game+0x623eb70
	void OnHealthPointChange(float ChangeValue); // Function DFMGameplay.DFMAICharacterScoringComponent.OnHealthPointChange // (Final|Native|Public) // @ game+0x623e9c0
	void OnAttributeArmorChangeEvent(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.DFMAICharacterScoringComponent.OnAttributeArmorChangeEvent // (Final|Native|Public) // @ game+0x623e5e0
	float GetScore(); // Function DFMGameplay.DFMAICharacterScoringComponent.GetScore // (Final|Native|Public|BlueprintCallable) // @ game+0x623d800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIConfigItemComponent
// Size: 0x110 (Inherited: 0x100)
class UDFMAIConfigItemComponent : public UActorComponent {
public:

	struct TArray<struct FPointDropItem> ConfigItems; // 0x100(0x10)

	void AddConfigItemsToInventory(struct ADFMCharacter* Owner, bool Remove); // Function DFMGameplay.DFMAIConfigItemComponent.AddConfigItemsToInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x623c360
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AssassinateSettings
// Size: 0x48 (Inherited: 0x40)
class UAssassinateSettings : public UDeveloperSettings {
public:

	float AssassinateAlertRange; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICoverManager
// Size: 0xc30 (Inherited: 0x378)
class ADFMAICoverManager : public AActor {
public:

	float CoverEntryDirectSearchRadius; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct UDFMCoverManagerRenderComponent* CoverRenderComponent; // 0x380(0x08)
	char pad_388[0x88]; // 0x388(0x88)
	float CoverOutDistance; // 0x410(0x04)
	float CoverToWallDistance; // 0x414(0x04)
	char bAlignDirectionToWall : 1; // 0x418(0x01)
	char pad_418_1 : 7; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	float EdgeCheckZOffset; // 0x41c(0x04)
	float StandExposeZOffset; // 0x420(0x04)
	float CoverPeekUpZOffset; // 0x424(0x04)
	float EdgeCheckExtent; // 0x428(0x04)
	float EdgeCheckInterval; // 0x42c(0x04)
	float StandHideCheckZOffset; // 0x430(0x04)
	float BlockCheckDistance; // 0x434(0x04)
	float PeekBlockCheckDistance; // 0x438(0x04)
	float GroundSlantLimit; // 0x43c(0x04)
	float CoverInterval; // 0x440(0x04)
	float MinCoverLength; // 0x444(0x04)
	char bDrawCover : 1; // 0x448(0x01)
	char bDrawWalls : 1; // 0x448(0x01)
	char bDrawEdgeCheckPoints : 1; // 0x448(0x01)
	char bDrawAsForeground : 1; // 0x448(0x01)
	char bDrawSimpleCover : 1; // 0x448(0x01)
	char pad_448_5 : 3; // 0x448(0x01)
	char pad_449[0x3]; // 0x449(0x03)
	float DebugDrawCullingDistance; // 0x44c(0x04)
	bool bDebugFilterCover; // 0x450(0x01)
	char pad_451[0x3]; // 0x451(0x03)
	struct FVector DebugFilterBoxExtent; // 0x454(0x0c)
	float DebugDirectionAngle; // 0x460(0x04)
	char pad_464[0xc]; // 0x464(0x0c)
	struct FDFMCoverAnimLocationProfile LeftCrouchProfile; // 0x470(0x170)
	struct FDFMCoverAnimLocationProfile MidCrouchProfile; // 0x5e0(0x170)
	struct FDFMCoverAnimLocationProfile RightCrouchProfile; // 0x750(0x170)
	struct FDFMCoverAnimLocationProfile LeftStandProfile; // 0x8c0(0x170)
	struct FDFMCoverAnimLocationProfile RightStandProfile; // 0xa30(0x170)
	struct TArray<struct FVector> WallPoints; // 0xba0(0x10)
	bool bFirstInited; // 0xbb0(0x01)
	char pad_BB1[0x57]; // 0xbb1(0x57)
	uint64_t CoverInfoVersion; // 0xc08(0x08)
	struct TArray<struct FDFMCoverInfo> CoverInfos; // 0xc10(0x10)
	struct URCVWaypointManager* DynamicCoverManager; // 0xc20(0x08)
	char pad_C28[0x8]; // 0xc28(0x08)

	bool SetupCoverContextToAIController(struct ADFMAIController* AIController, struct FSOLEqsCoverPointInfo coverPoint, bool bTryToStand); // Function DFMGameplay.DFMAICoverManager.SetupCoverContextToAIController // (Final|Native|Public|BlueprintCallable) // @ game+0x6244dc0
	void ReleaseCoverContext(struct FDFMCoverContext& CoverContextIn); // Function DFMGameplay.DFMAICoverManager.ReleaseCoverContext // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6244b10
	void OnUpdateCoverInfo(); // Function DFMGameplay.DFMAICoverManager.OnUpdateCoverInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x6244930
	bool OccupyCurrentCover(struct ADFMAIController* AIController); // Function DFMGameplay.DFMAICoverManager.OccupyCurrentCover // (Final|Native|Public|BlueprintCallable) // @ game+0x6244750
	struct TArray<struct FDFMCoverContext> GetNearbyLeftCover_Debug(struct FVector Location, struct FVector BoxExtent); // Function DFMGameplay.DFMAICoverManager.GetNearbyLeftCover_Debug // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6243ea0
	struct TArray<struct FDFMCoverContext> GetNearByCover(struct FVector Center, float Extent, bool bIgnoreCoverOccupied, enum class ESOLCoverDirQuery dir, enum class ESOLCoverHeightQuery Height); // Function DFMGameplay.DFMAICoverManager.GetNearByCover // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6243ca0
	struct ADFMAICoverManager* STATIC_GetInstance(struct UObject* WorldContext); // Function DFMGameplay.DFMAICoverManager.GetInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6243b00
	struct FDFMCoverContext GetDirectTransCover(struct ADFMAIController* AIController); // Function DFMGameplay.DFMAICoverManager.GetDirectTransCover // (Final|Native|Public|BlueprintCallable) // @ game+0x6243600
	bool DebugSetupNearbyCover(struct ADFMAIController* AICtrler, struct FVector BoxExtent, bool bIsLeftCover, bool bIsRightCover, bool bIsHighCover); // Function DFMGameplay.DFMAICoverManager.DebugSetupNearbyCover // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6242c50
	void BuildCover(); // Function DFMGameplay.DFMAICoverManager.BuildCover // (Final|Native|Public|BlueprintCallable) // @ game+0x6242ae0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICoverModifier
// Size: 0x390 (Inherited: 0x378)
class ADFMAICoverModifier : public AActor {
public:

	struct UBoxComponent* RootBox; // 0x378(0x08)
	struct TArray<struct UBoxComponent*> Boxes; // 0x380(0x10)

	void OnSelectionChanged(struct UObject* NewSelection); // Function DFMGameplay.DFMAICoverModifier.OnSelectionChanged // (Final|Native|Public) // @ game+0x62448b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICustomLinkReachDelegates
// Size: 0x88 (Inherited: 0x38)
class UDFMAICustomLinkReachDelegates : public UWorldSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)

	struct UDFMAICustomLinkReachDelegates* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.DFMAICustomLinkReachDelegates.Get // (Final|Native|Static|Public) // @ game+0x6242ee0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDebugPanelV2
// Size: 0x468 (Inherited: 0x3c8)
class UDFMAIDebugPanelV2 : public UAIDebugPanelV2 {
public:

	struct TWeakObjectPtr<struct UMotionActionComponent> MotionActionComponent; // 0x3c8(0x08)
	struct TWeakObjectPtr<struct UDFMAICharacterMovementComponent> MovementComponent; // 0x3d0(0x08)
	struct TWeakObjectPtr<struct ADFMAICharacter> AICharacter; // 0x3d8(0x08)
	struct UDataTable* AITemplateDataTable; // 0x3e0(0x08)
	struct ULineBatchComponent* DebugDrawer; // 0x3e8(0x08)
	struct ULineBatchComponent* CoverDebugDrawer; // 0x3f0(0x08)
	struct TWeakObjectPtr<struct ADramaArea> DebugDrama; // 0x3f8(0x08)
	struct UGridPanel* MotionPlanContentPanel; // 0x400(0x08)
	struct UCheckbox* ChkBoxDrawSkeleton; // 0x408(0x08)
	struct TWeakObjectPtr<struct UGPAIAnimProxyComponent> AnimProxyComponent; // 0x410(0x08)
	struct TWeakObjectPtr<struct UGPRagDollPhysicsComponent> RagdollComponent; // 0x418(0x08)
	struct UClass* AIUTDramaClass; // 0x420(0x08)
	struct USlider* SliderSpecZOffset; // 0x428(0x08)
	char pad_430[0x8]; // 0x430(0x08)
	bool bVisualizeFocus; // 0x438(0x01)
	bool bDrawPath; // 0x439(0x01)
	bool bVisualizeVelocity; // 0x43a(0x01)
	bool bDrawSkeleton; // 0x43b(0x01)
	bool bDrawRotation; // 0x43c(0x01)
	bool bDrawFootLock; // 0x43d(0x01)
	char pad_43E[0x2a]; // 0x43e(0x2a)

	void SliderSpecSpringArmLen_OnValueChanged(float Value); // Function DFMGameplay.DFMAIDebugPanelV2.SliderSpecSpringArmLen_OnValueChanged // (Final|Native|Protected|BlueprintCallable) // @ game+0x6244f70
	void STATIC_ShowAIDebugPanelV2(struct UObject* WorldContext); // Function DFMGameplay.DFMAIDebugPanelV2.ShowAIDebugPanelV2 // (Final|Native|Static|Protected|BlueprintCallable) // @ game+0x6244f00
	bool IsLocalPlayerSpectating(); // Function DFMGameplay.DFMAIDebugPanelV2.IsLocalPlayerSpectating // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x6244720
	float GetSpecSpringArmLength(); // Function DFMGameplay.DFMAIDebugPanelV2.GetSpecSpringArmLength // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6244390
	struct TArray<struct AActor*> GetSortedAIUTs(); // Function DFMGameplay.DFMAIDebugPanelV2.GetSortedAIUTs // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x6244310
	struct FText GetRagdollPhysicsWeightText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetRagdollPhysicsWeightText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6244090
	struct FText GetPainText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetPainText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243ff0
	struct FText GetMotionPlanText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetMotionPlanText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243c00
	struct FText GetGunIKText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetGunIKText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x62439d0
	struct FText GetFootIKText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetFootIKText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243930
	struct FText GetFocusText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetFocusText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243890
	struct FText GetCurrWeaponName(); // Function DFMGameplay.DFMAIDebugPanelV2.GetCurrWeaponName // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243560
	struct FText GetCurrStateText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetCurrStateText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x62434c0
	struct FText GetCurAnimText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetCurAnimText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243420
	struct FText GetCurAnimDetailText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetCurAnimDetailText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x6243380
	struct TArray<struct FName> GetAITemplateNames(); // Function DFMGameplay.DFMAIDebugPanelV2.GetAITemplateNames // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x6242fa0
	struct FText GetAimText(); // Function DFMGameplay.DFMAIDebugPanelV2.GetAimText // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x62430b0
	void FlushCoverDebugDraw(); // Function DFMGameplay.DFMAIDebugPanelV2.FlushCoverDebugDraw // (Final|Native|Protected|BlueprintCallable) // @ game+0x6242ec0
	void DebugDrawCover(struct FGMCoverDrawInfo cover, float LifeTime); // Function DFMGameplay.DFMAIDebugPanelV2.DebugDrawCover // (Final|Native|Protected|BlueprintCallable) // @ game+0x6242b60
	void ClosePanel(); // Function DFMGameplay.DFMAIDebugPanelV2.ClosePanel // (Final|Native|Protected|BlueprintCallable) // @ game+0x6242b40
	void ChooseNewTarget(); // Function DFMGameplay.DFMAIDebugPanelV2.ChooseNewTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x6242b20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_CheckMultiAIDramaCurrentIdx
// Size: 0x78 (Inherited: 0x70)
class UDFMAIDecorator_CheckMultiAIDramaCurrentIdx : public UBTDecorator {
public:

	int32_t DecoratorIndex; // 0x70(0x04)
	bool RetryWhenFailed; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_HasItem
// Size: 0xb0 (Inherited: 0x70)
class UDFMAIDecorator_HasItem : public UBTDecorator {
public:

	struct FAIStringValue ItemIDBBKey; // 0x70(0x38)
	int32_t RequireNum; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_HasMotionTags
// Size: 0x98 (Inherited: 0x70)
class UDFMAIDecorator_HasMotionTags : public UBTDecorator {
public:

	struct FGameplayTagContainer Tags; // 0x70(0x20)
	bool bMatchAllTags; // 0x90(0x01)
	bool bMatchParentTag; // 0x91(0x01)
	char pad_92[0x6]; // 0x92(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_IsDramaActing
// Size: 0x80 (Inherited: 0x70)
class UDFMAIDecorator_IsDramaActing : public UBTDecorator {
public:

	enum class EAIDramaPriority DramaPriority; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct ADramaArea* LastestDrama; // 0x78(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_IsInStagger
// Size: 0x78 (Inherited: 0x70)
class UDFMAIDecorator_IsInStagger : public UBTDecorator {
public:

	enum class ECharacterStaggerType StaggerType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_MarkAsInstantTask
// Size: 0x70 (Inherited: 0x70)
class UDFMAIDecorator_MarkAsInstantTask : public UBTDecorator {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_SelectChildPriorityNode
// Size: 0x80 (Inherited: 0x70)
class UDFMAIDecorator_SelectChildPriorityNode : public UBTDecorator {
public:

	struct FString NodeBranchName; // 0x70(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_WeaponHasAmmo
// Size: 0x78 (Inherited: 0x70)
class UDFMAIDecorator_WeaponHasAmmo : public UBTDecorator {
public:

	int32_t AmmoCount; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_WeaponIsReload
// Size: 0x78 (Inherited: 0x70)
class UDFMAIDecorator_WeaponIsReload : public UBTDecorator {
public:

	bool CheckShooting; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIEnvironmentInteractComponent
// Size: 0x170 (Inherited: 0x100)
class UDFMAIEnvironmentInteractComponent : public UActorComponent {
public:

	struct FName DebugTurretMontageName; // 0x100(0x08)
	struct FName DebugTurretGunMontageName; // 0x108(0x08)
	/*struct FMulticastInlineDelegate*/char OnInteractionStart[0x10]; // 0x110(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractionEnd[0x10]; // 0x120(0x10)
	struct ADFScenceWeaponPawn* CurrentSceneWeaponPawn; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct FAIInteractInfo_AssembleThreeAnim RepInfo_AssembleThreeAnim; // 0x148(0x20)
	struct UDFMAIInteractActionBase* CurrentInteractAction; // 0x168(0x08)

	void StartInteraction_SceneWeapon(struct ADFScenceWeaponPawn* SceneWeapon, bool bSmoothCorrection); // Function DFMGameplay.DFMAIEnvironmentInteractComponent.StartInteraction_SceneWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6248910
	void PlayDebugTurret(); // Function DFMGameplay.DFMAIEnvironmentInteractComponent.PlayDebugTurret // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x1e36270
	void OnRep_AssembleThreeAnim(); // Function DFMGameplay.DFMAIEnvironmentInteractComponent.OnRep_AssembleThreeAnim // (Final|Native|Protected) // @ game+0x6248520
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIEquipmentComponent
// Size: 0x5a0 (Inherited: 0x100)
class UDFMAIEquipmentComponent : public UActorComponent {
public:

	struct FAICharacterDifficulty DifficultyConf; // 0x100(0x488)
	char pad_588[0x18]; // 0x588(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIFightTargetManagementComponent
// Size: 0x180 (Inherited: 0x100)
class UDFMAIFightTargetManagementComponent : public UActorComponent {
public:

	struct TArray<struct FAIFightTargetInfo> FightTargetList; // 0x100(0x10)
	struct ADFMAIController* OwnerController; // 0x110(0x08)
	bool PrintDebugLog; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	float ThreatLevelKeepDelay; // 0x11c(0x04)
	float RandomFightScore; // 0x120(0x04)
	float AITargetDamageScoreScaler; // 0x124(0x04)
	float AITargetVisualScoreScaler; // 0x128(0x04)
	float PlayerTargetDamageScoreScaler; // 0x12c(0x04)
	float PlayerTargetVisualScoreScaler; // 0x130(0x04)
	float AITargetVehicleHurtScaler; // 0x134(0x04)
	float PlayerTargetVehicleHurtScaler; // 0x138(0x04)
	float RandomDistanceThreshold; // 0x13c(0x04)
	float RandomOffsetThreshold; // 0x140(0x04)
	float RandomRadiusThreshold; // 0x144(0x04)
	float RandomAngleThreshold; // 0x148(0x04)
	float MinLeaveFightTime; // 0x14c(0x04)
	float MainTargetKeepDelay; // 0x150(0x04)
	float DispersionFactor; // 0x154(0x04)
	char pad_158[0x28]; // 0x158(0x28)

	void SetCharacterForceExtraScore(struct ADFMCharacter* CHARACTER, float extraScore); // Function DFMGameplay.DFMAIFightTargetManagementComponent.SetCharacterForceExtraScore // (Final|Native|Public|BlueprintCallable) // @ game+0x62487d0
	void SetCharacterBasicScore(struct ADFMCharacter* CHARACTER, float bacisScore); // Function DFMGameplay.DFMAIFightTargetManagementComponent.SetCharacterBasicScore // (Final|Native|Public|BlueprintCallable) // @ game+0x6248710
	enum class EAIThreatLevel GetTargetThreatLevel(struct ADFMCharacter* TargetCharacter); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetTargetThreatLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x6248490
	struct ADFMCharacter* GetTargetByThreatLevel(enum class EAIThreatLevel ThreatLevel); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetTargetByThreatLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x6248400
	struct ADFMCharacter* GetCurrentMainTargetWithRandomOffset(); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetCurrentMainTargetWithRandomOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x62480a0
	struct ADFMCharacter* GetCurrentMainTargetWithDist(float Dist, bool bInside); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetCurrentMainTargetWithDist // (Final|Native|Public|BlueprintCallable) // @ game+0x6247fd0
	bool GetCurrentMainTargetInfo_Custom(struct FAIFightTargetInfo& Info, float dealyTime_sight); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetCurrentMainTargetInfo_Custom // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247eb0
	bool GetCurrentMainTargetInfo(struct FAIFightTargetInfo& Info); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetCurrentMainTargetInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247dd0
	struct ADFMCharacter* GetCurrentMainTarget(); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetCurrentMainTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x6247da0
	struct ADFMCharacter* GetAssinedTarget(); // Function DFMGameplay.DFMAIFightTargetManagementComponent.GetAssinedTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x6247900
	void ForceUpdateTargets(); // Function DFMGameplay.DFMAIFightTargetManagementComponent.ForceUpdateTargets // (Final|Native|Public|BlueprintCallable) // @ game+0x62476e0
	void STATIC_BatchUpdateAIFightTargets(struct TArray<struct ADFMAIController*>& AIList, struct TArray<struct ADFMCharacter*>& charList, float LockLocation, bool bFightOnly); // Function DFMGameplay.DFMAIFightTargetManagementComponent.BatchUpdateAIFightTargets // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x6247100
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIFightTargetManager
// Size: 0x140 (Inherited: 0x38)
class UDFMAIFightTargetManager : public UWorldSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)
	/*struct TSoftObjectPtr<UCurveFloat>*/char RelevanceDistCurvePath[0x28]; // 0x88(0x28)
	/*struct TSoftObjectPtr<UCurveFloat>*/char RelevanceCosAngleCurvePath[0x28]; // 0xb0(0x28)
	struct TMap<struct ADFMCharacter*, struct FCharacterArray> MainTargetMap; // 0xd8(0x50)
	struct UCurveFloat* RelevanceDistCurve; // 0x128(0x08)
	struct UCurveFloat* RelevanceCosAngleCurve; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)

	struct UDFMAIFightTargetManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMAIFightTargetManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6247700
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIFirebatConfig
// Size: 0x38 (Inherited: 0x30)
class UAIFirebatConfig : public UObject {
public:

	bool bUseSweepTrace; // 0x30(0x01)
	bool bDebug; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIFlameThrowerComponent
// Size: 0x510 (Inherited: 0x100)
class UDFMAIFlameThrowerComponent : public UActorComponent {
public:

	char pad_100[0x20]; // 0x100(0x20)
	struct TArray<struct FTransform> SweepBoneTranOffsets; // 0x120(0x10)
	char pad_130[0x30]; // 0x130(0x30)
	struct FVector Normal; // 0x160(0x0c)
	bool bSweep; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)
	float ShootYaw; // 0x170(0x04)
	float CurrentBurnScaleRange; // 0x174(0x04)
	bool IsInFire; // 0x178(0x01)
	bool bUseSweepTrace; // 0x179(0x01)
	char pad_17A[0x2]; // 0x17a(0x02)
	struct FVector LastTraceEndPoint; // 0x17c(0x0c)
	struct UClass* DataConfig; // 0x188(0x08)
	struct FVector BoxHalfSize; // 0x190(0x0c)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct TArray<struct AAIFlameDetectorActor*> DetectorActors; // 0x1a0(0x10)
	int32_t DetectorActorNum; // 0x1b0(0x04)
	struct FFloatRange DetectorFireRange; // 0x1b4(0x10)
	float FireMaxDistance; // 0x1c4(0x04)
	float FireStartSegDist; // 0x1c8(0x04)
	float FireEndSegDist; // 0x1cc(0x04)
	struct FName FloorBurnFXName; // 0x1d0(0x08)
	struct FName FlameLoopFXResourceID; // 0x1d8(0x08)
	struct FTransform LoopFXTransform; // 0x1e0(0x30)
	struct UCurveFloat* LoopFadein; // 0x210(0x08)
	char pad_218[0x10]; // 0x218(0x10)
	struct UCurveFloat* LoopFadeout; // 0x228(0x08)
	char pad_230[0x8]; // 0x230(0x08)
	struct UCurveFloat* LoopMaxDistance; // 0x238(0x08)
	char pad_240[0x8]; // 0x240(0x08)
	struct UCurveFloat* LoopFXScale; // 0x248(0x08)
	struct UClass* DetectorActorClass; // 0x250(0x08)
	float FlameLongFXDist; // 0x258(0x04)
	float FlameShortFXDist; // 0x25c(0x04)
	float FlameFXSwitchDist; // 0x260(0x04)
	float FlameMidGapIndex; // 0x264(0x04)
	float FlameTailFxDelay; // 0x268(0x04)
	float FlameTailFadeoutSpeed; // 0x26c(0x04)
	struct FName TailFXAlphaName; // 0x270(0x08)
	float FlameStartDelta; // 0x278(0x04)
	float FlameFadeOutDelta; // 0x27c(0x04)
	struct UGPAudioEventAsset* FireAudio; // 0x280(0x08)
	struct UGPAudioEventAsset* FireLoopAudio; // 0x288(0x08)
	struct UGPAudioEventAsset* StopFireAudio; // 0x290(0x08)
	float DamageCheckDelta; // 0x298(0x04)
	char FlameBuffTriggerTimes; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float FlameRadius; // 0x2a0(0x04)
	int32_t FlameBuffId; // 0x2a4(0x04)
	int32_t PainBuffId; // 0x2a8(0x04)
	int32_t TagBuffId; // 0x2ac(0x04)
	int32_t DamageId; // 0x2b0(0x04)
	uint32_t BurnVolumeCDBuff; // 0x2b4(0x04)
	enum class ECharacterPart PainPart; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	struct FName Burn1PFx; // 0x2bc(0x08)
	int32_t MaxNum; // 0x2c4(0x04)
	float FlameVolumeGap; // 0x2c8(0x04)
	float FlameVolumeGap_Mobile; // 0x2cc(0x04)
	float FlameVolumeRadius; // 0x2d0(0x04)
	float FlameVolumeRadius_Mobile; // 0x2d4(0x04)
	struct FName BurnDecalId; // 0x2d8(0x08)
	struct FVector BurnScale; // 0x2e0(0x0c)
	struct FVector BurnDecalOffset; // 0x2ec(0x0c)
	float BurnVolumeDur; // 0x2f8(0x04)
	float BurnVolumeInterval; // 0x2fc(0x04)
	float DropFireHeight; // 0x300(0x04)
	float DropFireHeight_Mobile; // 0x304(0x04)
	struct FFloatRange FloorFireRange; // 0x308(0x10)
	struct FName ScreenPostFXName; // 0x318(0x08)
	struct ADFMAICharacter* Owner; // 0x320(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> FloorBurnVolumes; // 0x328(0x10)
	struct UFXResourceContainerComponent* FlameTailSeg; // 0x338(0x08)
	struct UFXResourceContainerComponent* FlameLoopFX; // 0x340(0x08)
	struct UParticleSystemComponent* FlameLoopFX_Client; // 0x348(0x08)
	char pad_350[0x8]; // 0x350(0x08)
	struct UShapeComponent* FirePosComp; // 0x358(0x08)
	struct USkeletalMeshComponent* FireThrowerMesh; // 0x360(0x08)
	struct USkeletalMeshComponent* OilTankMesh; // 0x368(0x08)
	char pad_370[0x1a0]; // 0x370(0x1a0)

	void TryProcessFlameBurnDamage(struct AActor* Cha, struct FHitResult Hit); // Function DFMGameplay.DFMAIFlameThrowerComponent.TryProcessFlameBurnDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x6248a90
	void ThrowerStartFire(bool Start); // Function DFMGameplay.DFMAIFlameThrowerComponent.ThrowerStartFire // (Final|Native|Public|BlueprintCallable) // @ game+0x6248a00
	void STATIC_RemoveFirebatBurnBuff(struct ADFMCharacter* Cha); // Function DFMGameplay.DFMAIFlameThrowerComponent.RemoveFirebatBurnBuff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62486a0
	void PrintDebugStr(struct FString str); // Function DFMGameplay.DFMAIFlameThrowerComponent.PrintDebugStr // (Final|Native|Private|BlueprintCallable) // @ game+0x6248580
	void PlayBurnScreenEffect(struct ADFMCharacter* Cha, struct FName Name); // Function DFMGameplay.DFMAIFlameThrowerComponent.PlayBurnScreenEffect // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x35dfd20
	void OnRep_IsInFire(); // Function DFMGameplay.DFMAIFlameThrowerComponent.OnRep_IsInFire // (Final|Native|Public) // @ game+0x6248560
	void OnRep_CurrentBurnScaleRange(); // Function DFMGameplay.DFMAIFlameThrowerComponent.OnRep_CurrentBurnScaleRange // (Final|Native|Public) // @ game+0x88f4d0
	bool FlameBlock(); // Function DFMGameplay.DFMAIFlameThrowerComponent.FlameBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x62476b0
	void BroadcastMsg_StopBurnVolume(int32_t Key); // Function DFMGameplay.DFMAIFlameThrowerComponent.BroadcastMsg_StopBurnVolume // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x367b100
	void BroadcastMsg_PlayBurnVolume(int32_t Key, struct FVector Location, struct FVector Normal); // Function DFMGameplay.DFMAIFlameThrowerComponent.BroadcastMsg_PlayBurnVolume // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x6247430
	void BroadcastMsg_PlayBurnDecal(struct FHitResult Hit, float ScaleRange); // Function DFMGameplay.DFMAIFlameThrowerComponent.BroadcastMsg_PlayBurnDecal // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x62472d0
	void BroadcastMsg_Debug(struct FHitResult Hit, float ScaleRange); // Function DFMGameplay.DFMAIFlameThrowerComponent.BroadcastMsg_Debug // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x6222340
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupScenesComponent
// Size: 0x138 (Inherited: 0x100)
class UAIGroupScenesComponent : public UActorComponent {
public:

	bool bIsOpen; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	struct TArray<char> ScenesTypeOfList; // 0x108(0x10)
	struct TArray<struct AAIScenesActor*> HistoryScene; // 0x118(0x10)
	char pad_128[0x10]; // 0x128(0x10)

	void ScenesActorUseTimeout(struct AAIScenesActor* scenesActor); // Function DFMGameplay.AIGroupScenesComponent.ScenesActorUseTimeout // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct AAIScenesActor*> GetScenesActorsForDistance(bool& bTooOften, struct TArray<struct FScenesFailureReasons>& ScenesFailureReasons, float radius); // Function DFMGameplay.AIGroupScenesComponent.GetScenesActorsForDistance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6248230
	struct TArray<struct AAIPatrolPath*> GetPatrolArrayScenesActors(float radius); // Function DFMGameplay.AIGroupScenesComponent.GetPatrolArrayScenesActors // (Final|Native|Public|BlueprintCallable) // @ game+0x6248100
	struct AAIScenesActor* GetCurrentScene(); // Function DFMGameplay.AIGroupScenesComponent.GetCurrentScene // (Final|Native|Public|BlueprintCallable) // @ game+0x62480d0
	struct TArray<struct AAIScenesActor*> GetCategoryScenesActors(bool& bTooOften, char ScenesActorType, struct TArray<struct FScenesFailureReasons>& ScenesFailureReasons, float radius); // Function DFMGameplay.AIGroupScenesComponent.GetCategoryScenesActors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247bb0
	struct TArray<struct AAIScenesActor*> GetCategoryArrayScenesActors(bool& bTooOften, struct TArray<char> ScenesActorTypeList, struct TArray<struct FScenesFailureReasons>& ScenesFailureReasons, float radius); // Function DFMGameplay.AIGroupScenesComponent.GetCategoryArrayScenesActors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247930
	struct TArray<struct AAIScenesActor*> GetALLScenesActors(bool& bTooOften, struct TArray<struct FScenesFailureReasons>& ScenesFailureReasons); // Function DFMGameplay.AIGroupScenesComponent.GetALLScenesActors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247780
	bool CreateWayPoints(struct AAIScenesActor* SceneActor, struct TArray<struct FVector>& WayPoints); // Function DFMGameplay.AIGroupScenesComponent.CreateWayPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6247560
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ScenesSpawnPoint
// Size: 0x5a0 (Inherited: 0x580)
class UScenesSpawnPoint : public USphereComponent {
public:

	float SpawnPointRadius; // 0x580(0x04)
	int32_t PercentageValue; // 0x584(0x04)
	int32_t MaxSpawnNum; // 0x588(0x04)
	char pad_58C[0x14]; // 0x58c(0x14)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupThreatComponent
// Size: 0x200 (Inherited: 0x100)
class UAIGroupThreatComponent : public UActorComponent {
public:

	struct TMap<struct TWeakObjectPtr<struct ACHARACTER>, struct FAIGroupThreatRecord> ThreatDetailRecordMap; // 0x100(0x50)
	struct TArray<struct FAIGroupThreatResult> TargetList; // 0x150(0x10)
	struct TArray<struct FAIGroupThreatResult> VisibleList; // 0x160(0x10)
	float WaitTimeForRecoverGroup; // 0x170(0x04)
	char pad_174[0xc]; // 0x174(0x0c)
	struct ACHARACTER* LastVisibleTarget; // 0x180(0x08)
	char pad_188[0x8]; // 0x188(0x08)
	struct TMap<struct TWeakObjectPtr<struct ACHARACTER>, float> LastPlayerRemoveTime; // 0x190(0x50)
	float OrdinaryCoverTime; // 0x1e0(0x04)
	float SpecialDeathCoverageTime; // 0x1e4(0x04)
	float RemoveNotUpdatedTime; // 0x1e8(0x04)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	/*struct FMulticastInlineDelegate*/char PlayerDeathNotification[0x10]; // 0x1f0(0x10)

	bool SetTargetExtraData(struct ACHARACTER* CHARACTER, struct FAIGroupThreatExtraData& Result); // Function DFMGameplay.AIGroupThreatComponent.SetTargetExtraData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624cc10
	void OnPlayerDied(struct AGPCharacterBase* Player, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AIGroupThreatComponent.OnPlayerDied // (Final|Native|Public) // @ game+0x624c1f0
	bool IsCharacterThreatExist(struct ACHARACTER* CHARACTER); // Function DFMGameplay.AIGroupThreatComponent.IsCharacterThreatExist // (Final|Native|Public|BlueprintCallable) // @ game+0x624bfc0
	bool IsCharacterThreatDetailExist(struct ACHARACTER* CHARACTER, enum class EAIThreatDetailName detail); // Function DFMGameplay.AIGroupThreatComponent.IsCharacterThreatDetailExist // (Final|Native|Public|BlueprintCallable) // @ game+0x624bf00
	int32_t GetVisibleThreatTargetList(struct TArray<struct FAIGroupThreatResult>& Result); // Function DFMGameplay.AIGroupThreatComponent.GetVisibleThreatTargetList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624be20
	int32_t GetThreatTargetList(struct TArray<struct FAIGroupThreatResult>& Result); // Function DFMGameplay.AIGroupThreatComponent.GetThreatTargetList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624bd40
	int32_t GetThreatTargetLength(); // Function DFMGameplay.AIGroupThreatComponent.GetThreatTargetLength // (Final|Native|Public|BlueprintCallable) // @ game+0x624bd10
	struct ACHARACTER* GetThreatTargetLastVisible(float& Time); // Function DFMGameplay.AIGroupThreatComponent.GetThreatTargetLastVisible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624bc60
	bool GetTargetExtraData(struct ACHARACTER* CHARACTER, struct FAIGroupThreatExtraData& Result); // Function DFMGameplay.AIGroupThreatComponent.GetTargetExtraData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624bb90
	struct FGroupThreatCharacterQueryDetail GetRecordByNameOrder(enum class EAIThreatDetailName Name, bool includeDeadCharacter); // Function DFMGameplay.AIGroupThreatComponent.GetRecordByNameOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x624bab0
	struct FGroupThreatCharacterQueryDetail GetNameOrder(bool includeDeadCharacter); // Function DFMGameplay.AIGroupThreatComponent.GetNameOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x624ba00
	bool GetLocationToSearchForThreatSource(struct TArray<enum class EAIThreatDetailName> detailNames, float Distance, struct TArray<struct FAIGroupThreatSource>& Players); // Function DFMGameplay.AIGroupThreatComponent.GetLocationToSearchForThreatSource // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624b820
	int32_t GetArrayNoFilter(struct TArray<struct ACHARACTER*>& Result, bool includeDeadCharacter); // Function DFMGameplay.AIGroupThreatComponent.GetArrayNoFilter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624b700
	int32_t GetArrayByName(enum class EAIThreatDetailName Name, struct TArray<struct ACHARACTER*>& Result, bool includeDeadCharacter); // Function DFMGameplay.AIGroupThreatComponent.GetArrayByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x624b5a0
	bool ClearTargetThreat(struct ACHARACTER* Player); // Function DFMGameplay.AIGroupThreatComponent.ClearTargetThreat // (Final|Native|Public|BlueprintCallable) // @ game+0x624b230
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIHeavyMachineGunComponent
// Size: 0x298 (Inherited: 0x100)
class UDFMAIHeavyMachineGunComponent : public UActorComponent {
public:

	char pad_100[0x18]; // 0x100(0x18)
	struct FVector WeaponScale; // 0x118(0x0c)
	struct FVector WeaponOffset; // 0x124(0x0c)
	bool HideRealWeapon; // 0x130(0x01)
	char pad_131[0x3]; // 0x131(0x03)
	struct FRotator HelmetRotation; // 0x134(0x0c)
	struct FVector HelmetOffSet; // 0x140(0x0c)
	char pad_14C[0x4]; // 0x14c(0x04)
	struct UCurveFloat* DropCur; // 0x150(0x08)
	struct UCurveFloat* DropRotCur; // 0x158(0x08)
	struct USplineComponent* DropSpline; // 0x160(0x08)
	float TotalDropMoveTime; // 0x168(0x04)
	float HelmetHp; // 0x16c(0x04)
	struct FHitAudioConfig HelmetBreakAudioConf; // 0x170(0xa0)
	float HelmetBreakGodSecs; // 0x210(0x04)
	int32_t HitEffectAfterDropHelmet; // 0x214(0x04)
	struct UPhysicsAsset* HelmetPhysicsAsset; // 0x218(0x08)
	struct UPhysicsAsset* CacheOriginalPhysicsAsset; // 0x220(0x08)
	struct FName HitArmFxName; // 0x228(0x08)
	struct FString StaggerName; // 0x230(0x10)
	bool IsInFire; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct AWeaponBase* RealWeapon; // 0x248(0x08)
	struct USkeletalMeshComponent* FakeWeapon; // 0x250(0x08)
	struct USkeletalMeshComponent* HELMET; // 0x258(0x08)
	struct FName AttachSocketName; // 0x260(0x08)
	struct ADFMAICharacter* Owner; // 0x268(0x08)
	char pad_270[0x28]; // 0x270(0x28)

	void StopFire(); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.StopFire // (Net|Native|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x3624900
	void StartDropHelmet(bool PlayAudio, struct FVector hitDir, int64_t PlayerUin); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.StartDropHelmet // (Net|Native|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x624cd60
	void SetUpMachineGun(struct USkeletalMeshComponent* ChainMain); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.SetUpMachineGun // (Final|Native|Public|BlueprintCallable) // @ game+0x624cce0
	void PlayFx(struct FName Name, struct FTransform Transform); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.PlayFx // (Net|Native|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x624c540
	void OpenFire(bool Fire, float PlayAnimVec); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.OpenFire // (Final|Native|Public|BlueprintCallable) // @ game+0x624c480
	void OnPreTakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.OnPreTakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x624c2f0
	void OnMasterTakeDamage(struct FDamageResultInfo& DamageResult, enum class ECharacterPart& HitPart); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.OnMasterTakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x624c0d0
	void Fire(bool PlayPreFireAnim); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.Fire // (Net|Native|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x35c8e40
	void CharacterPlayFx(struct FName& Name, struct FTransform& Transform); // Function DFMGameplay.DFMAIHeavyMachineGunComponent.CharacterPlayFx // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x624b100
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIHelicopterSpawnComponent
// Size: 0x340 (Inherited: 0x100)
class UDFMAIHelicopterSpawnComponent : public UActorComponent {
public:

	struct ADFMAICharacter* OwnerCharacter; // 0x100(0x08)
	char pad_108[0x8]; // 0x108(0x08)
	struct FAIHelicopterSpawnParam AIHelicopterSpawnParma; // 0x110(0x70)
	char pad_180[0x70]; // 0x180(0x70)
	struct FAITransportHelicopterRepParam AITransportHelicopterRepParam; // 0x1f0(0x90)
	char pad_280[0xb0]; // 0x280(0xb0)
	struct AGPVehicleBase* OwnerVehicle; // 0x330(0x08)
	char pad_338[0x8]; // 0x338(0x08)

	void SetKeyPosition(struct FVector KeyPos); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.SetKeyPosition // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x624cb80
	void SetAIHelicopterState(enum class EAIHelicopterSpawnState InState); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.SetAIHelicopterState // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x624cb00
	void SetAIHelicopterParam(struct FAIHelicopterSpawnParam InParam); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.SetAIHelicopterParam // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x624c9c0
	void ServerSetTransportParam(struct FAITransportHelicopterRepParam Param); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.ServerSetTransportParam // (Final|Native|Public|BlueprintCallable) // @ game+0x624c880
	void ServerSetAnimIndex(enum class EAITransportPoseType PoseType, struct UAnimMontage* Montage, bool bHasRootMotion, struct FTransform MotionWarpingTarget); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.ServerSetAnimIndex // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x624c6d0
	void OnVehicleDead(struct AGPVehicleBase* DFMVehicle); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.OnVehicleDead // (Final|Native|Protected) // @ game+0x624c400
	void OnRep_TransportParam(); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.OnRep_TransportParam // (Final|Native|Private) // @ game+0x624c3e0
	void OnRep_Param(); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.OnRep_Param // (Final|Native|Private) // @ game+0x624c3c0
	bool STATIC_IsMontageHasRootMotion(struct UAnimMontage* Montage); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.IsMontageHasRootMotion // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x624c050
	float STATIC_GetAnimNotifyTriggerTime(struct UAnimSequenceBase* Anim, int32_t Index); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.GetAnimNotifyTriggerTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x624b4e0
	void DrawDebug(struct FVector PosT, struct FColor Color, float LifeTime); // Function DFMGameplay.DFMAIHelicopterSpawnComponent.DrawDebug // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults|BlueprintCallable) // @ game+0x624b2c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_AIMotionWarping
// Size: 0x38 (Inherited: 0x38)
class UAnimNotifyState_AIMotionWarping : public UAnimNotifyState {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAILabDebugInfo
// Size: 0x388 (Inherited: 0x378)
class ADFMAILabDebugInfo : public AActor {
public:

	struct UWidgetComponent* DebugPanel; // 0x378(0x08)
	struct UTextBlock* DebugStr; // 0x380(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAILabInputLeftFireLogic
// Size: 0x78 (Inherited: 0x78)
class UDFMAILabInputLeftFireLogic : public UGPInputLeftFireLogic {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAILabStatisComponent
// Size: 0x1f8 (Inherited: 0x100)
class UDFMAILabStatisComponent : public UActorComponent {
public:

	char pad_100[0xf8]; // 0x100(0xf8)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAINameManager
// Size: 0x88 (Inherited: 0x38)
class UDFMAINameManager : public UWorldSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)

	void STATIC_GetRankIconByName(struct UObject* WorldContext, struct FString Name); // Function DFMGameplay.DFMAINameManager.GetRankIconByName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x62512b0
	struct FSoftObjectPath STATIC_GetHalfBodyImageByAINameText(struct FText& AINameText); // Function DFMGameplay.DFMAINameManager.GetHalfBodyImageByAINameText // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6250dd0
	struct UDFMAINameManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMAINameManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6250990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIOilTankComponent
// Size: 0x198 (Inherited: 0x100)
class UDFMAIOilTankComponent : public UActorComponent {
public:

	char pad_100[0x18]; // 0x100(0x18)
	float OilTankHealthPoint; // 0x118(0x04)
	float OilTankLeakThreshold; // 0x11c(0x04)
	struct FFloatRange OilExplodeRange; // 0x120(0x10)
	struct FVector OilExplodePos; // 0x130(0x0c)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct USkeletalMeshComponent* OilTank; // 0x140(0x08)
	bool bHasTriggeredExplode; // 0x148(0x01)
	char pad_149[0x3]; // 0x149(0x03)
	struct FName OilTankLeakFlameFXResourceId; // 0x14c(0x08)
	struct FName OilTankExplodeFXResourceId; // 0x154(0x08)
	char pad_15C[0x4]; // 0x15c(0x04)
	uint64_t OilTankExplodeAttakerId; // 0x160(0x08)
	uint64_t KillSelfDamageId; // 0x168(0x08)
	struct FName OilTankThresholdStaggerName; // 0x170(0x08)
	int8_t OilTankLeakFlameLimit; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
	struct UClass* DamageGE; // 0x180(0x08)
	struct FName OilTankPerformanceAnimName; // 0x188(0x08)
	bool bDebug; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)

	void PlayOilTankFx(int32_t Type, struct FTransform Transform); // Function DFMGameplay.DFMAIOilTankComponent.PlayOilTankFx // (Net|Native|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x6252120
	bool HitOilTankCheck(struct FDamageSourceInfo& SourceInfo, struct FDamageResultInfo& DamageResult, struct UPrimitiveComponent* OilTankMeshComp); // Function DFMGameplay.DFMAIOilTankComponent.HitOilTankCheck // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62519a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIPlayerPathFollowingComponent
// Size: 0x570 (Inherited: 0x2a8)
class UDFMAIPlayerPathFollowingComponent : public UPathFollowingComponent {
public:

	char pad_2A8[0x10]; // 0x2a8(0x10)
	bool bIsOpenStuckDetection; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float MoveAcceleration; // 0x2bc(0x04)
	float MoveVelScaleAngleMore60; // 0x2c0(0x04)
	float MoveVelScaleAngleMore90; // 0x2c4(0x04)
	float MoveVelScaleAngleMore120; // 0x2c8(0x04)
	float MoveFocalPointDistance; // 0x2cc(0x04)
	float VaultConfigAccpetAngle; // 0x2d0(0x04)
	float VaultConfigTryTimeLimit; // 0x2d4(0x04)
	int32_t VaultConfigTryVaultCount; // 0x2d8(0x04)
	int32_t VaultConfigTryJumpCount; // 0x2dc(0x04)
	bool VaultThanReachCurrentTarget; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	float ClimbLadderTryTimeLimit; // 0x2e4(0x04)
	float ClimbLadderDownwardHeight; // 0x2e8(0x04)
	float ClimbLadderTimeLimit; // 0x2ec(0x04)
	bool FallThanReachCurrentTarget; // 0x2f0(0x01)
	char pad_2F1[0x3]; // 0x2f1(0x03)
	float OpenParachuteFromFloor; // 0x2f4(0x04)
	float OpenParachuteTime; // 0x2f8(0x04)
	int32_t SegmentMoveFarawayFailCount; // 0x2fc(0x04)
	float SegmentExceptionReachAccept; // 0x300(0x04)
	char pad_304[0xf4]; // 0x304(0xf4)
	float TickPathCheckInterval; // 0x3f8(0x04)
	char pad_3FC[0x4]; // 0x3fc(0x04)
	struct ADFMAIPlayerController* Controller; // 0x400(0x08)
	struct ARecastNavMesh* RecastNavMesh; // 0x408(0x08)
	char pad_410[0x8]; // 0x410(0x08)
	bool bIsStuck; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	float StuckSeconds; // 0x41c(0x04)
	struct AWorldQuerySubsystem* WQSystem; // 0x420(0x08)
	char pad_428[0x148]; // 0x428(0x148)

	bool IsUsingNavLink(); // Function DFMGameplay.DFMAIPlayerPathFollowingComponent.IsUsingNavLink // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6255a60
	int32_t GetVaultTryTimes(); // Function DFMGameplay.DFMAIPlayerPathFollowingComponent.GetVaultTryTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x62558b0
	struct TArray<struct FVector> GetStuckBypassPoints(); // Function DFMGameplay.DFMAIPlayerPathFollowingComponent.GetStuckBypassPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x6255830
	struct FVector GetCurrentFootLocation(); // Function DFMGameplay.DFMAIPlayerPathFollowingComponent.GetCurrentFootLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x6255770
	void ClearPathStuckFlag(); // Function DFMGameplay.DFMAIPlayerPathFollowingComponent.ClearPathStuckFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x6255580
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIRCVDataComponent
// Size: 0x630 (Inherited: 0x100)
class UDFMAIRCVDataComponent : public UActorComponent {
public:

	bool bHasWeaponSystem; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	struct FName GunMeshComponentName; // 0x104(0x08)
	struct FName GunMeshSocketName; // 0x10c(0x08)
	struct FName BaseMeshSocketName; // 0x114(0x08)
	struct FName GunMeshBoneName; // 0x11c(0x08)
	struct FName RocketMeshBoneName; // 0x124(0x08)
	struct FName DefaultGunSocketName; // 0x12c(0x08)
	struct FName DefaultRocketSocketName; // 0x134(0x08)
	struct FName SuicideCarDoorSocketName; // 0x13c(0x08)
	struct FName SuicideCarSplineComponentName; // 0x144(0x08)
	struct FName CameraBoneName; // 0x14c(0x08)
	struct FName VehicleMeshComponentName; // 0x154(0x08)
	char pad_15C[0x4]; // 0x15c(0x04)
	struct TArray<struct FName> WheelSocketNames; // 0x160(0x10)
	struct TArray<struct FName> WheelSocketExtraNames; // 0x170(0x10)
	float WheelSize; // 0x180(0x04)
	float WheelSpringLength; // 0x184(0x04)
	float UpVectorRotateSpeed; // 0x188(0x04)
	float RandomDitherAngle; // 0x18c(0x04)
	float MaxSnapAngle; // 0x190(0x04)
	float RandomDitherFreq; // 0x194(0x04)
	float RandomDitherAcc; // 0x198(0x04)
	bool bXAxisForward; // 0x19c(0x01)
	bool bDebugDrawWheelRaycast; // 0x19d(0x01)
	char pad_19E[0x2]; // 0x19e(0x02)
	float ProjectionSpeed; // 0x1a0(0x04)
	float ProjectDamping; // 0x1a4(0x04)
	uint64_t LeftMainWeaponID; // 0x1a8(0x08)
	uint64_t RightMainWeaponID; // 0x1b0(0x08)
	float YawRotateSpeed; // 0x1b8(0x04)
	float RocketGoalPitch; // 0x1bc(0x04)
	float RocketRotateSpeed; // 0x1c0(0x04)
	float GunMaxYawOffset; // 0x1c4(0x04)
	float CarDoorMaxPitch; // 0x1c8(0x04)
	float CarDoorRotateSpeed; // 0x1cc(0x04)
	float CamereRotateDuration; // 0x1d0(0x04)
	float CameraRotateSpeed; // 0x1d4(0x04)
	uint64_t MissileSignalBulletID; // 0x1d8(0x08)
	float MissileLocOffset; // 0x1e0(0x04)
	struct FName EffectName; // 0x1e4(0x08)
	struct FName EffectAttachComponentName; // 0x1ec(0x08)
	struct FName EffectAttachSocketName; // 0x1f4(0x08)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	/*struct TMap<enum class ERCVAISoundFxType, struct TSoftObjectPtr<UGPAudioEventAsset>>*/char SoundMap[0x50]; // 0x200(0x50)
	float StopMovingCheckInterval; // 0x250(0x04)
	bool bEnableAudioDebug; // 0x254(0x01)
	bool bExploded; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	/*struct FMulticastInlineDelegate*/char BlueprintOnEffectUpdate[0x10]; // 0x258(0x10)
	struct USkeletalMeshComponent* GunMesh; // 0x268(0x08)
	struct USkeletalMeshComponent* VehicleMesh; // 0x270(0x08)
	struct UFXResourceContainerComponent* LightFXContainer; // 0x278(0x08)
	struct USplineComponent* SplineComponent; // 0x280(0x08)
	struct FVector CameraFocusLocation; // 0x288(0x0c)
	char pad_294[0x4]; // 0x294(0x04)
	struct AActor* CameraFocusTarget; // 0x298(0x08)
	struct UMotionActionComponent* MotionAction; // 0x2a0(0x08)
	struct TArray<struct UDFDynamicCoverComponent*> DynamicCovers; // 0x2a8(0x10)
	struct TArray<struct UBoxComponent*> CollisionBoxes; // 0x2b8(0x10)
	struct TArray<struct FMissileTarget> MissileTargets; // 0x2c8(0x10)
	struct AActor* LastFocusTarget; // 0x2d8(0x08)
	bool bMissilePreparing; // 0x2e0(0x01)
	bool bSuicideCarPreparing; // 0x2e1(0x01)
	char pad_2E2[0x2]; // 0x2e2(0x02)
	float CrazyRotationSpeed; // 0x2e4(0x04)
	struct AActor* FollowingSplineParent; // 0x2e8(0x08)
	char pad_2F0[0x340]; // 0x2f0(0x340)

	void UpdateNavObstacle(bool EnableObstacle); // Function DFMGameplay.DFMAIRCVDataComponent.UpdateNavObstacle // (Final|Native|Public|BlueprintCallable) // @ game+0x62563e0
	void UpdateDynamicCover(bool EnableCover); // Function DFMGameplay.DFMAIRCVDataComponent.UpdateDynamicCover // (Final|Native|Public|BlueprintCallable) // @ game+0x6256350
	bool SuicideCarSpawnInit(struct AActor* RCVParent); // Function DFMGameplay.DFMAIRCVDataComponent.SuicideCarSpawnInit // (Final|Native|Public|BlueprintCallable) // @ game+0x62562c0
	void SetVectorParameter(struct FName ParameterName, struct FVector Param); // Function DFMGameplay.DFMAIRCVDataComponent.SetVectorParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62561f0
	void SetHomingTarget(struct AActor* Target); // Function DFMGameplay.DFMAIRCVDataComponent.SetHomingTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x6256170
	void SetHomingLocation(struct AActor* Target, struct FVector Location); // Function DFMGameplay.DFMAIRCVDataComponent.SetHomingLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62560a0
	void SetFloatParameter(struct FName ParameterName, float Param); // Function DFMGameplay.DFMAIRCVDataComponent.SetFloatParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x6255fe0
	void SetCrazyRotationSpeed(float Speed); // Function DFMGameplay.DFMAIRCVDataComponent.SetCrazyRotationSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x6255f60
	void SetColorParameter(struct FName ParameterName, struct FLinearColor Param); // Function DFMGameplay.DFMAIRCVDataComponent.SetColorParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6255e90
	void PrepareSuicideCar(); // Function DFMGameplay.DFMAIRCVDataComponent.PrepareSuicideCar // (Final|Native|Public|BlueprintCallable) // @ game+0x6255e70
	void PlaySoundFx(enum class ERCVAISoundFxType Type); // Function DFMGameplay.DFMAIRCVDataComponent.PlaySoundFx // (Final|Native|Public|BlueprintCallable) // @ game+0x6255df0
	void OnRep_SuicideCarPrepare(); // Function DFMGameplay.DFMAIRCVDataComponent.OnRep_SuicideCarPrepare // (Final|Native|Public) // @ game+0x6255d50
	void OnRep_FollowingParent(); // Function DFMGameplay.DFMAIRCVDataComponent.OnRep_FollowingParent // (Final|Native|Public) // @ game+0x6255d10
	void OnRep_CrazyRotation(); // Function DFMGameplay.DFMAIRCVDataComponent.OnRep_CrazyRotation // (Final|Native|Public) // @ game+0x6255cf0
	bool LaunchMissile(struct AActor* Commander, int32_t TargetCount, int32_t MaxMissilePerTarget, int32_t MaxMissileCount, float Delay, float Interval); // Function DFMGameplay.DFMAIRCVDataComponent.LaunchMissile // (Final|Native|Public|BlueprintCallable) // @ game+0x6255a80
	bool IsCrazyRotationEnable(); // Function DFMGameplay.DFMAIRCVDataComponent.IsCrazyRotationEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6255a30
	bool IsAnyCoverOccupied(); // Function DFMGameplay.DFMAIRCVDataComponent.IsAnyCoverOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6255a00
	struct FTransform GetBoneTransform(struct FName Socket); // Function DFMGameplay.DFMAIRCVDataComponent.GetBoneTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x62556b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIRCVExplosionComponent
// Size: 0x140 (Inherited: 0x100)
class UDFMAIRCVExplosionComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char BlueprintOnExplode[0x10]; // 0x100(0x10)
	uint64_t HitFxId; // 0x110(0x08)
	uint64_t AttakerId; // 0x118(0x08)
	struct TArray<struct UFXResourceContainerComponent*> ImpactFXComps; // 0x120(0x10)
	struct TArray<int32_t> ImpactFXCompHandles; // 0x130(0x10)

	void ExplodeImpl(); // Function DFMGameplay.DFMAIRCVExplosionComponent.ExplodeImpl // (Final|Native|Private) // @ game+0x62555a0
	void Explode(float DelaySeconds); // Function DFMGameplay.DFMAIRCVExplosionComponent.Explode // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x3673190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RCVAIAnimInstance
// Size: 0xae0 (Inherited: 0x290)
class URCVAIAnimInstance : public UGPAnimInstanceBase {
public:

	struct FRCVAIAnimInstanceProxy LocalProxy; // 0x290(0x820)
	struct UDFMAIRCVDataComponent* RCVDataComponent; // 0xab0(0x08)
	struct TArray<struct FRCVAIWheelIK> WheelIKSetup; // 0xab8(0x10)
	float RotateMaxAngle; // 0xac8(0x04)
	float WheelRotateSpeed; // 0xacc(0x04)
	float RotateWithoutMoving; // 0xad0(0x04)
	float RotateWithMoving; // 0xad4(0x04)
	char pad_AD8[0x8]; // 0xad8(0x08)

	void GetWheelIKLookAt(int32_t Index, struct FVector& LookAt, struct FVector& Target); // Function DFMGameplay.RCVAIAnimInstance.GetWheelIKLookAt // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x62558e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RCVAIWeaponFuncComponentFiring
// Size: 0x1f0 (Inherited: 0x1f0)
class URCVAIWeaponFuncComponentFiring : public UWeaponFuncComponentFiring {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIRCVWeaponFireSocket
// Size: 0x98 (Inherited: 0x98)
class UDFMAIRCVWeaponFireSocket : public UWeaponFireSocket {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIScenesActor
// Size: 0x420 (Inherited: 0x378)
class AAIScenesActor : public AActor {
public:

	struct FString UniqueKey; // 0x378(0x10)
	char ScenesType; // 0x388(0x01)
	bool bIsOpen; // 0x389(0x01)
	char pad_38A[0x6]; // 0x38a(0x06)
	struct TArray<struct UAIScenesInteractiveComponent*> ScenesInteractiveActors; // 0x390(0x10)
	struct TArray<struct AAIGroup*> Groups; // 0x3a0(0x10)
	char pad_3B0[0x50]; // 0x3b0(0x50)
	float Timeout; // 0x400(0x04)
	float CoolDown; // 0x404(0x04)
	struct TArray<struct FPreScene> PreScenes; // 0x408(0x10)
	int32_t MaxGroupNum; // 0x418(0x04)
	float EndTheDistanceOfGroupMovement; // 0x41c(0x04)

	bool UseScencesActor(struct AAIGroup* Group, struct TArray<struct FVector>& WayPoints); // Function DFMGameplay.AIScenesActor.UseScencesActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x625ae70
	bool StartSceneTiming(struct AAIGroup* Group); // Function DFMGameplay.AIScenesActor.StartSceneTiming // (Final|Native|Public|BlueprintCallable) // @ game+0x625ab50
	bool IsUse(); // Function DFMGameplay.AIScenesActor.IsUse // (Final|Native|Public|BlueprintCallable) // @ game+0x625a7a0
	struct UScenesSpawnPoint* GetRandomSpawnPoint(); // Function DFMGameplay.AIScenesActor.GetRandomSpawnPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x625a770
	struct TArray<struct FVector> GetInterActiveLocation(); // Function DFMGameplay.AIScenesActor.GetInterActiveLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x625a560
	struct TArray<struct FInteractiveInfo> GetInteractiveActorList(); // Function DFMGameplay.AIScenesActor.GetInteractiveActorList // (Final|Native|Public|BlueprintCallable) // @ game+0x625a5e0
	bool FinishScencesActor(struct AAIGroup* Group); // Function DFMGameplay.AIScenesActor.FinishScencesActor // (Final|Native|Public|BlueprintCallable) // @ game+0x625a3c0
	bool DeleteInteractiveActor(struct UAIScenesInteractiveComponent* InteractiveComp); // Function DFMGameplay.AIScenesActor.DeleteInteractiveActor // (Final|Native|Public|BlueprintCallable) // @ game+0x625a290
	void DeleteGroup(struct AAIGroup* Group); // Function DFMGameplay.AIScenesActor.DeleteGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x625a210
	void ClearInteractiveActor(); // Function DFMGameplay.AIScenesActor.ClearInteractiveActor // (Final|Native|Public|BlueprintCallable) // @ game+0x625a170
	bool AddInteractiveActor(struct UAIScenesInteractiveComponent* InteractiveComp); // Function DFMGameplay.AIScenesActor.AddInteractiveActor // (Final|Native|Public|BlueprintCallable) // @ game+0x625a0e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIScenesInteractiveComponent
// Size: 0x670 (Inherited: 0x570)
class UAIScenesInteractiveComponent : public UArrowComponent {
public:

	struct AAIScenesActor* OwnerInteractor_BelongSceneActor; // 0x570(0x08)
	bool bIsOpen; // 0x578(0x01)
	char pad_579[0x7]; // 0x579(0x07)
	struct TMap<char, struct UScenesAnimates*> TagCorrespondingAnimation; // 0x580(0x50)
	enum class EPreInteractionWalkingMode PreInteractionWalkingMode; // 0x5d0(0x01)
	char pad_5D1[0x57]; // 0x5d1(0x57)
	float Timeout; // 0x628(0x04)
	float CoolDown; // 0x62c(0x04)
	int32_t MaxAINum; // 0x630(0x04)
	char pad_634[0x4]; // 0x634(0x04)
	struct TArray<struct AAIController*> Controllers; // 0x638(0x10)
	char pad_648[0x28]; // 0x648(0x28)

	bool UseInteractiveActor(struct AAIController* AIController); // Function DFMGameplay.AIScenesInteractiveComponent.UseInteractiveActor // (Native|Public|BlueprintCallable) // @ game+0x625add0
	bool STATIC_ToFindThePath(struct AActor* Actor, struct FVector StartLocation, struct FVector EndLocation, struct TArray<struct FVector>& WayPoints, bool IsVehiclePath); // Function DFMGameplay.AIScenesInteractiveComponent.ToFindThePath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x625abe0
	bool StartInteractiveTiming(struct AAIController* AIController); // Function DFMGameplay.AIScenesInteractiveComponent.StartInteractiveTiming // (Final|Native|Public|BlueprintCallable) // @ game+0x625aac0
	void OnLevelSelectionChanged(struct FVector SceneActorLocation); // Function DFMGameplay.AIScenesInteractiveComponent.OnLevelSelectionChanged // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x625a880
	int32_t IsUse(); // Function DFMGameplay.AIScenesInteractiveComponent.IsUse // (Native|Public|BlueprintCallable) // @ game+0x625a7d0
	bool FinishInteractiveActor(struct AAIController* AIController); // Function DFMGameplay.AIScenesInteractiveComponent.FinishInteractiveActor // (Native|Public|BlueprintCallable) // @ game+0x625a320
	void DeleteController(struct AAIController* AIController); // Function DFMGameplay.AIScenesInteractiveComponent.DeleteController // (Final|Native|Public|BlueprintCallable) // @ game+0x625a190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ScenesAnimates
// Size: 0x40 (Inherited: 0x30)
class UScenesAnimates : public UObject {
public:

	struct TArray<struct FScenesAnimate> AnimateList; // 0x30(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_AIFight
// Size: 0x148 (Inherited: 0x78)
class UDFMAIService_AIFight : public UBTService {
public:

	struct FBlackboardKeySelector MainTargetBBKey; // 0x78(0x28)
	struct FBlackboardKeySelector MainTargetLastSeenLocationBBKey; // 0xa0(0x28)
	struct FBlackboardKeySelector SituationBBKey; // 0xc8(0x28)
	struct FBlackboardKeySelector MainTargetDistance; // 0xf0(0x28)
	struct FBlackboardKeySelector BestFightDistance; // 0x118(0x28)
	char pad_140[0x8]; // 0x140(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_AIJob
// Size: 0x88 (Inherited: 0x78)
class UDFMAIService_AIJob : public UBTService {
public:

	struct TArray<struct FJobBBKey> JobBBKeys; // 0x78(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_AIJobKeeper
// Size: 0x80 (Inherited: 0x78)
class UDFMAIService_AIJobKeeper : public UBTService {
public:

	struct UAIJob* Job; // 0x78(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_AISpeed
// Size: 0x98 (Inherited: 0x78)
class UDFMAIService_AISpeed : public UBTService {
public:

	char pad_78[0x8]; // 0x78(0x08)
	struct ADFMAIController* AIController; // 0x80(0x08)
	struct ADFMCharacter* CHARACTER; // 0x88(0x08)
	struct UDFMCharacterMovementComponent* MovementComponent; // 0x90(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_FaceTo
// Size: 0xd0 (Inherited: 0x78)
class UDFMAIService_FaceTo : public UBTService {
public:

	enum class EFaceToLocationType FaceToLocationType; // 0x78(0x01)
	enum class EFaceToTurnType FaceToTurnType; // 0x79(0x01)
	char pad_7A[0x2]; // 0x7a(0x02)
	float MinTurnAngle; // 0x7c(0x04)
	struct FBlackboardKeySelector TargetBBkey; // 0x80(0x28)
	struct AActor* TargetActor; // 0xa8(0x08)
	struct UTurnAction* TurnAction; // 0xb0(0x08)
	struct AActor* SaveFocusActor; // 0xb8(0x08)
	char pad_C0[0x10]; // 0xc0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_ForceRotateTo
// Size: 0xa8 (Inherited: 0x78)
class UDFMAIService_ForceRotateTo : public UBTService {
public:

	struct FBlackboardKeySelector TargetBBkey; // 0x78(0x28)
	float InterpSpeed; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_MonitorInCover
// Size: 0x78 (Inherited: 0x78)
class UDFMAIService_MonitorInCover : public UBTService {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_PvPFight
// Size: 0x120 (Inherited: 0x78)
class UDFMAIService_PvPFight : public UBTService {
public:

	struct FBlackboardKeySelector MainTargetBBKey; // 0x78(0x28)
	struct FBlackboardKeySelector MainTargetLastSeenLocationBBKey; // 0xa0(0x28)
	struct FBlackboardKeySelector SituationBBKey; // 0xc8(0x28)
	struct FBlackboardKeySelector MainTargetMissTime; // 0xf0(0x28)
	char pad_118[0x8]; // 0x118(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_SelectChildPriorityModifier
// Size: 0xf8 (Inherited: 0x78)
class UDFMAIService_SelectChildPriorityModifier : public UBTService {
public:

	struct FBlackboardKeySelector PriorityNameListBBKey; // 0x78(0x28)
	float BranchWaitExecTimeout; // 0xa0(0x04)
	char pad_A4[0x14]; // 0xa4(0x14)
	struct UBehaviorTree* CurrentTreeAsset; // 0xb8(0x08)
	char pad_C0[0x38]; // 0xc0(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_SelectFightTarget
// Size: 0xa0 (Inherited: 0x78)
class UDFMAIService_SelectFightTarget : public UBTService {
public:

	struct FBlackboardKeySelector MainTargetBBKey; // 0x78(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_SpeedRate
// Size: 0x88 (Inherited: 0x78)
class UDFMAIService_SpeedRate : public UBTService {
public:

	struct FFloatRange LoopSpeedAlphaRange; // 0x78(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_WithMotionPlanFilter
// Size: 0xf0 (Inherited: 0x78)
class UDFMAIService_WithMotionPlanFilter : public UBTService {
public:

	struct FGameplayTagContainer UnlockTags; // 0x78(0x20)
	struct FGameplayTagContainer PreferTags; // 0x98(0x20)
	struct TArray<struct FPreferTagConfig> ExtPreferTags; // 0xb8(0x10)
	struct FGameplayTagContainer AvoidTags; // 0xc8(0x20)
	bool ClearPersistedPerferTag; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAISpeakManager
// Size: 0x40 (Inherited: 0x38)
class UDFMAISpeakManager : public UWorldSubsystem {
public:

	char pad_38[0x8]; // 0x38(0x08)

	void STATIC_SetAllAISpeakGlobalNextCoolDown(struct UObject* WorldContextObject, float cdMin, float cdMax); // Function DFMGameplay.DFMAISpeakManager.SetAllAISpeakGlobalNextCoolDown // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x625a9d0
	void STATIC_SetAISpeakDebugEnable(struct UObject* WorldContextObject, bool Enable); // Function DFMGameplay.DFMAISpeakManager.SetAISpeakDebugEnable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x625a910
	float STATIC_GetAllAISpeakGlobalNextCoolDownTime(struct UObject* WorldContextObject); // Function DFMGameplay.DFMAISpeakManager.GetAllAISpeakGlobalNextCoolDownTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x625a4d0
	struct UDFMAISpeakManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMAISpeakManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x625a450
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ApplyDash
// Size: 0xa8 (Inherited: 0x80)
class UDFMAITask_ApplyDash : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector TargetActorBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_AttributeDetectorBase
// Size: 0x100 (Inherited: 0x80)
class UDFMAITask_AttributeDetectorBase : public UGPBTTaskBase {
public:

	struct FGPGameplayAttribute AttribtueToDetect; // 0x80(0x38)
	enum class EAttributeChangeOp OperationType; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct FGPGameplayAttribute MaxAttributeRelated; // 0xc0(0x38)
	float ThresHold; // 0xf8(0x04)
	bool OnlyResetTriggerWhileOpFailed; // 0xfc(0x01)
	char pad_FD[0x3]; // 0xfd(0x03)

	void OnDetectorTriggerBlueprint(struct AAIController* AIController); // Function DFMGameplay.DFMAITask_AttributeDetectorBase.OnDetectorTriggerBlueprint // (Native|Event|Public|BlueprintEvent) // @ game+0x22b87e0
	void OnDetectorTrigger(struct AController* OwnerComp); // Function DFMGameplay.DFMAITask_AttributeDetectorBase.OnDetectorTrigger // (Final|Native|Public) // @ game+0x625a800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ChangeLocomotionType
// Size: 0x80 (Inherited: 0x78)
class UDFMAITask_ChangeLocomotionType : public UBTTaskNode {
public:

	enum class EGPAICharaLocomotionType TargetLocomotionType; // 0x78(0x01)
	enum class EGPAIMotionType TargetMotionType; // 0x79(0x01)
	bool bClearPreferTags; // 0x7a(0x01)
	char pad_7B[0x5]; // 0x7b(0x05)

	void BP_PreExecuteTask(struct ADFMAICharacter* AIChara, struct ADFMAIController* AICtrler); // Function DFMGameplay.DFMAITask_ChangeLocomotionType.BP_PreExecuteTask // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlaySpecialAnimBP
// Size: 0xa0 (Inherited: 0x78)
class UDFMAITask_PlaySpecialAnimBP : public UBTTaskNode {
public:

	struct FName MontageToPlay; // 0x78(0x08)
	struct FGameplayTagContainer EndState; // 0x80(0x20)

	void BP_PreExecuteTask(struct ADFMAICharacter* AIChara, struct ADFMAIController* AICtrler, float TimeElapsed, enum class EBTNodeResult Progress); // Function DFMGameplay.DFMAITask_PlaySpecialAnimBP.BP_PreExecuteTask // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_CopyBBKeyValue
// Size: 0xd0 (Inherited: 0x80)
class UDFMAITask_CopyBBKeyValue : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector DstBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector SrcBBKey; // 0xa8(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_DespawnSelf
// Size: 0x78 (Inherited: 0x78)
class UDFMAITask_DespawnSelf : public UBTTaskNode {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_DramaBehavior
// Size: 0x80 (Inherited: 0x80)
class UDFMAITask_DramaBehavior : public UGPBTTaskBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_DramaMontage
// Size: 0x90 (Inherited: 0x80)
class UDFMAITask_DramaMontage : public UBTTask_Wait {
public:

	struct FName DramaMontageKey; // 0x80(0x08)
	float WaitTimeScaler; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_FindAroundCircleWall
// Size: 0x160 (Inherited: 0x80)
class UDFMAITask_FindAroundCircleWall : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector TestLocationBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector ShootLocationBBKey; // 0xa8(0x28)
	struct FBlackboardKeySelector TargetLocationBBKey; // 0xd0(0x28)
	struct FBlackboardKeySelector CornerLocBBKey; // 0xf8(0x28)
	struct FBlackboardKeySelector CornerFocusLocBBKey; // 0x120(0x28)
	float MaxAroundRadius; // 0x148(0x04)
	float MinAroundRadius; // 0x14c(0x04)
	bool bForcedInPrefecture; // 0x150(0x01)
	bool bPeekOpt; // 0x151(0x01)
	char pad_152[0x2]; // 0x152(0x02)
	float PeekDist; // 0x154(0x04)
	int32_t TargetNum; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_FirebatShoot
// Size: 0x80 (Inherited: 0x78)
class UDFMAITask_FirebatShoot : public UBTTaskNode {
public:

	float ShootingTime; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_FocusToLocation
// Size: 0xb0 (Inherited: 0x80)
class UDFMAITask_FocusToLocation : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector TargetKey; // 0x80(0x28)
	bool bFocusTarget; // 0xa8(0x01)
	bool bCharacterMovementUseControllerRotation; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FollowPathKeyPoint
// Size: 0x40 (Inherited: 0x30)
class UFollowPathKeyPoint : public UObject {
public:

	struct TArray<struct FVector> Points; // 0x30(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_FollowPath
// Size: 0xb0 (Inherited: 0x78)
class UDFMAITask_FollowPath : public UBTTaskNode {
public:

	char pad_78_0 : 1; // 0x78(0x01)
	char bStopOnOverlap : 1; // 0x78(0x01)
	char bObserveBlackboardValue : 1; // 0x78(0x01)
	char pad_78_3 : 5; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FBlackboardKeySelector TargetLocationBBKey; // 0x80(0x28)
	float AcceptableRadius; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_FormationMove
// Size: 0xf8 (Inherited: 0x80)
class UDFMAITask_FormationMove : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector FormationBBKey; // 0x80(0x28)
	struct AFormation* Formation; // 0xa8(0x08)
	struct ADFMAIController* Controller; // 0xb0(0x08)
	struct ARecastNavMesh* NavMesh; // 0xb8(0x08)
	float ForcePathFindInterval; // 0xc0(0x04)
	char pad_C4[0x34]; // 0xc4(0x34)

	struct UScenesAnimates* GetScenesAnimates(struct UDataTable* DataTable, struct FName RowName); // Function DFMGameplay.DFMAITask_FormationMove.GetScenesAnimates // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_GetAIJob
// Size: 0x90 (Inherited: 0x80)
class UDFMAITask_GetAIJob : public UGPBTTaskBase {
public:

	enum class EAIJobType JobType; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct UClass* JobFilterClass; // 0x88(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_GetBestCoverEntry
// Size: 0x128 (Inherited: 0x80)
class UDFMAITask_GetBestCoverEntry : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector TargetLocationBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector TargetYawBBKey; // 0xa8(0x28)
	struct FBlackboardKeySelector ResultLocationBBKey; // 0xd0(0x28)
	struct FBlackboardKeySelector ResultDirectionVecBBKey; // 0xf8(0x28)
	float LocationOffsetDistance; // 0x120(0x04)
	float YawOffsetDegree; // 0x124(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_GetPatrolSpot
// Size: 0xa8 (Inherited: 0x80)
class UDFMAITask_GetPatrolSpot : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector SpotLocationBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_GetSearchSpot
// Size: 0xa8 (Inherited: 0x80)
class UDFMAITask_GetSearchSpot : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector SpotLocationBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_HeavyMachineGunShoot
// Size: 0xf0 (Inherited: 0x78)
class UDFMAITask_HeavyMachineGunShoot : public UBTTaskNode {
public:

	float ShootingTime; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct FBlackboardKeySelector ShootTargetBBKey; // 0x80(0x28)
	float DamageAngel; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct FBlackboardKeySelector MainTragetBBKey; // 0xb0(0x28)
	char pad_D8[0x18]; // 0xd8(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_InteractDoor
// Size: 0xa8 (Inherited: 0x80)
class UDFMAITask_InteractDoor : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector DoorBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_LookRound
// Size: 0x98 (Inherited: 0x80)
class UDFMAITask_LookRound : public UGPBTTaskBase {
public:

	float LookPointOffset; // 0x80(0x04)
	float LookPointRadius; // 0x84(0x04)
	float RandRate; // 0x88(0x04)
	char pad_8C[0xc]; // 0x8c(0x0c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Guard
// Size: 0x98 (Inherited: 0x80)
class UDFMAITask_Guard : public UGPBTTaskBase {
public:

	char pad_80[0x18]; // 0x80(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_NewGuard
// Size: 0x150 (Inherited: 0x80)
class UDFMAITask_NewGuard : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector GuardPointBBkey; // 0x80(0x28)
	struct FBlackboardKeySelector GuardFocusPoint; // 0xa8(0x28)
	float MinCDTime; // 0xd0(0x04)
	float MaxCDTime; // 0xd4(0x04)
	struct FBlackboardKeySelector IsSpawnDrama; // 0xd8(0x28)
	struct FBlackboardKeySelector SpawnDramaLocationBBkey; // 0x100(0x28)
	char pad_128[0x18]; // 0x128(0x18)
	struct UAnimMontage* CurrentScenesAnimate; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayOrderAnim
// Size: 0xb8 (Inherited: 0x80)
class UDFMAITask_PlayOrderAnim : public UGPBTTaskBase {
public:

	struct UAnimSequenceBase* AnimStart; // 0x80(0x08)
	struct UAnimSequenceBase* AnimLoop; // 0x88(0x08)
	float LoopTime; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct UAnimSequenceBase* AnimEnd; // 0x98(0x08)
	char pad_A0[0x10]; // 0xa0(0x10)
	struct UAnimMontage* CurrentScenesAnimate; // 0xb0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_GroupGuardAnim
// Size: 0xf0 (Inherited: 0x80)
class UDFMAITask_GroupGuardAnim : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector AIJobBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector TimeRemainBBKey; // 0xa8(0x28)
	char pad_D0[0x18]; // 0xd0(0x18)
	struct UAnimMontage* CurrentScenesAnimate; // 0xe8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Turn
// Size: 0xc0 (Inherited: 0x80)
class UDFMAITask_Turn : public UGPBTTaskBase {
public:

	enum class ETurnAnimType TurnAnimType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float MinTurnAngle; // 0x84(0x04)
	float TurnAngle; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector TurnToBBkey; // 0x90(0x28)
	struct UMotionAction* TurnAction; // 0xb8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MontageJumpDown
// Size: 0xa8 (Inherited: 0x78)
class UDFMAITask_MontageJumpDown : public UBTTaskNode {
public:

	struct FName JumpMontageKey; // 0x78(0x08)
	struct FBlackboardKeySelector LandingTargetBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MoveOnVehicle
// Size: 0xe0 (Inherited: 0xa0)
class UDFMAITask_MoveOnVehicle : public UBTTask_BlackboardBase {
public:

	float AcceptableRadius; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct UClass* FilterClass; // 0xa8(0x08)
	float ObservedBlackboardValueTolerance; // 0xb0(0x04)
	char bObserveBlackboardValue : 1; // 0xb4(0x01)
	char bAllowStrafe : 1; // 0xb4(0x01)
	char bAllowPartialPath : 1; // 0xb4(0x01)
	char bTrackMovingGoal : 1; // 0xb4(0x01)
	char bProjectGoalLocation : 1; // 0xb4(0x01)
	char bReachTestIncludesAgentRadius : 1; // 0xb4(0x01)
	char bReachTestIncludesGoalRadius : 1; // 0xb4(0x01)
	char bStopOnOverlap : 1; // 0xb4(0x01)
	char bStopOnOverlapNeedsUpdate : 1; // 0xb5(0x01)
	char pad_B5_1 : 7; // 0xb5(0x01)
	char pad_B6[0x2]; // 0xb6(0x02)
	struct FBlackboardKeySelector BBVehicleKey; // 0xb8(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MoveTo
// Size: 0x120 (Inherited: 0x118)
class UDFMAITask_MoveTo : public UAITask_MoveTo {
public:

	float BigCorner; // 0x118(0x04)
	float SmallCorner; // 0x11c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MoveToWithTimeLimit
// Size: 0xc0 (Inherited: 0xa0)
class UDFMAITask_MoveToWithTimeLimit : public UBTTask_BlackboardBase {
public:

	float TimeLimit; // 0xa0(0x04)
	float TimeLimitDeviation; // 0xa4(0x04)
	float AcceptableRadius; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UClass* FilterClass; // 0xb0(0x08)
	float ObservedBlackboardValueTolerance; // 0xb8(0x04)
	char bObserveBlackboardValue : 1; // 0xbc(0x01)
	char bAllowStrafe : 1; // 0xbc(0x01)
	char bAllowPartialPath : 1; // 0xbc(0x01)
	char bTrackMovingGoal : 1; // 0xbc(0x01)
	char bProjectGoalLocation : 1; // 0xbc(0x01)
	char bReachTestIncludesAgentRadius : 1; // 0xbc(0x01)
	char bReachTestIncludesGoalRadius : 1; // 0xbc(0x01)
	char bStopOnOverlap : 1; // 0xbc(0x01)
	char bStopOnOverlapNeedsUpdate : 1; // 0xbd(0x01)
	char pad_BD_1 : 7; // 0xbd(0x01)
	char pad_BE[0x2]; // 0xbe(0x02)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_NewPlayAudioWithSubtitle
// Size: 0xa0 (Inherited: 0x80)
class UDFMAITask_NewPlayAudioWithSubtitle : public UBTTask_Wait {
public:

	struct FName SubtitleKey; // 0x80(0x08)
	bool bShouldNodeWaitingDuringAudio; // 0x88(0x01)
	bool bRandomFromPool; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct TArray<struct FName> SubtitleKeyPool; // 0x90(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Pickup
// Size: 0xa8 (Inherited: 0x80)
class UDFMAITask_Pickup : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector PickupBBKey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayAnimation
// Size: 0x90 (Inherited: 0x80)
class UDFMAITask_PlayAnimation : public UBTTask_Wait {
public:

	struct UAnimMontage* AnimationToPlay; // 0x80(0x08)
	enum class EAnimationPlayType PlayType; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayAudioWithSubtitle
// Size: 0x90 (Inherited: 0x80)
class UDFMAITask_PlayAudioWithSubtitle : public UBTTask_Wait {
public:

	struct FName SubtitleKey; // 0x80(0x08)
	enum class ESubtitlePriorityType SubtitlePriority; // 0x88(0x01)
	bool bShouldNodeWaitingDuringAudio; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)

	void STATIC_PlaySubtitle(struct UObject* WorldContextObj, struct FText& txt, struct UGPAudioEventAsset* Audio); // Function DFMGameplay.DFMAITask_PlayAudioWithSubtitle.PlaySubtitle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x625fa90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayDramaScript
// Size: 0x78 (Inherited: 0x78)
class UDFMAITask_PlayDramaScript : public UBTTaskNode {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayEnterCoverMontage
// Size: 0x118 (Inherited: 0x80)
class UDFMAITask_PlayEnterCoverMontage : public UBTTask_Wait {
public:

	struct FBlackboardKeySelector EntryTypeBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector CoverLocationBBKey; // 0xa8(0x28)
	struct FBlackboardKeySelector CoverYawBBKey; // 0xd0(0x28)
	struct FName IdleStateMontageKey; // 0xf8(0x08)
	struct FName LeftEntryMontageKey; // 0x100(0x08)
	struct FName RightEntryMontageKey; // 0x108(0x08)
	float WaitTimeScaler; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayGPAudio
// Size: 0x88 (Inherited: 0x80)
class UDFMAITask_PlayGPAudio : public UGPBTTaskBase {
public:

	struct UGPAudioEventAsset* AudioEventConfig; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayMultiMontages
// Size: 0xd8 (Inherited: 0x80)
class UDFMAITask_PlayMultiMontages : public UBTTask_Wait {
public:

	struct TMap<struct FName, bool> DramaMontageKeys; // 0x80(0x50)
	struct FName WaitDurationMontageKey; // 0xd0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayRandomMultiActMontages
// Size: 0x88 (Inherited: 0x80)
class UDFMAITask_PlayRandomMultiActMontages : public UBTTask_Wait {
public:

	struct FName DramaMontageCompareKey; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlaySpecialActing_Name
// Size: 0x198 (Inherited: 0x78)
class UDFMAITask_PlaySpecialActing_Name : public UBTTaskNode {
public:

	struct FName ActingName; // 0x78(0x08)
	struct FBlackboardKeySelector ActingNameBBKey; // 0x80(0x28)
	bool bRootMotionCheckNavEdge; // 0xa8(0x01)
	char pad_A9[0x1]; // 0xa9(0x01)
	bool bShouldNodeWaitMontageFinish; // 0xaa(0x01)
	char pad_AB[0x5]; // 0xab(0x05)
	struct FBlackboardKeySelector TargetLocationBBKey; // 0xb0(0x28)
	struct FBlackboardKeySelector PreTargetYawBBKey; // 0xd8(0x28)
	struct FBlackboardKeySelector PostTargetYawBBKey; // 0x100(0x28)
	enum class EMotionCorrectionTargetKey LocationCorrectionKey; // 0x128(0x01)
	enum class EMotionCorrectionTargetKey PreYawCorrectionKey; // 0x129(0x01)
	enum class EMotionCorrectionTargetKey PostYawCorrectionKey; // 0x12a(0x01)
	char pad_12B[0x1]; // 0x12b(0x01)
	struct FName CustomStateName; // 0x12c(0x08)
	bool bEnableInWaterState; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
	struct FName InWaterCustomStateName; // 0x138(0x08)
	struct FGameplayTagContainer EndStateTags; // 0x140(0x20)
	struct FGameplayTagContainer MotionStateTags; // 0x160(0x20)
	struct UClass* MotionActionClass; // 0x180(0x08)
	bool bIsLoopMontage; // 0x188(0x01)
	char pad_189[0x3]; // 0x189(0x03)
	float LoopingTime; // 0x18c(0x04)
	bool bAtomic; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PromoteDramaScript
// Size: 0x80 (Inherited: 0x78)
class UDFMAITask_PromoteDramaScript : public UBTTaskNode {
public:

	bool FinishIt; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PVPThrowGrenade
// Size: 0xc8 (Inherited: 0x80)
class UDFMAITask_PVPThrowGrenade : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector TargetBBkey; // 0x80(0x28)
	uint64_t GrenadeItemID; // 0xa8(0x08)
	float ThrowDelay; // 0xb0(0x04)
	float RandomRadius; // 0xb4(0x04)
	float TaskInterval; // 0xb8(0x04)
	bool TraceGround; // 0xbc(0x01)
	char pad_BD[0xb]; // 0xbd(0x0b)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RandomDramaMontage
// Size: 0xd0 (Inherited: 0x80)
class UDFMAITask_RandomDramaMontage : public UBTTask_Wait {
public:

	struct TMap<struct FName, float> DramaMontageKeys; // 0x80(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RandomGuardTime
// Size: 0xa0 (Inherited: 0x78)
class UDFMAITask_RandomGuardTime : public UBTTaskNode {
public:

	struct FBlackboardKeySelector GuardPointBBkey; // 0x78(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RandomMove
// Size: 0xc8 (Inherited: 0x80)
class UDFMAITask_RandomMove : public UGPBTTaskBase {
public:

	struct TArray<struct FEQSParametrizedQueryExecutionRequest> EQSRequests; // 0x80(0x10)
	struct ADFMAIController* Controller; // 0x90(0x08)
	struct ARecastNavMesh* NavMesh; // 0x98(0x08)
	char pad_A0[0x28]; // 0xa0(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ReloadAmmo
// Size: 0x88 (Inherited: 0x80)
class UDFMAITask_ReloadAmmo : public UGPBTTaskBase {
public:

	bool bWaitChangeFinished; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ReloadAmmoInstantly
// Size: 0x78 (Inherited: 0x78)
class UDFMAITask_ReloadAmmoInstantly : public UBTTaskNode {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RequestSearchPickupArea
// Size: 0x80 (Inherited: 0x80)
class UDFMAITask_RequestSearchPickupArea : public UGPBTTaskBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_SeekShellingShelter
// Size: 0xb8 (Inherited: 0x80)
class UDFMAITask_SeekShellingShelter : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector AssignedBBKey; // 0x80(0x28)
	bool UseDebugPos; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	struct FVector DebugPosition; // 0xac(0x0c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Shoot
// Size: 0x1e0 (Inherited: 0x80)
class UDFMAITask_Shoot : public UGPBTTaskBase {
public:

	bool bTakeBullet; // 0x80(0x01)
	bool bShootWhenTargetInView; // 0x81(0x01)
	bool bIgnoreViewRot; // 0x82(0x01)
	char pad_83[0x1]; // 0x83(0x01)
	float ShootAngleLimit; // 0x84(0x04)
	int32_t ShootCountPerRound; // 0x88(0x04)
	bool CrazyMode; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	int32_t ShootRoundNumStart; // 0x90(0x04)
	int32_t ShootRoundNumStop; // 0x94(0x04)
	float RoundInterval; // 0x98(0x04)
	struct FName PreShootEffectName; // 0x9c(0x08)
	float BeforePlayEffectTime; // 0xa4(0x04)
	bool bStrafeShoot; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	float HitRateCorrected; // 0xac(0x04)
	float ForceShootAccuracyOverride; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct FBlackboardKeySelector ForceShootAccuracyOverrideBBKey; // 0xb8(0x28)
	bool bUseBlindShoot; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float BlindShootAngle; // 0xe4(0x04)
	struct FBlackboardKeySelector BlindShootLocationBBKey; // 0xe8(0x28)
	struct FBlackboardKeySelector ShootLocationOffsetBBKey; // 0x110(0x28)
	bool bRotateShoot; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	float RotateAngel; // 0x13c(0x04)
	struct FBlackboardKeySelector ShootTargetBBKey; // 0x140(0x28)
	struct FBlackboardKeySelector ShootVecBBKey; // 0x168(0x28)
	float RotTickAngel; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UGPAIAnimInstance* AnimInstance; // 0x198(0x08)
	char pad_1A0[0x40]; // 0x1a0(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Aim
// Size: 0xe8 (Inherited: 0x80)
class UDFMAITask_Aim : public UGPBTTaskBase {
public:

	float AccumSpeedMultiply; // 0x80(0x04)
	float AccumSpeedMultiplyDeviation; // 0x84(0x04)
	float BackAccumSpeedFactor; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector TargetBBkey; // 0x90(0x28)
	struct FBlackboardKeySelector ResultBBkey; // 0xb8(0x28)
	struct AActor* TargetActor; // 0xe0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIService_AIAim
// Size: 0xb0 (Inherited: 0x78)
class UDFMAIService_AIAim : public UBTService {
public:

	float AccumSpeedMultiply; // 0x78(0x04)
	float AccumSpeedMultiplyDeviation; // 0x7c(0x04)
	float BackAccumSpeedFactor; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct FBlackboardKeySelector TargetBBkey; // 0x88(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_WaitAim
// Size: 0x88 (Inherited: 0x78)
class UDFMAITask_WaitAim : public UBTTaskNode {
public:

	bool ClearAim; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float MaxWaitTime; // 0x7c(0x04)
	char pad_80[0x8]; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_DynamicWait
// Size: 0x80 (Inherited: 0x80)
class UDFMAITask_DynamicWait : public UBTTask_Wait {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ExtraWeaponShoot
// Size: 0xf0 (Inherited: 0x80)
class UDFMAITask_ExtraWeaponShoot : public UGPBTTaskBase {
public:

	uint64_t BulletId; // 0x80(0x08)
	struct FName FireSocketName; // 0x88(0x08)
	int32_t ShootCount; // 0x90(0x04)
	float ShootInterval; // 0x94(0x04)
	float ShootAngleLimit; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct FBlackboardKeySelector ShootTargetBBKey; // 0xa0(0x28)
	uint64_t EffectId; // 0xc8(0x08)
	uint64_t HitFxId; // 0xd0(0x08)
	uint64_t BulletTrailEffectId; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_SpawnDrama
// Size: 0xb0 (Inherited: 0x78)
class UDFMAITask_SpawnDrama : public UBTTaskNode {
public:

	struct FBlackboardKeySelector SpawnLocationBBKey; // 0x78(0x28)
	struct UClass* DramaClass; // 0xa0(0x08)
	bool DespawnWhenDramaFinished; // 0xa8(0x01)
	enum class EAIDramaPriority DramaPriority; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_TakingCover
// Size: 0xd8 (Inherited: 0x78)
class UDFMAITask_TakingCover : public UBTTaskNode {
public:

	enum class ETakingCoverType CoverType; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FBlackboardKeySelector TargetLocationBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector TargetYawBBKey; // 0xa8(0x28)
	char pad_D0[0x8]; // 0xd0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_UseItem
// Size: 0xb8 (Inherited: 0x80)
class UDFMAITask_UseItem : public UGPBTTaskBase {
public:

	struct FAIStringValue ItemIDBBKey; // 0x80(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_WaitDifficultyShootTime
// Size: 0x80 (Inherited: 0x80)
class UDFMAITask_WaitDifficultyShootTime : public UBTTask_Wait {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIUnitSpawn
// Size: 0x410 (Inherited: 0x378)
class ADFMAIUnitSpawn : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	bool bCanSpawn; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	float DefaultSpawnCoolDownTime; // 0x38c(0x04)
	int32_t MinAliveAINum; // 0x390(0x04)
	bool bLimitSpawnTimes; // 0x394(0x01)
	char pad_395[0x3]; // 0x395(0x03)
	int32_t MaxSpawnTimes; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct TArray<struct FUnitSpawnParams> UnitSpawnParams; // 0x3a0(0x10)
	bool bTriggerNextSpawn; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	int32_t CurrentSpawnTimes; // 0x3b4(0x04)
	struct FVector TargetLocation; // 0x3b8(0x0c)
	struct FName DramaTag; // 0x3c4(0x08)
	bool bAutoSpawn; // 0x3cc(0x01)
	char pad_3CD[0x3]; // 0x3cd(0x03)
	float DelayTime; // 0x3d0(0x04)
	char pad_3D4[0x5]; // 0x3d4(0x05)
	bool bUpdateDrama; // 0x3d9(0x01)
	bool bNeedDramaAttachToMe; // 0x3da(0x01)
	char pad_3DB[0x1]; // 0x3db(0x01)
	bool bRandomSpawn; // 0x3dc(0x01)
	char pad_3DD[0x3]; // 0x3dd(0x03)
	int32_t RandomSpawnNum; // 0x3e0(0x04)
	float OuterRadius; // 0x3e4(0x04)
	float InnerRadius; // 0x3e8(0x04)
	struct FVector SpawnCenter; // 0x3ec(0x0c)
	struct UClass* TargetDramaArea; // 0x3f8(0x08)
	struct FName RandomSpawnTag; // 0x400(0x08)
	char pad_408[0x8]; // 0x408(0x08)

	void UpdateUnitSpawnParams(); // Function DFMGameplay.DFMAIUnitSpawn.UpdateUnitSpawnParams // (Final|Native|Public|BlueprintCallable) // @ game+0x626dd20
	void UpdateUnitLocation(struct FVector NewLocation); // Function DFMGameplay.DFMAIUnitSpawn.UpdateUnitLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x626dc90
	void StopUnitSpawn(); // Function DFMGameplay.DFMAIUnitSpawn.StopUnitSpawn // (Final|Native|Public|BlueprintCallable) // @ game+0x626d9b0
	void StartUnitSpawn(); // Function DFMGameplay.DFMAIUnitSpawn.StartUnitSpawn // (Final|Native|Public|BlueprintCallable) // @ game+0x626d990
	void OnReset(); // Function DFMGameplay.DFMAIUnitSpawn.OnReset // (Final|Native|Public) // @ game+0x626d400
	void OnReplayStage(struct AGPQuestStage* InStage); // Function DFMGameplay.DFMAIUnitSpawn.OnReplayStage // (Final|Native|Public) // @ game+0x626d380
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAnimDataComponent
// Size: 0x8b0 (Inherited: 0x8b0)
class UDFMAnimDataComponent : public UGPAnimDataComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMapMarkerItem
// Size: 0x480 (Inherited: 0x438)
class UDFMapMarkerItem : public UGPMapMarkerItem {
public:

	struct UMapIconViewController* MapIconViewController; // 0x438(0x08)
	struct FDFMMapSignInfo MapSignInfo; // 0x440(0x38)
	char pad_478[0x8]; // 0x478(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAttributeSetBehaviorFactor
// Size: 0xa8 (Inherited: 0x38)
class UDFMAttributeSetBehaviorFactor : public UGPAttributeSet {
public:

	char pad_38[0x10]; // 0x38(0x10)
	struct FGPGameplayAttributeData NormalBehaviorFactor; // 0x48(0x18)
	struct FGPGameplayAttributeData DefensiveBehaviorFactor; // 0x60(0x18)
	struct FGPGameplayAttributeData DistanceApartBehaviorFactor; // 0x78(0x18)
	struct FGPGameplayAttributeData AgressiveBehaviorFactor; // 0x90(0x18)

	void OnRep_NormalBehaviorFactor(struct FGPGameplayAttributeData& OldData); // Function DFMGameplay.DFMAttributeSetBehaviorFactor.OnRep_NormalBehaviorFactor // (Final|Native|Protected|HasOutParms) // @ game+0x626d2d0
	void OnRep_DistanceApartBehaviorFactor(struct FGPGameplayAttributeData& OldData); // Function DFMGameplay.DFMAttributeSetBehaviorFactor.OnRep_DistanceApartBehaviorFactor // (Final|Native|Protected|HasOutParms) // @ game+0x626d220
	void OnRep_DefensiveBehaviorFactor(struct FGPGameplayAttributeData& OldData); // Function DFMGameplay.DFMAttributeSetBehaviorFactor.OnRep_DefensiveBehaviorFactor // (Final|Native|Protected|HasOutParms) // @ game+0x626d170
	void OnRep_AgressiveBehaviorFactor(struct FGPGameplayAttributeData& OldData); // Function DFMGameplay.DFMAttributeSetBehaviorFactor.OnRep_AgressiveBehaviorFactor // (Final|Native|Protected|HasOutParms) // @ game+0x626d0c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBattleFieldSystem
// Size: 0x2c8 (Inherited: 0x260)
class UDFMBattleFieldSystem : public UGPBattleFieldSystem {
public:

	struct TArray<struct AInteractor_TimeBomb*> ActivatedBombs; // 0x260(0x10)
	/*struct FMulticastInlineDelegate*/char OnNewActivatedBombEvent[0x10]; // 0x270(0x10)
	char pad_280[0x10]; // 0x280(0x10)
	struct AActor* PartsDisplay; // 0x290(0x08)
	struct AActor* PartsLight; // 0x298(0x08)
	char pad_2A0[0x18]; // 0x2a0(0x18)
	struct TArray<struct ADFMCharacter*> OutlineEffectCharacterList; // 0x2b8(0x10)

	void UnRegisterCharacterOnOutlineEffect(struct ADFMCharacter* InCharacter); // Function DFMGameplay.DFMBattleFieldSystem.UnRegisterCharacterOnOutlineEffect // (Final|Native|Public) // @ game+0x626dc10
	void SetBlockWallVisable(bool visable); // Function DFMGameplay.DFMBattleFieldSystem.SetBlockWallVisable // (Final|Native|Public|BlueprintCallable) // @ game+0x626d850
	void RegisterCharacterOnOutlineEffect(struct ADFMCharacter* InCharacter); // Function DFMGameplay.DFMBattleFieldSystem.RegisterCharacterOnOutlineEffect // (Final|Native|Public) // @ game+0x626d7d0
	void NotifyCharacterOnOutlineEffect(); // Function DFMGameplay.DFMBattleFieldSystem.NotifyCharacterOnOutlineEffect // (Final|Native|Protected) // @ game+0x626cbd0
	void AddBlockWall(struct AActor* wall); // Function DFMGameplay.DFMBattleFieldSystem.AddBlockWall // (Final|Native|Public|BlueprintCallable) // @ game+0x626c590
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBattleSpectateModeLogicComponent
// Size: 0x148 (Inherited: 0x100)
class UDFMBattleSpectateModeLogicComponent : public UActorComponent {
public:

	enum class EDFMGamePlayMode DFMGamePlayerMode; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float SetViewTargetTransitionTimeout; // 0x104(0x04)
	float LevelCompletePercentage; // 0x108(0x04)
	bool SOLEnterSpectateModeCheckState; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct AGPNetworkPlayerController* GPNetworkPlayer; // 0x110(0x08)
	char pad_118[0x30]; // 0x118(0x30)

	void ServerRequestSpectificLiveSpectatingLogic(enum class EDFMGamePlayMode GamePlayerMode); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.ServerRequestSpectificLiveSpectatingLogic // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35e5810
	void ProcessKillInfo(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* WeaponDesc); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.ProcessKillInfo // (Final|Native|Public|HasOutParms) // @ game+0x626d5e0
	void OnStreamingLoadingPercentage(int32_t Percentage); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.OnStreamingLoadingPercentage // (Final|Native|Protected) // @ game+0x626d460
	void OnSetViewTargetTransitionTimeoutFunc(); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.OnSetViewTargetTransitionTimeoutFunc // (Final|Native|Protected) // @ game+0x626d440
	void OnSetViewTargetReleaseWorldStreamingFunc(); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.OnSetViewTargetReleaseWorldStreamingFunc // (Final|Native|Protected) // @ game+0x626d420
	void OnPlayerServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.OnPlayerServerMatchEnd // (Final|Native|Public) // @ game+0x626cfe0
	void OnLocalFocusChange(struct AActor* OldTarget, struct AActor* NewTarget); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.OnLocalFocusChange // (Final|Native|Protected) // @ game+0x626cea0
	void NextTimeMustStartFade(); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.NextTimeMustStartFade // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e377d0
	void ClientSpectateLeaveMatch(); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.ClientSpectateLeaveMatch // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35a3800
	void ClientChangeWatchTarget(struct FVector TargetLocation, bool bResetViewOwner); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.ClientChangeWatchTarget // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x626c6b0
	bool CheckObserverNeedWaitStreaming(struct FVector& TargetLocation); // Function DFMGameplay.DFMBattleSpectateModeLogicComponent.CheckObserverNeedWaitStreaming // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x626c610
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBehaviorFactorComponent
// Size: 0x118 (Inherited: 0x108)
class UDFMBehaviorFactorComponent : public UGPAttributeBaseComponent {
public:

	struct AController* OwnerController; // 0x108(0x08)
	struct UDFMAttributeSetBehaviorFactor* BehaviorFactorSet; // 0x110(0x08)

	void OnBehaviorFactorChange(enum class EGPSpecificBehaviorType factorType, uint32_t NewValue); // Function DFMGameplay.DFMBehaviorFactorComponent.OnBehaviorFactorChange // (Native|Public) // @ game+0x626cbf0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBlackboardComponent
// Size: 0x1100 (Inherited: 0xf18)
class UDFMBlackboardComponent : public UGPBlackboardComponent {
public:

	struct ADFMPlayerController* DFMPlayer; // 0xf18(0x08)
	struct ADFMCharacter* DFMCharacter; // 0xf20(0x08)
	struct UInteractorComponent* InteractorComponent; // 0xf28(0x08)
	struct UPlayerExitComponent* PlayerExitComponent; // 0xf30(0x08)
	struct UInventoryManager* InventoryManager; // 0xf38(0x08)
	struct UInventoryUseItemManager* InventoryUseItemManager; // 0xf40(0x08)
	struct UCharacterAttributesCenterComponent* CharacterAttributesCenter; // 0xf48(0x08)
	struct UDFMBuffSystemComponent* BuffSystemComponent; // 0xf50(0x08)
	struct UDFMSkillComponent* DFMSkill; // 0xf58(0x08)
	struct UDFMHealthDataComponent* DFMHealthData; // 0xf60(0x08)
	struct UDFMTelescopeComponent* TelescopeComponent; // 0xf68(0x08)
	struct UDFMCharacterBattleClassComponent* DFMBattleClass; // 0xf70(0x08)
	struct UDFMProcessAIMsgComponent* ProcessAIMsgComponent; // 0xf78(0x08)
	struct UDFMCharacterAmbientAudioFSM* DFMCharacterAmbientAudioFSM; // 0xf80(0x08)
	struct UCharacterEquipComponent* CharacterEquipComponent; // 0xf88(0x08)
	struct UNZSkyBoxComponent* SkyBoxComponent; // 0xf90(0x08)
	struct UDFMRedeployComponent* RedeployComponent; // 0xf98(0x08)
	struct UDFMAbilityPathTracingComponent* DFMAbilityPathTracingComponent; // 0xfa0(0x08)
	struct ADFMPlayerState* DFMPlayerState; // 0xfa8(0x08)
	struct UInventoryItemBase* CurrentWantUseItem; // 0xfb0(0x08)
	enum class ECharacterPart CurrentWantUseItemPart; // 0xfb8(0x01)
	char pad_FB9[0x7]; // 0xfb9(0x07)
	struct FUseItemArgs CurrentWantUseItemArgs; // 0xfc0(0x38)
	bool bIsHoldAndUseItem; // 0xff8(0x01)
	bool bIsSkillCancel; // 0xff9(0x01)
	char pad_FFA[0x2]; // 0xffa(0x02)
	struct FSkillEventArgs CurrentSkillArgs; // 0xffc(0x0c)
	enum class EInGameBattleClassType CurrentArmdedForce; // 0x1008(0x01)
	char pad_1009[0x7]; // 0x1009(0x07)
	int64_t CurrentExpertID; // 0x1010(0x08)
	/*struct FMulticastInlineDelegate*/char OnCutSceneStateChange[0x10]; // 0x1018(0x10)
	/*struct TScriptInterface<ICCTVInterface>*/char WatchingCCTV[0x10]; // 0x1028(0x10)
	char pad_1038[0x8]; // 0x1038(0x08)
	struct ADFMSceneWeapon* CurrentSceneWeapon; // 0x1040(0x08)
	struct ADFScenceWeaponPawn* CurrentSceneWeaponPawn; // 0x1048(0x08)
	struct TArray<struct AGPCharacterBase*> AllEnemyAround; // 0x1050(0x10)
	char pad_1060[0x4]; // 0x1060(0x04)
	struct FDFMBlackboardAutoDriveVehicleData AutoDriveVehicleData; // 0x1064(0x08)
	bool bIsInAmbientLightVolume; // 0x106c(0x01)
	bool bIsInAddAmbientLightFatorVolume; // 0x106d(0x01)
	char pad_106E[0x2]; // 0x106e(0x02)
	struct AAddAmbientLightFatorVolumeActor* CurrentAmbientLightVolume; // 0x1070(0x08)
	char pad_1078[0x20]; // 0x1078(0x20)
	bool bIsInDoor; // 0x1098(0x01)
	char pad_1099[0x17]; // 0x1099(0x17)
	float RepairTimeTotal; // 0x10b0(0x04)
	char pad_10B4[0x4]; // 0x10b4(0x04)
	struct AActor* LastRepairActor; // 0x10b8(0x08)
	struct FClientTracingEnemyHUDData C202TracingEnemyHUDData; // 0x10c0(0x18)
	int32_t bC202BeTracingLevel; // 0x10d8(0x04)
	struct TWeakObjectPtr<struct AActor> LastAmmoBox; // 0x10dc(0x08)
	char pad_10E4[0xc]; // 0x10e4(0x0c)
	struct TWeakObjectPtr<struct AActor> CurSmokeWallUAS; // 0x10f0(0x08)
	char pad_10F8[0x8]; // 0x10f8(0x08)

	void OnVaultAndClimbEnd(struct UGPVaultAndClimbComponent* InVaultAndClimbComp); // Function DFMGameplay.DFMBlackboardComponent.OnVaultAndClimbEnd // (Final|Native|Public) // @ game+0x626d560
	void OnVaultAndClimbBegin(struct UGPVaultAndClimbComponent* InVaultAndClimbComp); // Function DFMGameplay.DFMBlackboardComponent.OnVaultAndClimbBegin // (Final|Native|Public) // @ game+0x626d4e0
	void NotifyActorLocationAndRotation(struct FVector pos, struct FRotator Rot); // Function DFMGameplay.DFMBlackboardComponent.NotifyActorLocationAndRotation // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x626caf0
	int32_t GetArmorLevel(enum class EEquipmentType EquipmentType); // Function DFMGameplay.DFMBlackboardComponent.GetArmorLevel // (Final|Native|Public) // @ game+0x626c980
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBroadcastComponent
// Size: 0x108 (Inherited: 0x100)
class UDFMBroadcastComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)

	void OnServerPlayerRescueSucceed(struct AGPCharacterBase* Player, struct AGPCharacterBase* RescueTarget); // Function DFMGameplay.DFMBroadcastComponent.OnServerPlayerRescueSucceed // (Final|Native|Protected) // @ game+0x6273720
	void OnServerPlayerLoginDelegate(struct APlayerController* PC); // Function DFMGameplay.DFMBroadcastComponent.OnServerPlayerLoginDelegate // (Native|Protected) // @ game+0x360b770
	void OnServerPlayerEscapeDelegate(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.DFMBroadcastComponent.OnServerPlayerEscapeDelegate // (Final|Native|Protected) // @ game+0x367e810
	void OnServerPlayerBan(int64_t InPlayerUin, int32_t reason, struct FString custom_reson); // Function DFMGameplay.DFMBroadcastComponent.OnServerPlayerBan // (Native|Protected) // @ game+0x6273590
	void OnPlayerKnockDownNotifySignature(struct FKillInfo& KnockDownInfo); // Function DFMGameplay.DFMBroadcastComponent.OnPlayerKnockDownNotifySignature // (Final|Native|Protected|HasOutParms) // @ game+0x6273300
	void OnPlayerExitAwakeChangeDelegate(struct APlayerExitBase* PlayerExitBase, bool bAwake); // Function DFMGameplay.DFMBroadcastComponent.OnPlayerExitAwakeChangeDelegate // (Final|Native|Protected) // @ game+0x6273230
	void OnGameStateKillInfoNotifySignature(struct TArray<struct FKillInfo>& NewAddKillInfo); // Function DFMGameplay.DFMBroadcastComponent.OnGameStateKillInfoNotifySignature // (Final|Native|Protected|HasOutParms) // @ game+0x6272f80
	void OnClientReadyToPlayDelegate(struct APlayerController* PC); // Function DFMGameplay.DFMBroadcastComponent.OnClientReadyToPlayDelegate // (Native|Protected) // @ game+0x360b800
	void DispatchMsg(struct FGameBrocastMsg& Msg); // Function DFMGameplay.DFMBroadcastComponent.DispatchMsg // (Native|Public|HasOutParms) // @ game+0x6271b80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffEffectsComponent
// Size: 0x1b8 (Inherited: 0x100)
class UDFMBuffEffectsComponent : public UActorComponent {
public:

	struct FString PostProcessVolumeName_PC; // 0x100(0x10)
	struct TMap<uint32_t, struct UDFMBuffClientEffectBase*> BuffEffectMap; // 0x110(0x50)
	char pad_160[0x10]; // 0x160(0x10)
	struct FTimerHandle RemoveBuffTipsTimerHandle; // 0x170(0x08)
	char pad_178[0x10]; // 0x178(0x10)
	struct TArray<struct UCurveFloat*> BloomCurveList; // 0x188(0x10)
	struct TArray<float> BloomCurveStartTimeList; // 0x198(0x10)
	struct APostProcessVolume* PostProcessVolume; // 0x1a8(0x08)
	bool bNeedTickBloom; // 0x1b0(0x01)
	char pad_1B1[0x7]; // 0x1b1(0x07)

	void UpdateBloomIntensity(); // Function DFMGameplay.DFMBuffEffectsComponent.UpdateBloomIntensity // (Final|Native|Public) // @ game+0x6274330
	void StopPlayBloomEffect(); // Function DFMGameplay.DFMBuffEffectsComponent.StopPlayBloomEffect // (Final|Native|Public) // @ game+0x6273fb0
	void StartPlayBloomEffect(struct UCurveFloat* CurrCurve); // Function DFMGameplay.DFMBuffEffectsComponent.StartPlayBloomEffect // (Final|Native|Public) // @ game+0x6273f30
	void ShowRemoveBuffTips(); // Function DFMGameplay.DFMBuffEffectsComponent.ShowRemoveBuffTips // (Final|Native|Protected) // @ game+0x6273f10
	void OnCharacterOBStateChanged(bool bFocus); // Function DFMGameplay.DFMBuffEffectsComponent.OnCharacterOBStateChanged // (Final|Native|Protected) // @ game+0x6272ab0
	void NotifyTriggerInstantBuff(struct FCharacterBuff& BuffInfo); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyTriggerInstantBuff // (Final|Native|Protected|HasOutParms) // @ game+0x6272920
	void NotifyRemoveBuff(struct FCharacterBuff BuffInfo); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyRemoveBuff // (Final|Native|Protected) // @ game+0x62727b0
	void NotifyRefreshBuff(struct FCharacterBuff& OldBuffInfo, struct FCharacterBuff& NewBuffInfo); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyRefreshBuff // (Final|Native|Protected|HasOutParms) // @ game+0x6272620
	void NotifyBuffEventTag(uint32_t BuffId, struct FName EventTag); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyBuffEventTag // (Final|Native|Public) // @ game+0x6272340
	void NotifyBuffApplyAttributeEffect(struct FClientAttributeEffectContext& EffectContext); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyBuffApplyAttributeEffect // (Final|Native|Protected|HasOutParms) // @ game+0x62721e0
	void NotifyAddBuff(struct FCharacterBuff& BuffInfo); // Function DFMGameplay.DFMBuffEffectsComponent.NotifyAddBuff // (Final|Native|Protected|HasOutParms) // @ game+0x62720f0
	bool GetSceneDefaultBloomIntensity(); // Function DFMGameplay.DFMBuffEffectsComponent.GetSceneDefaultBloomIntensity // (Final|Native|Public) // @ game+0x62720c0
	void DisplayRemoveBuffTips(); // Function DFMGameplay.DFMBuffEffectsComponent.DisplayRemoveBuffTips // (Final|Native|Protected) // @ game+0x6271c90
	void DelayRemoveCharacter3pParticle(struct UParticleSystemComponent* ParticleSystemComponent, float DelayTime); // Function DFMGameplay.DFMBuffEffectsComponent.DelayRemoveCharacter3pParticle // (Final|Native|Protected) // @ game+0x6271a40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffSystemComponent
// Size: 0x420 (Inherited: 0x100)
class UDFMBuffSystemComponent : public UActorComponent {
public:

	char pad_100[0x48]; // 0x100(0x48)
	/*struct FMulticastInlineDelegate*/char OnBuffClientEffectEvent[0x10]; // 0x148(0x10)
	char pad_158[0x10]; // 0x158(0x10)
	struct TMap<struct FName, struct FBuffEntityArray> CharacterBuffMap; // 0x168(0x50)
	struct TMap<uint32_t, uint32_t> BuffCountMaps; // 0x1b8(0x50)
	char pad_208[0x50]; // 0x208(0x50)
	struct TArray<struct UDFMCharacterBuffEntityBase*> BuffEntityArray; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)
	struct FCharacterBuffFastArray CharacterBuffArray; // 0x270(0x28)
	char pad_298[0x10]; // 0x298(0x10)
	struct TArray<struct FCharacterBuff> TempClientBuffArray; // 0x2a8(0x10)
	struct TArray<struct FCharacterBuff> ClientRemoveBuffArray; // 0x2b8(0x10)
	struct TArray<enum class EBuffDisableTag> CharacterDisableBuffStatusArray; // 0x2c8(0x10)
	char pad_2D8[0xc0]; // 0x2d8(0xc0)
	struct TArray<struct UBuffMonitorBase*> BuffMonitors; // 0x398(0x10)
	char pad_3A8[0x18]; // 0x3a8(0x18)
	struct TMap<uint32_t, struct FBuffAudioArray> BuffIDToAudioArray; // 0x3c0(0x50)
	struct TArray<struct FBuffAudioPriority> BuffAudioPriorityArray; // 0x410(0x10)

	void UploadSkillDataFlowBuff(enum class EDataFlowType Type, int32_t BuffId, int32_t SkillId, bool UseTimeWheel); // Function DFMGameplay.DFMBuffSystemComponent.UploadSkillDataFlowBuff // (Final|Native|Public) // @ game+0x6274350
	void TestServerRemoveBuff(int32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffSystemComponent.TestServerRemoveBuff // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6274240
	void TestServerRemoveAllBuffs(); // Function DFMGameplay.DFMBuffSystemComponent.TestServerRemoveAllBuffs // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360c9a0
	void TestServerAddBuff(int32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffSystemComponent.TestServerAddBuff // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6274170
	void TestRemoveBuff(int32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffSystemComponent.TestRemoveBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x62740b0
	void TestRemoveAllBuffs(); // Function DFMGameplay.DFMBuffSystemComponent.TestRemoveAllBuffs // (Final|Native|Public|BlueprintCallable) // @ game+0x6274090
	void TestAddBuff(int32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffSystemComponent.TestAddBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x6273fd0
	void RemoveBuffsById(struct TArray<uint32_t> RemoveBuffIds); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuffsById // (Final|Native|Public) // @ game+0x6273d70
	void RemoveBuffDurationRate(int32_t BuffId); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x6273cf0
	void RemoveBuffDisableStatus(enum class EBuffDisableTag NewBuffDisableTag); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuffDisableStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6273c70
	void RemoveBuffByType(struct FName BuffType, enum class ECharacterPart BuffPart, struct FName reason); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuffByType // (Native|Public) // @ game+0x6273b70
	void RemoveBuffByGUID(uint64_t InBuffGUID); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuffByGUID // (Native|Public) // @ game+0x38e19b0
	void RemoveBuff(uint32_t& InBuffId, enum class ECharacterPart& InCharacterPart); // Function DFMGameplay.DFMBuffSystemComponent.RemoveBuff // (Native|Public|HasOutParms) // @ game+0x6273a90
	void RemoveAllBuffs(); // Function DFMGameplay.DFMBuffSystemComponent.RemoveAllBuffs // (Final|Native|Public) // @ game+0x6273a70
	void RecordBuffIDToAudioArray(int32_t BuffId, struct TArray<struct FSpecifyTimePlayAudio> Value); // Function DFMGameplay.DFMBuffSystemComponent.RecordBuffIDToAudioArray // (Final|Native|Public) // @ game+0x62737e0
	void OnServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMBuffSystemComponent.OnServerMatchEnd // (Final|Native|Public) // @ game+0x62734d0
	void OnRep_CharacterBuffArray(struct FCharacterBuffFastArray& OldCharacterBuffArray); // Function DFMGameplay.DFMBuffSystemComponent.OnRep_CharacterBuffArray // (Final|Native|Protected|HasOutParms) // @ game+0x62733b0
	void OnClientRemoveBuffEffect(struct FCharacterBuff& ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.OnClientRemoveBuffEffect // (Final|Native|Protected|HasOutParms) // @ game+0x6272e90
	void OnClientRefreshBuffEffect(struct FCharacterBuff& ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.OnClientRefreshBuffEffect // (Final|Native|Protected|HasOutParms) // @ game+0x6272da0
	void OnClientPauseBuffEffect(struct FCharacterBuff& ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.OnClientPauseBuffEffect // (Final|Native|Protected|HasOutParms) // @ game+0x6272cb0
	void OnClientAddBuffEffect(struct FCharacterBuff& ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.OnClientAddBuffEffect // (Final|Native|Protected|HasOutParms) // @ game+0x6272bc0
	void OnCharaterHealthChange(int32_t Health); // Function DFMGameplay.DFMBuffSystemComponent.OnCharaterHealthChange // (Final|Native|Protected) // @ game+0x6272b40
	void OnBuffTimeOutCallback(struct UDFMCharacterBuffEntityBase* BuffEntityBase); // Function DFMGameplay.DFMBuffSystemComponent.OnBuffTimeOutCallback // (Final|Native|Protected) // @ game+0x6272a30
	void OnAttributeSetReady(); // Function DFMGameplay.DFMBuffSystemComponent.OnAttributeSetReady // (Final|Native|Protected) // @ game+0x6272a10
	void NotifyClientApplyAttributeEffect(struct FClientAttributeEffectContext& EffectContext); // Function DFMGameplay.DFMBuffSystemComponent.NotifyClientApplyAttributeEffect // (Final|Native|Protected|HasOutParms) // @ game+0x62724c0
	void NotifyBuffEventTag(uint32_t BuffId, struct FName EventTag); // Function DFMGameplay.DFMBuffSystemComponent.NotifyBuffEventTag // (Final|Native|Public) // @ game+0x6272400
	struct TArray<struct FCharacterBuff> GetCharacterVisbleBuffs(); // Function DFMGameplay.DFMBuffSystemComponent.GetCharacterVisbleBuffs // (Native|Public) // @ game+0x6272080
	struct TArray<struct FCharacterBuffGroup> GetCharacterVisbleBuffGroups(); // Function DFMGameplay.DFMBuffSystemComponent.GetCharacterVisbleBuffGroups // (Native|Public) // @ game+0x6271ef0
	struct TArray<struct FCharacterBuff> GetCharacterBuffs(); // Function DFMGameplay.DFMBuffSystemComponent.GetCharacterBuffs // (Native|Public) // @ game+0x6271eb0
	struct TArray<struct FSpecifyTimePlayAudio> GetBuffIDToAudioArray(int32_t BuffId); // Function DFMGameplay.DFMBuffSystemComponent.GetBuffIDToAudioArray // (Final|Native|Public) // @ game+0x6271e00
	float GetBuffDurationRate(int32_t BuffId); // Function DFMGameplay.DFMBuffSystemComponent.GetBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x6271d70
	struct TArray<struct FSpecifyTimePlayAudio> GetBuffAudios(struct FBuffAudioPriority BuffAudioPriority); // Function DFMGameplay.DFMBuffSystemComponent.GetBuffAudios // (Final|Native|Public) // @ game+0x6271cd0
	void DumpBuffInfo(); // Function DFMGameplay.DFMBuffSystemComponent.DumpBuffInfo // (Final|Exec|Native|Public) // @ game+0x6271cb0
	void DeleteBuffAudioPriority(uint32_t BuffId); // Function DFMGameplay.DFMBuffSystemComponent.DeleteBuffAudioPriority // (Final|Native|Public) // @ game+0x6271b00
	void ClientTriggerInstantBuffEffect(struct FCharacterBuff ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.ClientTriggerInstantBuffEffect // (Net|Native|Event|Protected|NetClient) // @ game+0x6271960
	void ClientRemoveBuffEffectNotify(struct FName EffectNotify); // Function DFMGameplay.DFMBuffSystemComponent.ClientRemoveBuffEffectNotify // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0xbd8ba0
	void ClientMulticastBuffApplyAttributeEffect(struct FClientAttributeEffectContext EffectContext); // Function DFMGameplay.DFMBuffSystemComponent.ClientMulticastBuffApplyAttributeEffect // (Net|Native|Event|NetMulticast|Protected) // @ game+0x6271800
	void ClientEffectBuffRefresh(struct FCharacterBuff ClientBuff); // Function DFMGameplay.DFMBuffSystemComponent.ClientEffectBuffRefresh // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x6271720
	void ClientBuffApplyAttributeEffect(struct FClientAttributeEffectContext EffectContext); // Function DFMGameplay.DFMBuffSystemComponent.ClientBuffApplyAttributeEffect // (Net|Native|Event|Protected|NetClient) // @ game+0x62715c0
	void AddBuffDurationRate(int32_t BuffId, float Rate); // Function DFMGameplay.DFMBuffSystemComponent.AddBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x62713c0
	void AddBuffDisableStatus(enum class EBuffDisableTag NewBuffDisableTag); // Function DFMGameplay.DFMBuffSystemComponent.AddBuffDisableStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6271340
	uint64_t AddBuff(uint32_t InBuffId, enum class ECharacterPart InCharacterPart, struct AActor* SourceActor, struct AActor* MakerInstigator, int32_t SkillId); // Function DFMGameplay.DFMBuffSystemComponent.AddBuff // (Native|Public) // @ game+0x62711a0
	void AccurateNotifyBuffRefresh(struct FCharacterBuff CurrBuff); // Function DFMGameplay.DFMBuffSystemComponent.AccurateNotifyBuffRefresh // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6270d10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffUtil
// Size: 0x30 (Inherited: 0x30)
class UDFMBuffUtil : public UObject {
public:


	uint32_t STATIC_ToUnixSecondTimestamp(); // Function DFMGameplay.DFMBuffUtil.ToUnixSecondTimestamp // (Final|Native|Static|Public) // @ game+0x627e330
	uint64_t STATIC_ToUnixMilliSecondTimestamp(); // Function DFMGameplay.DFMBuffUtil.ToUnixMilliSecondTimestamp // (Final|Native|Static|Public) // @ game+0x627e300
	struct FString STATIC_TimeFormat(double Secs); // Function DFMGameplay.DFMBuffUtil.TimeFormat // (Final|Native|Static|Public) // @ game+0x627e230
	void STATIC_RemoveBuff(struct AActor* DestActor, int32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffUtil.RemoveBuff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x627cd10
	bool STATIC_HasHadBuff(struct AActor* DestActor, uint32_t BuffId, float TimeLimit); // Function DFMGameplay.DFMBuffUtil.HasHadBuff // (Final|Native|Static|Public) // @ game+0x627b120
	bool STATIC_HasBuff(struct AActor* DestActor, uint32_t BuffId); // Function DFMGameplay.DFMBuffUtil.HasBuff // (Final|Native|Static|Public) // @ game+0x627b060
	struct FString STATIC_GetBuffIconName(struct FName Buff); // Function DFMGameplay.DFMBuffUtil.GetBuffIconName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x627ac00
	float STATIC_GetBuffEndTimeByPart(struct AActor* DestActor, struct FName BuffType, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffUtil.GetBuffEndTimeByPart // (Final|Native|Static|Public) // @ game+0x627ab00
	struct FDFMBuffEffectRow STATIC_GetBuffEffectRowStruct(uint32_t BuffId); // Function DFMGameplay.DFMBuffUtil.GetBuffEffectRowStruct // (Final|Native|Static|Public) // @ game+0x627aa50
	bool STATIC_ContainAttributeAdditionByType(struct AActor* DestActor, struct FName BuffType, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffUtil.ContainAttributeAdditionByType // (Final|Native|Static|Public) // @ game+0x627a240
	bool STATIC_ContainAttributeAddition(struct AActor* DestActor, uint32_t BuffId, enum class ECharacterPart BuffPart); // Function DFMGameplay.DFMBuffUtil.ContainAttributeAddition // (Final|Native|Static|Public) // @ game+0x627a150
	int64_t STATIC_AddBuff(struct AActor* DestActor, int32_t BuffId, enum class ECharacterPart BuffPart, struct AActor* SourceActor, struct AActor* MakerInstigator, int32_t SkillId); // Function DFMGameplay.DFMBuffUtil.AddBuff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62788f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCameraTrackActor
// Size: 0x388 (Inherited: 0x378)
class ADFMCameraTrackActor : public AActor {
public:

	struct USplineComponent* SplineCompPosition; // 0x378(0x08)
	struct USplineComponent* SplineCompRotation; // 0x380(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterAmbientAudioFSM
// Size: 0x188 (Inherited: 0x100)
class UDFMCharacterAmbientAudioFSM : public UActorComponent {
public:

	enum class ECharacterAudioState AudioState; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	struct FString ClosestBossName; // 0x108(0x10)
	float FightSphereRadius; // 0x118(0x04)
	int32_t BigScaleFightEnemyNum; // 0x11c(0x04)
	float OffFightSphereRadius; // 0x120(0x04)
	float QuitFireStateThreshold; // 0x124(0x04)
	struct UGPAudioEventAsset* AlertMsgAudioEvent; // 0x128(0x08)
	struct UGPAudioEventAsset* FightMsgAudioEventFirst; // 0x130(0x08)
	struct UGPAudioEventAsset* FightMsgAudioEventSecond; // 0x138(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x140(0x08)
	struct TArray<struct ADFMAICharacter*> AlertAIArray; // 0x148(0x10)
	struct TArray<struct ADFMAICharacter*> AroundAIArray; // 0x158(0x10)
	struct TArray<struct ADFMAICharacter*> BossArray; // 0x168(0x10)
	struct ADFMAICharacter* ClosestBoss; // 0x178(0x08)
	char pad_180[0x8]; // 0x180(0x08)

	void TestLog(struct FString Text); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.TestLog // (Final|Native|Protected) // @ game+0x62821d0
	void Switch2WildRoamState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2WildRoamState // (Final|Native|Public) // @ game+0x62821b0
	void Switch2WarnState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2WarnState // (Final|Native|Public) // @ game+0x6282190
	void Switch2ProwlState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2ProwlState // (Final|Native|Public) // @ game+0x6282170
	void Switch2FireState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2FireState // (Final|Native|Public) // @ game+0x6282150
	void Switch2BossGuardState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2BossGuardState // (Final|Native|Public) // @ game+0x6282130
	void Switch2BossBattleState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2BossBattleState // (Final|Native|Public) // @ game+0x6282110
	void Switch2BossAreaState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.Switch2BossAreaState // (Final|Native|Public) // @ game+0x62820f0
	void ResetAISound(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.ResetAISound // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x129b970
	void PlayFightAudioEvent(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.PlayFightAudioEvent // (Final|Native|Public) // @ game+0x6281f10
	void PlayAudioEventByName(struct FName& AudioEventName); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.PlayAudioEventByName // (Final|Native|Public|HasOutParms) // @ game+0x6281e80
	void PlayAlertAudioEvent(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.PlayAlertAudioEvent // (Final|Native|Public) // @ game+0x6281e00
	void OnSwitch2WildRoamState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2WildRoamState // (Final|Native|Protected) // @ game+0x6281d40
	void OnSwitch2WarnState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2WarnState // (Final|Native|Protected) // @ game+0x6281d20
	void OnSwitch2ProwlState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2ProwlState // (Final|Native|Protected) // @ game+0x6281d00
	void OnSwitch2FireState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2FireState // (Final|Native|Protected) // @ game+0x6281ce0
	void OnSwitch2BossGuardState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2BossGuardState // (Final|Native|Protected) // @ game+0x6281cc0
	void OnSwitch2BossBattleState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2BossBattleState // (Final|Native|Protected) // @ game+0x6281ca0
	void OnSwitch2BossAreaState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnSwitch2BossAreaState // (Final|Native|Protected) // @ game+0x6281c80
	void OnShotByAI(struct ADFMCharacter* AI); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnShotByAI // (Final|Native|Protected) // @ game+0x6281c00
	void OnRep_ClosestBossName(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnRep_ClosestBossName // (Final|Native|Protected) // @ game+0x6281bc0
	void OnRep_AudioState(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnRep_AudioState // (Final|Native|Protected) // @ game+0x6281b80
	void OnBossDead(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.OnBossDead // (Final|Native|Protected) // @ game+0x6281500
	void NotifyFightAI(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.NotifyFightAI // (Final|Native|Public) // @ game+0x6281120
	void NotifyAlertAI(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.NotifyAlertAI // (Final|Native|Public) // @ game+0x6280f40
	int32_t GetAliveEnemyAroundNum(struct FVector SphereSpawnLocation, float SphereRadius); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.GetAliveEnemyAroundNum // (Final|Native|Protected|HasDefaults) // @ game+0x6280d70
	void FindOtherAliveCharacterAround(struct FVector SphereSpawnLocation, float SphereRadius, struct TArray<struct AActor*>& OutActors); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.FindOtherAliveCharacterAround // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6280c00
	void ExitBossBattle(bool bBossDead); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.ExitBossBattle // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x35e4130
	void ExitBossArea(); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.ExitBossArea // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e377d0
	void AmplifyAISound(struct ADFMCharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.AmplifyAISound // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x360bad0
	void AddAIToAlertArray(struct ADFMAICharacter* AICharacter); // Function DFMGameplay.DFMCharacterAmbientAudioFSM.AddAIToAlertArray // (Final|Native|Protected) // @ game+0x6280910
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterAmbientLightControlComponent
// Size: 0x190 (Inherited: 0x100)
class UDFMCharacterAmbientLightControlComponent : public UActorComponent {
public:

	char pad_100[0x1]; // 0x100(0x01)
	bool bDefaultEnableEdgeLight; // 0x101(0x01)
	char pad_102[0x2]; // 0x102(0x02)
	float EdgeLightSwitchOnValue; // 0x104(0x04)
	float EdgeLightSwitchOffValue; // 0x108(0x04)
	bool bForceOverrideAllFator; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct FCharacterAmbientLightParms ForceOverrideAllFator; // 0x110(0x1c)
	bool bOverrideCharacterFator; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)
	struct FCharacterAmbientLightParms OverrideeCharacterFator; // 0x130(0x1c)
	bool bOverrideTODFator; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
	struct FCharacterAmbientLightParms OverrideTODFator; // 0x150(0x1c)
	bool bOverrideFOVFator; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)
	float OverrideFOVFator; // 0x170(0x04)
	bool bEnableCutSceneEdgeLight; // 0x174(0x01)
	char pad_175[0x3]; // 0x175(0x03)
	struct ADFMGameModeGameplaySubsystem* DFMGameModeGameplay; // 0x178(0x08)
	struct ADFMCharacter* LocalCharacter; // 0x180(0x08)
	bool bForceCharacterEdgeLightSwitch; // 0x188(0x01)
	char pad_189[0x7]; // 0x189(0x07)

	void RefreshCharacterLightParameter(); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.RefreshCharacterLightParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x6281fb0
	void RefreshAllCharactersLightParameter(); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.RefreshAllCharactersLightParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x6281f90
	void OnLocalPlayerPawnCreated(); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.OnLocalPlayerPawnCreated // (Final|Native|Protected) // @ game+0x6281980
	void OnLocalCutSceneStateChange(bool IsInCutscene); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.OnLocalCutSceneStateChange // (Final|Native|Protected) // @ game+0x62818f0
	void OnGPSequenceActorStatusChange(struct AActor* Sequence, char Status); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.OnGPSequenceActorStatusChange // (Final|Native|Protected) // @ game+0x6281620
	void DebugSetCharacterEdgeLightSwitch(float Enable); // Function DFMGameplay.DFMCharacterAmbientLightControlComponent.DebugSetCharacterEdgeLightSwitch // (Final|Native|Public|BlueprintCallable) // @ game+0x6280b80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterAttributeCenterComponent
// Size: 0x300 (Inherited: 0x2c8)
class UDFMCharacterAttributeCenterComponent : public UCharacterAttributesCenterComponent {
public:

	char pad_2C8[0x30]; // 0x2c8(0x30)
	struct UGPAttributeSetHealth* AttributeSetHealth; // 0x2f8(0x08)

	void OnAttributeSetReady(); // Function DFMGameplay.DFMCharacterAttributeCenterComponent.OnAttributeSetReady // (Native|Protected) // @ game+0x21b1c60
	void AddHealth(int32_t Health); // Function DFMGameplay.DFMCharacterAttributeCenterComponent.AddHealth // (Final|Native|Public) // @ game+0x6280ae0
	void AddArmor(int32_t ARMOR); // Function DFMGameplay.DFMCharacterAttributeCenterComponent.AddArmor // (Final|Native|Public) // @ game+0x6280990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCharacterAttributeManagerInterface
// Size: 0x30 (Inherited: 0x30)
class UGPCharacterAttributeManagerInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBattleClassComponent
// Size: 0x130 (Inherited: 0x100)
class UDFMCharacterBattleClassComponent : public UActorComponent {
public:

	enum class EInGameBattleClassType BattleClassType; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	int64_t ExpertId; // 0x108(0x08)
	struct TArray<uint32_t> ActiveBuffIdArray; // 0x110(0x10)
	struct ADFMCharacter* DFMCharacter; // 0x120(0x08)
	char pad_128[0x4]; // 0x128(0x04)
	enum class EInGameBattleClassType DefaultClassType; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)

	void UpdateFootStepAudioStyleID(int64_t CurrExpertID); // Function DFMGameplay.DFMCharacterBattleClassComponent.UpdateFootStepAudioStyleID // (Native|Protected) // @ game+0xbd8ba0
	void SpawnClassEquipment(uint64_t EquipID, uint32_t EquipCount, enum class EAttachPosition EquipAttachPosition); // Function DFMGameplay.DFMCharacterBattleClassComponent.SpawnClassEquipment // (Final|Native|Public) // @ game+0x6281ff0
	void OnRep_ExpertID(); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnRep_ExpertID // (Final|Native|Public) // @ game+0x6281be0
	void OnRep_BattleClassType(); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnRep_BattleClassType // (Final|Native|Public) // @ game+0x6281ba0
	void OnPossessedBy(); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnPossessedBy // (Native|Protected) // @ game+0x1e36270
	void OnLiveStatusChanged(struct AGPCharacterBase* OwnerCharacter, char OldStauts, char NewStatus); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnLiveStatusChanged // (Final|Native|Protected) // @ game+0x62817f0
	void OnAsyncLoadArmedForceDataConfigTable(struct FSoftObjectPath& AssetRef, struct TArray<uint32_t> AbilityIdArr); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnAsyncLoadArmedForceDataConfigTable // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6281350
	void OnAsyncLoadAbilityDataConfigTable(struct FSoftObjectPath& AssetRef, struct TArray<uint32_t> AbilityIdArr); // Function DFMGameplay.DFMCharacterBattleClassComponent.OnAsyncLoadAbilityDataConfigTable // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62811a0
	void ClearBattleClassBuff(); // Function DFMGameplay.DFMCharacterBattleClassComponent.ClearBattleClassBuff // (Final|Native|Public) // @ game+0x6280b60
	void AddBattleClassBuff(struct TArray<uint32_t>& BuffIdArr); // Function DFMGameplay.DFMCharacterBattleClassComponent.AddBattleClassBuff // (Final|Native|Public|HasOutParms) // @ game+0x6280a10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterSequenceBindingComponent
// Size: 0x1b0 (Inherited: 0x188)
class UDFMCharacterSequenceBindingComponent : public UGPSequenceBindingComponent {
public:

	bool bOnVehicle; // 0x188(0x01)
	char pad_189[0x27]; // 0x189(0x27)

	void SwitchUIMesh(bool bValue); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.SwitchUIMesh // (Native|Public|BlueprintCallable) // @ game+0x6286350
	void ResetPassengerPosition(); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.ResetPassengerPosition // (Native|Public|BlueprintCallable) // @ game+0x22bcb80
	void OnOwnerCharacterReborn(); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.OnOwnerCharacterReborn // (Final|Native|Protected) // @ game+0x6285e50
	void OnOwnerCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.OnOwnerCharacterDied // (Final|Native|Protected) // @ game+0x6285d50
	void GetOnVehicle(bool bDrive); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.GetOnVehicle // (Native|Public|BlueprintCallable) // @ game+0x62859b0
	void GetOffVehicle(); // Function DFMGameplay.DFMCharacterSequenceBindingComponent.GetOffVehicle // (Native|Public|BlueprintCallable) // @ game+0x1760200
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterStrategyManager
// Size: 0x38 (Inherited: 0x38)
class UDFMCharacterStrategyManager : public UGameInstanceSubsystem {
public:


	struct UDFMCharacterStrategyManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMCharacterStrategyManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6285930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMComBoardComponent
// Size: 0x1310 (Inherited: 0x530)
class UDFMComBoardComponent : public UGPComBoardComponent {
public:

	char pad_530[0x10]; // 0x530(0x10)
	struct TArray<struct FCheckPointInfo> CheckPoints; // 0x540(0x10)
	float CheckLength; // 0x550(0x04)
	float MinimalTouchBushWeight; // 0x554(0x04)
	float MinimalBehindSoftCoverWeight; // 0x558(0x04)
	bool bDrawDebugView; // 0x55c(0x01)
	char pad_55D[0x3]; // 0x55d(0x03)
	float TouchBushAudioPlayMaxDistance; // 0x560(0x04)
	float TimeToConfirmExit; // 0x564(0x04)
	char pad_568[0x10]; // 0x568(0x10)
	struct TArray<enum class EDFMGamePlayMode> AssassinateGameMode; // 0x578(0x10)
	char pad_588[0x8]; // 0x588(0x08)
	struct FAssassinateRepInfo AssassinateRepInfo; // 0x590(0x80)
	struct FDFMAssassinateInfo DFMAssassinateInfo; // 0x610(0x778)
	uint64_t DefaultAssassinateSkinID; // 0xd88(0x08)
	struct AActor* ClientTryAssassinateActor; // 0xd90(0x08)
	float SolCivilianAssassinateTime_PC; // 0xd98(0x04)
	float SolImpendingDeathAssassinateTime_PC; // 0xd9c(0x04)
	float SolHPPercentPlayerAssassinateTime_PC; // 0xda0(0x04)
	float BattleCivilianAssassinateTime_PC; // 0xda4(0x04)
	float BattleImpendingDeathAssassinateTime_PC; // 0xda8(0x04)
	float BattleHPPercentPlayerAssassinateTime_PC; // 0xdac(0x04)
	float SolCivilianAssassinateTime_MB; // 0xdb0(0x04)
	float SolImpendingDeathAssassinateTime_MB; // 0xdb4(0x04)
	float SolHPPercentPlayerAssassinateTime_MB; // 0xdb8(0x04)
	float BattleCivilianAssassinateTime_MB; // 0xdbc(0x04)
	float BattleImpendingDeathAssassinateTime_MB; // 0xdc0(0x04)
	float BattleHPPercentPlayerAssassinateTime_MB; // 0xdc4(0x04)
	float DefaultAssassinateProgressTime; // 0xdc8(0x04)
	float HPPercentAssassinateProgressTime; // 0xdcc(0x04)
	char pad_DD0[0x8]; // 0xdd0(0x08)
	bool SolCheckTargetHPPercent; // 0xdd8(0x01)
	bool SolCheckTargetMove; // 0xdd9(0x01)
	char pad_DDA[0x2]; // 0xdda(0x02)
	float SolCheckTargetMoveSpeedSize; // 0xddc(0x04)
	char pad_DE0[0x20]; // 0xde0(0x20)
	struct FPotentialInteractorInfo CurrentCarryBodyInfo; // 0xe00(0x40)
	struct FBasePoseTransitionAudioConfig BasePoseTransitionAudioConfig; // 0xe40(0x2f0)
	struct FClimbLadderAudioConfig ClimbLadderAudioConfig; // 0x1130(0x80)
	float LockStatusTime; // 0x11b0(0x04)
	char pad_11B4[0xc]; // 0x11b4(0x0c)
	struct FCrocodileBiteDataInfo CurCrocodileBiteData; // 0x11c0(0x60)
	struct UAnimMontage* BittenFPPAnimMontage; // 0x1220(0x08)
	struct UAnimMontage* BittenTPPAnimMontage; // 0x1228(0x08)
	struct UAnimSequence* BittenFPPAnim; // 0x1230(0x08)
	struct UAnimSequence* BittenTPPAnim; // 0x1238(0x08)
	char pad_1240[0x8]; // 0x1240(0x08)
	struct ADFMCharacter* OwnerDFMCharacter; // 0x1248(0x08)
	uint64_t StandAssassinate; // 0x1250(0x08)
	uint64_t StandBeAssassinate; // 0x1258(0x08)
	uint64_t ProneAssassinate; // 0x1260(0x08)
	uint64_t ProneBeAssassinate; // 0x1268(0x08)
	uint64_t ImpendingAssassinate; // 0x1270(0x08)
	uint64_t ImpendingBeAssassinate; // 0x1278(0x08)
	char pad_1280[0x4]; // 0x1280(0x04)
	bool DebugAssassinateFindLoc; // 0x1284(0x01)
	char pad_1285[0x3]; // 0x1285(0x03)
	float DrawTime; // 0x1288(0x04)
	char pad_128C[0x64]; // 0x128c(0x64)
	float CapsultHalfHeight; // 0x12f0(0x04)
	float CapsuleRadiu; // 0x12f4(0x04)
	float SecondCheckRadiu; // 0x12f8(0x04)
	float SetLocCheckCapsultHalfHeight; // 0x12fc(0x04)
	float SetLocCheckCapsuleRadiu; // 0x1300(0x04)
	float SetLocCheckCapsuleRadiu_Prone; // 0x1304(0x04)
	char pad_1308[0x8]; // 0x1308(0x08)

	void StopCharacterBittenAnim(); // Function DFMGameplay.DFMComBoardComponent.StopCharacterBittenAnim // (Final|Native|Public) // @ game+0x628a310
	void ServerTryAssassinate(struct FAssassinateRepInfo RepInfo); // Function DFMGameplay.DFMComBoardComponent.ServerTryAssassinate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x628a1e0
	void PlayCharacterBittenAnim(); // Function DFMGameplay.DFMComBoardComponent.PlayCharacterBittenAnim // (Final|Native|Public) // @ game+0x628a1c0
	void OnTouchBushChanged(); // Function DFMGameplay.DFMComBoardComponent.OnTouchBushChanged // (Final|Native|Public) // @ game+0x3578a00
	void OnSoftCoverStatusChanged(); // Function DFMGameplay.DFMComBoardComponent.OnSoftCoverStatusChanged // (Final|Native|Public) // @ game+0x360c9c0
	void OnHealthDamaged(float Damage, struct FTakeHitInfo& TakeHitInfo); // Function DFMGameplay.DFMComBoardComponent.OnHealthDamaged // (Final|Native|Public|HasOutParms) // @ game+0x6289af0
	void OnDelaySetMontagePos(); // Function DFMGameplay.DFMComBoardComponent.OnDelaySetMontagePos // (Final|Native|Public) // @ game+0x6289ad0
	void OnDelayDrawLeftHandPos(); // Function DFMGameplay.DFMComBoardComponent.OnDelayDrawLeftHandPos // (Final|Native|Public) // @ game+0x6289ab0
	void OnBasePoseStatusChanged(); // Function DFMGameplay.DFMComBoardComponent.OnBasePoseStatusChanged // (Final|Native|Public) // @ game+0x6289a90
	void OnAIFightAndFocusOnMe(struct ADFMCharacter* AICharacter, enum class EAIMsgType MsgType, bool AIFocusOnMe, struct FAIMsgExtendInfo& AIMsgExtendInfo); // Function DFMGameplay.DFMComBoardComponent.OnAIFightAndFocusOnMe // (Final|Native|Public|HasOutParms) // @ game+0x6289920
	void NotifyAlignAnim(struct UAnimSequenceBase* FPPAnim, struct UAnimSequenceBase* TPPAnim, float AnimPos, float AlignTime, struct FTransform RootAlignTransform, struct FVector LeftHadnPos, float LeftHandAligntime); // Function DFMGameplay.DFMComBoardComponent.NotifyAlignAnim // (Final|Native|Public|HasDefaults) // @ game+0x62896c0
	void EndCrocodileBite(); // Function DFMGameplay.DFMComBoardComponent.EndCrocodileBite // (Final|Native|Public) // @ game+0x6289520
	void ClientTryAssassinateBtnRelease(); // Function DFMGameplay.DFMComBoardComponent.ClientTryAssassinateBtnRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x62894e0
	void ClientTryAssassinateBtnDown(); // Function DFMGameplay.DFMComBoardComponent.ClientTryAssassinateBtnDown // (Final|Native|Public|BlueprintCallable) // @ game+0x62894c0
	void ClientTryAssassinate(); // Function DFMGameplay.DFMComBoardComponent.ClientTryAssassinate // (Final|Native|Public|BlueprintCallable) // @ game+0x62894a0
	bool ClientCheckCanAssassinate(); // Function DFMGameplay.DFMComBoardComponent.ClientCheckCanAssassinate // (Final|Native|Public|BlueprintCallable) // @ game+0x6289470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMContainerDataCollector
// Size: 0x3c0 (Inherited: 0x378)
class ADFMContainerDataCollector : public AActor {
public:

	struct TArray<struct FInteractorDisplayData> InteractorDataArr; // 0x378(0x10)
	struct TArray<struct FContainerDisplayData> ContainerDataArr; // 0x388(0x10)
	struct TArray<struct FContainerVolumeData> ContainerVolumeArr; // 0x398(0x10)
	struct TArray<struct FPlayerInContainerVolumeInfo> PlayerInContainerVolumeInfoArr; // 0x3a8(0x10)
	bool bDataCollected; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)

	void OnRep_PlayerInContainerVolumeInfoArr(); // Function DFMGameplay.DFMContainerDataCollector.OnRep_PlayerInContainerVolumeInfoArr // (Final|Native|Protected) // @ game+0x628a1a0
	void OnPlayerLeaveMapContainerVolume(struct ACHARACTER* CHARACTER, uint64_t VolumeId); // Function DFMGameplay.DFMContainerDataCollector.OnPlayerLeaveMapContainerVolume // (Final|Native|Protected) // @ game+0x6289f40
	void OnPlayerEnterMapContainerVolume(struct ACHARACTER* CHARACTER, uint64_t VolumeId); // Function DFMGameplay.DFMContainerDataCollector.OnPlayerEnterMapContainerVolume // (Final|Native|Protected) // @ game+0x6289dd0
	void CollectHiddenInteractorData(); // Function DFMGameplay.DFMContainerDataCollector.CollectHiddenInteractorData // (Final|Native|Protected) // @ game+0x6289500
	void CheckContainerInsideVolume(struct FVector& BoxExtent, struct FTransform& BoxTransform, struct FContainerVolumeData& ContainerVolume); // Function DFMGameplay.DFMContainerDataCollector.CheckContainerInsideVolume // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6289260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMContainerVolumeActor
// Size: 0x3b0 (Inherited: 0x378)
class ADFMContainerVolumeActor : public AActor {
public:

	char pad_378[0x20]; // 0x378(0x20)
	struct USceneComponent* SceneComponent; // 0x398(0x08)
	struct UBoxComponent* CollisionComp; // 0x3a0(0x08)
	uint64_t VolumeId; // 0x3a8(0x08)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.DFMContainerVolumeActor.OnOverlapEnd // (Native|Public) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DFMContainerVolumeActor.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x36ce950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMContractManagerComponent
// Size: 0x438 (Inherited: 0x100)
class UDFMContractManagerComponent : public UActorComponent {
public:

	struct TMap<int32_t, int32_t> TeamContractMap; // 0x100(0x50)
	struct TMap<int32_t, int32_t> TeamContractNumForReport; // 0x150(0x50)
	struct TMap<int32_t, struct FContractData> CancelContractVoteMap; // 0x1a0(0x50)
	char pad_1F0[0x50]; // 0x1f0(0x50)
	struct TArray<int32_t> AcceptedContractIDArray; // 0x240(0x10)
	char pad_250[0xa0]; // 0x250(0xa0)
	struct UClass* ContractNPCClass; // 0x2f0(0x08)
	char pad_2F8[0x50]; // 0x2f8(0x50)
	struct TArray<struct FContractLocData> ContractLocDataArr; // 0x348(0x10)
	struct TArray<struct FContractReward> ContractRewards; // 0x358(0x10)
	char pad_368[0x50]; // 0x368(0x50)
	struct TArray<struct AGPQuestVolume*> ContractQuestVolumeArray; // 0x3b8(0x10)
	char pad_3C8[0x10]; // 0x3c8(0x10)
	struct TArray<struct AInteractor_ContractNPC*> Interactor_ContractNPCs; // 0x3d8(0x10)
	char pad_3E8[0x50]; // 0x3e8(0x50)

	void SetInteractorsEnable(); // Function DFMGameplay.DFMContractManagerComponent.SetInteractorsEnable // (Final|Native|Protected) // @ game+0x628f5f0
	void ServerVoteCancelContract(int32_t TeamId, int32_t TeamInnerIndex, enum class EVoteStatus VoteStatus); // Function DFMGameplay.DFMContractManagerComponent.ServerVoteCancelContract // (Final|Native|Public|BlueprintCallable) // @ game+0x628f4f0
	void ServerUpdateTeamVoteMap(int32_t TeamId, struct FContractData& ContractData); // Function DFMGameplay.DFMContractManagerComponent.ServerUpdateTeamVoteMap // (Final|Native|Private|HasOutParms) // @ game+0x628f390
	void ServerRemoveContract(int32_t TeamId); // Function DFMGameplay.DFMContractManagerComponent.ServerRemoveContract // (Final|Native|Protected) // @ game+0x628f310
	void ServerAcceptContract(int32_t TeamId, int32_t ContractID); // Function DFMGameplay.DFMContractManagerComponent.ServerAcceptContract // (Final|Native|Public|BlueprintCallable) // @ game+0x628f250
	void RandomContract(bool bFromGM); // Function DFMGameplay.DFMContractManagerComponent.RandomContract // (Final|Native|Public|BlueprintCallable) // @ game+0x628f100
	void OnRep_ContractLocDataArr(); // Function DFMGameplay.DFMContractManagerComponent.OnRep_ContractLocDataArr // (Final|Native|Public) // @ game+0x628ed50
	void OnRep_AcceptedContractIDArray(); // Function DFMGameplay.DFMContractManagerComponent.OnRep_AcceptedContractIDArray // (Final|Native|Protected) // @ game+0x628ed30
	void OnMatchStart(struct AActor* inActor); // Function DFMGameplay.DFMContractManagerComponent.OnMatchStart // (Final|Native|Protected) // @ game+0x628e9f0
	void OnDelaySetInteractorEnable(struct AActor* inActor); // Function DFMGameplay.DFMContractManagerComponent.OnDelaySetInteractorEnable // (Final|Native|Protected) // @ game+0x628e720
	void OnContractEndResetData(int32_t TeamId, int64_t ContractID); // Function DFMGameplay.DFMContractManagerComponent.OnContractEndResetData // (Final|Native|Protected) // @ game+0x628e660
	void OnCharacterOffline(struct AGPPlayerState* GPPlayerState); // Function DFMGameplay.DFMContractManagerComponent.OnCharacterOffline // (Final|Native|Protected) // @ game+0x628e5e0
	void OnCharacterEscaped(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.DFMContractManagerComponent.OnCharacterEscaped // (Final|Native|Protected) // @ game+0x628e520
	void OnCharacterDied(struct ACHARACTER* DeadCharactet, struct AActor* KillerActor); // Function DFMGameplay.DFMContractManagerComponent.OnCharacterDied // (Final|Native|Protected) // @ game+0x628e460
	void NtfServerRegisterInteractor(struct AActor* InteractorBase); // Function DFMGameplay.DFMContractManagerComponent.NtfServerRegisterInteractor // (Final|Native|Protected) // @ game+0x628e3c0
	bool IsHighValueContract(int64_t QuestID); // Function DFMGameplay.DFMContractManagerComponent.IsHighValueContract // (Final|Native|Public|BlueprintCallable) // @ game+0x628dff0
	bool GetTeammatesByContractID(int32_t ContractID, struct TArray<struct AGPCharacter*>& CharacterArray); // Function DFMGameplay.DFMContractManagerComponent.GetTeammatesByContractID // (Final|Native|Public|HasOutParms) // @ game+0x628da70
	struct FSOLContractRewardRow STATIC_GetContractRewardConfigStatic(int64_t QuestID, int32_t MapID); // Function DFMGameplay.DFMContractManagerComponent.GetContractRewardConfigStatic // (Final|Native|Static|Public) // @ game+0x628d380
	float GetContractRewardConfig(int64_t QuestID); // Function DFMGameplay.DFMContractManagerComponent.GetContractRewardConfig // (Final|Native|Public|BlueprintCallable) // @ game+0x628d2e0
	void DelayCancelVote(int32_t TeamId); // Function DFMGameplay.DFMContractManagerComponent.DelayCancelVote // (Final|Native|Protected) // @ game+0x628d260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCountDownReleaseMarkerItem
// Size: 0x440 (Inherited: 0x438)
class UDFMCountDownReleaseMarkerItem : public UGPMarkerItemBase {
public:

	struct AInteractor_DoorBase* DoorBase; // 0x438(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCoverManagerRenderComponent
// Size: 0x590 (Inherited: 0x560)
class UDFMCoverManagerRenderComponent : public UPrimitiveComponent {
public:

	char pad_560[0x18]; // 0x560(0x18)
	struct TArray<struct FDebugPoint> EdgeCheckPoints; // 0x578(0x10)
	char pad_588[0x8]; // 0x588(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCoverStatics
// Size: 0x30 (Inherited: 0x30)
class UDFMCoverStatics : public UBlueprintFunctionLibrary {
public:


	bool STATIC_IsTakingHighCover(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsTakingHighCover // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628e2f0
	bool STATIC_IsRightCover(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsRightCover // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628e220
	bool STATIC_IsMiddleCover(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsMiddleCover // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628e150
	bool STATIC_IsLeftCover(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsLeftCover // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628e080
	bool STATIC_IsCoverContextValid(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsCoverContextValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628df20
	bool STATIC_IsCoverContextActivated(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.IsCoverContextActivated // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628de50
	float STATIC_GetUnderCoverYaw(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetUnderCoverYaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628dd50
	struct FTransform STATIC_GetUnderCoverTransform(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetUnderCoverTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x628dc70
	struct FVector STATIC_GetUnderCoverLocation(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetUnderCoverLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x628db90
	float STATIC_GetCoverPointYaw(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetCoverPointYaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628d860
	struct FVector STATIC_GetCoverPointLocation(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetCoverPointLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x628d780
	float STATIC_GetCoverLeanYaw(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetCoverLeanYaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x628d6b0
	struct FTransform STATIC_GetCoverLeanTransform(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetCoverLeanTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x628d5d0
	struct FVector STATIC_GetCoverLeanLocation(struct FDFMCoverContext& CoverContext); // Function DFMGameplay.DFMCoverStatics.GetCoverLeanLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x628d4f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCueManager
// Size: 0x330 (Inherited: 0x330)
class UDFMCueManager : public UGPCueManager {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDamageValidateRule_CheckHitTest
// Size: 0x70 (Inherited: 0x60)
class UDFMDamageValidateRule_CheckHitTest : public UDamageValidationRuleBase {
public:

	struct TArray<struct TWeakObjectPtr<struct AActor>> IgnoreActors; // 0x60(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDamageValidateRule_CheckRecoil
// Size: 0x60 (Inherited: 0x60)
class UDFMDamageValidateRule_CheckRecoil : public UDamageValidationRuleBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDataEntity_LocAndRot
// Size: 0x118 (Inherited: 0x118)
class UDFMDataEntity_LocAndRot : public UGPSceneActorDataEntityBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDataEntity_SceneWeaponInfo
// Size: 0x118 (Inherited: 0x118)
class UDFMDataEntity_SceneWeaponInfo : public UGPSceneActorDataEntityBase {
public:


	void SceneWeaponInfoChanged(bool bIsDS, struct ADFScenceWeaponPawn* InSceneWeapon); // Function DFMGameplay.DFMDataEntity_SceneWeaponInfo.SceneWeaponInfoChanged // (Final|Native|Public) // @ game+0x628f190
	void OnServerSceneWeaponMarkInfoUpdate(); // Function DFMGameplay.DFMDataEntity_SceneWeaponInfo.OnServerSceneWeaponMarkInfoUpdate // (Final|Native|Public) // @ game+0x628f0e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDataEntity_TeamCharacterHealth
// Size: 0x118 (Inherited: 0x118)
class UDFMDataEntity_TeamCharacterHealth : public UGPSceneActorDataEntityBase {
public:


	void OnServerPlayerHealthChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnServerPlayerHealthChanged // (Final|Native|Public) // @ game+0x628f040
	void OnServerPlayerArmorHealthChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnServerPlayerArmorHealthChanged // (Final|Native|Public) // @ game+0x628efc0
	void OnServerLocalPlayerIsNeedRescueChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnServerLocalPlayerIsNeedRescueChanged // (Final|Native|Public) // @ game+0x628ee70
	void OnServerLocalPlayerIsAliveChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnServerLocalPlayerIsAliveChanged // (Final|Native|Public) // @ game+0x628edf0
	void OnServerLocalPlayerImpendingDeathHealthChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnServerLocalPlayerImpendingDeathHealthChanged // (Final|Native|Public) // @ game+0x628ed70
	void OnHealthInfoChanged(struct AActor* InCharacter); // Function DFMGameplay.DFMDataEntity_TeamCharacterHealth.OnHealthInfoChanged // (Final|Native|Public) // @ game+0x628e7a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDataEntity_VehicleInfo
// Size: 0x118 (Inherited: 0x118)
class UDFMDataEntity_VehicleInfo : public UGPSceneActorDataEntityBase {
public:


	void OnServerSceneVehicleMarkInfoUpdate(); // Function DFMGameplay.DFMDataEntity_VehicleInfo.OnServerSceneVehicleMarkInfoUpdate // (Final|Native|Public) // @ game+0x628f0c0
	void OnPlayerGetOnVehicle(struct AActor* CHARACTER, struct AActor* Vehicle, struct FName Seat); // Function DFMGameplay.DFMDataEntity_VehicleInfo.OnPlayerGetOnVehicle // (Final|Native|Public) // @ game+0x628eb70
	void OnPlayerGetOffVehicle(struct AActor* CHARACTER, struct AActor* Vehicle); // Function DFMGameplay.DFMDataEntity_VehicleInfo.OnPlayerGetOffVehicle // (Final|Native|Public) // @ game+0x628eab0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDeformSmokeGameStateComponent
// Size: 0x1e0 (Inherited: 0x1d8)
class UDFMDeformSmokeGameStateComponent : public UGPDeformableGameStateComponent {
public:

	bool bHasActor; // 0x1d8(0x01)
	char pad_1D9[0x7]; // 0x1d9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDesSkeletalMeshComponent
// Size: 0x1700 (Inherited: 0xf28)
class UDFMDesSkeletalMeshComponent : public USkeletalMeshComponent {
public:

	char pad_F28[0x10]; // 0xf28(0x10)
	struct FBreakablePhysicsData PhysicsConfig; // 0xf38(0x750)
	char pad_1688[0x74]; // 0x1688(0x74)
	char bShouldUseActorRenderedFlag : 1; // 0x16fc(0x01)
	char pad_16FC_1 : 7; // 0x16fc(0x01)
	char pad_16FD[0x3]; // 0x16fd(0x03)

	void OnHitEffect(struct UPrimitiveComponent* ThisComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function DFMGameplay.DFMDesSkeletalMeshComponent.OnHitEffect // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x628e820
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDesStaticMeshActor
// Size: 0x388 (Inherited: 0x388)
class ADFMDesStaticMeshActor : public ADestructibleStaticMeshActor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDesStaticMeshComponent
// Size: 0x820 (Inherited: 0x818)
class UDFMDesStaticMeshComponent : public UDestructibleStaticMeshComponent {
public:

	bool bIsHLODSMC; // 0x818(0x01)
	bool bClientOnlyProxyMesh; // 0x819(0x01)
	char pad_81A[0x6]; // 0x81a(0x06)

	void UpdateMeshDestructionStatus(); // Function DFMGameplay.DFMDesStaticMeshComponent.UpdateMeshDestructionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x628f610
	void ClientSetSubMeshDestructed(int32_t MeshIndex); // Function DFMGameplay.DFMDesStaticMeshComponent.ClientSetSubMeshDestructed // (Final|Native|Public|BlueprintCallable) // @ game+0x628d1e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDoorMarkerItem
// Size: 0x440 (Inherited: 0x438)
class UDFMDoorMarkerItem : public UGPMarkerItemBase {
public:

	char pad_438[0x8]; // 0x438(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDSLogic
// Size: 0x5a0 (Inherited: 0x3d8)
class UDFMDSLogic : public UDSLogicBase {
public:

	char pad_3D8[0x1c8]; // 0x3d8(0x1c8)

	void OnServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMDSLogic.OnServerMatchEnd // (Native|Protected) // @ game+0x628eef0
	bool IsCloseAiHint(); // Function DFMGameplay.DFMDSLogic.IsCloseAiHint // (Final|Native|Public|BlueprintCallable) // @ game+0x628de20
	int64_t GetScriptedMatchType(); // Function DFMGameplay.DFMDSLogic.GetScriptedMatchType // (Final|Native|Public|BlueprintCallable) // @ game+0x628da40
	int32_t GetPlayerAILevel(); // Function DFMGameplay.DFMDSLogic.GetPlayerAILevel // (Final|Native|Public|BlueprintCallable) // @ game+0x628da10
	int32_t GetMatchType(); // Function DFMGameplay.DFMDSLogic.GetMatchType // (Final|Native|Public|BlueprintCallable) // @ game+0x628d9e0
	int32_t GetGameRule(); // Function DFMGameplay.DFMDSLogic.GetGameRule // (Final|Native|Public) // @ game+0x628d9b0
	struct UDFMDSLogic* STATIC_GetDFMDSLogic(struct UObject* WorldContextObjec); // Function DFMGameplay.DFMDSLogic.GetDFMDSLogic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x628d930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEnteringBattleComponent
// Size: 0x248 (Inherited: 0x100)
class UDFMEnteringBattleComponent : public UActorComponent {
public:

	struct AActor* EffectActor; // 0x100(0x08)
	struct FVector EnteringLocation; // 0x108(0x0c)
	struct FRotator EnteringRotation; // 0x114(0x0c)
	float DistanceForC; // 0x120(0x04)
	float DistanceForP; // 0x124(0x04)
	float DistanceForQ; // 0x128(0x04)
	float EnteringInitSpeed; // 0x12c(0x04)
	float EnteringMaxSpeed; // 0x130(0x04)
	float EnteringAcceleration; // 0x134(0x04)
	float MinLandingDuration; // 0x138(0x04)
	float LandingFocusDuration; // 0x13c(0x04)
	float sampleCount; // 0x140(0x04)
	float VelocityScale; // 0x144(0x04)
	float MaxVelocity; // 0x148(0x04)
	float DefaultCameraFov; // 0x14c(0x04)
	char pad_150[0x8]; // 0x150(0x08)
	struct ADFMPlayerController* TargetController; // 0x158(0x08)
	struct ADFMCharacter* TargetCharacter; // 0x160(0x08)
	struct UGPCameraModeComponent* CacheCameraMode; // 0x168(0x08)
	char pad_170[0xd8]; // 0x170(0xd8)

	void OnPrepareEnteringBattle(struct APlayerController* InPlayerController, struct UCustomWorldComposition* InWorldComposition); // Function DFMGameplay.DFMEnteringBattleComponent.OnPrepareEnteringBattle // (Final|Native|Public|BlueprintCallable) // @ game+0x628ec70
	void OnBeginEnteringBattle(); // Function DFMGameplay.DFMEnteringBattleComponent.OnBeginEnteringBattle // (Final|Native|Public|BlueprintCallable) // @ game+0x628e440
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEQSGenerator_HorizontalLineToQuerier
// Size: 0xb0 (Inherited: 0x88)
class UDFMEQSGenerator_HorizontalLineToQuerier : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct UClass* GenerateTarget; // 0x88(0x08)
	uint32_t NodeCountForOneSide; // 0x90(0x04)
	uint32_t NodeSpacing; // 0x94(0x04)
	uint32_t NodeSpacingVertical; // 0x98(0x04)
	bool bAvoidClosePathToTarget; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	struct UClass* AvoidTargetCenter; // 0xa0(0x08)
	float AvoidMinPathDistanceSq; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)

	bool ShouldAvoidPoint(struct FVector& avoidTargetPoint, struct FVector& testingPoint); // Function DFMGameplay.DFMEQSGenerator_HorizontalLineToQuerier.ShouldAvoidPoint // (Final|Native|Private|HasOutParms|HasDefaults|Const) // @ game+0x6294770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEQSGenerator_TacticalPoint
// Size: 0xe8 (Inherited: 0x88)
class UDFMEQSGenerator_TacticalPoint : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct FAIDataProviderFloatValue CircleRadius; // 0x88(0x38)
	struct UClass* GenerateAround; // 0xc0(0x08)
	enum class ETagFilterMode TagFilterMode; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TArray<struct FName> AnnotationTags; // 0xd0(0x10)
	float InitScore; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEQSGenerator_NavmeshCoverPoint
// Size: 0x118 (Inherited: 0x88)
class UDFMEQSGenerator_NavmeshCoverPoint : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct FAIDataProviderFloatValue CircleRadius; // 0x88(0x38)
	struct FAIDataProviderFloatValue coverLength; // 0xc0(0x38)
	struct UClass* GenerateAround; // 0xf8(0x08)
	bool bAvoidClosePathToTarget; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	struct UClass* AvoidTargetCenter; // 0x108(0x08)
	float AvoidMinPathDistance; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEquipmentItemSkeletalMeshComponent
// Size: 0x1270 (Inherited: 0x1270)
class UDFMEquipmentItemSkeletalMeshComponent : public UGPSkeletalMeshComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEquipmentItemStaticMeshComponent
// Size: 0x7f0 (Inherited: 0x7f0)
class UDFMEquipmentItemStaticMeshComponent : public UStaticMeshComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMExpDataComponent
// Size: 0x138 (Inherited: 0x100)
class UDFMExpDataComponent : public UActorComponent {
public:

	struct TArray<struct FString> BonusExpArr; // 0x100(0x10)
	struct AGPCharacter* GPCharacter; // 0x110(0x08)
	char pad_118[0x20]; // 0x118(0x20)

	void OnKillPlayer(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMExpDataComponent.OnKillPlayer // (Final|Native|Public|HasOutParms) // @ game+0x62943f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFrameRateSimulator
// Size: 0x398 (Inherited: 0x378)
class ADFMFrameRateSimulator : public AActor {
public:

	char pad_378[0x20]; // 0x378(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BasePoseStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_BasePoseStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool CheckCrouch; // 0xb8(0x01)
	bool CheckEqual; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BeingRescueAction
// Size: 0x160 (Inherited: 0xf0)
class UDFMFSM_BeingRescueAction : public UGPFSMAction {
public:

	char pad_F0[0x30]; // 0xf0(0x30)
	enum class ECollisionChannel CapsureTargetType; // 0x120(0x01)
	enum class ECollisionChannel MeshTargetType; // 0x121(0x01)
	char pad_122[0x6]; // 0x122(0x06)
	struct TArray<enum class ECollisionChannel> AllIgnoreChannel; // 0x128(0x10)
	struct TArray<enum class ECollisionChannel> AllMeshIgnoreChannel; // 0x138(0x10)
	struct TArray<int32_t> FastRescueBuffs; // 0x148(0x10)
	char pad_158[0x8]; // 0x158(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CarrySelfByOtherAction
// Size: 0x160 (Inherited: 0xf0)
class UDFMFSM_CarrySelfByOtherAction : public UGPFSMAction {
public:

	char pad_F0[0x28]; // 0xf0(0x28)
	struct ADFMCharacter* OwnerDFCharacter; // 0x118(0x08)
	char pad_120[0x8]; // 0x120(0x08)
	enum class ECollisionChannel CapsureTargetType; // 0x128(0x01)
	enum class ECollisionChannel MeshTargetType; // 0x129(0x01)
	char pad_12A[0x6]; // 0x12a(0x06)
	struct TArray<enum class ECollisionChannel> AllIgnoreChannel; // 0x130(0x10)
	struct TArray<enum class ECollisionChannel> AllOverlapChannel; // 0x140(0x10)
	struct TArray<enum class ECollisionChannel> AllMeshIgnoreChannel; // 0x150(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_DeathBeingRescueAction
// Size: 0x120 (Inherited: 0xf0)
class UDFMFSM_DeathBeingRescueAction : public UGPFSMAction {
public:

	char pad_F0[0x8]; // 0xf0(0x08)
	enum class ECollisionChannel CapsureTargetType; // 0xf8(0x01)
	enum class ECollisionChannel MeshTargetType; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct TArray<enum class ECollisionChannel> AllIgnoreChannel; // 0x100(0x10)
	struct TArray<enum class ECollisionChannel> AllMeshIgnoreChannel; // 0x110(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_DeathCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_DeathCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool isInCarDeath; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ForbidMoveStateMachineInstance
// Size: 0x4d0 (Inherited: 0x4d0)
class UDFMFSM_ForbidMoveStateMachineInstance : public UGPFSMStateMachineInstance {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ImpendingDeathCheck_Transition
// Size: 0xb8 (Inherited: 0xb8)
class UDFMFSM_ImpendingDeathCheck_Transition : public UGPFSMTransitionInstance {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_LocomotionStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_LocomotionStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	enum class EMovementMode TargetMovementMode; // 0xb8(0x01)
	bool CheckEqual; // 0xb9(0x01)
	bool CheckSpeedZLessZero; // 0xba(0x01)
	char pad_BB[0x5]; // 0xbb(0x05)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_PalsyCheck_Transition
// Size: 0xb8 (Inherited: 0xb8)
class UDFMFSM_PalsyCheck_Transition : public UGPFSMTransitionInstance {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ParachuteStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_ParachuteStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool CheckParachute; // 0xb8(0x01)
	bool CheckGlide; // 0xb9(0x01)
	bool CheckEqual; // 0xba(0x01)
	bool CheckEndParachute; // 0xbb(0x01)
	bool CheckGlideToParachute; // 0xbc(0x01)
	char pad_BD[0x3]; // 0xbd(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SlidingTackleStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_SlidingTackleStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool CheckEqual; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_VaultAndClimbLadderStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_VaultAndClimbLadderStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool CheckVault; // 0xb8(0x01)
	bool CheckEqual; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_WeaponStateCheck_Transition
// Size: 0xc0 (Inherited: 0xb8)
class UDFMFSM_WeaponStateCheck_Transition : public UGPFSMTransitionInstance {
public:

	bool CheckReload; // 0xb8(0x01)
	bool CheckEqual; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSMSkillEntityComponent
// Size: 0x2c8 (Inherited: 0x2b8)
class UDFMFSMSkillEntityComponent : public UGPFSMSkillEntityComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnServerNotifySkillProjectileDoDamageSignature[0x10]; // 0x2b8(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSMSkillTaskBase
// Size: 0x60 (Inherited: 0x50)
class UDFMFSMSkillTaskBase : public UGPFSMSkillTaskBase {
public:

	struct UDFMFSMInstance* DFMFSMOwner; // 0x50(0x08)
	struct UDFMBlackboardComponent* DFMBlackboard; // 0x58(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameController
// Size: 0x378 (Inherited: 0x378)
class ADFMGameController : public AActor {
public:


	void NotifyDsClientLogout(); // Function DFMGameplay.DFMGameController.NotifyDsClientLogout // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbd2900
	struct ADFMGameController* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameController.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62b3b80
	void ClientQuit(enum class EMatchOverReason QuitReason); // Function DFMGameplay.DFMGameController.ClientQuit // (Final|Native|Public|BlueprintCallable) // @ game+0x62b3560
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameDataCenterComponent
// Size: 0x180 (Inherited: 0x100)
class UDFMGameDataCenterComponent : public UActorComponent {
public:

	struct TMap<uint64_t, struct FDFMKnockDownVictumCacheData> KnockDownPlayerDataCache; // 0x100(0x50)
	struct TArray<struct FDFMPlayerGameData> PlayerDataCache; // 0x150(0x10)
	struct TArray<struct FDFMPlayerGameData> PlayerReplicatedDataCache; // 0x160(0x10)
	struct FDFMLocalGameData LocalGameDataCache; // 0x170(0x10)

	void ClientSetPlayerData_String(uint64_t Uin, struct FName DataName, struct FString Data_String, bool bReplicate); // Function DFMGameplay.DFMGameDataCenterComponent.ClientSetPlayerData_String // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b3910
	void ClientSetPlayerData_Int32(uint64_t Uin, struct FName DataName, int32_t Data_Int, bool bReplicate); // Function DFMGameplay.DFMGameDataCenterComponent.ClientSetPlayerData_Int32 // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b37d0
	void ClientSetPlayerData_Float(uint64_t Uin, struct FName DataName, float Data_float, bool bReplicate); // Function DFMGameplay.DFMGameDataCenterComponent.ClientSetPlayerData_Float // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b3690
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameDataUtil
// Size: 0x30 (Inherited: 0x30)
class UDFMGameDataUtil : public UObject {
public:


	void STATIC_SetPlayerData(struct APlayerController* PlayerController, uint64_t PlayerUin, struct FName& DataName, int32_t Data_Int, bool bReplicated); // Function DFMGameplay.DFMGameDataUtil.SetPlayerData // (Final|Native|Static|Public|HasOutParms) // @ game+0x62b4490
	bool STATIC_GetPlayerData(struct APlayerController* PlayerController, uint64_t PlayerUin, struct FName& DataName, int32_t& Data_Int); // Function DFMGameplay.DFMGameDataUtil.GetPlayerData // (Final|Native|Static|Public|HasOutParms) // @ game+0x62b3d20
	void STATIC_AddKnockDownInfo(struct UWorld* World, struct AGPCharacter* KillerCharacter, struct AGPCharacter* VictumCharacter, float DamageAmount); // Function DFMGameplay.DFMGameDataUtil.AddKnockDownInfo // (Final|Native|Static|Public) // @ game+0x62b3410
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameLoadingMode
// Size: 0x460 (Inherited: 0x460)
class ADFMGameLoadingMode : public AGameMode {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameModeGameplaySubsystem
// Size: 0x3d8 (Inherited: 0x3d0)
class ADFMGameModeGameplaySubsystem : public AGPGameModeSettingSubsystem {
public:

	struct UDFMCharacterAmbientLightControlComponent* CharacterAmbientLightControl; // 0x3d0(0x08)

	void SetCharacterEdgeLightSwitchOnLightMaterialCollection(float Value); // Function DFMGameplay.DFMGameModeGameplaySubsystem.SetCharacterEdgeLightSwitchOnLightMaterialCollection // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SetCharacterEdgeLightDistanceFator(float Value); // Function DFMGameplay.DFMGameModeGameplaySubsystem.SetCharacterEdgeLightDistanceFator // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SetAddLightInttensityValueOnLightMaterialCollection(float Value); // Function DFMGameplay.DFMGameModeGameplaySubsystem.SetAddLightInttensityValueOnLightMaterialCollection // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct ADFMGameModeGameplaySubsystem* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameModeGameplaySubsystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62b3c00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameplayBlueprintHelper
// Size: 0x30 (Inherited: 0x30)
class UDFMGameplayBlueprintHelper : public UBlueprintFunctionLibrary {
public:


	bool STATIC_TryWorldLocation2ScreenPos(struct FVector2D& OutScreenPos2D, bool& OutbOnCameraBack, bool& OutbIsOutOfSceen, struct FVector InWorldLoc, struct AGPPlayerController* PlayerController, struct UWorld* World); // Function DFMGameplay.DFMGameplayBlueprintHelper.TryWorldLocation2ScreenPos // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62c1120
	bool STATIC_TryGetInteractorScreenPosByActor(struct FVector2D& InteractorPos2D, struct AActor* Target, struct AGPPlayerController* PlayerController, struct UWorld* World); // Function DFMGameplay.DFMGameplayBlueprintHelper.TryGetInteractorScreenPosByActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62c0ea0
	struct FVector2D STATIC_TouchPointToWidgetLocal(struct UObject* WorldContextObject, struct FVector2D TouchPoint, struct UCanvasPanel* Panel); // Function DFMGameplay.DFMGameplayBlueprintHelper.TouchPointToWidgetLocal // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x62c0bc0
	bool STATIC_SwitchToWeaponByIndex(struct ADFMCharacter* Target, int32_t Index); // Function DFMGameplay.DFMGameplayBlueprintHelper.SwitchToWeaponByIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0b00
	bool STATIC_StopCurrentExitCutScene(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.StopCurrentExitCutScene // (Final|Exec|Native|Static|Public|BlueprintCallable) // @ game+0x62c0a80
	void STATIC_ShowStaticIconByItemInfo(struct FInventoryItemInfo& ItemInfo, struct UImage* TargetImage, bool bLazy, bool bWhite); // Function DFMGameplay.DFMGameplayBlueprintHelper.ShowStaticIconByItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62c08e0
	void STATIC_ShowRuntimeIconByFItemID(struct FItemID ItemID, struct UImage* Image); // Function DFMGameplay.DFMGameplayBlueprintHelper.ShowRuntimeIconByFItemID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0810
	void STATIC_ShowRuntimeIcon(int64_t ItemID, struct UImage* Image); // Function DFMGameplay.DFMGameplayBlueprintHelper.ShowRuntimeIcon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0760
	void STATIC_ShowIconByItemInfo(struct FInventoryItemInfo& ItemInfo, struct UImage* TargetImage, bool bLazy, bool bWhite, bool bIconShadow); // Function DFMGameplay.DFMGameplayBlueprintHelper.ShowIconByItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62c0580
	struct FText STATIC_ShowDebugMsgFromCharacter(struct ADFMCharacter* Target); // Function DFMGameplay.DFMGameplayBlueprintHelper.ShowDebugMsgFromCharacter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c04a0
	bool STATIC_SetUIBatchState(bool bInOpen); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetUIBatchState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0420
	void STATIC_SetStaticVelocityDrag(float NewStaticVelocityDrag); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetStaticVelocityDrag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c03b0
	void STATIC_SetShowDamageText(); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetShowDamageText // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0390
	bool STATIC_SetItemDurabilityByID(struct ADFMCharacter* Target, struct FName ItemID, int32_t NewDurability); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetItemDurabilityByID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c02a0
	void STATIC_SetFrictionCoefficient(float NewFrictionCoefficient); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetFrictionCoefficient // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0230
	void STATIC_SetCharacterFirstCPD(struct ADFMCharacter* Target, float CPDValue); // Function DFMGameplay.DFMGameplayBlueprintHelper.SetCharacterFirstCPD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62c0180
	void STATIC_SendPresetChatByType(struct UWorld* InWorld, struct AGPPlayerController* InLocalPlayerController, enum class EMarkingChatType InMarkingChatType, enum class EChatType InChatType, struct TArray<int32_t>& ExtraParams); // Function DFMGameplay.DFMGameplayBlueprintHelper.SendPresetChatByType // (Final|Native|Static|Public|HasOutParms) // @ game+0x62bffc0
	void STATIC_SelectAllAIOfSameType(struct ADramaArea* Drama, struct UClass* ActorClass); // Function DFMGameplay.DFMGameplayBlueprintHelper.SelectAllAIOfSameType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bff10
	void STATIC_PrintBPLog(struct FString Text); // Function DFMGameplay.DFMGameplayBlueprintHelper.PrintBPLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bfe00
	void STATIC_PreloadShowIconByItemInfo(struct FInventoryItemInfo& ItemInfo, struct UImage* TargetImage, bool bLazy, bool bWhite, bool bIconShadow); // Function DFMGameplay.DFMGameplayBlueprintHelper.PreloadShowIconByItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62bfc20
	void STATIC_OpenMessageDialog(struct FString Output); // Function DFMGameplay.DFMGameplayBlueprintHelper.OpenMessageDialog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bfb10
	void STATIC_LoadGameplayLevel(/*struct UObject* WorldContext, struct FString GameplayLevelPath, struct FDelegate& callback*/); // Function DFMGameplay.DFMGameplayBlueprintHelper.LoadGameplayLevel // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62beea0
	bool STATIC_IsTouchPressed(struct UObject* WorldContextObject, enum class ETouchIndex FingerIndex); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsTouchPressed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bede0
	bool STATIC_IsSOLMapSoloGame(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsSOLMapSoloGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bed60
	bool STATIC_IsSOLMapLevel2(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsSOLMapLevel2 // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bece0
	bool STATIC_IsPlayerHoldingBlueprintWeapon(struct UObject* WorldContextObject, int64_t InPlayerUin); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsPlayerHoldingBlueprintWeapon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bec20
	bool STATIC_IsMP(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsMP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62beba0
	bool STATIC_IsBlueprintWeaponMainHudShowing(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.IsBlueprintWeaponMainHudShowing // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62beb20
	void STATIC_GMPlayExitCutScene(struct UObject* WorldContextObject, int32_t ExitPointId); // Function DFMGameplay.DFMGameplayBlueprintHelper.GMPlayExitCutScene // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd3c0
	void STATIC_GM_ResetAbility(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_ResetAbility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdea0
	void STATIC_GM_Reset(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_Reset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bde30
	void STATIC_GM_PlayMontage(struct AGPPlayerController* GPPlayerController, struct FString AnimPathNames, struct FString AnimationPlayTypes); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_PlayMontage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdcc0
	void STATIC_GM_KillMeNoImPendingDeath(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_KillMeNoImPendingDeath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdc50
	void STATIC_GM_KillMeForAI(struct ADFMAICharacter* AICharacter); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_KillMeForAI // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdbe0
	void STATIC_GM_KillMe(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_KillMe // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdb70
	void STATIC_GM_HurtMe(struct AGPPlayerController* GPPlayerController, float InHurtValue, float InImpendingDeathHurtValue); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_HurtMe // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bda80
	void STATIC_GM_ClearAbilityCD(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_ClearAbilityCD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bda10
	void STATIC_GM_AddSpeed(struct AGPPlayerController* GPPlayerController, float AddedValue); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AddSpeed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd960
	void STATIC_GM_AddHP(struct AController* GPPlayerController, float AddedValue); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AddHP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd8b0
	void STATIC_GM_AbilityE(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityE // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x922270
	void STATIC_GM_AbilityD(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd840
	void STATIC_GM_AbilityC(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd7d0
	void STATIC_GM_AbilityByType(struct AGPPlayerController* GPPlayerController, enum class ESkillLogicType Type); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityByType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd720
	void STATIC_GM_AbilityByID(struct AGPPlayerController* GPPlayerController, int32_t ID); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityByID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd670
	void STATIC_GM_AbilityByExpertID(struct AGPPlayerController* GPPlayerController, int64_t ExpertId); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityByExpertID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd5c0
	void STATIC_GM_AbilityB(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd550
	void STATIC_GM_AbilityA(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_AbilityA // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd4e0
	void STATIC_GM_Ability(struct AGPPlayerController* GPPlayerController); // Function DFMGameplay.DFMGameplayBlueprintHelper.GM_Ability // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd470
	float STATIC_GetTotalImpendingDeathTime(struct ADFMCharacter* ImpendingDeathCharater); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetTotalImpendingDeathTime // (Final|Native|Static|Public) // @ game+0x62bea90
	bool STATIC_GetTeamMateCharacterDSLocationByUin(struct AGPSceneActorReplicator* GPSceneActorReplicator, struct AGPPlayerState* PlayerState, int64_t InPlayerUin, struct FVector& OutDSLocation, float& OutRot, struct FIntVector& OriginLocation); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetTeamMateCharacterDSLocationByUin // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62be880
	float STATIC_GetStaticVelocityDrag(); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetStaticVelocityDrag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be850
	struct FSkillDataRow STATIC_GetSkillDataRowBySkillId(int32_t InSkillID); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetSkillDataRowBySkillId // (Final|Native|Static|Public) // @ game+0x62be7c0
	void STATIC_GetRuntimeAllModules(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetRuntimeAllModules // (Final|Exec|Native|Static|Public|BlueprintCallable) // @ game+0x62be750
	int32_t STATIC_GetPlayerHoldingPveRpg(struct UObject* WorldContextObject, int64_t InPlayerUin); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetPlayerHoldingPveRpg // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be690
	int32_t STATIC_GetMapLevel(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetMapLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be610
	int32_t STATIC_GetLocalTeamIndex(struct UObject* WorldContextObj); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetLocalTeamIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be590
	int32_t STATIC_GetLocalTeamID(struct UObject* WorldContextObj); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetLocalTeamID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be510
	int32_t STATIC_GetLocalCampID(struct UObject* WorldContextObj); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetLocalCampID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be490
	float STATIC_GetImpendingDeathTimeByBuffId(struct ADFMCharacter* ImpendingDeathCharater, uint32_t InBuffId); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetImpendingDeathTimeByBuffId // (Final|Native|Static|Public) // @ game+0x62be3d0
	float STATIC_GetImpendingDeathTime(struct ADFMCharacter* ImpendingDeathCharater); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetImpendingDeathTime // (Final|Native|Static|Public) // @ game+0x62be340
	float STATIC_GetImpendingDeathBuffOperateValue(uint32_t InBuffId); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetImpendingDeathBuffOperateValue // (Final|Native|Static|Public) // @ game+0x62be2c0
	float STATIC_GetFrictionCoefficient(); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetFrictionCoefficient // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be290
	enum class EDFMGamePlayMode STATIC_GetDFMGamePlayMode(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetDFMGamePlayMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62be210
	struct FLinearColor STATIC_GetCharacterIconColor(struct UObject* WorldContextObj, int32_t Index, bool bIsLocalPlayer); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetCharacterIconColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x62be110
	struct UDFMBattleFieldSystem* STATIC_GetBattleField(struct UObject* WorldContextObject); // Function DFMGameplay.DFMGameplayBlueprintHelper.GetBattleField // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x62be090
	struct FRotator STATIC_FindNearestPlayerStartRotation(struct UObject* WorldContextObj, struct FVector Location, float Tolerance); // Function DFMGameplay.DFMGameplayBlueprintHelper.FindNearestPlayerStartRotation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x62bd2a0
	void STATIC_EasyRemoveRemoveInventoryByLocation(struct ADFMCharacter* Target, int32_t pos, int32_t PosX, int32_t PosY); // Function DFMGameplay.DFMGameplayBlueprintHelper.EasyRemoveRemoveInventoryByLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd170
	void STATIC_EasyRemoveRemoveInventory(struct ADFMCharacter* Target, struct FName ItemID, int32_t Num); // Function DFMGameplay.DFMGameplayBlueprintHelper.EasyRemoveRemoveInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bd080
	void STATIC_EasyAddAddInventory(struct ADFMCharacter* Target, struct FName ItemID, int32_t AttachPos, int32_t Num); // Function DFMGameplay.DFMGameplayBlueprintHelper.EasyAddAddInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bcf50
	bool STATIC_CheckNavType(struct UObject* WorldContext, struct FVector TargetLoc, enum class ENavAreaFlag AreaFlag, struct FVector ProjectExt); // Function DFMGameplay.DFMGameplayBlueprintHelper.CheckNavType // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x62bcde0
	struct FLuaBPVar STATIC_CallLuaModuleFunction(struct UObject* WorldContextObj, struct FString ModuleName, struct FString FuncName, struct TArray<struct FLuaBPVar>& InParams); // Function DFMGameplay.DFMGameplayBlueprintHelper.CallLuaModuleFunction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62bcb90
	bool STATIC_AttemptUseItemByID(struct ADFMCharacter* Target, struct FName ItemID, enum class ECharacterPart Part); // Function DFMGameplay.DFMGameplayBlueprintHelper.AttemptUseItemByID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bcaa0
	bool STATIC_AttemptUseFirstFoodItem(struct ADFMCharacter* Target); // Function DFMGameplay.DFMGameplayBlueprintHelper.AttemptUseFirstFoodItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bca20
	bool STATIC_AISpawnAnalysis(struct UClass* ActorClass); // Function DFMGameplay.DFMGameplayBlueprintHelper.AISpawnAnalysis // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bc9a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameplayDelegates
// Size: 0x1be8 (Inherited: 0x38)
class UDFMGameplayDelegates : public UWorldSubsystem {
public:

	char pad_38[0x10]; // 0x38(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBuffEffectDarkScreen[0x10]; // 0x48(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBuffEffectBlur[0x10]; // 0x58(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBuffEffectPain[0x10]; // 0x68(0x10)
	/*struct FMulticastInlineDelegate*/char OnQuestReset[0x10]; // 0x78(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientPlayerMatchOver[0x10]; // 0x88(0x10)
	char pad_98[0xf0]; // 0x98(0xf0)
	/*struct FMulticastInlineDelegate*/char OnPlayerEnteredExitSectorAnchor[0x10]; // 0x188(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayerExitSectorAnchor[0x10]; // 0x198(0x10)
	/*struct FMulticastInlineDelegate*/char OnSectorAnchorInCharacterNumChanged[0x10]; // 0x1a8(0x10)
	char pad_1B8[0x40]; // 0x1b8(0x40)
	/*struct FMulticastInlineDelegate*/char OnDsBeginMatchReqReceived[0x10]; // 0x1f8(0x10)
	char pad_208[0x98]; // 0x208(0x98)
	/*struct FMulticastInlineDelegate*/char OnTryMarkMap[0x10]; // 0x2a0(0x10)
	/*struct FMulticastInlineDelegate*/char OnMarkDetailOpen[0x10]; // 0x2b0(0x10)
	char pad_2C0[0x70]; // 0x2c0(0x70)
	/*struct FMulticastInlineDelegate*/char OnSOLEventTrainArrive[0x10]; // 0x330(0x10)
	char pad_340[0x10]; // 0x340(0x10)
	/*struct FMulticastInlineDelegate*/char OnDFMTrainStateChange[0x10]; // 0x350(0x10)
	char pad_360[0x10]; // 0x360(0x10)
	/*struct FMulticastInlineDelegate*/char OnRocketBeenHacked[0x10]; // 0x370(0x10)
	char pad_380[0x10]; // 0x380(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerGuardPlayerUinArrayUpdate[0x10]; // 0x390(0x10)
	char pad_3A0[0x130]; // 0x3a0(0x130)
	/*struct FMulticastInlineDelegate*/char OnServerMatchEnded[0x10]; // 0x4d0(0x10)
	char pad_4E0[0x20]; // 0x4e0(0x20)
	/*struct FMulticastInlineDelegate*/char DFMGameplayServerPlayerBan[0x10]; // 0x500(0x10)
	char pad_510[0x10]; // 0x510(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerAILabMatchEnd[0x10]; // 0x520(0x10)
	char pad_530[0x38]; // 0x530(0x38)
	/*struct FMulticastInlineDelegate*/char OnVehicleDiedEvent[0x10]; // 0x568(0x10)
	/*struct FMulticastInlineDelegate*/char OnStickyTargetDestroyedEvent[0x10]; // 0x578(0x10)
	char pad_588[0x10]; // 0x588(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientQuestUpdate[0x10]; // 0x598(0x10)
	char pad_5A8[0x30]; // 0x5a8(0x30)
	/*struct FMulticastInlineDelegate*/char OnClientQuestObjectionUpdate[0x10]; // 0x5d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientQuestObjectionTimerStart[0x10]; // 0x5e8(0x10)
	char pad_5F8[0x90]; // 0x5f8(0x90)
	/*struct FMulticastInlineDelegate*/char OnSeamlessMapSignChange[0x10]; // 0x688(0x10)
	char pad_698[0x30]; // 0x698(0x30)
	/*struct FMulticastInlineDelegate*/char OnSeamlessEntryMapOperate[0x10]; // 0x6c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSeamlessEntryHUDOpen[0x10]; // 0x6d8(0x10)
	char pad_6E8[0x40]; // 0x6e8(0x40)
	/*struct FMulticastInlineDelegate*/char OnSOLTimelineStartEventStateChange[0x10]; // 0x728(0x10)
	char pad_738[0x20]; // 0x738(0x20)
	/*struct FMulticastInlineDelegate*/char OnSOLIntroEventCutScenePlay[0x10]; // 0x758(0x10)
	char pad_768[0x10]; // 0x768(0x10)
	/*struct FMulticastInlineDelegate*/char OnBlueprintPlunderInfoUpdate[0x10]; // 0x778(0x10)
	char pad_788[0x20]; // 0x788(0x20)
	/*struct FMulticastInlineDelegate*/char OnEscortBossPushMoveCmdUpdate[0x10]; // 0x7a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnBossDiedEventTrigger[0x10]; // 0x7b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnBossCarryBySomeTeam[0x10]; // 0x7c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnBossPreDropBySomeTeam[0x10]; // 0x7d8(0x10)
	char pad_7E8[0x50]; // 0x7e8(0x50)
	/*struct FMulticastInlineDelegate*/char SOLMatchUrgenDisplayBegin[0x10]; // 0x838(0x10)
	char pad_848[0x20]; // 0x848(0x20)
	/*struct FMulticastInlineDelegate*/char ShowSOLEventBanner[0x10]; // 0x868(0x10)
	/*struct FMulticastInlineDelegate*/char ShowSOLBroadcastBanner[0x10]; // 0x878(0x10)
	char pad_888[0x80]; // 0x888(0x80)
	/*struct FMulticastInlineDelegate*/char OnTaskSelected[0x10]; // 0x908(0x10)
	char pad_918[0x160]; // 0x918(0x160)
	/*struct FMulticastInlineDelegate*/char AITankPhaseChangedEvent[0x10]; // 0xa78(0x10)
	/*struct FMulticastInlineDelegate*/char OnExitFightState[0x10]; // 0xa88(0x10)
	/*struct FMulticastInlineDelegate*/char OnEnterFightState[0x10]; // 0xa98(0x10)
	/*struct FMulticastInlineDelegate*/char OnTankBossTakeDamage[0x10]; // 0xaa8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSneakStateChangeDelegate[0x10]; // 0xab8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPerformSkillEffect[0x10]; // 0xac8(0x10)
	/*struct FMulticastInlineDelegate*/char OnControllerPossessPawn[0x10]; // 0xad8(0x10)
	/*struct FMulticastInlineDelegate*/char OnControllerUnPossessPawn[0x10]; // 0xae8(0x10)
	char pad_AF8[0x50]; // 0xaf8(0x50)
	/*struct FMulticastInlineDelegate*/char OnGameExistPreMatchEnterCutScene[0x10]; // 0xb48(0x10)
	char pad_B58[0x20]; // 0xb58(0x20)
	/*struct FMulticastInlineDelegate*/char OnRedeployAfterReborn[0x10]; // 0xb78(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientNeedShowRedDotNewUnlockWeaponItemIDs[0x10]; // 0xb88(0x10)
	/*struct FMulticastInlineDelegate*/char OnEmoteButtonHide[0x10]; // 0xb98(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerAfterRedeployCharacterShow[0x10]; // 0xba8(0x10)
	/*struct FMulticastInlineDelegate*/char OnAfterRedeploy[0x10]; // 0xbb8(0x10)
	/*struct FMulticastInlineDelegate*/char OnCanNotReborn[0x10]; // 0xbc8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInHighView[0x10]; // 0xbd8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSpawnAreaHubNeedAreaActiveChanged[0x10]; // 0xbe8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPreServerMatchEnd[0x10]; // 0xbf8(0x10)
	/*struct FMulticastInlineDelegate*/char OnRebornOnVehicle[0x10]; // 0xc08(0x10)
	/*struct FMulticastInlineDelegate*/char OnVehiclePartDamage[0x10]; // 0xc18(0x10)
	/*struct FMulticastInlineDelegate*/char OnVehicleHeavyDamage[0x10]; // 0xc28(0x10)
	/*struct FMulticastInlineDelegate*/char OnRebornOnPlayer[0x10]; // 0xc38(0x10)
	/*struct FMulticastInlineDelegate*/char OnSectorTransBegin[0x10]; // 0xc48(0x10)
	/*struct FMulticastInlineDelegate*/char OnSectorTransEnd[0x10]; // 0xc58(0x10)
	/*struct FMulticastInlineDelegate*/char OnSectorAnchorFlagChange[0x10]; // 0xc68(0x10)
	/*struct FMulticastInlineDelegate*/char OnBehaviorScoreUpdate[0x10]; // 0xc78(0x10)
	/*struct FMulticastInlineDelegate*/char ShowScoreHud[0x10]; // 0xc88(0x10)
	/*struct FMulticastInlineDelegate*/char SOLShowScoreHud[0x10]; // 0xc98(0x10)
	char pad_CA8[0x160]; // 0xca8(0x160)
	/*struct FDelegate*/char NotifyToAddMarker[0x10]; // 0xe08(0x10)
	/*struct FDelegate*/char NotifyToAddTacticalEquipmentMarker[0x10]; // 0xe18(0x10)
	/*struct FDelegate*/char AddMarkWidget[0x10]; // 0xe28(0x10)
	/*struct FDelegate*/char RemoveMarkWidget[0x10]; // 0xe38(0x10)
	char pad_E48[0x10]; // 0xe48(0x10)
	/*struct FMulticastInlineDelegate*/char OnRedeployPlayerReplicate[0x10]; // 0xe58(0x10)
	char pad_E68[0x50]; // 0xe68(0x50)
	/*struct FMulticastInlineDelegate*/char OnReturnRequestLockVehicleSpawner[0x10]; // 0xeb8(0x10)
	/*struct FMulticastInlineDelegate*/char OnReturnRequestLockTeammateLocation[0x10]; // 0xec8(0x10)
	/*struct FMulticastInlineDelegate*/char RedeployUnLock[0x10]; // 0xed8(0x10)
	/*struct FMulticastInlineDelegate*/char OnShowRisingAc[0x10]; // 0xee8(0x10)
	/*struct FMulticastInlineDelegate*/char OnShowLandingAc[0x10]; // 0xef8(0x10)
	/*struct FMulticastInlineDelegate*/char AddPreLoadLocation[0x10]; // 0xf08(0x10)
	/*struct FMulticastInlineDelegate*/char RemovePreLoadLocation[0x10]; // 0xf18(0x10)
	/*struct FMulticastInlineDelegate*/char NotifyCanAssassinate[0x10]; // 0xf28(0x10)
	char pad_F38[0x20]; // 0xf38(0x20)
	/*struct FMulticastInlineDelegate*/char NotifyMedicalSyringe[0x10]; // 0xf58(0x10)
	/*struct FDelegate*/char QueryIsCharacterScouted[0x10]; // 0xf68(0x10)
	char pad_F78[0x130]; // 0xf78(0x130)
	/*struct FMulticastInlineDelegate*/char OnClientBreakthroughInFightBack[0x10]; // 0x10a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerBreakthroughInFightBack[0x10]; // 0x10b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBreakthroughInFightBackStage[0x10]; // 0x10c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnBreakthroughWaitPlayerLoadingStateChanged[0x10]; // 0x10d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerBreakthroughFirstEntrySectorAnchor[0x10]; // 0x10e8(0x10)
	/*struct FMulticastInlineDelegate*/char BreakthroughOnClientRedeployStateChanged[0x10]; // 0x10f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerRedeployStateChanged[0x10]; // 0x1108(0x10)
	/*struct FMulticastInlineDelegate*/char OnRedeployServerCurStateChanged[0x10]; // 0x1118(0x10)
	char pad_1128[0x50]; // 0x1128(0x50)
	/*struct FMulticastInlineDelegate*/char OnCharacterAddBehaviorScore[0x10]; // 0x1178(0x10)
	/*struct FMulticastInlineDelegate*/char OnVehicleSpawned[0x10]; // 0x1188(0x10)
	/*struct FMulticastInlineDelegate*/char OnVehicleDied[0x10]; // 0x1198(0x10)
	/*struct FMulticastInlineDelegate*/char OnMarkHighThreatTarget[0x10]; // 0x11a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnCancelHighThreatTarget[0x10]; // 0x11b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnDestroyHighThreatTarget[0x10]; // 0x11c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnVehicleMakeDamage[0x10]; // 0x11d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnMarkConcentratedFireSectorAnchor[0x10]; // 0x11e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnCancelConcentratedFireSectorAnchor[0x10]; // 0x11f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnConcentratedFireSectorAnchorComplete[0x10]; // 0x1208(0x10)
	/*struct FMulticastInlineDelegate*/char OnConcentratedFireSectorAnchorBehaviorScore[0x10]; // 0x1218(0x10)
	/*struct FMulticastInlineDelegate*/char OnConcentratedFireSectorAnchorBehaviorScoreRevert[0x10]; // 0x1228(0x10)
	/*struct FMulticastInlineDelegate*/char OnSectorAnchorOccupied[0x10]; // 0x1238(0x10)
	char pad_1248[0xc0]; // 0x1248(0xc0)
	/*struct FMulticastInlineDelegate*/char OnReturnRedeployRebornInformation[0x10]; // 0x1308(0x10)
	/*struct FMulticastInlineDelegate*/char OnReturnRedeployKillerInformation[0x10]; // 0x1318(0x10)
	char pad_1328[0x50]; // 0x1328(0x50)
	/*struct FMulticastInlineDelegate*/char OnClientEndCutsceneBegin[0x10]; // 0x1378(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientEndCutsceneFinish[0x10]; // 0x1388(0x10)
	/*struct FMulticastInlineDelegate*/char OnSOLSettlementFirstUIShow[0x10]; // 0x1398(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientGameSettlementGameFlowBegin[0x10]; // 0x13a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientEndStreamingFinish[0x10]; // 0x13b8(0x10)
	/*struct FMulticastInlineDelegate*/char ClickRedeployPoint[0x10]; // 0x13c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCMorseCodeInputResult[0x10]; // 0x13d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCClearErrorInput[0x10]; // 0x13e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCMorseCodeSuccess[0x10]; // 0x13f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCMorseCodeSuccessServer[0x10]; // 0x1408(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCDownloadState[0x10]; // 0x1418(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCOpenDoorState[0x10]; // 0x1428(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCFireMissileState[0x10]; // 0x1438(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCFireMissileActive[0x10]; // 0x1448(0x10)
	/*struct FMulticastInlineDelegate*/char OnFireMissileOnInteract[0x10]; // 0x1458(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCDownloadItemIDRandomed[0x10]; // 0x1468(0x10)
	/*struct FMulticastInlineDelegate*/char OnPCFireRocketState[0x10]; // 0x1478(0x10)
	/*struct FMulticastInlineDelegate*/char OnSIContainerSafeBoxUnlock[0x10]; // 0x1488(0x10)
	/*struct FMulticastInlineDelegate*/char OnSIContainerSafeBoxUnlockingStateChanged[0x10]; // 0x1498(0x10)
	/*struct FMulticastInlineDelegate*/char OnSafeBoxUnlockMiniGameCylinderRandomed[0x10]; // 0x14a8(0x10)
	/*struct FMulticastInlineDelegate*/char SIContainerSafeBoxFinished[0x10]; // 0x14b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnScoutingPlayerUinStateChanged[0x10]; // 0x14c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnFortificationProxyPerChanged[0x10]; // 0x14d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnBreakableItemBroken[0x10]; // 0x14e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnEnterDeadBodyBoxStatus[0x10]; // 0x14f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnChangeRouletteHUDState[0x10]; // 0x1508(0x10)
	/*struct FMulticastInlineDelegate*/char OpenBag[0x10]; // 0x1518(0x10)
	/*struct FMulticastInlineDelegate*/char CloseBag[0x10]; // 0x1528(0x10)
	/*struct FMulticastInlineDelegate*/char OnCloseLootingPanel[0x10]; // 0x1538(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyboardOpenBigMap[0x10]; // 0x1548(0x10)
	/*struct FMulticastInlineDelegate*/char OnMapKeyboardDigitalKeyInteract[0x10]; // 0x1558(0x10)
	/*struct FMulticastInlineDelegate*/char OnMapKeyboardKeyUpOrDown[0x10]; // 0x1568(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyboardMiniMapScaleChange[0x10]; // 0x1578(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyboardCloseBigMap[0x10]; // 0x1588(0x10)
	/*struct FMulticastInlineDelegate*/char OnMouseZoomUpBigMapScale[0x10]; // 0x1598(0x10)
	/*struct FMulticastInlineDelegate*/char OnMouseZoomDownBigMapScale[0x10]; // 0x15a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractorKeyPressed[0x10]; // 0x15b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractorKeyReleased[0x10]; // 0x15c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerInteractorPawnAnimExecute[0x10]; // 0x15d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnControllerSwitchActivated[0x10]; // 0x15e8(0x10)
	/*struct FMulticastInlineDelegate*/char SafeHouseInteractTip[0x10]; // 0x15f8(0x10)
	/*struct FMulticastInlineDelegate*/char SafeHouseInteractItem[0x10]; // 0x1608(0x10)
	/*struct FMulticastInlineDelegate*/char ShowInteractDetail[0x10]; // 0x1618(0x10)
	/*struct FMulticastInlineDelegate*/char OnToggleAbandonWaitingRescue[0x10]; // 0x1628(0x10)
	/*struct FMulticastInlineDelegate*/char OnClickDownRequestRescue[0x10]; // 0x1638(0x10)
	/*struct FMulticastInlineDelegate*/char OnClickUpStopRequestRescue[0x10]; // 0x1648(0x10)
	/*struct FMulticastInlineDelegate*/char OnClickAbandonWaitingRescue[0x10]; // 0x1658(0x10)
	/*struct FMulticastInlineDelegate*/char InteractRescue[0x10]; // 0x1668(0x10)
	/*struct FDelegate*/char CheckIsRescueAvaliable[0x10]; // 0x1678(0x10)
	/*struct FMulticastInlineDelegate*/char OnProcessRangeManageWeapon[0x10]; // 0x1688(0x10)
	/*struct FMulticastInlineDelegate*/char OnProcessRangeToggleAnalysisPanel[0x10]; // 0x1698(0x10)
	/*struct FMulticastInlineDelegate*/char OnProcessRangeRefreshAnalysisPanel[0x10]; // 0x16a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnExit3DSafeHouse[0x10]; // 0x16b8(0x10)
	/*struct FMulticastInlineDelegate*/char CloseDeathDamageInfoPanel[0x10]; // 0x16c8(0x10)
	/*struct FMulticastInlineDelegate*/char CloseSelectVehicleHud[0x10]; // 0x16d8(0x10)
	/*struct FMulticastInlineDelegate*/char CloseRedeployHeroInfoHud[0x10]; // 0x16e8(0x10)
	/*struct FMulticastInlineDelegate*/char EscHotKeyCloseRedeployChooseItemBaseHud[0x10]; // 0x16f8(0x10)
	/*struct FMulticastInlineDelegate*/char EscHotKeyCloseRedeployWeaponPresetStoreBaseHud[0x10]; // 0x1708(0x10)
	/*struct FMulticastInlineDelegate*/char OnRedeployPointDirectionChanged[0x10]; // 0x1718(0x10)
	/*struct FMulticastInlineDelegate*/char OnUnlockWeapons[0x10]; // 0x1728(0x10)
	/*struct FMulticastInlineDelegate*/char OnQuickResYes[0x10]; // 0x1738(0x10)
	/*struct FMulticastInlineDelegate*/char OnQuickResNo[0x10]; // 0x1748(0x10)
	/*struct FMulticastInlineDelegate*/char ContractAccessCancel[0x10]; // 0x1758(0x10)
	/*struct FMulticastInlineDelegate*/char OnSwitchChatWindow[0x10]; // 0x1768(0x10)
	/*struct FMulticastInlineDelegate*/char OnChangeTelescopeFOV[0x10]; // 0x1778(0x10)
	/*struct FMulticastInlineDelegate*/char OnHealPreview[0x10]; // 0x1788(0x10)
	/*struct FMulticastInlineDelegate*/char OnScoreboardItemInteract[0x10]; // 0x1798(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillPress[0x10]; // 0x17a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillRelease[0x10]; // 0x17b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillItemPress[0x10]; // 0x17c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillItemRelease[0x10]; // 0x17d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillItemSecPress[0x10]; // 0x17e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillItemSecRelease[0x10]; // 0x17f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnCustomItemPress[0x10]; // 0x1808(0x10)
	/*struct FMulticastInlineDelegate*/char OnCustomItemRelease[0x10]; // 0x1818(0x10)
	/*struct FMulticastInlineDelegate*/char OnBigMapLocatePlayer[0x10]; // 0x1828(0x10)
	/*struct FMulticastInlineDelegate*/char OnBigMapToggleLegends[0x10]; // 0x1838(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyboardArtillerySupDown[0x10]; // 0x1848(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyboardArtillerySupUp[0x10]; // 0x1858(0x10)
	/*struct FMulticastInlineDelegate*/char OnMouseRightClickedRouletteCancel[0x10]; // 0x1868(0x10)
	/*struct FMulticastInlineDelegate*/char OnMouseLeftClickedRouletteConfirm[0x10]; // 0x1878(0x10)
	/*struct FMulticastInlineDelegate*/char OnBattleFeildSupportDetectorClose[0x10]; // 0x1888(0x10)
	/*struct FMulticastInlineDelegate*/char OnMapLongPressDown[0x10]; // 0x1898(0x10)
	/*struct FMulticastInlineDelegate*/char OnMapLongPressUp[0x10]; // 0x18a8(0x10)
	/*struct FMulticastInlineDelegate*/char GMSetPlayerNameHUD[0x10]; // 0x18b8(0x10)
	/*struct FMulticastInlineDelegate*/char BreakThrouScore[0x10]; // 0x18c8(0x10)
	char pad_18D8[0x10]; // 0x18d8(0x10)
	/*struct FMulticastInlineDelegate*/char AIFireEvent[0x10]; // 0x18e8(0x10)
	/*struct FMulticastInlineDelegate*/char LootingAITutorialEndEvent[0x10]; // 0x18f8(0x10)
	/*struct FMulticastInlineDelegate*/char GuideStageEnd[0x10]; // 0x1908(0x10)
	/*struct FMulticastInlineDelegate*/char GuidePopWindowClose[0x10]; // 0x1918(0x10)
	/*struct FMulticastInlineDelegate*/char PlayerCombatStateNotify[0x10]; // 0x1928(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientTrackTargetArrChanged[0x10]; // 0x1938(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerQuestEnd[0x10]; // 0x1948(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayerRecieveContract[0x10]; // 0x1958(0x10)
	char pad_1968[0x20]; // 0x1968(0x20)
	/*struct FMulticastInlineDelegate*/char OnAcceptedContractIDArrayUpdate[0x10]; // 0x1988(0x10)
	/*struct FMulticastInlineDelegate*/char OnDetectorTimeMapUpdate[0x10]; // 0x1998(0x10)
	/*struct FMulticastInlineDelegate*/char OnIgnoreFormDetectorBuff[0x10]; // 0x19a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSnoicNotify[0x10]; // 0x19b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnActorIgnoreFormDetectorBuff[0x10]; // 0x19c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnAbilityAddDamageModifyItem[0x10]; // 0x19d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnAbilityThrowBlockingSpawn[0x10]; // 0x19e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnAbilityThrowBlockingDestroyed[0x10]; // 0x19f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerManningCompleted[0x10]; // 0x1a08(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientManningStart[0x10]; // 0x1a18(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientManningCompleted[0x10]; // 0x1a28(0x10)
	/*struct FMulticastInlineDelegate*/char AIlabAreaInit[0x10]; // 0x1a38(0x10)
	/*struct FMulticastInlineDelegate*/char AIlabExChangeController[0x10]; // 0x1a48(0x10)
	/*struct FMulticastInlineDelegate*/char OnDamIrisDoorDestory[0x10]; // 0x1a58(0x10)
	/*struct FMulticastInlineDelegate*/char OnFixedTrackRocketExplode[0x10]; // 0x1a68(0x10)
	/*struct FDelegate*/char OnShowCommonProgressBar[0x10]; // 0x1a78(0x10)
	/*struct FMulticastInlineDelegate*/char OnHideCommonProgressBar[0x10]; // 0x1a88(0x10)
	/*struct FMulticastInlineDelegate*/char OnCommonBarCloseBtnClick[0x10]; // 0x1a98(0x10)
	/*struct FMulticastInlineDelegate*/char OnCommonBarCountingEnd[0x10]; // 0x1aa8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInterruptDelayHD[0x10]; // 0x1ab8(0x10)
	/*struct FMulticastInlineDelegate*/char RefreshDFHDInteractorPanelItemDesc[0x10]; // 0x1ac8(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayerBeKillOrBeKnockDownScore[0x10]; // 0x1ad8(0x10)
	/*struct FMulticastInlineDelegate*/char ClientNtfContractReward[0x10]; // 0x1ae8(0x10)
	/*struct FMulticastInlineDelegate*/char ServerRegisterInteractorNtf[0x10]; // 0x1af8(0x10)
	/*struct FMulticastInlineDelegate*/char OnTODActorBeginPlay[0x10]; // 0x1b08(0x10)
	/*struct FMulticastInlineDelegate*/char MPShowKillInfoCardView[0x10]; // 0x1b18(0x10)
	/*struct FMulticastInlineDelegate*/char SOLShowKillInfoCardView[0x10]; // 0x1b28(0x10)
	/*struct FMulticastInlineDelegate*/char OnRangeTargetHit[0x10]; // 0x1b38(0x10)
	/*struct FMulticastInlineDelegate*/char AirDropVehicleEvent[0x10]; // 0x1b48(0x10)
	/*struct FMulticastInlineDelegate*/char ServerVehicleDeadEvent[0x10]; // 0x1b58(0x10)
	/*struct FMulticastInlineDelegate*/char OnSkillMineActivated[0x10]; // 0x1b68(0x10)
	/*struct FMulticastInlineDelegate*/char OnStartFireDoRankSkillOperate[0x10]; // 0x1b78(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientRefreshRankSkillUIState[0x10]; // 0x1b88(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientRankSkillScoreCostChange[0x10]; // 0x1b98(0x10)
	char pad_1BA8[0x20]; // 0x1ba8(0x20)
	/*struct FMulticastInlineDelegate*/char OnPlayerStatUpdate[0x10]; // 0x1bc8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSOLShowDecalBufferChange[0x10]; // 0x1bd8(0x10)

	void TryMarkMapFromLua(struct FName& TargetName, struct FVector& Location, bool bIsAdd); // Function DFMGameplay.DFMGameplayDelegates.TryMarkMapFromLua // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62c0ff0
	void TryGMSetPlayerNameHD(int32_t TeamIndex, struct FText InName); // Function DFMGameplay.DFMGameplayDelegates.TryGMSetPlayerNameHD // (Final|Native|Public) // @ game+0x62c0cc0
	struct UDFMGameplayDelegates* STATIC_GetUDFMGameplayDelegates(struct UObject* WorldContext); // Function DFMGameplay.DFMGameplayDelegates.GetUDFMGameplayDelegates // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdf10
	struct UDFMGameplayDelegates* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.DFMGameplayDelegates.Get // (Final|Native|Static|Public) // @ game+0x62bdf10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameplayGlobalDelegates
// Size: 0x758 (Inherited: 0x38)
class UDFMGameplayGlobalDelegates : public UGameInstanceSubsystem {
public:

	/*struct FMulticastInlineDelegate*/char OnClientQuit[0x10]; // 0x38(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientCharacterSpawnSuccess[0x10]; // 0x48(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameCharacterEquipResult[0x10]; // 0x58(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameCharacterUnEquipResult[0x10]; // 0x68(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientShowSettlementView[0x10]; // 0x78(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePlayerPostLogin[0x10]; // 0x88(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientReadyToPlay[0x10]; // 0x98(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePickupBoxOperationBegin[0x10]; // 0xa8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameShopStationOperationBeginDelegate[0x10]; // 0xb8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePickupContainerOperationBegin[0x10]; // 0xc8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryItemListChanged[0x10]; // 0xd8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryClientInitialize[0x10]; // 0xe8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryCapacityChanged[0x10]; // 0xf8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientInventoryManagerInit[0x10]; // 0x108(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryOnPickItem[0x10]; // 0x118(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryPickupResult[0x10]; // 0x128(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryExchangeItem[0x10]; // 0x138(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventorySortSlot[0x10]; // 0x148(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryDurabilityChanged[0x10]; // 0x158(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryCountChanged[0x10]; // 0x168(0x10)
	char pad_178[0x20]; // 0x178(0x20)
	/*struct FMulticastInlineDelegate*/char OnGamePickupPostSpawn[0x10]; // 0x198(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryPickupContainerSubPickupsChanged[0x10]; // 0x1a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryPickupChanged[0x10]; // 0x1b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePickupDeadBodyOperationBegin[0x10]; // 0x1c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameCurrentPotentialInteractorsChange[0x10]; // 0x1d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameWaitingListInteractingObjectChange[0x10]; // 0x1e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameHUDToggleVisible[0x10]; // 0x1f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGMTogglePlayerHintVisible[0x10]; // 0x208(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameInventoryConsume[0x10]; // 0x218(0x10)
	/*struct FMulticastInlineDelegate*/char OnPseudoSeamlessEntryStart[0x10]; // 0x228(0x10)
	/*struct FMulticastInlineDelegate*/char OnFastEquipResult[0x10]; // 0x238(0x10)
	/*struct FMulticastInlineDelegate*/char OnFastEquipSuccess[0x10]; // 0x248(0x10)
	/*struct FMulticastInlineDelegate*/char OnUnEquipAmmoResult[0x10]; // 0x258(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemMoveResult[0x10]; // 0x268(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerItemMoveNotify[0x10]; // 0x278(0x10)
	/*struct FMulticastInlineDelegate*/char OnRepUseItemInfo[0x10]; // 0x288(0x10)
	/*struct FMulticastInlineDelegate*/char OnRepUseItemStateInfo[0x10]; // 0x298(0x10)
	/*struct FMulticastInlineDelegate*/char OnLootSearchInfoNotify[0x10]; // 0x2a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLootSearchDone[0x10]; // 0x2b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLootSearchCancel[0x10]; // 0x2c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnNotifyActiveWeaponChanged[0x10]; // 0x2d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractDetailNotify[0x10]; // 0x2e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSwitchInteractDetailNotify[0x10]; // 0x2f8(0x10)
	/*struct FMulticastInlineDelegate*/char CloseInteractDetailNotify[0x10]; // 0x308(0x10)
	/*struct FDelegate*/char OnNotifyItemSourceInvalid[0x10]; // 0x318(0x10)
	/*struct FMulticastInlineDelegate*/char OnKeyRoomLockReleasedNotify[0x10]; // 0x328(0x10)
	/*struct FMulticastInlineDelegate*/char OnContainerInteractResultNotify[0x10]; // 0x338(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractorRadioUse[0x10]; // 0x348(0x10)
	/*struct FMulticastInlineDelegate*/char OnStartManagerAbilityVehicle[0x10]; // 0x358(0x10)
	char pad_368[0x30]; // 0x368(0x30)
	/*struct FMulticastInlineDelegate*/char OnClientNotifyBuyResult[0x10]; // 0x398(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientNotifySearchDeadBodyState[0x10]; // 0x3a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnRepCurrencyInGame[0x10]; // 0x3b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientPickupChanged[0x10]; // 0x3c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemArrayPostReplicatedAdd[0x10]; // 0x3d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemArrayPreReplicatedRemove[0x10]; // 0x3e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemArrayPostReplicatedChange[0x10]; // 0x3f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGuideRaidPlayerFreeOperate[0x10]; // 0x408(0x10)
	/*struct FMulticastInlineDelegate*/char OnGuideSolPlayerFreeOperate[0x10]; // 0x418(0x10)
	/*struct FMulticastInlineDelegate*/char OnGuideRemindEscape[0x10]; // 0x428(0x10)
	/*struct FMulticastInlineDelegate*/char OnGuidePlayerDied[0x10]; // 0x438(0x10)
	/*struct FMulticastInlineDelegate*/char ServerOnResurrectCoinEmpty[0x10]; // 0x448(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameHUDCloseItemHUD[0x10]; // 0x458(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePickupThingLostFocus[0x10]; // 0x468(0x10)
	/*struct FMulticastInlineDelegate*/char OnGamePickupOperationBegin[0x10]; // 0x478(0x10)
	/*struct FMulticastInlineDelegate*/char OnPickupSingleItem[0x10]; // 0x488(0x10)
	/*struct FMulticastInlineDelegate*/char OnLoginGameModeStartPlay[0x10]; // 0x498(0x10)
	/*struct FMulticastInlineDelegate*/char OnLoginGameModeEndPlay[0x10]; // 0x4a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLobbyGameModeStartPlay[0x10]; // 0x4b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLobbyGameModeEndPlay[0x10]; // 0x4c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameIntoPOI[0x10]; // 0x4d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameFlowStageChanged[0x10]; // 0x4e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnTankBossTakeDamage[0x10]; // 0x4f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSOLStartMatchInfoDelayShow[0x10]; // 0x508(0x10)
	/*struct FMulticastInlineDelegate*/char OnSOLStartMatchInfoShow[0x10]; // 0x518(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameSeamlessLoadingTimeout[0x10]; // 0x528(0x10)
	/*struct FMulticastInlineDelegate*/char OnIrisEnterStageChange[0x10]; // 0x538(0x10)
	/*struct FMulticastInlineDelegate*/char OnSeamlessEnterFirstSeqStart[0x10]; // 0x548(0x10)
	/*struct FMulticastInlineDelegate*/char OnRepPlayerStartSpot[0x10]; // 0x558(0x10)
	char pad_568[0x20]; // 0x568(0x20)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnOpenHealthTipEnd[0x10]; // 0x588(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnCheckFreeSpaceBeforeLoginEnd[0x10]; // 0x598(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnInstallPathCheckEnd[0x10]; // 0x5a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnCheckNetConnectionEnd[0x10]; // 0x5b8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnGetCDNInfoEnd[0x10]; // 0x5c8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnLuaHotfixEnd[0x10]; // 0x5d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnPreStartLuaVMEnd[0x10]; // 0x5e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnCppHotfixEnd[0x10]; // 0x5f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnDeviceCheckEnd[0x10]; // 0x608(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnLoadAnnounceEnd[0x10]; // 0x618(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnVersionUpdateEnd[0x10]; // 0x628(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnResourceUpdateEnd[0x10]; // 0x638(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnPacUpdateEnd[0x10]; // 0x648(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnPreloadResourceEnd[0x10]; // 0x658(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnAppVersionChangeEnd[0x10]; // 0x668(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnAppVersionChange[0x10]; // 0x678(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnMemoryCheckEnd[0x10]; // 0x688(0x10)
	/*struct FMulticastInlineDelegate*/char OnLaunchToLogin_OnVideoMemoryCheckEnd[0x10]; // 0x698(0x10)
	/*struct FDelegate*/char OnPlayerExitStopUIAudio[0x10]; // 0x6a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnInteractorComponent[0x10]; // 0x6b8(0x10)
	char pad_6C8[0x18]; // 0x6c8(0x18)
	/*struct FMulticastInlineDelegate*/char OnBFCharacterRedeployChange[0x10]; // 0x6e0(0x10)
	/*struct FMulticastInlineDelegate*/char OnAbilityVehicleBtnClicked[0x10]; // 0x6f0(0x10)
	char pad_700[0x58]; // 0x700(0x58)

	void TestDelegates(); // Function DFMGameplay.DFMGameplayGlobalDelegates.TestDelegates // (Final|Native|Public|BlueprintCallable) // @ game+0x88f4d0
	void OnVersionUpdateEnd(bool flg, struct FString Ext); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnVersionUpdateEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf890
	void OnResourceUpdateEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnResourceUpdateEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf800
	void OnPreStartLuaVMEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnPreStartLuaVMEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf6e0
	void OnPreloadResourceEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnPreloadResourceEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf770
	void OnPacUpdateEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnPacUpdateEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf650
	void OnOpenHealthTipEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnOpenHealthTipEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf5c0
	void OnLuaHotfixEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnLuaHotfixEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf530
	void OnLoadAnnounceEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnLoadAnnounceEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf4a0
	void OnInstallPathCheckEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnInstallPathCheckEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf410
	void OnGetCDNInfoEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnGetCDNInfoEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf380
	void OnDeviceCheckEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnDeviceCheckEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf2f0
	void OnCppHotfixEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCppHotfixEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf260
	void OnCheckVideoMemoryEnd(); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckVideoMemoryEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf220
	void OnCheckNetConnectionEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckNetConnectionEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf190
	void OnCheckMemoryEnd(); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckMemoryEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf150
	void OnCheckFreeSpaceBeforeLoginEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckFreeSpaceBeforeLoginEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf0c0
	void OnCheckAppVersionChangeEnd(bool flg); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckAppVersionChangeEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf030
	void OnCheckAppVersionChange(); // Function DFMGameplay.DFMGameplayGlobalDelegates.OnCheckAppVersionChange // (Final|Native|Public|BlueprintCallable) // @ game+0x62bf000
	struct UDFMGameplayGlobalDelegates* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.DFMGameplayGlobalDelegates.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62bdfd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameRuleComponent
// Size: 0x150 (Inherited: 0x100)
class UDFMGameRuleComponent : public UActorComponent {
public:

	char pad_100[0x2]; // 0x100(0x02)
	enum class EGameRuleType RuleType; // 0x102(0x01)
	char pad_103[0x5]; // 0x103(0x05)
	struct TArray<struct FString> PersistentLevelName; // 0x108(0x10)
	struct FName UIDataTableType; // 0x118(0x08)
	struct FName UIDataTableTypeHDOverride; // 0x120(0x08)
	struct TArray<struct UClass*> RuleInvalidCharacterComponentArray; // 0x128(0x10)
	struct ADFMGameState* GameState; // 0x138(0x08)
	struct ADFMGameMode* GameMode; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	void RemoveCharacterComponents(struct AController* DFMController); // Function DFMGameplay.DFMGameRuleComponent.RemoveCharacterComponents // (Final|Native|Public) // @ game+0x62c5190
	void RemoveAllCharacterComponents(); // Function DFMGameplay.DFMGameRuleComponent.RemoveAllCharacterComponents // (Final|Native|Private) // @ game+0x62c5170
	void RebornPlayer(struct AController* PlayerController, bool RefillArmor); // Function DFMGameplay.DFMGameRuleComponent.RebornPlayer // (Native|Public) // @ game+0x62c50a0
	void OnStartMatchWithAllPlayerReady(); // Function DFMGameplay.DFMGameRuleComponent.OnStartMatchWithAllPlayerReady // (Native|Event|Public|BlueprintEvent) // @ game+0x1e36270
	void OnDeactiveRule(); // Function DFMGameplay.DFMGameRuleComponent.OnDeactiveRule // (Native|Event|Public|BlueprintEvent) // @ game+0x1e377d0
	void OnActiveRule(); // Function DFMGameplay.DFMGameRuleComponent.OnActiveRule // (Native|Event|Public|BlueprintEvent) // @ game+0x3624900
	void DeactivateRule(); // Function DFMGameplay.DFMGameRuleComponent.DeactivateRule // (Native|Public) // @ game+0x35e4a10
	void AddCharacterComponents(struct AController* DFMController); // Function DFMGameplay.DFMGameRuleComponent.AddCharacterComponents // (Final|Native|Public) // @ game+0x62c4050
	void AddAllCharacterComponents(); // Function DFMGameplay.DFMGameRuleComponent.AddAllCharacterComponents // (Final|Native|Private) // @ game+0x62c4030
	void ActivateRule(); // Function DFMGameplay.DFMGameRuleComponent.ActivateRule // (Native|Public) // @ game+0x35a3800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameSDKInterface
// Size: 0x38 (Inherited: 0x38)
class UDFMGameSDKInterface : public UGameInstanceSubsystem {
public:


	void OnCheckNetConnectionEnd(bool flg); // Function DFMGameplay.DFMGameSDKInterface.OnCheckNetConnectionEnd // (Final|Native|Public) // @ game+0x62c4a70
	void OnCheckFreeSpaceBeforeLoginEnd(bool flg); // Function DFMGameplay.DFMGameSDKInterface.OnCheckFreeSpaceBeforeLoginEnd // (Final|Native|Public) // @ game+0x62c49e0
	void OnCheckAppVersionChangeEnd(bool flg); // Function DFMGameplay.DFMGameSDKInterface.OnCheckAppVersionChangeEnd // (Final|Native|Public) // @ game+0x62c4950
	void OnCheckAppVersionChange(); // Function DFMGameplay.DFMGameSDKInterface.OnCheckAppVersionChange // (Final|Native|Public) // @ game+0x62c4930
	void BindPreLoginEvents(); // Function DFMGameplay.DFMGameSDKInterface.BindPreLoginEvents // (Final|Native|Public) // @ game+0x62c4150
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPTGameStateDifficultLevel
// Size: 0x38 (Inherited: 0x30)
class UGPTGameStateDifficultLevel : public UObject {
public:

	enum class EGameDifficultLevel Value; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameStatsOnFetchSystem
// Size: 0xb0 (Inherited: 0x58)
class UDFMGameStatsOnFetchSystem : public UGameStatsOnFetchBaseSystem {
public:

	char pad_58[0x58]; // 0x58(0x58)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameViewportClient
// Size: 0x368 (Inherited: 0x368)
class UDFMGameViewportClient : public UGPGameViewportClient {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGuideManager
// Size: 0x48 (Inherited: 0x38)
class UDFMGuideManager : public UGameInstanceSubsystem {
public:

	char pad_38[0x10]; // 0x38(0x10)

	int32_t OpenGuideDialogUIWithCallback(/*struct UObject* WorldContextObj, int32_t GuideDialogId, struct FDelegate& EndPlayCallback*/); // Function DFMGameplay.DFMGuideManager.OpenGuideDialogUIWithCallback // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62c4f70
	void NtfGuidePopWindowClose(int32_t GuidePopWindowId); // Function DFMGameplay.DFMGuideManager.NtfGuidePopWindowClose // (Final|Native|Public|BlueprintCallable) // @ game+0x62c48b0
	void NtfGuideEnd(enum class EGuideStage GuideStageId); // Function DFMGameplay.DFMGuideManager.NtfGuideEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x62c4830
	float GetElapsedTime(); // Function DFMGameplay.DFMGuideManager.GetElapsedTime // (Final|Native|Public|BlueprintCallable) // @ game+0x62c4560
	struct UDFMGuideManager* STATIC_Get(struct UWorld* WorldContext); // Function DFMGameplay.DFMGuideManager.Get // (Final|Native|Static|Public) // @ game+0x62c41f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RespirationVolumeConfigManager
// Size: 0x48 (Inherited: 0x38)
class URespirationVolumeConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHidingBodyComponent
// Size: 0x110 (Inherited: 0x100)
class UDFMHidingBodyComponent : public UActorComponent {
public:

	struct ADFMCharacter* CachedDFMCharacter; // 0x100(0x08)
	int32_t InDustbinBoxID; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)

	void OnRep_InDustbinBoxID(int32_t InPreID); // Function DFMGameplay.DFMHidingBodyComponent.OnRep_InDustbinBoxID // (Final|Native|Protected) // @ game+0x62c99b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHighValueInspectionComponent
// Size: 0x128 (Inherited: 0x100)
class UDFMHighValueInspectionComponent : public UActorComponent {
public:

	struct FName CachedHighValueItemId; // 0x100(0x08)
	bool bHighValueItemInspectAnimFinished; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct AGPCharacter* CachedGPCharacter; // 0x110(0x08)
	int32_t InspectNotGetWeaponTotalCount; // 0x118(0x04)
	int32_t InspectNotGetWeaponMaxCount; // 0x11c(0x04)
	bool bClientNeedCheckEndInspect; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)

	void ServerSetHighValueItemInspectAnimFinished(bool bValue); // Function DFMGameplay.DFMHighValueInspectionComponent.ServerSetHighValueItemInspectAnimFinished // (Final|Native|Public) // @ game+0x62ca270
	void ServerSetHighValueItem(struct FName& ItemID); // Function DFMGameplay.DFMHighValueInspectionComponent.ServerSetHighValueItem // (Final|Native|Public|HasOutParms) // @ game+0x62ca1e0
	void ResetInspectNotGetWeaponTotalCount(); // Function DFMGameplay.DFMHighValueInspectionComponent.ResetInspectNotGetWeaponTotalCount // (Final|Native|Public) // @ game+0x62ca030
	void OnReq_HighValueItemId(); // Function DFMGameplay.DFMHighValueInspectionComponent.OnReq_HighValueItemId // (Final|Native|Protected) // @ game+0x62c9b70
	void NetMultiBroadcastRestartHighValueItemInspect(struct FName ItemID); // Function DFMGameplay.DFMHighValueInspectionComponent.NetMultiBroadcastRestartHighValueItemInspect // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x62c8c60
	int32_t GetInspectNotGetWeaponTotalCount(); // Function DFMGameplay.DFMHighValueInspectionComponent.GetInspectNotGetWeaponTotalCount // (Final|Native|Public|Const) // @ game+0x62c8770
	void ClientInterruptHighValueItemInspect(); // Function DFMGameplay.DFMHighValueInspectionComponent.ClientInterruptHighValueItemInspect // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e377d0
	bool CheckIfCanExecuteHighValueItemInspect(bool bHighValueItemNeedInspection); // Function DFMGameplay.DFMHighValueInspectionComponent.CheckIfCanExecuteHighValueItemInspect // (Final|Native|Public) // @ game+0x62c83f0
	int32_t AddInspectNotGetWeaponTotalCount(); // Function DFMGameplay.DFMHighValueInspectionComponent.AddInspectNotGetWeaponTotalCount // (Final|Native|Public) // @ game+0x62c83c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHitEffectComponent
// Size: 0x730 (Inherited: 0x510)
class UDFMHitEffectComponent : public UGPHitEffectComponent {
public:

	char pad_510[0x8]; // 0x510(0x08)
	struct UGPAudioEventAsset* BeHitEvent; // 0x518(0x08)
	struct UGPAudioEventAsset* HelmetBeHitEvent; // 0x520(0x08)
	struct UGPAudioEventAsset* HelmetBreakEvent; // 0x528(0x08)
	float HitFeedbackCD; // 0x530(0x04)
	char pad_534[0x4]; // 0x534(0x04)
	struct TMap<enum class EHitEventType, float> CamermoveHitMap; // 0x538(0x50)
	struct TMap<enum class EHitEventType, float> WeaponHitMap; // 0x588(0x50)
	struct FSoftObjectPath SoftObjPath; // 0x5d8(0x18)
	float WeaponHitRotationAmplitude; // 0x5f0(0x04)
	float WeaponHitDurtion; // 0x5f4(0x04)
	/*struct TSoftObjectPtr<UCurveVector>*/char RotationCurve[0x28]; // 0x5f8(0x28)
	char pad_620[0x18]; // 0x620(0x18)
	float AlertHurtCD; // 0x638(0x04)
	char pad_63C[0x14]; // 0x63c(0x14)
	struct ADFMWaterRippleEffect* RippleEffect; // 0x650(0x08)
	char pad_658[0x18]; // 0x658(0x18)
	struct AGPCharacter* CachedTakerGPCharacter; // 0x670(0x08)
	char pad_678[0x30]; // 0x678(0x30)
	struct TMap<struct ADFMCharacter*, struct UFireSuppressionInfo*> AllFireSuppressionInfo; // 0x6a8(0x50)
	float SuppressValue; // 0x6f8(0x04)
	float SuppressValueMax; // 0x6fc(0x04)
	float PlayEffectSuppressValue; // 0x700(0x04)
	float SuppressRadiusSquare; // 0x704(0x04)
	float StaySuppressTime; // 0x708(0x04)
	float ReduceSuppressSpeed; // 0x70c(0x04)
	char pad_710[0x20]; // 0x710(0x20)

	void TickRippleEffect(); // Function DFMGameplay.DFMHitEffectComponent.TickRippleEffect // (Final|Native|Protected) // @ game+0x62ca380
	void PlayMakeHitAudio(enum class EHitEventType InHitEffectType); // Function DFMGameplay.DFMHitEffectComponent.PlayMakeHitAudio // (Final|Native|Protected) // @ game+0x62c9fb0
	void OnTakeWeaponDamage(struct FDamageResultInfo& DamageResultInfo); // Function DFMGameplay.DFMHitEffectComponent.OnTakeWeaponDamage // (Native|Protected|HasOutParms) // @ game+0x62c9de0
	void OnServerWeaponBulletImpact(/*struct FHitResult& HitInfo, struct FVector& StartLocation, struct TScriptInterface<IWeaponInterface> WeaponOwner*/); // Function DFMGameplay.DFMHitEffectComponent.OnServerWeaponBulletImpact // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62c9c60
	void OnMakerMakeDamageFeedback(struct FDamageResultInfo& DamageResultInfo); // Function DFMGameplay.DFMHitEffectComponent.OnMakerMakeDamageFeedback // (Native|Protected|HasOutParms) // @ game+0x62c9580
	void OnLoadHitAudioTable(struct UDataTable* DataTable, enum class EBeHitedType BeHitedType, enum class EDamageType DamageType, struct UGPAudioEventAsset* GPAudioEvent, struct AActor* TargetCharacter, struct AActor* SourceCharacter); // Function DFMGameplay.DFMHitEffectComponent.OnLoadHitAudioTable // (Final|Native|Protected) // @ game+0x62c92c0
	void OnLoadAudioAssets(struct TArray<struct FSoftObjectPath> InPathsjectPath); // Function DFMGameplay.DFMHitEffectComponent.OnLoadAudioAssets // (Final|Native|Private) // @ game+0x62c9130
	void OnHitFeedBackShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMHitEffectComponent.OnHitFeedBackShow // (Final|Native|Public) // @ game+0x62c9030
	void LoadAudioAssets(); // Function DFMGameplay.DFMHitEffectComponent.LoadAudioAssets // (Final|Native|Private) // @ game+0x62c8c40
	void LiveStatusChanged(struct AGPCharacterBase* MakerActor, char OldStatus, char NewStatus); // Function DFMGameplay.DFMHitEffectComponent.LiveStatusChanged // (Final|Native|Public) // @ game+0x62c8b40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FireSuppressionInfo
// Size: 0x50 (Inherited: 0x30)
class UFireSuppressionInfo : public UObject {
public:

	char pad_30[0x20]; // 0x30(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BeHitedAudioTableManager
// Size: 0x58 (Inherited: 0x38)
class UBeHitedAudioTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)
	struct TArray<struct UObject*> AudioAssetCache; // 0x48(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHudDataReplicator
// Size: 0x540 (Inherited: 0x540)
class ADFMHudDataReplicator : public AGPHudDataReplicator {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInGameUpgradeComponent
// Size: 0x340 (Inherited: 0x100)
class UDFMInGameUpgradeComponent : public UActorComponent {
public:

	struct ADFMPlayerController* OwnerPlayerController; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)
	struct FGameModeLevelConfig CurGameModeLevelMP; // 0x118(0x20)
	struct TMap<int32_t, struct FGameModeLevelConfig> GameModeLevelMPConfig; // 0x138(0x50)
	int64_t LevelMPIncrementExp; // 0x188(0x08)
	struct TArray<uint64_t> UnlockedWeaponsIDInGame; // 0x190(0x10)
	struct TMap<uint64_t, struct FMPWeaponLevelConfig> CurMPWeaponsLevelMap; // 0x1a0(0x50)
	struct TMap<uint64_t, struct FMPWeaponLevelConfigStruct> AllMPWeaponsLevelConfig; // 0x1f0(0x50)
	struct TMap<uint64_t, int64_t> WeaponIncrementExp; // 0x240(0x50)
	int32_t WeaponUseExpPerSecond; // 0x290(0x04)
	char pad_294[0x54]; // 0x294(0x54)
	struct FMPMedalRepStruct CurMedalsLevelStruct; // 0x2e8(0x10)
	char pad_2F8[0x48]; // 0x2f8(0x48)

	void UpdateData_MPWeaponLevel(uint64_t InWeaponId, int32_t InAddExp); // Function DFMGameplay.DFMInGameUpgradeComponent.UpdateData_MPWeaponLevel // (Final|Native|Public) // @ game+0x62ca570
	void UpdateData_MPMedalLevel(enum class EModalPointType MedalType, int32_t LevelNum, int32_t CurMedalLevel, float NextMedalProg); // Function DFMGameplay.DFMInGameUpgradeComponent.UpdateData_MPMedalLevel // (Final|Native|Public) // @ game+0x62ca420
	void UpdateData_GameModeLevelMP(int32_t InAddExp); // Function DFMGameplay.DFMInGameUpgradeComponent.UpdateData_GameModeLevelMP // (Final|Native|Public) // @ game+0x62ca3a0
	void OnWeaponLevelUpShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMInGameUpgradeComponent.OnWeaponLevelUpShow // (Final|Native|Public) // @ game+0x62c9eb0
	void OnRep_UnlockedWeaponsIDInGame(struct TArray<uint64_t> OldUnlockedWeaponsIDInGame); // Function DFMGameplay.DFMInGameUpgradeComponent.OnRep_UnlockedWeaponsIDInGame // (Final|Native|Public) // @ game+0x62c9a50
	void OnRep_CurMedalsLevelStruct(struct FMPMedalRepStruct OldMedalsLevelStruct); // Function DFMGameplay.DFMInGameUpgradeComponent.OnRep_CurMedalsLevelStruct // (Final|Native|Public) // @ game+0x62c9890
	void OnRep_CurGameModeLevelMP(struct FGameModeLevelConfig OldGameModeLevelMP); // Function DFMGameplay.DFMInGameUpgradeComponent.OnRep_CurGameModeLevelMP // (Final|Native|Public) // @ game+0x62c9750
	void OnMPLevelUpShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMInGameUpgradeComponent.OnMPLevelUpShow // (Final|Native|Public) // @ game+0x62c9480
	void OnMedalLevelUpShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMInGameUpgradeComponent.OnMedalLevelUpShow // (Final|Native|Public) // @ game+0x62c9650
	void OnCollectionWeaponUsingTime(uint64_t PlayerUin, uint64_t WeaponID, float AddTime); // Function DFMGameplay.DFMInGameUpgradeComponent.OnCollectionWeaponUsingTime // (Final|Native|Public) // @ game+0x62c8f30
	void Notify_MPMedalLevelUp(enum class EModalPointType MedalType, int32_t MedalLevel, int32_t AddScore); // Function DFMGameplay.DFMInGameUpgradeComponent.Notify_MPMedalLevelUp // (Final|Native|Public) // @ game+0x62c8cf0
	void InitPlayerData(); // Function DFMGameplay.DFMInGameUpgradeComponent.InitPlayerData // (Final|Native|Public) // @ game+0x62c8a60
	void InitData_MPMedalLevel(); // Function DFMGameplay.DFMInGameUpgradeComponent.InitData_MPMedalLevel // (Final|Native|Public) // @ game+0x88f4d0
	void InitData_MP(); // Function DFMGameplay.DFMInGameUpgradeComponent.InitData_MP // (Final|Native|Public) // @ game+0x62c8a40
	struct TArray<uint64_t> GetUnlockedWeaponsIDInGame(); // Function DFMGameplay.DFMInGameUpgradeComponent.GetUnlockedWeaponsIDInGame // (Final|Native|Public) // @ game+0x62c8960
	void GetMedalShowData(struct TMap<enum class EModalPointType, struct FMPMedalLevel>& OutMap); // Function DFMGameplay.DFMInGameUpgradeComponent.GetMedalShowData // (Final|Native|Public|HasOutParms) // @ game+0x62c87a0
	void ClientOnNotifyMPWeaponLevelUp(uint64_t WeaponID, int32_t NewLevel, struct TArray<uint64_t> UnlockedPartsID); // Function DFMGameplay.DFMInGameUpgradeComponent.ClientOnNotifyMPWeaponLevelUp // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62c8580
	void ClientOnNotifyMPMedalLevelUp(enum class EModalPointType MedalType, int32_t MedalLevel, int32_t AddScore); // Function DFMGameplay.DFMInGameUpgradeComponent.ClientOnNotifyMPMedalLevelUp // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x366e460
	void ClientOnNotifyGameModeLevelMPLevelUp(int32_t NewLevel, struct TArray<uint64_t> WeaponsID); // Function DFMGameplay.DFMInGameUpgradeComponent.ClientOnNotifyGameModeLevelMPLevelUp // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62c8480
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInputChangeScopeLogic
// Size: 0x98 (Inherited: 0x98)
class UDFMInputChangeScopeLogic : public UGPInputChangeScopeLogic {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInputFireLogic
// Size: 0xf0 (Inherited: 0xe8)
class UDFMInputFireLogic : public UGPInputFireLogic {
public:

	char pad_E8[0x8]; // 0xe8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInputLeftFireLogic
// Size: 0x80 (Inherited: 0x78)
class UDFMInputLeftFireLogic : public UGPInputLeftFireLogic {
public:

	char pad_78[0x8]; // 0x78(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInputReloadLogic
// Size: 0xa8 (Inherited: 0x98)
class UDFMInputReloadLogic : public UGPInputReloadLogic {
public:

	/*struct TScriptInterface<IReloadAmmoHudInterface>*/char ReloadRouletteHUDView[0x10]; // 0x98(0x10)

	void OnShowRouletteDelegate(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMInputReloadLogic.OnShowRouletteDelegate // (Final|Native|Public) // @ game+0x62cedb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMIrisEnterComponent
// Size: 0x208 (Inherited: 0x100)
class UDFMIrisEnterComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnAllPlayerSeamlessReady[0x10]; // 0x100(0x10)
	struct ADFMCharacter* DFMCharacter; // 0x110(0x08)
	int32_t IntroEventID; // 0x118(0x04)
	struct FName IntroEventTargetPointName; // 0x11c(0x08)
	struct FName IntroEventCutSceneBPName; // 0x124(0x08)
	char pad_12C[0x4]; // 0x12c(0x04)
	struct FSoftObjectPath CutSceneLevelPath; // 0x130(0x18)
	bool bAllPlayerSeamlessEnterReady; // 0x148(0x01)
	bool DEBUG_NeedIntroEventCutScene; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	int32_t LevelStreamingPriority; // 0x14c(0x04)
	int32_t LevelStreamingThreshold; // 0x150(0x04)
	struct FName EntryMovieRootTag; // 0x154(0x08)
	struct FName HelicopterTag; // 0x15c(0x08)
	struct FName DefaultMovePathTag; // 0x164(0x08)
	struct FGameplayTag GetOnHelicopterTag; // 0x16c(0x08)
	struct FGameplayTag ResetFromHelicopterTag; // 0x174(0x08)
	struct FName CutSceneRaiseWatch; // 0x17c(0x08)
	struct FName CutSceneLoopExpandWatch; // 0x184(0x08)
	struct FName CutSceneLowerWatchAndAbseil; // 0x18c(0x08)
	struct FName CutSceneLowerWatchAndAbseilForGuide; // 0x194(0x08)
	struct FName CutSceneOrnament; // 0x19c(0x08)
	struct FName HelicopterCharacterSeatName; // 0x1a4(0x08)
	struct FName GuideEntryHUDName; // 0x1ac(0x08)
	struct FName NormalEntryHUDName; // 0x1b4(0x08)
	struct FName NormalPadWireless; // 0x1bc(0x08)
	struct FName PlanePadWireless; // 0x1c4(0x08)
	struct FName NormalAbseilWireless; // 0x1cc(0x08)
	struct FName PlaneAbseilWireless; // 0x1d4(0x08)
	char pad_1DC[0x4]; // 0x1dc(0x04)
	struct FString IrisEnterLightLevel; // 0x1e0(0x10)
	struct FName LightingRoot; // 0x1f0(0x08)
	float SeamlessTeleportTimeout; // 0x1f8(0x04)
	float SeamlessEnterStageTimeoutDEBUG; // 0x1fc(0x04)
	int32_t GuidePlayedMatchThreshold; // 0x200(0x04)
	float LandingTransitionTime; // 0x204(0x04)

	void StartGetOnHelicopterAction(); // Function DFMGameplay.DFMIrisEnterComponent.StartGetOnHelicopterAction // (Final|Native|Public) // @ game+0x62d5c70
	void ShowBlackScreen(float InTime); // Function DFMGameplay.DFMIrisEnterComponent.ShowBlackScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x62d5bf0
	void ResetFromHelicopterAction(); // Function DFMGameplay.DFMIrisEnterComponent.ResetFromHelicopterAction // (Final|Native|Public) // @ game+0x62d5770
	void PrespawnGPSequence(struct AGPSequenceActor* GPSequenceActor); // Function DFMGameplay.DFMIrisEnterComponent.PrespawnGPSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x62d5460
	void OnSequencePrespawnActorCreate(struct AActor* PrespawnActor); // Function DFMGameplay.DFMIrisEnterComponent.OnSequencePrespawnActorCreate // (Final|Native|Public) // @ game+0x62d5280
	void OnSequenceEndPlay(struct AGPSequenceActor* SeqActor); // Function DFMGameplay.DFMIrisEnterComponent.OnSequenceEndPlay // (Final|Native|Public) // @ game+0x62d5200
	void OnSequenceBeginPlay(struct AGPSequenceActor* SeqActor); // Function DFMGameplay.DFMIrisEnterComponent.OnSequenceBeginPlay // (Final|Native|Public) // @ game+0x62d5180
	void OnLevelSequenceCreate(struct ALevelSequenceActor* LevelSequenceActor); // Function DFMGameplay.DFMIrisEnterComponent.OnLevelSequenceCreate // (Final|Native|Public) // @ game+0x62d4f20
	void LoadingReadyNotifyServer(); // Function DFMGameplay.DFMIrisEnterComponent.LoadingReadyNotifyServer // (Final|Native|Public|BlueprintCallable) // @ game+0x62d4e00
	void InitSeamlessEnter(bool bInit); // Function DFMGameplay.DFMIrisEnterComponent.InitSeamlessEnter // (Final|Native|Public|BlueprintCallable) // @ game+0x35d74c0
	void HideBlackScreen(float InTime); // Function DFMGameplay.DFMIrisEnterComponent.HideBlackScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x62d4d80
	bool HasFinished3CGuide(); // Function DFMGameplay.DFMIrisEnterComponent.HasFinished3CGuide // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62d4d50
	void BP_ShowBlackScreen(float InTime); // Function DFMGameplay.DFMIrisEnterComponent.BP_ShowBlackScreen // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_HideBlackScreen(float InTime); // Function DFMGameplay.DFMIrisEnterComponent.BP_HideBlackScreen // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AllPlayerReady(); // Function DFMGameplay.DFMIrisEnterComponent.AllPlayerReady // (Final|Native|Public) // @ game+0x62d3fd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMItemSearchSubSystem
// Size: 0x90 (Inherited: 0x38)
class UDFMItemSearchSubSystem : public UGameInstanceSubsystem {
public:

	char pad_38[0x58]; // 0x38(0x58)

	void OnServerItemMoveNotify(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.DFMItemSearchSubSystem.OnServerItemMoveNotify // (Final|Native|Private) // @ game+0x62d5300
	void OnCharacterDoDying(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.DFMItemSearchSubSystem.OnCharacterDoDying // (Final|Native|Private) // @ game+0x62d4e20
	struct UDFMItemSearchSubSystem* STATIC_Get(struct UObject* WorldContextObj); // Function DFMGameplay.DFMItemSearchSubSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d42b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMItemSourceSubSystem
// Size: 0xf8 (Inherited: 0x38)
class UDFMItemSourceSubSystem : public UWorldSubsystem {
public:

	char pad_38[0xc0]; // 0x38(0xc0)

	struct UDFMItemSourceSubSystem* STATIC_Get(struct UObject* WorldContextObj); // Function DFMGameplay.DFMItemSourceSubSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d4370
	void DumpAllItemSource(struct FString ItemIDPrefix); // Function DFMGameplay.DFMItemSourceSubSystem.DumpAllItemSource // (Final|Native|Public) // @ game+0x62d4190
	void DumpAllItemFlows(struct FString ItemIDPrefix); // Function DFMGameplay.DFMItemSourceSubSystem.DumpAllItemFlows // (Final|Native|Public) // @ game+0x62d4070
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMItemSubsystem
// Size: 0x130 (Inherited: 0x40)
class UDFMItemSubsystem : public UGPItemSubsystem {
public:

	char pad_40[0xa0]; // 0x40(0xa0)
	struct TMap<uint64_t, struct FItemAnimationCaches> AnimationCaches; // 0xe0(0x50)

	void OnLoadAnimationFinishCallback(struct TArray<struct FSoftObjectPath> SoftObjectPaths, uint64_t ItemID); // Function DFMGameplay.DFMItemSubsystem.OnLoadAnimationFinishCallback // (Final|Native|Protected) // @ game+0x62d4fa0
	struct UDFMItemSubsystem* STATIC_GetDFMItemSubsystem(struct UObject* WorldContext); // Function DFMGameplay.DFMItemSubsystem.GetDFMItemSubsystem // (Final|Native|Static|Public) // @ game+0x62d4580
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMKillZVolume
// Size: 0x3c8 (Inherited: 0x3c0)
class ADFMKillZVolume : public AKillZVolume {
public:

	bool bResetLastWalkingPosition; // 0x3c0(0x01)
	bool bResetLastWalkingPositionCheckFalling; // 0x3c1(0x01)
	bool bKillCharacter; // 0x3c2(0x01)
	char pad_3C3[0x5]; // 0x3c3(0x05)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMLaserPointerMarkItem
// Size: 0x580 (Inherited: 0x570)
class UDFMLaserPointerMarkItem : public UGPLaserPointerMarkItem {
public:

	struct TWeakObjectPtr<struct AGPCharacter> LocalCh; // 0x570(0x08)
	struct TWeakObjectPtr<struct UDFMAbilityLockerComponent> LockerComp; // 0x578(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMLoadEquipmentItem
// Size: 0x78 (Inherited: 0x30)
class UDFMLoadEquipmentItem : public UObject {
public:

	char pad_30[0x10]; // 0x30(0x10)
	struct UEquipmentItemBP* EquipmentItemBP; // 0x40(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x48(0x08)
	struct TArray<struct UDFMEquipmentItemBase*> EquipmentItemArray; // 0x50(0x10)
	bool bHasLoadFinish; // 0x60(0x01)
	bool bIsLoading; // 0x61(0x01)
	char pad_62[0x16]; // 0x62(0x16)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMLootingSubSystem
// Size: 0x1f8 (Inherited: 0x38)
class UDFMLootingSubSystem : public UWorldSubsystem {
public:

	char pad_38[0x168]; // 0x38(0x168)
	/*struct TSet<struct UObject*>*/char DirtyLootObjects[0x50]; // 0x1a0(0x50)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	struct UDFMLootingSubSystem* STATIC_Get(struct UObject* WorldContextObj); // Function DFMGameplay.DFMLootingSubSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d4430
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDropDurConfigSubSystem
// Size: 0x48 (Inherited: 0x38)
class UDFMDropDurConfigSubSystem : public UWorldSubsystem {
public:

	char pad_38[0x10]; // 0x38(0x10)

	struct UDFMDropDurConfigSubSystem* STATIC_GetInstance(struct UObject* WorldContextObject); // Function DFMGameplay.DFMDropDurConfigSubSystem.GetInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d4660
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMManholeCoverTriggerComponent
// Size: 0x110 (Inherited: 0x100)
class UDFMManholeCoverTriggerComponent : public UActorComponent {
public:

	struct ADFMCharacter* CachedDFMCharacter; // 0x100(0x08)
	bool bIfBelowManholeCover; // 0x108(0x01)
	bool bIfAboveManholeCover; // 0x109(0x01)
	char pad_10A[0x6]; // 0x10a(0x06)

	void SetIfBelowManholeCover(bool bValue); // Function DFMGameplay.DFMManholeCoverTriggerComponent.SetIfBelowManholeCover // (Final|Native|Public) // @ game+0x62d5a10
	void SetIfAboveManholeCover(bool bValue); // Function DFMGameplay.DFMManholeCoverTriggerComponent.SetIfAboveManholeCover // (Final|Native|Public) // @ game+0x62d5980
	void SetCanInteract(bool bValue); // Function DFMGameplay.DFMManholeCoverTriggerComponent.SetCanInteract // (Final|Native|Public) // @ game+0x62d58f0
	void SetCanClimbLadder(bool bValue); // Function DFMGameplay.DFMManholeCoverTriggerComponent.SetCanClimbLadder // (Final|Native|Public) // @ game+0x62d5860
	void OnRep_IfBelowManholeCover(); // Function DFMGameplay.DFMManholeCoverTriggerComponent.OnRep_IfBelowManholeCover // (Final|Native|Public) // @ game+0x62d5160
	bool GetIfBelowManholeCover(); // Function DFMGameplay.DFMManholeCoverTriggerComponent.GetIfBelowManholeCover // (Final|Native|Public) // @ game+0x62d4630
	bool GetIfAboveManholeCover(); // Function DFMGameplay.DFMManholeCoverTriggerComponent.GetIfAboveManholeCover // (Final|Native|Public) // @ game+0x62d4600
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMapHudUtil
// Size: 0x30 (Inherited: 0x30)
class UDFMMapHudUtil : public UObject {
public:


	bool STATIC_SetMapIconData(struct UObject* WorldContextObject, struct FName& IconName, struct FDFMMapIconData& Data); // Function DFMGameplay.DFMMapHudUtil.SetMapIconData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d5aa0
	bool STATIC_RemoveIconFromMapByController(struct UObject* WorldContextObject, struct UMapIconViewController* IconViewController); // Function DFMGameplay.DFMMapHudUtil.RemoveIconFromMapByController // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d56b0
	bool STATIC_RemoveIconFromMap(struct UObject* WorldContextObject, struct FName& IconName); // Function DFMGameplay.DFMMapHudUtil.RemoveIconFromMap // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d55e0
	void STATIC_RemoveAllContractMapItemControllers(struct UObject* WorldContextObject, struct TArray<struct FName>& ContractNames); // Function DFMGameplay.DFMMapHudUtil.RemoveAllContractMapItemControllers // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d54e0
	struct UMapIconViewController* STATIC_GetOrAddMapItemControllerByData(struct UObject* WorldContextObject, struct FDFMMapIconData& Data); // Function DFMGameplay.DFMMapHudUtil.GetOrAddMapItemControllerByData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d4c60
	struct UMapIconViewController* STATIC_GetOrAddMapItemController(struct UObject* WorldContextObject, struct FName& IconName, enum class EDFMMapIconType MapIconType, struct FVector IconLocation, struct AActor* IconActor, float RotateAngle); // Function DFMGameplay.DFMMapHudUtil.GetOrAddMapItemController // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62d4a90
	bool STATIC_GetMapIconData(struct UObject* WorldContextObject, struct FName& IconName, struct FDFMMapIconData& Data); // Function DFMGameplay.DFMMapHudUtil.GetMapIconData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d4940
	struct UMapIconViewController* STATIC_GetMapIconControllerByPos(struct UObject* WorldContextObject, struct FVector& pos); // Function DFMGameplay.DFMMapHudUtil.GetMapIconControllerByPos // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62d4870
	struct UMapIconViewController* STATIC_GetMapIconControllerByName(struct UObject* WorldContextObject, struct FName& IconName); // Function DFMGameplay.DFMMapHudUtil.GetMapIconControllerByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x62d47a0
	struct UMapIconViewController* STATIC_GetMapIconControllerByActor(struct UObject* WorldContextObject, struct AActor* TargetActor); // Function DFMGameplay.DFMMapHudUtil.GetMapIconControllerByActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d46e0
	struct FName STATIC_GetCurrentModeMapIconDataTableType(struct UObject* WorldContextObject); // Function DFMGameplay.DFMMapHudUtil.GetCurrentModeMapIconDataTableType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d44f0
	bool STATIC_CheckMapInfoComponentExist(struct UObject* WorldContextObject); // Function DFMGameplay.DFMMapHudUtil.CheckMapInfoComponentExist // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d3ff0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMarkerControllerComponent
// Size: 0x470 (Inherited: 0x420)
class UDFMMarkerControllerComponent : public UGPMarkerControllerComponent {
public:

	struct TMap<struct FName, struct UMapIconViewController*> MapIconViewControllersMap; // 0x420(0x50)

	void ServerMarkContainerItem(struct AActor* ContainerActor, uint64_t ItemGid); // Function DFMGameplay.DFMMarkerControllerComponent.ServerMarkContainerItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62d5790
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMarkerEffectComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMMarkerEffectComponent : public UGPMarkerEffectComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMarkerManager
// Size: 0x1230 (Inherited: 0x1220)
class ADFMMarkerManager : public AGPMarkerManager {
public:

	struct UUserWidget* CurrentAimMapTrackedMarker; // 0x1220(0x08)
	struct UMapIconViewController* CurrentAimMapTrackedMarkerViewController; // 0x1228(0x08)

	void OnGuideSolPlayerFreeOperate(); // Function DFMGameplay.DFMMarkerManager.OnGuideSolPlayerFreeOperate // (Final|Native|Public) // @ game+0x88f4d0
	void OnClientDFMGamePlayModeChanged(enum class EDFMGamePlayMode InNewGamePlayMode); // Function DFMGameplay.DFMMarkerManager.OnClientDFMGamePlayModeChanged // (Final|Native|Public) // @ game+0x62d4ea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMetaperfExtension
// Size: 0x38 (Inherited: 0x38)
class UDFMMetaperfExtension : public UGameInstanceSubsystem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavArea_Door
// Size: 0x50 (Inherited: 0x50)
class UNavArea_Door : public UNavArea {
public:


	void STATIC_UpdateDoorNavAreaClass(struct UBoxComponent* DoorNavArea, bool bOpen, bool bNeedKey); // Function DFMGameplay.NavArea_Door.UpdateDoorNavAreaClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62d5c90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavArea_Water
// Size: 0x50 (Inherited: 0x50)
class UNavArea_Water : public UNavArea {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMNPCAnimInstance
// Size: 0x9f0 (Inherited: 0x280)
class UDFMNPCAnimInstance : public UAnimInstance {
public:

	struct FDFMNPCAnimInstanceProxy LocalProxy; // 0x280(0x770)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionPlanProxyAnimInstance
// Size: 0xa00 (Inherited: 0x290)
class UMotionPlanProxyAnimInstance : public UGPAnimInstanceBase {
public:

	struct FMotionPlanProxyAnimInstanceProxy LocalProxy; // 0x290(0x750)
	struct UMotionActionComponent* MotionComp; // 0x9e0(0x08)
	struct TArray<struct FMotionProxyStateMapping> StateMap; // 0x9e8(0x10)
	char pad_9F8[0x8]; // 0x9f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DialogBPLibrary
// Size: 0x30 (Inherited: 0x30)
class UDialogBPLibrary : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMObserverPawn
// Size: 0x4f0 (Inherited: 0x4f0)
class ADFMObserverPawn : public AGPObserverPawn {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMOpenWorldProtInterface
// Size: 0x30 (Inherited: 0x30)
class UDFMOpenWorldProtInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMOutLineEffectComponent
// Size: 0x288 (Inherited: 0x220)
class UDFMOutLineEffectComponent : public UGPOutLineEffectComponent {
public:

	bool bItemOutLineTick; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct TArray<struct FAbilityItemOutLineData> ItemOutLineDataList; // 0x228(0x10)
	/*struct TSet<int32_t>*/char ClientOutLineItemSet[0x50]; // 0x238(0x50)

	void OnCharacterAvatarChanged(); // Function DFMGameplay.DFMOutLineEffectComponent.OnCharacterAvatarChanged // (Final|Native|Public) // @ game+0x62da040
	void ClientUpdateItemOutLineData(struct TArray<struct FAbilityItemOutLineData> ServerItemOutLineDataList); // Function DFMGameplay.DFMOutLineEffectComponent.ClientUpdateItemOutLineData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62d9b70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMOutLineItemManager
// Size: 0x3c8 (Inherited: 0x378)
class ADFMOutLineItemManager : public ALevelSubsystem {
public:

	struct TMap<int32_t, struct TWeakObjectPtr<struct AActor>> OutLineItemMap; // 0x378(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMParachuteComponent
// Size: 0x570 (Inherited: 0x550)
class UDFMParachuteComponent : public UGPParachuteComponent {
public:

	struct UClass* ParachuteActorClass; // 0x550(0x08)
	struct AParachuteActor* ParachuteActor; // 0x558(0x08)
	bool bHasAIParachuteBegun; // 0x560(0x01)
	char pad_561[0x3]; // 0x561(0x03)
	struct FName LandingEffectID; // 0x564(0x08)
	char pad_56C[0x4]; // 0x56c(0x04)

	void OnRep_HasAIParachuteBegun(); // Function DFMGameplay.DFMParachuteComponent.OnRep_HasAIParachuteBegun // (Final|Native|Protected) // @ game+0x62da540
	void Multicast_OnAIEndParachute(); // Function DFMGameplay.DFMParachuteComponent.Multicast_OnAIEndParachute // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x22b8690
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkComponent
// Size: 0x2e0 (Inherited: 0x288)
class UDFMPerkComponent : public UGPPerkComponent {
public:

	struct TMap<int32_t, struct UDFMPerkInstance*> PerkInstances; // 0x288(0x50)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void OnPerkSPEffectChanged(enum class EPerkSpecialEffectType SpecialEffectType, bool bTrigger); // Function DFMGameplay.DFMPerkComponent.OnPerkSPEffectChanged // (Final|Native|Public) // @ game+0x62da410
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkInstance
// Size: 0x68 (Inherited: 0x30)
class UDFMPerkInstance : public UObject {
public:

	char pad_30[0x18]; // 0x30(0x18)
	struct UDFMPerkCondBase* ActiveChecker; // 0x48(0x08)
	char pad_50[0x8]; // 0x50(0x08)
	struct UDFMPerkLogicBase* AdditiveLogicExecuter; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)

	void OnBuffRemoved(uint32_t InBuffId, enum class ECharacterPart InCharacterPart); // Function DFMGameplay.DFMPerkInstance.OnBuffRemoved // (Final|Native|Public) // @ game+0x62d9ec0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMOfflinePlayerController
// Size: 0x6e0 (Inherited: 0x6d0)
class ADFMOfflinePlayerController : public APlayerController {
public:

	struct UPlayerSettlementComponent* PlayerSettlementComponent; // 0x6d0(0x08)
	bool bOfflineResetSpectate; // 0x6d8(0x01)
	char pad_6D9[0x7]; // 0x6d9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerDataAnalysisComponent
// Size: 0x5e8 (Inherited: 0x100)
class UDFMPlayerDataAnalysisComponent : public UActorComponent {
public:

	int32_t ToTPPCount; // 0x100(0x04)
	int32_t ToFPPCount; // 0x104(0x04)
	char pad_108[0x3b4]; // 0x108(0x3b4)
	bool bLastInFighting; // 0x4bc(0x01)
	char pad_4BD[0x3]; // 0x4bd(0x03)
	float LastMakeDamageOrHurtTime; // 0x4c0(0x04)
	float OutFightTime; // 0x4c4(0x04)
	char pad_4C8[0x20]; // 0x4c8(0x20)
	int32_t KillCharacterCntInFighting; // 0x4e8(0x04)
	int32_t HealthPartBrokenTimeInFighting; // 0x4ec(0x04)
	int32_t HealHPInFighting; // 0x4f0(0x04)
	int32_t TakeArmorDamageInFighting; // 0x4f4(0x04)
	char pad_4F8[0xf0]; // 0x4f8(0xf0)

	void ServerRecordOpenBulletRoulette(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.ServerRecordOpenBulletRoulette // (Net|Native|Event|Public|NetServer) // @ game+0x1e36270
	void ServerIncreaseXPPChangeCount(bool bSetToFPP); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.ServerIncreaseXPPChangeCount // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e17f0
	void OnSwitchToMeleeSuccess(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSwitchToMeleeSuccess // (Final|Native|Public) // @ game+0x62e13b0
	void OnSOLHealthStateChange(struct AGPCharacterBase* Target, enum class ECharacterPart Part, enum class ECharacterPartHealthState OldState, enum class ECharacterPartHealthState NewState); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSOLHealthStateChange // (Final|Native|Public) // @ game+0x62e0e60
	void OnSOLBulletSlotRightChange(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSOLBulletSlotRightChange // (Final|Native|Public) // @ game+0x62e0e40
	void OnSOLBulletSlotLeftChange(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSOLBulletSlotLeftChange // (Final|Native|Public) // @ game+0x62e0e20
	void OnServerNotifyRemoveEquip(enum class EEquipmentType EquipType); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnServerNotifyRemoveEquip // (Final|Native|Public) // @ game+0x62e1330
	void OnServerNotifyAddEquip(enum class EEquipmentType EquipType); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnServerNotifyAddEquip // (Final|Native|Public) // @ game+0x62e12b0
	void OnSendKillEvent(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* WeaponDesc); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSendKillEvent // (Final|Native|Public|HasOutParms) // @ game+0x62e11b0
	void OnSendHpChangeEvent(struct AActor* Owner, int32_t CurrentValue, int32_t MaxValue); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSendHpChangeEvent // (Final|Native|Public) // @ game+0x62e10b0
	void OnSendArmChangeEvent(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnSendArmChangeEvent // (Final|Native|Public) // @ game+0x62e0fb0
	void OnKnockDownedInfoNtf(struct FKillInfo& NewAddKillInfo); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnKnockDownedInfoNtf // (Final|Native|Public|HasOutParms) // @ game+0x62e0c70
	void OnHealthChanged(int32_t DeltaHealth); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.OnHealthChanged // (Final|Native|Public) // @ game+0x62e0bf0
	struct FString GetSOLWatchFightRecord(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.GetSOLWatchFightRecord // (Final|Native|Public) // @ game+0x62e0780
	void EndSOLWatchFightRecord(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.EndSOLWatchFightRecord // (Final|Native|Public) // @ game+0x62e0440
	bool bIsInFightState(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.bIsInFightState // (Final|Native|Public) // @ game+0x62e2a80
	void AddTeammateSaveNum(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddTeammateSaveNum // (Final|Native|Public) // @ game+0x62dedf0
	void AddSOLWatchFightRecord(uint64_t WatchPlayerUin); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddSOLWatchFightRecord // (Final|Native|Public) // @ game+0x62ded70
	void AddRebornNum(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddRebornNum // (Final|Native|Public) // @ game+0x62ded50
	void AddRebornCount(struct APlayerController* Conroller, struct APawn* Pawn); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddRebornCount // (Final|Native|Public) // @ game+0x62dec90
	void AddPlayerSaveNum(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddPlayerSaveNum // (Final|Native|Public) // @ game+0x62dec70
	void AddMachineGunUseCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddMachineGunUseCount // (Final|Native|Public) // @ game+0x62dec50
	void AddLongDistHitCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddLongDistHitCount // (Final|Native|Public) // @ game+0x62dec30
	void AddKillCount(struct AGPCharacterBase* Pawn); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddKillCount // (Final|Native|Public) // @ game+0x62debb0
	void AddHitCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddHitCount // (Final|Native|Public) // @ game+0x62deb90
	void AddHeadshotHitCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddHeadshotHitCount // (Final|Native|Public) // @ game+0x62deb70
	void AddFireCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddFireCount // (Final|Native|Public) // @ game+0x62deb50
	void AddDeathCount(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddDeathCount // (Final|Native|Public) // @ game+0x62dea50
	void AddDeadTeammateSaveNum(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddDeadTeammateSaveNum // (Final|Native|Public) // @ game+0x62dea30
	void AddCapturePointCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddCapturePointCount // (Final|Native|Public) // @ game+0x62de9f0
	void AddBreakableCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddBreakableCount // (Final|Native|Public) // @ game+0x62de9d0
	void AddBeRescueNum(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddBeRescueNum // (Final|Native|Public) // @ game+0x62de9b0
	void AddAmmoBoxUseCount(); // Function DFMGameplay.DFMPlayerDataAnalysisComponent.AddAmmoBoxUseCount // (Final|Native|Public) // @ game+0x62de990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerDataCenterComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMPlayerDataCenterComponent : public UActorComponent {
public:


	void ClientSetPlayerData_String(uint64_t Uin, struct FName DataName, struct FString Data_String, bool bReplicate); // Function DFMGameplay.DFMPlayerDataCenterComponent.ClientSetPlayerData_String // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b3910
	void ClientSetPlayerData_Int32(uint64_t Uin, struct FName DataName, int32_t Data_Int, bool bReplicate); // Function DFMGameplay.DFMPlayerDataCenterComponent.ClientSetPlayerData_Int32 // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b37d0
	void ClientSetPlayerData_Float(uint64_t Uin, struct FName DataName, float Data_float, bool bReplicate); // Function DFMGameplay.DFMPlayerDataCenterComponent.ClientSetPlayerData_Float // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62b3690
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerItemMarkerItem
// Size: 0x6e0 (Inherited: 0x6e0)
class UDFMPlayerItemMarkerItem : public UGPPlayerItemMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerLocationMarkerItem
// Size: 0x5f0 (Inherited: 0x5f0)
class UDFMPlayerLocationMarkerItem : public UGPPlayerLocationMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerResurrectComponent
// Size: 0x148 (Inherited: 0x100)
class UDFMPlayerResurrectComponent : public UActorComponent {
public:

	int32_t RebornCount; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct TArray<float> DeathTimeArray; // 0x108(0x10)
	uint16_t UseResurrectionCoinCount; // 0x118(0x02)
	char pad_11A[0x2]; // 0x11a(0x02)
	int32_t TotalResurrectionCoinCount; // 0x11c(0x04)
	int32_t ResurrectionCoinCount; // 0x120(0x04)
	float AutoResurrectionTime; // 0x124(0x04)
	int64_t AutoResurrectionTimeStep; // 0x128(0x08)
	int32_t CurResurrectionTempCoin; // 0x130(0x04)
	int32_t RemainResurrectionTempCoin; // 0x134(0x04)
	float UseResurrectionColdDownTimeStep; // 0x138(0x04)
	float EnableUseResurrectionMinTime; // 0x13c(0x04)
	struct FTimerHandle RebornTimerHandle; // 0x140(0x08)

	void ServerOnPlayerDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMPlayerResurrectComponent.ServerOnPlayerDied // (Native|Protected|BlueprintCallable) // @ game+0x62e5da0
	void ServerCaculateResurrectionData(int32_t StatisticalTimeRange); // Function DFMGameplay.DFMPlayerResurrectComponent.ServerCaculateResurrectionData // (Native|Protected) // @ game+0x3664d80
	void ResetTotalResurrectCoinCount(); // Function DFMGameplay.DFMPlayerResurrectComponent.ResetTotalResurrectCoinCount // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5d80
	void ResetResurrectCoin(); // Function DFMGameplay.DFMPlayerResurrectComponent.ResetResurrectCoin // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5d60
	void OnUseResurrectionCoinResultNtf(bool bSuccess); // Function DFMGameplay.DFMPlayerResurrectComponent.OnUseResurrectionCoinResultNtf // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35e4130
	void OnUseResurrectionCoin(); // Function DFMGameplay.DFMPlayerResurrectComponent.OnUseResurrectionCoin // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x1e377d0
	void OnStageStateChanged(struct AGPQuestStage* InStage); // Function DFMGameplay.DFMPlayerResurrectComponent.OnStageStateChanged // (Final|Native|Protected) // @ game+0x62e5be0
	void OnServerRebornAllPlayer(); // Function DFMGameplay.DFMPlayerResurrectComponent.OnServerRebornAllPlayer // (Native|Protected) // @ game+0x3578a00
	void OnServerReborn(); // Function DFMGameplay.DFMPlayerResurrectComponent.OnServerReborn // (Native|Protected) // @ game+0x360c9c0
	void OnRep_EnableUseResurrectionMinTime(); // Function DFMGameplay.DFMPlayerResurrectComponent.OnRep_EnableUseResurrectionMinTime // (Native|Protected) // @ game+0x22b8690
	void OnPlayerReborn(); // Function DFMGameplay.DFMPlayerResurrectComponent.OnPlayerReborn // (Native|Protected) // @ game+0x360c9a0
	void OnClientLocalPlayerReborn(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.DFMPlayerResurrectComponent.OnClientLocalPlayerReborn // (Native|Protected) // @ game+0x360c630
	void OnClientLocalPlayerDied(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.DFMPlayerResurrectComponent.OnClientLocalPlayerDied // (Native|Protected) // @ game+0x360b800
	bool IsTempCoinEnough(); // Function DFMGameplay.DFMPlayerResurrectComponent.IsTempCoinEnough // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5720
	float GetUseResurrectCoinColdTimeStep(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetUseResurrectCoinColdTimeStep // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5630
	int32_t GetTotalResurrectionCoinCount(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetTotalResurrectionCoinCount // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5610
	int32_t GetResurrectionTempCoin(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetResurrectionTempCoin // (Final|Native|Public|BlueprintCallable) // @ game+0x62e55f0
	int32_t GetResurrectionCoinCount(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetResurrectionCoinCount // (Final|Native|Public|BlueprintCallable) // @ game+0x62e55d0
	float GetRemainUseResurrectionCoinColdDownTime(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetRemainUseResurrectionCoinColdDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x62e55a0
	float GetRemainResurrectTime(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetRemainResurrectTime // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5570
	int32_t GetRebornCount(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetRebornCount // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5550
	float GetAutoResurrectionTimeStep(); // Function DFMGameplay.DFMPlayerResurrectComponent.GetAutoResurrectionTimeStep // (Final|Native|Public|BlueprintCallable) // @ game+0x62e5370
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerRouteServerComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMPlayerRouteServerComponent : public UGPPlayerRouteServerComponent {
public:


	void QuestClientProxyNotifyServerMediaEnd(int64_t PlayerUin, uint32_t MediaNameCrc); // Function DFMGameplay.DFMPlayerRouteServerComponent.QuestClientProxyNotifyServerMediaEnd // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbd89c0
	void QuestClientProxyNotifyServerLevelsLoaded(uint64_t PlayerUin); // Function DFMGameplay.DFMPlayerRouteServerComponent.QuestClientProxyNotifyServerLevelsLoaded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbd8ba0
	void QuestClientProxyNotifyServerInterrupt(struct FGameplayTag InterruptTag, struct ACHARACTER* OperatorCharacter, struct AInteractorBase* Interactor); // Function DFMGameplay.DFMPlayerRouteServerComponent.QuestClientProxyNotifyServerInterrupt // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62e5c60
	void QuestClientProxyNotifyHudViewLoaded(); // Function DFMGameplay.DFMPlayerRouteServerComponent.QuestClientProxyNotifyHudViewLoaded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35a3800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerState
// Size: 0x1020 (Inherited: 0x8e8)
class ADFMPlayerState : public AGPPlayerState {
public:

	char pad_8E8[0x8]; // 0x8e8(0x08)
	struct ATeamStart* TeamStart; // 0x8f0(0x08)
	enum class ECharacterRoleType RoleType; // 0x8f8(0x01)
	char pad_8F9[0x3]; // 0x8f9(0x03)
	int32_t Level; // 0x8fc(0x04)
	struct FString PicUrl; // 0x900(0x10)
	int32_t Exp; // 0x910(0x04)
	char pad_914[0x4]; // 0x914(0x04)
	int64_t HeroID; // 0x918(0x08)
	int64_t ExpertId; // 0x920(0x08)
	uint64_t CurrSameTeamAvatarId; // 0x928(0x08)
	uint64_t CurrDiffTeamAvatarId; // 0x930(0x08)
	struct TArray<struct FAssassinateSkinIDInfo> AssassinateSkinIDInfos; // 0x938(0x10)
	struct FPlayerMatchStatus PlayerMatchStatus; // 0x948(0x70)
	struct FPlayerSneakingStatus PlayerSneakingStatus; // 0x9b8(0x0c)
	uint32_t MatchTactics; // 0x9c4(0x04)
	int64_t SkillScore; // 0x9c8(0x08)
	float GlickoRating; // 0x9d0(0x04)
	float GlickoRatingDev; // 0x9d4(0x04)
	float OldGlickoRating; // 0x9d8(0x04)
	float OldGlickoRatingDev; // 0x9dc(0x04)
	int64_t RankMatchScore; // 0x9e0(0x08)
	int32_t RandSeed; // 0x9e8(0x04)
	char pad_9EC[0x4]; // 0x9ec(0x04)
	uint64_t HiddenScore; // 0x9f0(0x08)
	int32_t BeginMatchTime; // 0x9f8(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct UMapInfoComponent* MapInfoComp; // 0xa00(0x08)
	struct FPlayerMatchInfo PlayerMatchInfo; // 0xa08(0x0c)
	char pad_A14[0x4]; // 0xa14(0x04)
	struct FPlayerFrontEndMatchInfo PlayerFrontEndMatchInfo; // 0xa18(0x78)
	char pad_A90[0x8]; // 0xa90(0x08)
	struct FPlayerCombatStatics PlayerCombatStatics; // 0xa98(0x1e8)
	float LivingSeconds; // 0xc80(0x04)
	float LivingTimeStamp; // 0xc84(0x04)
	char pad_C88[0x14]; // 0xc88(0x14)
	int32_t LootingTimes; // 0xc9c(0x04)
	struct APlayerExitBase* CurUsingExit; // 0xca0(0x08)
	enum class EExitState ExitState; // 0xca8(0x01)
	char pad_CA9[0x7]; // 0xca9(0x07)
	struct TArray<struct APlayerExitBase*> AllocatedExits; // 0xcb0(0x10)
	uint32_t PlayerExitID; // 0xcc0(0x04)
	char pad_CC4[0x94]; // 0xcc4(0x94)
	struct FDamageRecordViewStruct DeadthDamageInfos; // 0xd58(0x198)
	/*struct FMulticastInlineDelegate*/char OnNotifyRepDeadDamageInfos[0x10]; // 0xef0(0x10)
	char pad_F00[0x20]; // 0xf00(0x20)
	bool bHalfJoin; // 0xf20(0x01)
	char pad_F21[0x7]; // 0xf21(0x07)
	uint32_t JoinInGameTeamNum; // 0xf28(0x04)
	char pad_F2C[0x4]; // 0xf2c(0x04)
	struct FPropertyReplicationHandler PropertyReplicationHandler; // 0xf30(0x10)
	struct TArray<struct FName> CurClientQuestObjectionName; // 0xf40(0x10)
	bool DebugAssassinateData; // 0xf50(0x01)
	char pad_F51[0x7]; // 0xf51(0x07)
	struct FHeroAccessoryItemsStruct HeroAccessoryInfo; // 0xf58(0x10)
	uint64_t PlayerTitle; // 0xf68(0x08)
	struct FText DFMPlayerName; // 0xf70(0x18)
	char pad_F88[0x48]; // 0xf88(0x48)
	struct TMap<enum class EAttachPosition, struct UItemSpace*> ItemSpaceMap; // 0xfd0(0x50)

	bool SetPlayerMatchOver(enum class EMatchOverReason InMatchOverReason); // Function DFMGameplay.DFMPlayerState.SetPlayerMatchOver // (Final|Native|Public|BlueprintCallable) // @ game+0x62e6120
	void SetMatchOverReason(enum class EMatchOverReason MatchOverReason); // Function DFMGameplay.DFMPlayerState.SetMatchOverReason // (Final|Native|Public|BlueprintCallable) // @ game+0x62e60a0
	void SetCurrAvatarId(uint64_t InSameTeamAvatarId, uint64_t InDiffTeamAvatarId); // Function DFMGameplay.DFMPlayerState.SetCurrAvatarId // (Final|Native|Public) // @ game+0x62e5fe0
	void SetAllocatedExits(struct TArray<struct APlayerExitBase*>& InAllocatedExits); // Function DFMGameplay.DFMPlayerState.SetAllocatedExits // (Final|Native|Public|HasOutParms) // @ game+0x62e5ea0
	void OnRep_PlayerTitle(uint64_t oldPlayerTitle); // Function DFMGameplay.DFMPlayerState.OnRep_PlayerTitle // (Final|Native|Public) // @ game+0x62e5b60
	void OnRep_PlayerMatchInfo(); // Function DFMGameplay.DFMPlayerState.OnRep_PlayerMatchInfo // (Final|Native|Public) // @ game+0x62e5b40
	void OnRep_HeroIDChanged(); // Function DFMGameplay.DFMPlayerState.OnRep_HeroIDChanged // (Final|Native|Public) // @ game+0x62e5b20
	void OnRep_HeroAccessoryInfo(struct FHeroAccessoryItemsStruct OldInfo); // Function DFMGameplay.DFMPlayerState.OnRep_HeroAccessoryInfo // (Final|Native|Public) // @ game+0x62e5a00
	void OnRep_HalfJoin(); // Function DFMGameplay.DFMPlayerState.OnRep_HalfJoin // (Native|Public) // @ game+0x62e59e0
	void OnRep_ExitState(enum class EExitState LastExitState); // Function DFMGameplay.DFMPlayerState.OnRep_ExitState // (Final|Native|Public) // @ game+0x62e5960
	void OnRep_DeadthDamageInfos(); // Function DFMGameplay.DFMPlayerState.OnRep_DeadthDamageInfos // (Final|Native|Public) // @ game+0x62e5940
	void OnRep_AssassinateSkinIDInfos(); // Function DFMGameplay.DFMPlayerState.OnRep_AssassinateSkinIDInfos // (Final|Native|Public) // @ game+0x62e5920
	void OnRep_AllocatedExits(); // Function DFMGameplay.DFMPlayerState.OnRep_AllocatedExits // (Final|Native|Public) // @ game+0x62e5900
	void OnGVoiceMicAndSpeakerStateChanged(struct FString OpenId, bool bMic, int32_t ButtonType); // Function DFMGameplay.DFMPlayerState.OnGVoiceMicAndSpeakerStateChanged // (Final|Native|Public) // @ game+0x62e5770
	void OnClientHalfGameEntry(); // Function DFMGameplay.DFMPlayerState.OnClientHalfGameEntry // (Final|Native|Public) // @ game+0x62e5750
	void InitMatchStatus(); // Function DFMGameplay.DFMPlayerState.InitMatchStatus // (Final|Native|Public) // @ game+0x62e5700
	void InitHeroAccessoryInfo(); // Function DFMGameplay.DFMPlayerState.InitHeroAccessoryInfo // (Final|Native|Public) // @ game+0x62e56e0
	void InGameUnlockWeapon(uint64_t WeaponItemId); // Function DFMGameplay.DFMPlayerState.InGameUnlockWeapon // (Native|Public) // @ game+0x62e5650
	uint64_t GetCurrAvatarId(bool isSameTeam); // Function DFMGameplay.DFMPlayerState.GetCurrAvatarId // (Final|Native|Public) // @ game+0x62e54b0
	uint64_t GetCurPlayerTitle(); // Function DFMGameplay.DFMPlayerState.GetCurPlayerTitle // (Final|Native|Public) // @ game+0x62e5480
	struct TArray<struct FHeroAccessoryItem> GetCurHeroAccessoryItems(); // Function DFMGameplay.DFMPlayerState.GetCurHeroAccessoryItems // (Final|Native|Public) // @ game+0x62e53a0
	void ClientReadyToPlayNotify(); // Function DFMGameplay.DFMPlayerState.ClientReadyToPlayNotify // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e5350
	void CallServerSetPlayerMatchOver(enum class EMatchOverReason InMatchOverReason); // Function DFMGameplay.DFMPlayerState.CallServerSetPlayerMatchOver // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62e52d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPriorityMarker
// Size: 0xe0 (Inherited: 0x38)
class UDFMPriorityMarker : public UGameInstanceSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)
	struct TMap<int32_t, struct FDFMMarkerPriorityData> MarkerDataMap; // 0x88(0x50)
	char pad_D8[0x8]; // 0xd8(0x08)

	void RemovePriorityMarker(int32_t Handler, bool Show); // Function DFMGameplay.DFMPriorityMarker.RemovePriorityMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x62ebe90
	void HidePriorityMarker(int32_t Handler); // Function DFMGameplay.DFMPriorityMarker.HidePriorityMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9ad0
	int32_t GetMarkerCode(int32_t Code); // Function DFMGameplay.DFMPriorityMarker.GetMarkerCode // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9660
	struct AGPQuestMarkerBase* GetMarker(int32_t Code); // Function DFMGameplay.DFMPriorityMarker.GetMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x62e95d0
	struct UDFMPriorityMarker* STATIC_Get(struct UWorld* WorldContext); // Function DFMGameplay.DFMPriorityMarker.Get // (Final|Native|Static|Public) // @ game+0x62e94a0
	int32_t AddPriorityMarker(struct UClass* MarkerClass, struct AActor* TargetActor, struct FVector OffsetLocation, int32_t Code, float DistanceThreshold, enum class EGPQuestActionMarkerType markerType, enum class EDFMMarkerPriority Priority, float MarkerScale, struct FName SocketName); // Function DFMGameplay.DFMPriorityMarker.AddPriorityMarker // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62e8ca0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPriorityWidgetLoader
// Size: 0x38 (Inherited: 0x30)
class UDFMPriorityWidgetLoader : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)

	void OnViewLoaded(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMPriorityWidgetLoader.OnViewLoaded // (Final|Native|Public) // @ game+0x62ebc70
	void OnTimeRemove(); // Function DFMGameplay.DFMPriorityWidgetLoader.OnTimeRemove // (Final|Native|Public) // @ game+0x62eb780
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPriorityWidgetSubsystem
// Size: 0x108 (Inherited: 0x38)
class UDFMPriorityWidgetSubsystem : public UGameInstanceSubsystem {
public:

	struct TMap<int32_t, struct FDFMWigetPriorityData> WidgetIdentityMap; // 0x38(0x50)
	struct FDFMWigetStackArray WidgetPriorityMap; // 0x88(0x60)
	char pad_E8[0x8]; // 0xe8(0x08)
	struct TArray<struct UDFMPriorityWidgetLoader*> loaders; // 0xf0(0x10)
	char pad_100[0x8]; // 0x100(0x08)

	void RemovePriorityWidget(struct UObject* WorldContext, int32_t Handler); // Function DFMGameplay.DFMPriorityWidgetSubsystem.RemovePriorityWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x62ebf50
	struct UUserWidget* GetWidgetIns(int32_t Handler); // Function DFMGameplay.DFMPriorityWidgetSubsystem.GetWidgetIns // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9930
	struct UDFMPriorityWidgetSubsystem* STATIC_Get(struct UWorld* WorldContext); // Function DFMGameplay.DFMPriorityWidgetSubsystem.Get // (Final|Native|Static|Public) // @ game+0x62e9520
	int32_t AddPriorityWidget(struct UObject* WorldContext, struct UClass* WidgetClass, int32_t PriorityNum, float Time, bool unique, enum class ESlateVisibility Visible); // Function DFMGameplay.DFMPriorityWidgetSubsystem.AddPriorityWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x62e8f30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMProcessAIMsgComponent
// Size: 0x140 (Inherited: 0x100)
class UDFMProcessAIMsgComponent : public UActorComponent {
public:

	float NoticeAIAlertMaxDistance; // 0x100(0x04)
	char pad_104[0x14]; // 0x104(0x14)
	struct ADFMCharacter* OwnerChar; // 0x118(0x08)
	char pad_120[0x20]; // 0x120(0x20)

	void ReceiveAIMsg(struct ADFMCharacter* AICharacter, enum class EAIMsgType MsgType, struct ADFMCharacter* AIAlertCharacter); // Function DFMGameplay.DFMProcessAIMsgComponent.ReceiveAIMsg // (Final|Native|Public) // @ game+0x62ebd90
	void ClientProcessAIMsg(struct ADFMCharacter* AICharacter, enum class EAIMsgType MsgType, bool AIFocusOnMe, float AlertMsgLastTime, float FightMsgLastTime, bool bIsSniper); // Function DFMGameplay.DFMProcessAIMsgComponent.ClientProcessAIMsg // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e9250
	void ClientProcessAIFocusOnMeMsg(struct ADFMCharacter* AICharacter, enum class EAIMsgType MsgType); // Function DFMGameplay.DFMProcessAIMsgComponent.ClientProcessAIFocusOnMeMsg // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e9180
	void AIMsgToCharacter(struct ADFMCharacter* AICharacter, enum class EAIMsgType MsgType); // Function DFMGameplay.DFMProcessAIMsgComponent.AIMsgToCharacter // (Final|Native|Public) // @ game+0x62e8be0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPvpAiBehaviorTreeComponent
// Size: 0x340 (Inherited: 0x330)
class UDFMPvpAiBehaviorTreeComponent : public UGPAIBehaviorTreeComponent {
public:

	int32_t MaxLoopBhtEveryTick; // 0x330(0x04)
	char pad_334[0xc]; // 0x334(0x0c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMRebornComponent
// Size: 0x170 (Inherited: 0x100)
class UDFMRebornComponent : public UActorComponent {
public:

	char pad_100[0x58]; // 0x100(0x58)
	bool UseDelayReborn; // 0x158(0x01)
	char pad_159[0x3]; // 0x159(0x03)
	float ResetWalkingPositionCheckStuckOffset; // 0x15c(0x04)
	struct FVector CharacterZAxisCompensation; // 0x160(0x0c)
	char pad_16C[0x4]; // 0x16c(0x04)

	void RequestReborn(struct FRebornInformation& RebornInformation); // Function DFMGameplay.DFMRebornComponent.RequestReborn // (Native|Public|HasOutParms) // @ game+0x62eec40
	void RebornCharacter(struct FRebornInformation& RebornInformation); // Function DFMGameplay.DFMRebornComponent.RebornCharacter // (Native|Public|HasOutParms) // @ game+0x62eeae0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RedeployConfig
// Size: 0x1c8 (Inherited: 0x30)
class URedeployConfig : public UObject {
public:

	struct TMap<struct FString, struct FSoftObjectPath> BackImgs; // 0x30(0x50)
	struct TMap<struct FString, struct FMatrix> ProjectMatrix; // 0x80(0x50)
	struct TMap<struct FString, struct FVector> CameraLocation; // 0xd0(0x50)
	struct TMap<struct FString, struct FRotator> CameraRotator; // 0x120(0x50)
	struct TMap<struct FString, float> CameraFOV; // 0x170(0x50)
	bool bAutoWrite; // 0x1c0(0x01)
	bool bIsHD; // 0x1c1(0x01)
	char pad_1C2[0x6]; // 0x1c2(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMRedeployComponent
// Size: 0x738 (Inherited: 0x100)
class UDFMRedeployComponent : public UActorComponent {
public:

	struct TArray<enum class ERedeployStateFuture> StateFutures; // 0x100(0x10)
	struct URedeployConfig* RedeployConfig; // 0x110(0x08)
	struct URedeployConfig* RedeployConfigHD; // 0x118(0x08)
	float FallDownTime; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct UCurveFloat* TurnCameraToEnemyCurve; // 0x128(0x08)
	char pad_130[0x8]; // 0x130(0x08)
	struct UCurveFloat* FovZoomOutCurve; // 0x138(0x08)
	char pad_140[0xc]; // 0x140(0x0c)
	float FovZoomOutEndFOVScale; // 0x14c(0x04)
	struct UCurveFloat* FovZoomInCurve; // 0x150(0x08)
	char pad_158[0xc]; // 0x158(0x0c)
	float KillerMarkTime; // 0x164(0x04)
	struct UCurveFloat* TurnCameraToSelfCurve; // 0x168(0x08)
	char pad_170[0x8]; // 0x170(0x08)
	struct UCurveFloat* TurnCameraToBeRescueCurve; // 0x178(0x08)
	struct UCurveFloat* TurnCameraToBeRescueFovZoomInCurve; // 0x180(0x08)
	float BeforeRevengeTime; // 0x188(0x04)
	float DeployCameraFollowMurdererDelay; // 0x18c(0x04)
	float WaitPlayerDieInterval; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FTimerHandle ServerWaitLoadCollisionTimeOutHandle; // 0x198(0x08)
	float WaitClientLoadCollisionTimeout; // 0x1a0(0x04)
	float RisingTime; // 0x1a4(0x04)
	float LandingTime; // 0x1a8(0x04)
	float AfterLandProtectTime; // 0x1ac(0x04)
	struct FName WidgetName; // 0x1b0(0x08)
	char pad_1B8[0x8]; // 0x1b8(0x08)
	struct FTransform HightViewLocation; // 0x1c0(0x30)
	struct UMaterialInterface* KillerOutLine; // 0x1f0(0x08)
	char pad_1F8[0x8]; // 0x1f8(0x08)
	struct FTransform CameraStartTrans; // 0x200(0x30)
	float TargetFOV; // 0x230(0x04)
	char pad_234[0xc]; // 0x234(0x0c)
	struct FTransform CameraEndTrans; // 0x240(0x30)
	struct FRotator CameraRotator; // 0x270(0x0c)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct ACHARACTER* Murderer; // 0x280(0x08)
	uint64_t MurdererUin; // 0x288(0x08)
	struct FTransform LocalRebornTransform; // 0x290(0x30)
	bool bNeedShowTrans; // 0x2c0(0x01)
	bool bTrackingMurder; // 0x2c1(0x01)
	bool bImpendingDeath; // 0x2c2(0x01)
	bool bNeedRisingState; // 0x2c3(0x01)
	char pad_2C4[0x8]; // 0x2c4(0x08)
	enum class ERedeployStateFuture ServerCurState; // 0x2cc(0x04)
	char pad_2D0[0x6]; // 0x2d0(0x06)
	bool AllowShowMurderMat; // 0x2d6(0x01)
	bool bCurrentShowDeployView; // 0x2d7(0x01)
	bool bUseNewDyingFlow; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	int64_t StateFuture; // 0x2e0(0x08)
	struct TArray<struct FInventoryItemInfo> KillerBagItems; // 0x2e8(0x10)
	struct FRedeployKillerInfo KillerInfo; // 0x2f8(0x288)
	struct TWeakObjectPtr<struct AGPPlayerController> LocalController; // 0x580(0x08)
	struct TWeakObjectPtr<struct UGPCameraModeComponent> CacheCameraMode; // 0x588(0x08)
	struct TWeakObjectPtr<struct APlayerCameraManager> LocalCameraActor; // 0x590(0x08)
	struct TWeakObjectPtr<struct ACameraActor> HighViewCameraActor; // 0x598(0x08)
	struct TWeakObjectPtr<struct ACameraActor> RedeployCameraActor; // 0x5a0(0x08)
	char pad_5A8[0x4]; // 0x5a8(0x04)
	float Gravity; // 0x5ac(0x04)
	struct FTimerHandle LoadTimeoutHandle; // 0x5b0(0x08)
	float LoadTimeout; // 0x5b8(0x04)
	char pad_5BC[0x1c]; // 0x5bc(0x1c)
	struct FTimerHandle SeamlessTravelEndTimer; // 0x5d8(0x08)
	struct FTimerHandle HideCharacterActorTimerAfterClientLoad; // 0x5e0(0x08)
	struct TArray<struct FVector> PreLoadLocation; // 0x5e8(0x10)
	char pad_5F8[0x1]; // 0x5f8(0x01)
	bool bCanOpenRedeployHud; // 0x5f9(0x01)
	char pad_5FA[0x6]; // 0x5fa(0x06)
	struct FTimerHandle TimerHandle_SyncServerCurState; // 0x600(0x08)
	float SyncServerCurStateInterval; // 0x608(0x04)
	char pad_60C[0x4]; // 0x60c(0x04)
	struct FRebornInformation RedeployRebornInformation; // 0x610(0xc0)
	struct AActor* LastRebornToActor; // 0x6d0(0x08)
	float LastRebornToActorTime; // 0x6d8(0x04)
	char pad_6DC[0x4]; // 0x6dc(0x04)
	bool bIsDeadRedeploy; // 0x6e0(0x01)
	char pad_6E1[0x7]; // 0x6e1(0x07)
	struct FTimerHandle ServerStateHandle; // 0x6e8(0x08)
	struct FTimerHandle ClientStateHandle; // 0x6f0(0x08)
	struct FTimerHandle ClientCheckTrackBipTimerHandle; // 0x6f8(0x08)
	struct FTimerHandle ClientTurnCameraToEnemyTimerHandle; // 0x700(0x08)
	char pad_708[0x10]; // 0x708(0x10)
	float WaitExitVehicleFSMInterval; // 0x718(0x04)
	float WatchSelfDuration; // 0x71c(0x04)
	char pad_720[0x18]; // 0x720(0x18)

	void WaitLoadCollision(); // Function DFMGameplay.DFMRedeployComponent.WaitLoadCollision // (Native|Public) // @ game+0x227b4f0
	void StopMurderOutLineEffect(); // Function DFMGameplay.DFMRedeployComponent.StopMurderOutLineEffect // (Native|Public) // @ game+0x1751280
	void SetSimulateLODEnable(bool bEnable); // Function DFMGameplay.DFMRedeployComponent.SetSimulateLODEnable // (Final|Native|Public) // @ game+0x62ef170
	void SetRebornLocation(struct FTransform ReborntranTransform); // Function DFMGameplay.DFMRedeployComponent.SetRebornLocation // (Final|Native|Public|HasDefaults) // @ game+0x62ef080
	void SetLastRebornToActor(struct AActor* InLastRebornToActor); // Function DFMGameplay.DFMRedeployComponent.SetLastRebornToActor // (Final|Native|Public) // @ game+0x62ef000
	void SetGlobalPreviewCamera(); // Function DFMGameplay.DFMRedeployComponent.SetGlobalPreviewCamera // (Final|Native|Public) // @ game+0x62eefe0
	void SetCurState(enum class ERedeployStateFuture InState); // Function DFMGameplay.DFMRedeployComponent.SetCurState // (Final|Native|Public) // @ game+0x62eef60
	void SetClientGravityZero(); // Function DFMGameplay.DFMRedeployComponent.SetClientGravityZero // (Final|Native|Public) // @ game+0x62eef40
	void SetClientGravityNormal(); // Function DFMGameplay.DFMRedeployComponent.SetClientGravityNormal // (Final|Native|Public) // @ game+0x62eef20
	void ServerWaitLoadCollisionTimeOutGoNextState(); // Function DFMGameplay.DFMRedeployComponent.ServerWaitLoadCollisionTimeOutGoNextState // (Native|Public) // @ game+0x17512a0
	void ServerWaitLoadCollision(); // Function DFMGameplay.DFMRedeployComponent.ServerWaitLoadCollision // (Native|Public) // @ game+0xaa98d0
	void ServerSetHaveBeReborn(bool HaveReborn); // Function DFMGameplay.DFMRedeployComponent.ServerSetHaveBeReborn // (Final|Native|Public) // @ game+0x62eee90
	void ServerRescueWaitDieGoNextState(); // Function DFMGameplay.DFMRedeployComponent.ServerRescueWaitDieGoNextState // (Native|Public) // @ game+0xaa98f0
	void ServerRescue(); // Function DFMGameplay.DFMRedeployComponent.ServerRescue // (Native|Public) // @ game+0x174f5a0
	void ServerEnableController(bool bInEnable); // Function DFMGameplay.DFMRedeployComponent.ServerEnableController // (Final|Native|Public) // @ game+0x62eee00
	void ServerDelayHideCharacter(); // Function DFMGameplay.DFMRedeployComponent.ServerDelayHideCharacter // (Final|Native|Public) // @ game+0x62eede0
	void ServerBreakRedeployFlow(); // Function DFMGameplay.DFMRedeployComponent.ServerBreakRedeployFlow // (Final|Native|Public) // @ game+0x62eedc0
	void ServerBeginRedeploy(enum class ERedeployStateFuture InRedployStateFuture); // Function DFMGameplay.DFMRedeployComponent.ServerBeginRedeploy // (Native|Public) // @ game+0x3664e10
	void ServerApplyNextState(); // Function DFMGameplay.DFMRedeployComponent.ServerApplyNextState // (Native|Public) // @ game+0x4918ae0
	void ServerAfterRequestReborn(); // Function DFMGameplay.DFMRedeployComponent.ServerAfterRequestReborn // (Final|Native|Public) // @ game+0x62eeda0
	void ServerAfterRedeployCharacterShow(); // Function DFMGameplay.DFMRedeployComponent.ServerAfterRedeployCharacterShow // (Native|Public) // @ game+0x1750020
	void ReturnSyncServerCurState(enum class ERedeployStateFuture InServerCurState); // Function DFMGameplay.DFMRedeployComponent.ReturnSyncServerCurState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x3677b90
	void ResetCamera(); // Function DFMGameplay.DFMRedeployComponent.ResetCamera // (Final|Native|Public) // @ game+0x62eed80
	void RequestSyncServerCurState(); // Function DFMGameplay.DFMRedeployComponent.RequestSyncServerCurState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e377d0
	void Rep_Murderer(); // Function DFMGameplay.DFMRedeployComponent.Rep_Murderer // (Final|Native|Public) // @ game+0x62eec20
	void OnSectorActived(struct AActor* Sector); // Function DFMGameplay.DFMRedeployComponent.OnSectorActived // (Final|Native|Public) // @ game+0x62eea60
	void OnSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.DFMRedeployComponent.OnSeamlessTravelEnd // (Final|Native|Public) // @ game+0x62ee9d0
	void OnRep_ServerCurState(enum class ERedeployStateFuture InServerCurState); // Function DFMGameplay.DFMRedeployComponent.OnRep_ServerCurState // (Native|Public) // @ game+0x62ee940
	void OnRep_RedeployRebornInformation(); // Function DFMGameplay.DFMRedeployComponent.OnRep_RedeployRebornInformation // (Final|Native|Public) // @ game+0x62ee920
	void OnRep_LocalRebornTransform(); // Function DFMGameplay.DFMRedeployComponent.OnRep_LocalRebornTransform // (Final|Native|Public) // @ game+0x62ee900
	void OnKillerInfoCardShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMRedeployComponent.OnKillerInfoCardShow // (Final|Native|Public) // @ game+0x62ee800
	void OnEnterServerState(enum class ERedeployStateFuture InsState); // Function DFMGameplay.DFMRedeployComponent.OnEnterServerState // (Final|Native|Public) // @ game+0x62ee780
	void OnEnterClientState(enum class ERedeployStateFuture InsState); // Function DFMGameplay.DFMRedeployComponent.OnEnterClientState // (Native|Public) // @ game+0x62ee6f0
	void OnClientPlayerMatchOver(enum class EMatchOverReason& MatchOverReason); // Function DFMGameplay.DFMRedeployComponent.OnClientPlayerMatchOver // (Final|Native|Public|HasOutParms) // @ game+0x62ee660
	bool IsReady(); // Function DFMGameplay.DFMRedeployComponent.IsReady // (Final|Native|Public) // @ game+0x62ee630
	bool IsInRedeployCD(); // Function DFMGameplay.DFMRedeployComponent.IsInRedeployCD // (Native|Public) // @ game+0x62ee600
	void Init(); // Function DFMGameplay.DFMRedeployComponent.Init // (Final|Native|Public) // @ game+0x62ee5e0
	float GetRedeployRemainCD(); // Function DFMGameplay.DFMRedeployComponent.GetRedeployRemainCD // (Native|Public) // @ game+0x62ee5a0
	bool EnableDiscreteSector(); // Function DFMGameplay.DFMRedeployComponent.EnableDiscreteSector // (Final|Native|Public) // @ game+0x62ee570
	void DoAfterReborn(struct AGPPlayerController* Player, struct FTransform Location, bool bIsLoadTimeOut); // Function DFMGameplay.DFMRedeployComponent.DoAfterReborn // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x62ee3f0
	void DisableCameraModify(); // Function DFMGameplay.DFMRedeployComponent.DisableCameraModify // (Final|Native|Public) // @ game+0x62ee3d0
	void DelayShowUI(); // Function DFMGameplay.DFMRedeployComponent.DelayShowUI // (Final|Native|Public) // @ game+0x62ee3b0
	bool CurrentIsWaitLoadCollisionState(); // Function DFMGameplay.DFMRedeployComponent.CurrentIsWaitLoadCollisionState // (Final|Native|Public) // @ game+0x62ee380
	bool CurrentIsHighViewState(); // Function DFMGameplay.DFMRedeployComponent.CurrentIsHighViewState // (Final|Native|Public) // @ game+0x62ee350
	void ClientTurnCameraToSelf(); // Function DFMGameplay.DFMRedeployComponent.ClientTurnCameraToSelf // (Native|Public) // @ game+0x17512e0
	void ClientTurnCameraToEnemyTimerCheck(); // Function DFMGameplay.DFMRedeployComponent.ClientTurnCameraToEnemyTimerCheck // (Native|Public) // @ game+0x361c8e0
	void ClientTurnCameraToEnemy(); // Function DFMGameplay.DFMRedeployComponent.ClientTurnCameraToEnemy // (Native|Public) // @ game+0x3615dc0
	void ClientStateNoneReset(enum class ERedeployStateFuture OldState); // Function DFMGameplay.DFMRedeployComponent.ClientStateNoneReset // (Native|Public) // @ game+0x35c9d20
	void ClientRising(); // Function DFMGameplay.DFMRedeployComponent.ClientRising // (Native|Public) // @ game+0x17512c0
	void ClientRescue(); // Function DFMGameplay.DFMRedeployComponent.ClientRescue // (Native|Public) // @ game+0x1751300
	void ClientOnSetMurderer(struct FRedeployKillerInfo RedeployKillerInfo); // Function DFMGameplay.DFMRedeployComponent.ClientOnSetMurderer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62ee140
	void ClientLand(); // Function DFMGameplay.DFMRedeployComponent.ClientLand // (Native|Public) // @ game+0x21b1c60
	void ClientKillerMark(); // Function DFMGameplay.DFMRedeployComponent.ClientKillerMark // (Native|Public) // @ game+0x3578a00
	void ClientHighView(); // Function DFMGameplay.DFMRedeployComponent.ClientHighView // (Native|Public) // @ game+0x174fe70
	void ClientFovZoomOut(); // Function DFMGameplay.DFMRedeployComponent.ClientFovZoomOut // (Native|Public) // @ game+0x360c9c0
	void ClientFovZoomIn(); // Function DFMGameplay.DFMRedeployComponent.ClientFovZoomIn // (Native|Public) // @ game+0x22b8690
	void ClientFallDown(); // Function DFMGameplay.DFMRedeployComponent.ClientFallDown // (Native|Public) // @ game+0x22790c0
	bool ClientCurrentIsInRescueState(); // Function DFMGameplay.DFMRedeployComponent.ClientCurrentIsInRescueState // (Final|Native|Public) // @ game+0x62ee110
	void ClientCreatDeployUI(); // Function DFMGameplay.DFMRedeployComponent.ClientCreatDeployUI // (Final|Native|Public) // @ game+0x62ee0f0
	void ClientCheckTrackBip(); // Function DFMGameplay.DFMRedeployComponent.ClientCheckTrackBip // (Final|Native|Public) // @ game+0x62ee0d0
	void ClientApplyNextState(); // Function DFMGameplay.DFMRedeployComponent.ClientApplyNextState // (Final|Native|Public) // @ game+0x62ee0b0
	void ClientAfterRequestReborn(bool SelfShouldCrouch, bool SelfShouldLieDown); // Function DFMGameplay.DFMRedeployComponent.ClientAfterRequestReborn // (Final|Native|Public) // @ game+0x62edfe0
	void ClientAfterRedeployCloseRedeployUI(); // Function DFMGameplay.DFMRedeployComponent.ClientAfterRedeployCloseRedeployUI // (Native|Public) // @ game+0x21b1c40
	void ClientAfterRedeploy(); // Function DFMGameplay.DFMRedeployComponent.ClientAfterRedeploy // (Final|Native|Public) // @ game+0x62edfc0
	void ClientAddMurderOutLineEffect(); // Function DFMGameplay.DFMRedeployComponent.ClientAddMurderOutLineEffect // (Native|Public) // @ game+0x17553a0
	void ClearServerStateHandle(); // Function DFMGameplay.DFMRedeployComponent.ClearServerStateHandle // (Final|Native|Public) // @ game+0x62edfa0
	void ClearLastRebornToActor(); // Function DFMGameplay.DFMRedeployComponent.ClearLastRebornToActor // (Final|Native|Public) // @ game+0x62edf80
	void CancelServerWaitLoadCollisionTimeOut(); // Function DFMGameplay.DFMRedeployComponent.CancelServerWaitLoadCollisionTimeOut // (Native|Public) // @ game+0xaa9910
	void CancelClientTurnCameraToEnemyTimer(); // Function DFMGameplay.DFMRedeployComponent.CancelClientTurnCameraToEnemyTimer // (Native|Public) // @ game+0x360c9a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraph
// Size: 0x4b0 (Inherited: 0x310)
class UDFMReplicationGraph : public UEReplicationGraph {
public:

	struct TArray<struct UClass*> SpatializedClasses; // 0x310(0x10)
	struct TArray<struct UClass*> NonSpatializedChildClasses; // 0x320(0x10)
	struct TArray<struct UClass*> AlwaysRelevantClasses; // 0x330(0x10)
	struct UDFMReplicationGraphNode_GridSpatialization2D* GridNode; // 0x340(0x08)
	struct UDFMReplicationGraphNode_QuestClientProxy* QuestClientProxyNode; // 0x348(0x08)
	struct UDFMReplicationGraphNode_AlwaysRelevant* AlwaysRelevantNode; // 0x350(0x08)
	struct TMap<int32_t, struct UDFMReplicationGraphNode_Team*> TeamRelevantNodes; // 0x358(0x50)
	/*struct TSet<struct AActor*>*/char TeamRelevantActors[0x50]; // 0x3a8(0x50)
	struct UDFMReplicationGraphVisibleSetManager* VisibleSetManager; // 0x3f8(0x08)
	bool EnableVisibleSet; // 0x400(0x01)
	bool EnablePVSVisibleSet; // 0x401(0x01)
	char pad_402[0x6]; // 0x402(0x06)
	struct TArray<struct FDynamicSpatialFrequency> DynamicSpatialFrequencies; // 0x408(0x10)
	char pad_418[0x98]; // 0x418(0x98)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_AlwaysRelevant_ForConnection
// Size: 0x88 (Inherited: 0x58)
class UDFMReplicationGraphNode_AlwaysRelevant_ForConnection : public UEReplicationGraphNode {
public:

	char pad_58[0x10]; // 0x58(0x10)
	struct FUEActorRepListType LastPawn; // 0x68(0x10)
	struct TArray<struct FAlwaysRelevantActorInfo> PastRelevantActors; // 0x78(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_Team
// Size: 0x68 (Inherited: 0x58)
class UDFMReplicationGraphNode_Team : public UEReplicationGraphNode {
public:

	char pad_58[0x8]; // 0x58(0x08)
	struct UEReplicationGraphNode_ActorList* ActorList; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_PlayerStateFrequencyLimiter
// Size: 0x78 (Inherited: 0x58)
class UDFMReplicationGraphNode_PlayerStateFrequencyLimiter : public UEReplicationGraphNode {
public:

	char pad_58[0x20]; // 0x58(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_QuestClientProxy
// Size: 0xb8 (Inherited: 0x58)
class UDFMReplicationGraphNode_QuestClientProxy : public UEReplicationGraphNode {
public:

	char pad_58[0x60]; // 0x58(0x60)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_AlwaysRelevant
// Size: 0xf0 (Inherited: 0xd8)
class UDFMReplicationGraphNode_AlwaysRelevant : public UEReplicationGraphNode_ActorList {
public:

	struct UEReplicationGraphNode_DormancyNode* DormancyNode; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphConnection
// Size: 0x210 (Inherited: 0x1e8)
class UDFMReplicationGraphConnection : public UENetReplicationGraphConnection {
public:

	struct TArray<struct AGameplayMonitor*> Monitors; // 0x1e8(0x10)
	struct UGPMovementActorChannel* MovementActorChannel; // 0x1f8(0x08)
	struct TArray<struct UActorChannel*> PropertyReplicationChannels; // 0x200(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_GridSpatialization2D
// Size: 0x250 (Inherited: 0x238)
class UDFMReplicationGraphNode_GridSpatialization2D : public UEReplicationGraphNode_GridSpatialization2D {
public:

	struct TArray<struct AGameplayMonitor*> Monitors; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReplicationVisibleVolumeComponent
// Size: 0x590 (Inherited: 0x590)
class UReplicationVisibleVolumeComponent : public UBoxComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReplicationVisibleVolume
// Size: 0x3b0 (Inherited: 0x378)
class AReplicationVisibleVolume : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct FString VolumeName; // 0x380(0x10)
	uint32_t VolumeId; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UReplicationVisibleVolumeComponent* POIVolume; // 0x398(0x08)
	struct TArray<struct UReplicationVisibleVolumeComponent*> CoreVolume; // 0x3a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphNode_Conditional
// Size: 0x170 (Inherited: 0xf8)
class UDFMReplicationGraphNode_Conditional : public UEReplicationGraphNode_DynamicSpatialFrequency {
public:

	char pad_F8[0x70]; // 0xf8(0x70)
	struct UDFMReplicationGraphVisibleSetManager* VisibleManager; // 0x168(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMRevealMarkerItem
// Size: 0x580 (Inherited: 0x580)
class UDFMRevealMarkerItem : public UGPRevealMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseCharacter
// Size: 0xaa0 (Inherited: 0xa98)
class ADFMSafeHouseCharacter : public AGPSafeHouseCharacter {
public:

	struct UDFMSafeHouseInteractorComponent* InteractComponent; // 0xa98(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseElevatorSwitch
// Size: 0x3a8 (Inherited: 0x378)
class ADFMSafeHouseElevatorSwitch : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct UBoxComponent* ElevatorTriggerSwitch; // 0x388(0x08)
	struct ASOLRadarStationElevator* SafeHouseElevator; // 0x390(0x08)
	enum class ESafeHouseElevatorSwitchType SafeHouseElevatorSwitchType; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	float ElevatorTriggerWaitingTime; // 0x39c(0x04)
	float ElevatorTickTriggerWaitingTime; // 0x3a0(0x04)
	bool bTriggerTickOpen; // 0x3a4(0x01)
	char pad_3A5[0x3]; // 0x3a5(0x03)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.DFMSafeHouseElevatorSwitch.OnOverlapEnd // (Native|Protected) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DFMSafeHouseElevatorSwitch.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x36ce950
	void OnElevatorStartHandle(); // Function DFMGameplay.DFMSafeHouseElevatorSwitch.OnElevatorStartHandle // (Final|Native|Protected) // @ game+0x62f31e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseNPC
// Size: 0xec0 (Inherited: 0x798)
class ADFMSafeHouseNPC : public ACHARACTER {
public:

	bool bIsAssetsLoaded; // 0x798(0x01)
	char pad_799[0x7]; // 0x799(0x07)
	/*struct FMulticastInlineDelegate*/char AssetsLoadCompleteDelegate[0x10]; // 0x7a0(0x10)
	/*struct FMulticastInlineDelegate*/char StartInteractDelegate[0x10]; // 0x7b0(0x10)
	/*struct FMulticastInlineDelegate*/char EndInteractDelegate[0x10]; // 0x7c0(0x10)
	float AORotationSpeed; // 0x7d0(0x04)
	char pad_7D4[0x4]; // 0x7d4(0x04)
	struct USkeletalMeshComponent* MeshComponent; // 0x7d8(0x08)
	float FocusDistance; // 0x7e0(0x04)
	char pad_7E4[0x4]; // 0x7e4(0x04)
	/*struct TSoftObjectPtr<USkeletalMesh>*/char SkeleMesh[0x28]; // 0x7e8(0x28)
	/*struct TSoftClassPtr<UObject>*/char AnimInstanceClass[0x28]; // 0x810(0x28)
	struct FSafeHouseNPCAnims Animations; // 0x838(0x600)
	struct TArray<struct FSafeHouseNPCEquipItem> EquipItems; // 0xe38(0x10)
	struct TArray<struct UDFMSkeletalMeshComponent*> EquipSkeleMeshComps; // 0xe48(0x10)
	struct TArray<struct UStaticMeshComponent*> EquipStaticMeshComps; // 0xe58(0x10)
	char pad_E68[0x8]; // 0xe68(0x08)
	struct AActor* InteractTarget; // 0xe70(0x08)
	char pad_E78[0x8]; // 0xe78(0x08)
	struct AActor* FocusTarget; // 0xe80(0x08)
	char pad_E88[0x10]; // 0xe88(0x10)
	struct UAnimSequence* RotatingAnim; // 0xe98(0x08)
	char pad_EA0[0x20]; // 0xea0(0x20)

	void StartInteract(struct AActor* TargetActor); // Function DFMGameplay.DFMSafeHouseNPC.StartInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x62f3370
	float GetPlayerAndNPCAngle(); // Function DFMGameplay.DFMSafeHouseNPC.GetPlayerAndNPCAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62f3090
	bool GetIsInteracting(); // Function DFMGameplay.DFMSafeHouseNPC.GetIsInteracting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62f3030
	bool GetIsFocusing(); // Function DFMGameplay.DFMSafeHouseNPC.GetIsFocusing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62f3010
	struct AActor* GetInteractingTarget(); // Function DFMGameplay.DFMSafeHouseNPC.GetInteractingTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x35d1450
	struct AActor* GetFocusingTarget(); // Function DFMGameplay.DFMSafeHouseNPC.GetFocusingTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62f2ed0
	void EndInteract(); // Function DFMGameplay.DFMSafeHouseNPC.EndInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x62f2eb0
	void AssetsLoadComplete(struct TArray<struct FSoftObjectPath> AssetPaths); // Function DFMGameplay.DFMSafeHouseNPC.AssetsLoadComplete // (Final|Native|Private) // @ game+0x62f2ca0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseNPCAnimInstance
// Size: 0xa50 (Inherited: 0x280)
class UDFMSafeHouseNPCAnimInstance : public UAnimInstance {
public:

	struct FDFMSafeHouseNPCAnimInstanceProxy LocalProxy; // 0x280(0x7d0)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseSkeletalMeshComponent
// Size: 0xf30 (Inherited: 0xf30)
class UDFMSafeHouseSkeletalMeshComponent : public UGPSafeHouseSkeletalMeshComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseSyncComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMSafeHouseSyncComponent : public UActorComponent {
public:


	void ToggleDisplaySecretService(bool bIsCheck); // Function DFMGameplay.DFMSafeHouseSyncComponent.ToggleDisplaySecretService // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35e4130
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSceneActorReplicator
// Size: 0x6b0 (Inherited: 0x690)
class ADFMSceneActorReplicator : public AGPSceneActorReplicator {
public:

	struct TArray<struct APlayerController*> DFMControllerCacheArr; // 0x690(0x10)
	struct TArray<struct ADFMHudDataReplicator*> DFMDataReplicatorCacheArr; // 0x6a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ScenesAIStateComponent
// Size: 0x128 (Inherited: 0x100)
class UScenesAIStateComponent : public UActorComponent {
public:

	struct UAIScenesInteractiveComponent* LastInteractor; // 0x100(0x08)
	struct UAIScenesInteractiveComponent* Interactor; // 0x108(0x08)
	float HungerValue; // 0x110(0x04)
	float HungerMaxValue; // 0x114(0x04)
	float ThirstyValue; // 0x118(0x04)
	float ThirstyMaxValue; // 0x11c(0x04)
	char pad_120[0x8]; // 0x120(0x08)

	void StopReporting(); // Function DFMGameplay.ScenesAIStateComponent.StopReporting // (Final|Native|Public|BlueprintCallable) // @ game+0x62f33f0
	void SetInteractor(struct UAIScenesInteractiveComponent* InInteractor); // Function DFMGameplay.ScenesAIStateComponent.SetInteractor // (Final|Native|Public) // @ game+0x62f32f0
	bool SendScenesReportEvent(struct UAIEvent* Event); // Function DFMGameplay.ScenesAIStateComponent.SendScenesReportEvent // (Final|Native|Public) // @ game+0x62f3260
	void ReportSelf(); // Function DFMGameplay.ScenesAIStateComponent.ReportSelf // (Final|Native|Public) // @ game+0x62f3240
	void InteractorUseTimeout(struct UAIScenesInteractiveComponent* interactorComp); // Function DFMGameplay.ScenesAIStateComponent.InteractorUseTimeout // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	float GetThirstyValue(); // Function DFMGameplay.ScenesAIStateComponent.GetThirstyValue // (Final|Native|Public) // @ game+0x62f3160
	float GetThirstyMaxValue(); // Function DFMGameplay.ScenesAIStateComponent.GetThirstyMaxValue // (Final|Native|Public) // @ game+0x62f3130
	struct FVector GetLocation(); // Function DFMGameplay.ScenesAIStateComponent.GetLocation // (Final|Native|Public|HasDefaults) // @ game+0x62f3050
	struct UAIScenesInteractiveComponent* GetInteractor(); // Function DFMGameplay.ScenesAIStateComponent.GetInteractor // (Final|Native|Public) // @ game+0x62f2fe0
	float GetHungerValue(); // Function DFMGameplay.ScenesAIStateComponent.GetHungerValue // (Final|Native|Public) // @ game+0x62f2fb0
	float GetHungerMaxValue(); // Function DFMGameplay.ScenesAIStateComponent.GetHungerMaxValue // (Final|Native|Public) // @ game+0x62f2f80
	bool GetHasState(); // Function DFMGameplay.ScenesAIStateComponent.GetHasState // (Final|Native|Public) // @ game+0x62f2f50
	bool GetHasMaterials(); // Function DFMGameplay.ScenesAIStateComponent.GetHasMaterials // (Final|Native|Public) // @ game+0x62f2f20
	bool GetHasKey(); // Function DFMGameplay.ScenesAIStateComponent.GetHasKey // (Final|Native|Public) // @ game+0x62f2ef0
	void EnableTheReport(float Interval); // Function DFMGameplay.ScenesAIStateComponent.EnableTheReport // (Final|Native|Public|BlueprintCallable) // @ game+0x62f2e30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMachineGunAnimInstance
// Size: 0x2a0 (Inherited: 0x280)
class UDFMMachineGunAnimInstance : public UAnimInstance {
public:

	struct ADFMSceneWeapon* OwnerSceneWeapon; // 0x280(0x08)
	float AimPitch; // 0x288(0x04)
	float AimYaw; // 0x28c(0x04)
	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MachineGunActor
// Size: 0x3d8 (Inherited: 0x3d8)
class AMachineGunActor : public APawn {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSceneWeaponMarkerItem
// Size: 0x5d0 (Inherited: 0x5c8)
class UDFMSceneWeaponMarkerItem : public UGPSceneWeaponMarkerItem {
public:

	struct ADFFixedWeaponPawn* MarkedSceneWeapon; // 0x5c8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMScoreStatisticsComponent
// Size: 0x3d0 (Inherited: 0x100)
class UDFMScoreStatisticsComponent : public UActorComponent {
public:

	struct TArray<enum class EScoreName> Features; // 0x100(0x10)
	int32_t KillScore; // 0x110(0x04)
	float AssistScore; // 0x114(0x04)
	int32_t AssistLowLimitScore; // 0x118(0x04)
	int32_t AssistHighLimitScore; // 0x11c(0x04)
	int32_t HeadScore; // 0x120(0x04)
	int32_t HitPlayerScore; // 0x124(0x04)
	int32_t FarGunKillScore; // 0x128(0x04)
	int32_t FarGunDistance; // 0x12c(0x04)
	int32_t FarHeadKillScore; // 0x130(0x04)
	int32_t FarHeadKillDistance; // 0x134(0x04)
	int32_t ContinueKillScore; // 0x138(0x04)
	int32_t MaxIntervalBetweenContinKill; // 0x13c(0x04)
	int32_t DefendCapPointKillScore; // 0x140(0x04)
	int32_t DefendCapPointInner; // 0x144(0x04)
	int32_t DefendCapPointFinalSector; // 0x148(0x04)
	int32_t CapturingScore; // 0x14c(0x04)
	int32_t CaptureProgressScore; // 0x150(0x04)
	int32_t NeutralizedScore; // 0x154(0x04)
	int32_t StickToTheGoalScore; // 0x158(0x04)
	int32_t CapturedScore; // 0x15c(0x04)
	int32_t CapturingProgressScore; // 0x160(0x04)
	int32_t CapturedSectorScore; // 0x164(0x04)
	int32_t AidScore; // 0x168(0x04)
	int32_t RevengeScore; // 0x16c(0x04)
	int32_t SquadRevengeScore; // 0x170(0x04)
	int32_t RetreatScore; // 0x174(0x04)
	int32_t RescueScore; // 0x178(0x04)
	int32_t AbilityDestroyVehicleScore; // 0x17c(0x04)
	int32_t AbilityRebotRescueScore; // 0x180(0x04)
	int32_t AbilityPlayerRescueScore; // 0x184(0x04)
	int32_t DriverAssistScore; // 0x188(0x04)
	int32_t RedeployVehicleScore; // 0x18c(0x04)
	int32_t PassengerAssistScore; // 0x190(0x04)
	int32_t KillActorByVehicleScore; // 0x194(0x04)
	int32_t AttackVehicleScore; // 0x198(0x04)
	int32_t DestroyVehicleScore; // 0x19c(0x04)
	struct TMap<uint64_t, struct FAttackScore> WeaponAntiVehicleScore; // 0x1a0(0x50)
	int32_t CrewAssistScore; // 0x1f0(0x04)
	int32_t RedeployOnPlayerScore; // 0x1f4(0x04)
	int32_t ReDeployOnLastManScore; // 0x1f8(0x04)
	int32_t FastRescueScore; // 0x1fc(0x04)
	int32_t SupportGunCureTeammateScore; // 0x200(0x04)
	int32_t SupportGunHeadScore; // 0x204(0x04)
	int32_t SupportSmokeCreateScore; // 0x208(0x04)
	int32_t SupportSelfCureScore; // 0x20c(0x04)
	int32_t SupportSmokeCureTeammateScore; // 0x210(0x04)
	int32_t SupportEffectApplyScore; // 0x214(0x04)
	int32_t KillSupportEffectEnermyScore; // 0x218(0x04)
	int32_t HelpKillSupportEffectEnermyScore; // 0x21c(0x04)
	int32_t ProxSensorMark; // 0x220(0x04)
	int32_t RebornFlag; // 0x224(0x04)
	int32_t MarkAssist; // 0x228(0x04)
	int32_t BreakProxSensor; // 0x22c(0x04)
	int32_t BreakRebornFlag; // 0x230(0x04)
	int32_t PenetratingSniperKill; // 0x234(0x04)
	int32_t PenetratingSniperShot; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct TMap<int32_t, struct FAttackScore> SkillIDAndScoreGains; // 0x240(0x50)
	struct TMap<uint64_t, struct FAttackScore> WeaponIDAndScoreGains; // 0x290(0x50)
	struct TMap<uint64_t, struct FAttackScore> BuffIDAndScoreGains; // 0x2e0(0x50)
	struct TMap<int32_t, float> NormalHitDecimalMap; // 0x330(0x50)
	char pad_380[0x50]; // 0x380(0x50)

	void RemoveNormalHitDecimal(uint64_t PlayerId); // Function DFMGameplay.DFMScoreStatisticsComponent.RemoveNormalHitDecimal // (Final|Native|Public) // @ game+0x62f71f0
	int32_t GetOneFromNormalHitDecimal(uint64_t PlayerId); // Function DFMGameplay.DFMScoreStatisticsComponent.GetOneFromNormalHitDecimal // (Final|Native|Public) // @ game+0x62f66f0
	void CalculateAndShowScoreInfo(struct FScoreTipsData ScoreTipsData); // Function DFMGameplay.DFMScoreStatisticsComponent.CalculateAndShowScoreInfo // (Native|Public) // @ game+0x62f6010
	void AddNormalHitDecimal(uint64_t PlayerId, float Decimal); // Function DFMGameplay.DFMScoreStatisticsComponent.AddNormalHitDecimal // (Final|Native|Public) // @ game+0x62f5c50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMScoreTipsComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMScoreTipsComponent : public UActorComponent {
public:


	void SetSOLStatistics(int32_t Category, uint32_t Distance, struct FText PlayerName, uint64_t PlayerId, struct FString WeaponName, bool bKillTeam); // Function DFMGameplay.DFMScoreTipsComponent.SetSOLStatistics // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f74d0
	void SetScoreInfo(int32_t Category, int32_t Score, int32_t Distance, struct FName ScoreNameExt); // Function DFMGameplay.DFMScoreTipsComponent.SetScoreInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f77a0
	void SetAbilityHitMarker(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMScoreTipsComponent.SetAbilityHitMarker // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0xbd8930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSequenceRootActor
// Size: 0x378 (Inherited: 0x378)
class ADFMSequenceRootActor : public AActor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSettlementManager
// Size: 0x40 (Inherited: 0x38)
class UDFMSettlementManager : public UGameInstanceSubsystem {
public:

	bool bForceQuit; // 0x38(0x01)
	enum class EMatchOverReason CacheMatchOverReason; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)

	void SettlementSendLogoutNtf(); // Function DFMGameplay.DFMSettlementManager.SettlementSendLogoutNtf // (Final|Native|Public|Const) // @ game+0x62f7a20
	void SettlementFallBack(enum class EMatchOverReason MatchOverReason); // Function DFMGameplay.DFMSettlementManager.SettlementFallBack // (Final|Native|Public) // @ game+0x62f79a0
	void SettlementFailFallBack(); // Function DFMGameplay.DFMSettlementManager.SettlementFailFallBack // (Final|Native|Public|Const) // @ game+0x62f7980
	void SettlementEndBroadcast(); // Function DFMGameplay.DFMSettlementManager.SettlementEndBroadcast // (Final|Native|Public) // @ game+0x62f7960
	void SetSlomo(float Coefficient); // Function DFMGameplay.DFMSettlementManager.SetSlomo // (Final|Native|Public|Const) // @ game+0x62f78e0
	void SetSceneFocus(struct FVector FocusLoc); // Function DFMGameplay.DFMSettlementManager.SetSceneFocus // (Final|Native|Public|HasDefaults|Const) // @ game+0x62f7710
	void SetLowFrequency(); // Function DFMGameplay.DFMSettlementManager.SetLowFrequency // (Final|Native|Public) // @ game+0x62f74b0
	void SaveSettlementPkg2Locals(struct FString Pkg); // Function DFMGameplay.DFMSettlementManager.SaveSettlementPkg2Locals // (Final|Native|Public|Const) // @ game+0x62f7290
	void ResetMatchOverReason(); // Function DFMGameplay.DFMSettlementManager.ResetMatchOverReason // (Final|Native|Public) // @ game+0x62f7270
	struct FString Read4Buffer(struct FString str); // Function DFMGameplay.DFMSettlementManager.Read4Buffer // (Final|Native|Public) // @ game+0x62f70d0
	bool ProcessInspectPlayer(bool WillEnterSpecterMode, struct ADFMPlayerController* localDFMPlayerController, struct AGPPlayerController* LocalPlayerController, uint64_t WillEnterSpecterPlayer); // Function DFMGameplay.DFMSettlementManager.ProcessInspectPlayer // (Final|Native|Public) // @ game+0x62f6eb0
	void OnLoadingPercentage(int32_t Percentage); // Function DFMGameplay.DFMSettlementManager.OnLoadingPercentage // (Final|Native|Public) // @ game+0x62f6a80
	void OnInspectTeamEnd(); // Function DFMGameplay.DFMSettlementManager.OnInspectTeamEnd // (Final|Native|Public) // @ game+0x62f6a60
	bool InspectTeamNext(); // Function DFMGameplay.DFMSettlementManager.InspectTeamNext // (Final|Native|Public) // @ game+0x62f6960
	bool InspectTeam(); // Function DFMGameplay.DFMSettlementManager.InspectTeam // (Final|Native|Public) // @ game+0x62f6930
	void HideAllVehicleActor(); // Function DFMGameplay.DFMSettlementManager.HideAllVehicleActor // (Final|Native|Public|Const) // @ game+0x62f6870
	void HideAllScreenEffect(); // Function DFMGameplay.DFMSettlementManager.HideAllScreenEffect // (Final|Native|Public) // @ game+0x62f6850
	void HideAllPlayerActor(); // Function DFMGameplay.DFMSettlementManager.HideAllPlayerActor // (Final|Native|Public|Const) // @ game+0x62f6830
	bool HasTeamMemberWatchFight(); // Function DFMGameplay.DFMSettlementManager.HasTeamMemberWatchFight // (Final|Native|Public) // @ game+0x62f6800
	enum class EMatchOverReason GetMatchOverReason(); // Function DFMGameplay.DFMSettlementManager.GetMatchOverReason // (Final|Native|Public|Const) // @ game+0x62f66c0
	uint64_t GetLastDamageInfoTarget(); // Function DFMGameplay.DFMSettlementManager.GetLastDamageInfoTarget // (Final|Native|Public) // @ game+0x62f6690
	uint64_t GetLastDamageInfoOrigin(); // Function DFMGameplay.DFMSettlementManager.GetLastDamageInfoOrigin // (Final|Native|Public) // @ game+0x62f6660
	uint64_t GetLastAIDamageLvOrigin(); // Function DFMGameplay.DFMSettlementManager.GetLastAIDamageLvOrigin // (Final|Native|Public) // @ game+0x62f6630
	enum class EDFMGamePlayMode GetDFMGamePlayerMode(); // Function DFMGameplay.DFMSettlementManager.GetDFMGamePlayerMode // (Final|Native|Public|Const) // @ game+0x62f6600
	bool GetArmorPenetrate(); // Function DFMGameplay.DFMSettlementManager.GetArmorPenetrate // (Final|Native|Public) // @ game+0x62f65d0
	int32_t GetArmorLevel(); // Function DFMGameplay.DFMSettlementManager.GetArmorLevel // (Final|Native|Public) // @ game+0x62f65a0
	struct UDFMSettlementManager* STATIC_Get(struct UWorld* WorldContext); // Function DFMGameplay.DFMSettlementManager.Get // (Final|Native|Static|Public) // @ game+0x62f6520
	void ForceQuitTimer(); // Function DFMGameplay.DFMSettlementManager.ForceQuitTimer // (Final|Native|Public) // @ game+0x62f6500
	void DestroyAllPlayerActor(); // Function DFMGameplay.DFMSettlementManager.DestroyAllPlayerActor // (Final|Native|Public|Const) // @ game+0x62f64e0
	void CloseForceQuit(); // Function DFMGameplay.DFMSettlementManager.CloseForceQuit // (Final|Native|Public) // @ game+0x62f6440
	void ClearAllHud(); // Function DFMGameplay.DFMSettlementManager.ClearAllHud // (Final|Native|Public) // @ game+0x62f61d0
	void BroadcastSOLFirstUIShow(); // Function DFMGameplay.DFMSettlementManager.BroadcastSOLFirstUIShow // (Final|Native|Public) // @ game+0x62f5eb0
	void BroadcastServerPlayerBan(int64_t PlayerId, int8_t reason, struct FString custom_reson); // Function DFMGameplay.DFMSettlementManager.BroadcastServerPlayerBan // (Final|Native|Public|Const) // @ game+0x62f5ed0
	void BroadcastCutScene(int32_t CurSector); // Function DFMGameplay.DFMSettlementManager.BroadcastCutScene // (Final|Native|Public) // @ game+0x62f5e30
	void BroadcastChangeGameFlow2GameSettlement(); // Function DFMGameplay.DFMSettlementManager.BroadcastChangeGameFlow2GameSettlement // (Final|Native|Public|Const) // @ game+0x62f5e10
	void AfterLoadSettlementFirstUIShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMSettlementManager.AfterLoadSettlementFirstUIShow // (Final|Native|Public) // @ game+0x62f5d10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkeletalMeshComponent
// Size: 0x1380 (Inherited: 0x1380)
class UDFMSkeletalMeshComponent : public UGPSkeletalMeshComponentExtra {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillComponent
// Size: 0x1258 (Inherited: 0x1208)
class UDFMSkillComponent : public UGPSkillComponent {
public:

	struct ADFMCharacter* DFMCharacter; // 0x1208(0x08)
	char pad_1210[0x18]; // 0x1210(0x18)
	int64_t GMExpertID; // 0x1228(0x08)
	float TriggerMineTipsTime; // 0x1230(0x04)
	char pad_1234[0x14]; // 0x1234(0x14)
	bool bEnaleSetCastShadow; // 0x1248(0x01)
	char pad_1249[0xb]; // 0x1249(0x0b)
	bool bInSupportShadow; // 0x1254(0x01)
	bool bClientInSupportShadow; // 0x1255(0x01)
	char pad_1256[0x2]; // 0x1256(0x02)

	void UpdateLoadCharacterRotator(int32_t SkillId, struct FRotator Rotator); // Function DFMGameplay.DFMSkillComponent.UpdateLoadCharacterRotator // (Net|Native|Event|Public|NetServer|HasDefaults) // @ game+0x62f8040
	void UpdateClientBuffDetectorTimeMap(struct FBuffDetectorUpdateData UpdateData); // Function DFMGameplay.DFMSkillComponent.UpdateClientBuffDetectorTimeMap // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f7f80
	bool TryGiveBattleFieldPropSkill(); // Function DFMGameplay.DFMSkillComponent.TryGiveBattleFieldPropSkill // (Final|Native|Public) // @ game+0x62f7f50
	void TryGiveArmforceId(enum class EInGameBattleClassType ArmForceID); // Function DFMGameplay.DFMSkillComponent.TryGiveArmforceId // (Final|Native|Public|BlueprintCallable) // @ game+0x62f7ed0
	void TryAddZoyaSwarmsKillCount(struct FKillInfo& KillInfo, struct ADFMCharacter* Killer, struct ADFMCharacter* bekiller); // Function DFMGameplay.DFMSkillComponent.TryAddZoyaSwarmsKillCount // (Final|Native|Protected|HasOutParms) // @ game+0x62f7d90
	void TryAddIncendiaryKillScore(struct FKillInfo& KillInfo, struct ADFMCharacter* Killer, struct ADFMCharacter* bekiller); // Function DFMGameplay.DFMSkillComponent.TryAddIncendiaryKillScore // (Final|Native|Protected|HasOutParms) // @ game+0x62f7c50
	void TryAddIncendiaryDamageLog(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMSkillComponent.TryAddIncendiaryDamageLog // (Final|Native|Protected|HasOutParms) // @ game+0x62f7b80
	void TryAddIncendiaryAssistScore(struct FKillInfo& KillInfo, struct ADFMCharacter* Killer, struct ADFMCharacter* bekiller); // Function DFMGameplay.DFMSkillComponent.TryAddIncendiaryAssistScore // (Final|Native|Protected|HasOutParms|Const) // @ game+0x62f7a40
	void SetInSupportShadow(bool bIsIn); // Function DFMGameplay.DFMSkillComponent.SetInSupportShadow // (Final|Native|Public) // @ game+0x62f7420
	void ServerOverlapByBullet(struct AGPWeaponBulletProjectile* Bullet, struct AActor* Target); // Function DFMGameplay.DFMSkillComponent.ServerOverlapByBullet // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62f7350
	void ServerGiveArmforceId(enum class EInGameBattleClassType ArmForceID); // Function DFMGameplay.DFMSkillComponent.ServerGiveArmforceId // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1d210a0
	void PseudoOnEnterStageChanged(char NewStageType, char OldStageType); // Function DFMGameplay.DFMSkillComponent.PseudoOnEnterStageChanged // (Final|Native|Public) // @ game+0x62f7010
	void PlayActorAudio(struct FName AudioName); // Function DFMGameplay.DFMSkillComponent.PlayActorAudio // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0xbcbbd0
	void OnServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMSkillComponent.OnServerMatchEnd // (Final|Native|Public) // @ game+0x61d7230
	void OnRep_InSupportShadow(); // Function DFMGameplay.DFMSkillComponent.OnRep_InSupportShadow // (Final|Native|Protected) // @ game+0x62f6dc0
	void OnRep_BattleClassType(); // Function DFMGameplay.DFMSkillComponent.OnRep_BattleClassType // (Final|Native|Public) // @ game+0x62f6da0
	void NetGiveArmforceId(enum class EInGameBattleClassType ArmForceID); // Function DFMGameplay.DFMSkillComponent.NetGiveArmforceId // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1d20fa0
	void InitBattleFieldPropSkillByItemID(int64_t ItemID); // Function DFMGameplay.DFMSkillComponent.InitBattleFieldPropSkillByItemID // (Final|Native|Public) // @ game+0x62f68b0
	void InitBattleFieldPropSkillByDefault(); // Function DFMGameplay.DFMSkillComponent.InitBattleFieldPropSkillByDefault // (Final|Native|Public) // @ game+0x62f6890
	void GiveArmforceId(enum class EInGameBattleClassType ArmForceID); // Function DFMGameplay.DFMSkillComponent.GiveArmforceId // (Final|Native|Public|BlueprintCallable) // @ game+0x62f6780
	void ClientTriggerMineDone(); // Function DFMGameplay.DFMSkillComponent.ClientTriggerMineDone // (Final|Native|Public) // @ game+0x62f6420
	void ClientTriggerMine(bool IsActivated); // Function DFMGameplay.DFMSkillComponent.ClientTriggerMine // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f6390
	void ClientShowEngineVehicleHUD(bool Show, struct ADFMCharacter* Operator, struct AActor* Actor); // Function DFMGameplay.DFMSkillComponent.ClientShowEngineVehicleHUD // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f6280
	void ClientOverlapByDrone(struct FVector Position, struct FName ImpackAudio); // Function DFMGameplay.DFMSkillComponent.ClientOverlapByDrone // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x4056770
	void ClientIgnoreFormDetectorBuff(struct FName IgnoreTag); // Function DFMGameplay.DFMSkillComponent.ClientIgnoreFormDetectorBuff // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62f61f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillDamageActor
// Size: 0x3b0 (Inherited: 0x378)
class ADFMSkillDamageActor : public AActor {
public:

	char pad_378[0x18]; // 0x378(0x18)
	struct TArray<struct UClass*> DamageGameplayEffect; // 0x390(0x10)
	struct UObject* OwnerAction; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	void OnServerProjectileHit(struct FVector& HitLocation, struct FHitResult& HitResult, int64_t AttackerValueId, struct TArray<struct AActor*>& IgnoreActors, float DamageRate); // Function DFMGameplay.DFMSkillDamageActor.OnServerProjectileHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62fcc30
	void OnServerHit(struct FHitResult& HitResult, int64_t AttackerValueId, float DamageRate); // Function DFMGameplay.DFMSkillDamageActor.OnServerHit // (Final|Native|Public|HasOutParms) // @ game+0x62fcac0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillDataFlow
// Size: 0x230 (Inherited: 0x230)
class UDFMSkillDataFlow : public UGPSkillDataFlow {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillEntity
// Size: 0x30 (Inherited: 0x30)
class UDFMSkillEntity : public UGPSkillEntity {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillManager
// Size: 0x30 (Inherited: 0x30)
class UDFMSkillManager : public UObject {
public:


	void STATIC_RemoveTalentAttribute(struct AActor* DestActor, int32_t TalentId); // Function DFMGameplay.DFMSkillManager.RemoveTalentAttribute // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62fdb00
	void STATIC_AddTalentAttribute(struct AActor* DestActor, int32_t TalentId); // Function DFMGameplay.DFMSkillManager.AddTalentAttribute // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x62fba60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSlotChargingComponent
// Size: 0x1f8 (Inherited: 0x1e8)
class UDFMSlotChargingComponent : public UGPSlotChargingComponent {
public:

	char pad_1E8[0x10]; // 0x1e8(0x10)

	void OnSpaceMarkedDirty(); // Function DFMGameplay.DFMSlotChargingComponent.OnSpaceMarkedDirty // (Final|Native|Public) // @ game+0x62fce60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSniperMarkAimedEnemyComponent
// Size: 0x380 (Inherited: 0x100)
class UDFMSniperMarkAimedEnemyComponent : public UActorComponent {
public:

	struct TMap<struct AActor*, struct FMarkCharacterInfo> MarkedCharMap; // 0x100(0x50)
	struct TMap<struct AActor*, struct FMarkEnemyWeightStruct> MarkWeightMap; // 0x150(0x50)
	struct TMap<struct AActor*, float> PlayerMarkCancelCache; // 0x1a0(0x50)
	struct TMap<struct AActor*, struct FMarkCharacterInfo> BeAimedMarkedCharMap; // 0x1f0(0x50)
	bool bVisibleMark; // 0x240(0x01)
	bool bActiveMark; // 0x241(0x01)
	bool bActiveBeAimedAlert; // 0x242(0x01)
	char pad_243[0x1]; // 0x243(0x01)
	struct FVector2D MarkEnemyRange; // 0x244(0x08)
	struct FVector2D MaintainEnemyRange; // 0x24c(0x08)
	float EnemyDurationTime; // 0x254(0x04)
	float DelayShowProgressionTime; // 0x258(0x04)
	bool bShowProgressionUI; // 0x25c(0x01)
	char MaxMarkCount; // 0x25d(0x01)
	char pad_25E[0x2]; // 0x25e(0x02)
	float TargetWorldLocationWeight; // 0x260(0x04)
	float TargetScreenLocationWeight; // 0x264(0x04)
	float MaxMarkEnemyDistance; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UCurveFloat* MarkEnemyDistanceCurve; // 0x270(0x08)
	struct UCurveFloat* CancelMarkEnemyDistanceCurve; // 0x278(0x08)
	bool bUseTelescopeAIMarking; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float CancelDistanceInViewportBehindCover; // 0x284(0x04)
	float CancelTimeInViewportBehindCover; // 0x288(0x04)
	float CancelDistanceInViewportNoCover; // 0x28c(0x04)
	float CancelTimeInViewportNoCover; // 0x290(0x04)
	float CancelDistanceOutViewportBehindCover; // 0x294(0x04)
	float CancelTimeOutViewportBehindCover; // 0x298(0x04)
	float CancelDistanceOutViewportNoCover; // 0x29c(0x04)
	float CancelTimeOutViewportNoCover; // 0x2a0(0x04)
	float CancelPlayerMarkCacheTime; // 0x2a4(0x04)
	struct FVector2D BeMarkedRange; // 0x2a8(0x08)
	float BeMarkedDurationTime; // 0x2b0(0x04)
	float BeMarkedMaxMarkDistance; // 0x2b4(0x04)
	struct UCurveFloat* BeMarkedMarkDistanceCurve; // 0x2b8(0x08)
	float BeAimedTriggerCD; // 0x2c0(0x04)
	bool bEnableTeammateMarkDebug; // 0x2c4(0x01)
	char pad_2C5[0xb]; // 0x2c5(0x0b)
	float LineTraceInterval; // 0x2d0(0x04)
	float BeAimedLineTraceInterval; // 0x2d4(0x04)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct AGPPlayerController* PlayerController; // 0x2e0(0x08)
	struct TArray<struct FName> NameOfSocketsToProject; // 0x2e8(0x10)
	int32_t MinExposedSocketNumber; // 0x2f8(0x04)
	struct FName HeadSockName; // 0x2fc(0x08)
	char pad_304[0x2c]; // 0x304(0x2c)
	struct UMapInfoComponent* MapInfoComponent; // 0x330(0x08)
	struct AGameState_PVPVE* GameState; // 0x338(0x08)
	char pad_340[0x30]; // 0x340(0x30)
	struct UCurveFloat* MarkDistanceCurve; // 0x370(0x08)
	struct UCurveFloat* CancelMarkDistanceCurve; // 0x378(0x08)

	void TrimCandidateByWeight(); // Function DFMGameplay.DFMSniperMarkAimedEnemyComponent.TrimCandidateByWeight // (Final|Native|Protected) // @ game+0x62fdd70
	void OnTriggerBeAimedAlert(struct TArray<uint64_t>& PlayerUinArr); // Function DFMGameplay.DFMSniperMarkAimedEnemyComponent.OnTriggerBeAimedAlert // (Final|Native|Protected|HasOutParms) // @ game+0x62fce80
	void OnRep_bVisibleMark(); // Function DFMGameplay.DFMSniperMarkAimedEnemyComponent.OnRep_bVisibleMark // (Final|Native|Protected) // @ game+0x62fcaa0
	void OnRep_bActiveMark(); // Function DFMGameplay.DFMSniperMarkAimedEnemyComponent.OnRep_bActiveMark // (Final|Native|Protected) // @ game+0x62fca80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSOLStatisticsComponent
// Size: 0x110 (Inherited: 0x100)
class UDFMSOLStatisticsComponent : public UActorComponent {
public:

	int32_t AssistLowLimitScore; // 0x100(0x04)
	int32_t AssistHighLimitScore; // 0x104(0x04)
	struct ADFMGameState* SOLGameState; // 0x108(0x08)

	void CalculateAndShowScoreInfo(struct FScoreTipsData ScoreTipsData); // Function DFMGameplay.DFMSOLStatisticsComponent.CalculateAndShowScoreInfo // (Native|Public) // @ game+0x62fbde0
	void CalculateAndShowRescueInfo(struct FKillInfo& KillInfo, struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMSOLStatisticsComponent.CalculateAndShowRescueInfo // (Native|Protected|HasOutParms) // @ game+0x62fbcd0
	void CalculateAndShowKillInfo(struct FKillInfo& KillInfo, struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMSOLStatisticsComponent.CalculateAndShowKillInfo // (Native|Protected|HasOutParms) // @ game+0x62fbbc0
	void CalculateAndShowKillAssitInfo(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMSOLStatisticsComponent.CalculateAndShowKillAssitInfo // (Native|Protected|HasOutParms) // @ game+0x62fbb10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSoundGuideComponent
// Size: 0x178 (Inherited: 0x100)
class UDFMSoundGuideComponent : public UActorComponent {
public:

	float SoundGuideCDMin; // 0x100(0x04)
	float SoundGuideCDMax; // 0x104(0x04)
	char pad_108[0x10]; // 0x108(0x10)
	struct TArray<struct FSoundGuideInfo> SoundGuideConfigs; // 0x118(0x10)
	char pad_128[0x48]; // 0x128(0x48)
	float SmallestGuideDistSquared; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSoundVisualizeComponent
// Size: 0x388 (Inherited: 0x100)
class UDFMSoundVisualizeComponent : public UActorComponent {
public:

	char pad_100[0xa0]; // 0x100(0xa0)
	/*struct TSet<uint64_t>*/char TeamUinCache[0x50]; // 0x1a0(0x50)
	char pad_1F0[0x138]; // 0x1f0(0x138)
	struct TMap<struct AActor*, struct FSoundDisplayHUDInfo> CurrentSoundHUDInfo; // 0x328(0x50)
	float SoundMaxReceiveRange; // 0x378(0x04)
	float HeadSetAdvantageDist; // 0x37c(0x04)
	char pad_380[0x8]; // 0x380(0x08)

	void ProcessSoundDisplayData(struct FSoundDataDisplayData& DisplayData, struct FMiniMapSoundData& SoundData); // Function DFMGameplay.DFMSoundVisualizeComponent.ProcessSoundDisplayData // (Final|Native|Protected|HasOutParms) // @ game+0x62fda00
	void OnAsyncLoadItemTable(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMSoundVisualizeComponent.OnAsyncLoadItemTable // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62fc7b0
	void OnAsyncLoadActionTable(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMSoundVisualizeComponent.OnAsyncLoadActionTable // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62fc6d0
	void HandleSoundVisualizeEvent(struct AActor* MakerActor, char EventType, struct FString Param); // Function DFMGameplay.DFMSoundVisualizeComponent.HandleSoundVisualizeEvent // (Final|Native|Public) // @ game+0x62fc320
	void HandleMakeNoise(float MaxVolume, struct AActor* SourceActor, struct FVector& Location, float radius, struct FName& AudioType); // Function DFMGameplay.DFMSoundVisualizeComponent.HandleMakeNoise // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62fc170
	void ClientHandleSoundVisualizeEvent(struct FSoundDataDisplayData DisplayData, struct FMiniMapSoundData SoundData); // Function DFMGameplay.DFMSoundVisualizeComponent.ClientHandleSoundVisualizeEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62fbfa0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSpeakDebugComponent
// Size: 0x820 (Inherited: 0x800)
class UDFMSpeakDebugComponent : public UWidgetComponent {
public:

	struct FTimerHandle SelfTickHandler; // 0x800(0x08)
	float MaxDisplayDistance; // 0x808(0x04)
	float MinDisplayDistance; // 0x80c(0x04)
	int32_t MaxDisplayItems; // 0x810(0x04)
	char pad_814[0xc]; // 0x814(0x0c)

	void TickingUpdate(); // Function DFMGameplay.DFMSpeakDebugComponent.TickingUpdate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AppendSpeakDebugInfo(struct FAIAudioDebugRecord& Records); // Function DFMGameplay.DFMSpeakDebugComponent.AppendSpeakDebugInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSpeakComponent
// Size: 0x5a8 (Inherited: 0x100)
class UDFMSpeakComponent : public UActorComponent {
public:

	char pad_100[0x44c]; // 0x100(0x44c)
	struct FName DynamicAudioAssetPrefex; // 0x54c(0x08)
	bool bUseNoRepeatStrategy; // 0x554(0x01)
	char pad_555[0x3]; // 0x555(0x03)
	/*struct TSoftClassPtr<UObject>*/char DebugPlane[0x28]; // 0x558(0x28)
	struct UDFMSpeakDebugComponent* DebugCompontent; // 0x580(0x08)
	struct UDataTable* SpeakConfig; // 0x588(0x08)
	float hurted_heavy_percent; // 0x590(0x04)
	bool bEnableAttackSnapAudio; // 0x594(0x01)
	char pad_595[0x13]; // 0x595(0x13)

	void StopPlayingSound(bool allSound); // Function DFMGameplay.DFMSpeakComponent.StopPlayingSound // (Final|Native|Public|BlueprintCallable) // @ game+0x62fdce0
	bool StopLowPriorityAudio(char Priority); // Function DFMGameplay.DFMSpeakComponent.StopLowPriorityAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x62fdc50
	void ResetTypeAudioCD(enum class ECharacterSpeakType Type); // Function DFMGameplay.DFMSpeakComponent.ResetTypeAudioCD // (Final|Native|Public|BlueprintCallable) // @ game+0x62fdbd0
	void ResetGlobalAudioCD(); // Function DFMGameplay.DFMSpeakComponent.ResetGlobalAudioCD // (Final|Native|Public|BlueprintCallable) // @ game+0x62fdbb0
	bool PlaySoundAsset(struct UGPAudioEventAsset* AudioAsset, int32_t Priority, struct FName Subtitle); // Function DFMGameplay.DFMSpeakComponent.PlaySoundAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x62fd900
	void PlayAudioNTag(enum class ECharacterSpeakType Type, struct TArray<struct FName>& tagList, bool bForced, struct FName Subtitle, bool BreakLow); // Function DFMGameplay.DFMSpeakComponent.PlayAudioNTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62fd730
	void PlayAudioDynamicDialogue(enum class ECharacterSpeakDynamicDialogueSwitchStatus Status, enum class ECharacterSpeakDynamicDialogueSwitchaAction Action, struct FName Subtitle); // Function DFMGameplay.DFMSpeakComponent.PlayAudioDynamicDialogue // (Final|Native|Public|BlueprintCallable) // @ game+0x62fd620
	void PlayAudio3Tag(enum class ECharacterSpeakType Type, struct FName Tag1, struct FName tag2, struct FName tag3, bool bForced, struct FName Subtitle, bool BreakLow); // Function DFMGameplay.DFMSpeakComponent.PlayAudio3Tag // (Final|Native|Public|BlueprintCallable) // @ game+0x62fd410
	void PlayAudio2Tag(enum class ECharacterSpeakType Type, struct FName Tag1, struct FName tag2, bool bForced, struct FName Subtitle, bool BreakLow); // Function DFMGameplay.DFMSpeakComponent.PlayAudio2Tag // (Final|Native|Public|BlueprintCallable) // @ game+0x62fd240
	void PlayAudio1Tag(enum class ECharacterSpeakType Type, struct FName Tag, bool bForced, struct FName Subtitle, bool BreakLow); // Function DFMGameplay.DFMSpeakComponent.PlayAudio1Tag // (Final|Native|Public|BlueprintCallable) // @ game+0x62fd0a0
	void PlayAudio0Tag(enum class ECharacterSpeakType Type, bool bForced, struct FName Subtitle, bool BreakLow); // Function DFMGameplay.DFMSpeakComponent.PlayAudio0Tag // (Final|Native|Public|BlueprintCallable) // @ game+0x62fcf50
	void OnOwnerMakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMSpeakComponent.OnOwnerMakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x62fc9b0
	void OnOwnerCharacterReborn(); // Function DFMGameplay.DFMSpeakComponent.OnOwnerCharacterReborn // (Final|Native|Private) // @ game+0x62fc990
	void OnOwnerCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMSpeakComponent.OnOwnerCharacterDied // (Final|Native|Private) // @ game+0x62fc890
	void MulticastShowSubtitle(struct FName SubtitleSeqId, struct ADFMCharacter* characterRef); // Function DFMGameplay.DFMSpeakComponent.MulticastShowSubtitle // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x62fc600
	void MulticastDebugSpeakInfo(struct FName AudioType, struct FSoftObjectPath AudioAsset, enum class EAIAudioDebugFailReason reason); // Function DFMGameplay.DFMSpeakComponent.MulticastDebugSpeakInfo // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x62fc460
	bool GetLastRecord(struct FCharacterSpeakRecord& OutValue); // Function DFMGameplay.DFMSpeakComponent.GetLastRecord // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62fc080
	void AbortPendingAudio(enum class ECharacterSpeakType Type); // Function DFMGameplay.DFMSpeakComponent.AbortPendingAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x62fb9e0
	void AbortAllPendingAudio(); // Function DFMGameplay.DFMSpeakComponent.AbortAllPendingAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x62fb9c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSubsystemManagerImpl
// Size: 0x60 (Inherited: 0x58)
class UDFMSubsystemManagerImpl : public UGPSubsystemManagerImpl {
public:

	char pad_58[0x8]; // 0x58(0x08)

	void OnGameFlowLeave(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFMSubsystemManagerImpl.OnGameFlowLeave // (Final|Native|Protected) // @ game+0x6300ca0
	void OnGameFlowGraphStop(struct UGameFlowGraph* GameFlowGraph); // Function DFMGameplay.DFMSubsystemManagerImpl.OnGameFlowGraphStop // (Final|Native|Protected) // @ game+0x6300c20
	void OnGameFlowGraphPlay(struct UGameFlowGraph* GameFlowGraph); // Function DFMGameplay.DFMSubsystemManagerImpl.OnGameFlowGraphPlay // (Final|Native|Protected) // @ game+0x6300ba0
	void OnGameFlowEnter(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFMSubsystemManagerImpl.OnGameFlowEnter // (Final|Native|Protected) // @ game+0x6300b20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSubtitleProxy
// Size: 0x378 (Inherited: 0x378)
class ADFMSubtitleProxy : public AActor {
public:


	void ShowWirelessSubtitle(int32_t WirelessID); // Function DFMGameplay.DFMSubtitleProxy.ShowWirelessSubtitle // (Final|Native|Public|BlueprintCallable) // @ game+0x6301920
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSubtitleSubSystem
// Size: 0x378 (Inherited: 0x378)
class ADFMSubtitleSubSystem : public ALevelSubsystem {
public:


	void RemoveSubtitleByHandle(int64_t Handle); // Function DFMGameplay.DFMSubtitleSubSystem.RemoveSubtitleByHandle // (Native|Public|BlueprintCallable) // @ game+0x1cafd90
	struct ADFMSubtitleSubSystem* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.DFMSubtitleSubSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63005f0
	int64_t AddSingleSubtitle(struct FGPQuestObjectiveNoticeInfo& NoticeInfo); // Function DFMGameplay.DFMSubtitleSubSystem.AddSingleSubtitle // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6300210
	int64_t AddNewSubtitle(struct FGPQuestObjectiveNoticeInfo& NoticeInfo); // Function DFMGameplay.DFMSubtitleSubSystem.AddNewSubtitle // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6300120
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTacticalEquipmentMarkerItem
// Size: 0x5c0 (Inherited: 0x5c0)
class UDFMTacticalEquipmentMarkerItem : public UGPTacticalEquipmentMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTailingEffectBrush
// Size: 0x3b8 (Inherited: 0x378)
class ADFMTailingEffectBrush : public AActor {
public:

	float frequency; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct UTexture2D* BrushTexture1; // 0x380(0x08)
	float BrushScale1; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct UTexture2D* BrushTexture2; // 0x390(0x08)
	float BrushScale2; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct UStaticMeshComponent* BrushcComponent1; // 0x3a0(0x08)
	struct UStaticMeshComponent* BrushcComponent2; // 0x3a8(0x08)
	char pad_3B0[0x8]; // 0x3b0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTailingEffectDrawer
// Size: 0x480 (Inherited: 0x378)
class ADFMTailingEffectDrawer : public AActor {
public:

	struct UMaterialParameterCollection* MaterialParameterCollection; // 0x378(0x08)
	struct FVector DecalSize; // 0x380(0x0c)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct UMaterialInterface* DecalMaterial1; // 0x390(0x08)
	struct UMaterialInterface* DecalMaterial2; // 0x398(0x08)
	float BoxSizePercent; // 0x3a0(0x04)
	float StepDistance; // 0x3a4(0x04)
	bool bEnableFadeStep; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float FadeStep; // 0x3ac(0x04)
	bool DecalVisibility; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	struct FLinearColor ClearColor; // 0x3b4(0x10)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct UTextureRenderTarget2D* RenderTarget1; // 0x3c8(0x08)
	struct UTextureRenderTarget2D* RenderTarget2; // 0x3d0(0x08)
	struct UMaterialInterface* BrushMaterial; // 0x3d8(0x08)
	struct UMaterialInterface* EraserMaterial; // 0x3e0(0x08)
	struct UDecalComponent* DecalComponent1; // 0x3e8(0x08)
	struct UDecalComponent* DecalComponent2; // 0x3f0(0x08)
	struct UMaterialInstanceDynamic* BrushMaterialInstance1; // 0x3f8(0x08)
	struct UMaterialInstanceDynamic* BrushMaterialInstance2; // 0x400(0x08)
	struct UMaterialInstanceDynamic* EraserMaterialInstance1; // 0x408(0x08)
	struct UMaterialInstanceDynamic* EraserMaterialInstance2; // 0x410(0x08)
	char pad_418[0x50]; // 0x418(0x50)
	struct AActor* CaptureTarget; // 0x468(0x08)
	char pad_470[0x10]; // 0x470(0x10)

	void SetupMaterial(); // Function DFMGameplay.DFMTailingEffectDrawer.SetupMaterial // (Final|Native|Protected|BlueprintCallable) // @ game+0x6301900
	void SetupDecalComponent(); // Function DFMGameplay.DFMTailingEffectDrawer.SetupDecalComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x63018e0
	void SetMaterialParameter(); // Function DFMGameplay.DFMTailingEffectDrawer.SetMaterialParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x6301700
	void ClearRenderTarget(); // Function DFMGameplay.DFMTailingEffectDrawer.ClearRenderTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x6300420
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTailingEffectSubsystem
// Size: 0x40 (Inherited: 0x38)
class UDFMTailingEffectSubsystem : public UWorldSubsystem {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTelescopeComponent
// Size: 0x1f0 (Inherited: 0x108)
class UDFMTelescopeComponent : public UGPNetworkActorComponent {
public:

	struct FName TelescopeHUDName; // 0x108(0x08)
	struct TArray<float> TelescopeZoomRateArray; // 0x110(0x10)
	int32_t DefaultArrayIndex; // 0x120(0x04)
	bool bIsOperateTelescope; // 0x124(0x01)
	char pad_125[0x3]; // 0x125(0x03)
	struct FName ItemIDName; // 0x128(0x08)
	uint64_t ItemID; // 0x130(0x08)
	struct FName AttachSocketName; // 0x138(0x08)
	float HUDFadeInTime; // 0x140(0x04)
	float StateChangeDelayTime; // 0x144(0x04)
	float CurrentTelescopeFOV; // 0x148(0x04)
	int32_t CurrentArrayIndex; // 0x14c(0x04)
	bool bIsUsingTelescope; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
	struct UGPMarkingComponent* MarkingComponent; // 0x158(0x08)
	struct AGPCharacter* GPChar; // 0x160(0x08)
	char pad_168[0x20]; // 0x168(0x20)
	struct UAnimMontage* CurrentMontageTPP; // 0x188(0x08)
	struct UAnimMontage* CurrentMontageFPP; // 0x190(0x08)
	char pad_198[0x10]; // 0x198(0x10)
	struct UGPSkeletalMeshComponent* TelescopeMeshComp; // 0x1a8(0x08)
	struct USkeletalMesh* FPPTelescopeMesh; // 0x1b0(0x08)
	struct USkeletalMesh* TPPTelescopeMesh; // 0x1b8(0x08)
	struct FSoftObjectPath FPPTelescopeMeshPath; // 0x1c0(0x18)
	struct FSoftObjectPath TPPTelescopeMeshPath; // 0x1d8(0x18)

	void UseTelescope(); // Function DFMGameplay.DFMTelescopeComponent.UseTelescope // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x35e4a10
	void ToggleUseTelescope(bool bWantToUse); // Function DFMGameplay.DFMTelescopeComponent.ToggleUseTelescope // (Final|Native|Public|BlueprintCallable) // @ game+0x6301b90
	void SpectorUpdateHUD(struct FSpectTelescopeInfo& SpectTelescopeInfo); // Function DFMGameplay.DFMTelescopeComponent.SpectorUpdateHUD // (Final|Native|Public|HasOutParms) // @ game+0x63019a0
	void SetCurrentZoomRateArrayIndex(float Index_Float); // Function DFMGameplay.DFMTelescopeComponent.SetCurrentZoomRateArrayIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x6301680
	void ServerToggleFSMUseTelescope(); // Function DFMGameplay.DFMTelescopeComponent.ServerToggleFSMUseTelescope // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360c9a0
	void ServerChangeTelescopeInfo(bool bUsing); // Function DFMGameplay.DFMTelescopeComponent.ServerChangeTelescopeInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3677c20
	void ServerChangeTelescopeFOVState(bool bUsing); // Function DFMGameplay.DFMTelescopeComponent.ServerChangeTelescopeFOVState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35c8db0
	void ServerChangeSpectPlayerState(); // Function DFMGameplay.DFMTelescopeComponent.ServerChangeSpectPlayerState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x361c8e0
	void OnRep_IsUsingTelescopeChanged(); // Function DFMGameplay.DFMTelescopeComponent.OnRep_IsUsingTelescopeChanged // (Final|Native|Public) // @ game+0x6300e20
	float GetCurrentTelescopeFOV(); // Function DFMGameplay.DFMTelescopeComponent.GetCurrentTelescopeFOV // (Final|Native|Public|BlueprintCallable) // @ game+0x63007b0
	int32_t GetCurrentArrayIndex(); // Function DFMGameplay.DFMTelescopeComponent.GetCurrentArrayIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x6300780
	void DelayCloseZoomTips(); // Function DFMGameplay.DFMTelescopeComponent.DelayCloseZoomTips // (Final|Native|Private) // @ game+0x63005d0
	void CloseTelescope(); // Function DFMGameplay.DFMTelescopeComponent.CloseTelescope // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x35a3800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTGPAInfoComponent
// Size: 0x120 (Inherited: 0x100)
class UDFMTGPAInfoComponent : public UActorComponent {
public:

	float LastZoomRate; // 0x100(0x04)
	bool bInFiring; // 0x104(0x01)
	bool LastIsInFight; // 0x105(0x01)
	char pad_106[0x2]; // 0x106(0x02)
	struct ADFMCharacter* CHARACTER; // 0x108(0x08)
	bool bLastIsOpenBag; // 0x110(0x01)
	bool bLastIsLooting; // 0x111(0x01)
	bool bLastIsBlueprintHolder; // 0x112(0x01)
	bool bLastIsSeamLessEnterGame; // 0x113(0x01)
	struct TWeakObjectPtr<struct UHUDStateManager> HudStateMgr; // 0x114(0x08)
	char pad_11C[0x4]; // 0x11c(0x04)

	void UpdatePoiEnterExit(bool bInPOI); // Function DFMGameplay.DFMTGPAInfoComponent.UpdatePoiEnterExit // (Final|Native|Public) // @ game+0x6301c40
	void UpdateBlueprintPlunderState(); // Function DFMGameplay.DFMTGPAInfoComponent.UpdateBlueprintPlunderState // (Final|Native|Public) // @ game+0x6301c20
	void OnWeaponProcessEvent(struct AWeaponBase* Weapon, char RepInfo); // Function DFMGameplay.DFMTGPAInfoComponent.OnWeaponProcessEvent // (Final|Native|Public) // @ game+0x6301310
	void OnStartLocalFocus(struct ADFMCharacter* InCharacter); // Function DFMGameplay.DFMTGPAInfoComponent.OnStartLocalFocus // (Final|Native|Public) // @ game+0x6301270
	void OnLocalFocusChange(struct AActor* OldTarget, struct AActor* NewTarget); // Function DFMGameplay.DFMTGPAInfoComponent.OnLocalFocusChange // (Final|Native|Public) // @ game+0x6300d40
	void OnHudStateChange(); // Function DFMGameplay.DFMTGPAInfoComponent.OnHudStateChange // (Final|Native|Public) // @ game+0x6300d20
	void OnBlueprintPlunderInfoUpdate(struct FBlueprintPlunderInfo& BlueprintPlunderInfo); // Function DFMGameplay.DFMTGPAInfoComponent.OnBlueprintPlunderInfoUpdate // (Final|Native|Public|HasOutParms) // @ game+0x6300820
	void CharacterPOIChange(bool bInPOI); // Function DFMGameplay.DFMTGPAInfoComponent.CharacterPOIChange // (Final|Native|Public) // @ game+0x6300390
	void CharacterFightStateChange(bool bInFight); // Function DFMGameplay.DFMTGPAInfoComponent.CharacterFightStateChange // (Final|Native|Public) // @ game+0x6300300
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTGPASceneLogSystem
// Size: 0x48 (Inherited: 0x38)
class UDFMTGPASceneLogSystem : public UGameInstanceSubsystem {
public:

	bool bLastIsSeamLessEnterGame; // 0x38(0x01)
	char pad_39[0xf]; // 0x39(0x0f)

	void OnEnterGameFlowStage(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFMTGPASceneLogSystem.OnEnterGameFlowStage // (Final|Native|Private) // @ game+0x6300aa0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTieBreakerAudioComponent
// Size: 0x100 (Inherited: 0x100)
class UDFMTieBreakerAudioComponent : public UActorComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTieBreakerHealthComponent
// Size: 0x178 (Inherited: 0x100)
class UDFMTieBreakerHealthComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnDead[0x10]; // 0x100(0x10)
	/*struct FMulticastInlineDelegate*/char OnDamaged[0x10]; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)
	float MaxHealth; // 0x128(0x04)
	float CurrentHealth; // 0x12c(0x04)
	float MaxHPParam; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct TArray<struct FTieBrokenEffect> TieBrokenEffects; // 0x138(0x10)
	struct FTieBrokenPartActor TieBrokenPartInfo; // 0x148(0x20)
	uint64_t ExplodeDamageId; // 0x168(0x08)
	bool HPLockMode; // 0x170(0x01)
	bool bIsNeedExplode; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)

	void SetMaxHP(float MaxHP); // Function DFMGameplay.DFMTieBreakerHealthComponent.SetMaxHP // (Final|Native|Public|BlueprintCallable) // @ game+0x6306f70
	void SetHP(float HP); // Function DFMGameplay.DFMTieBreakerHealthComponent.SetHP // (Final|Native|Public|BlueprintCallable) // @ game+0x6306e70
	void OnRep_OnHealthChange(); // Function DFMGameplay.DFMTieBreakerHealthComponent.OnRep_OnHealthChange // (Final|Native|Protected) // @ game+0x63061a0
	float GetMaxHP(); // Function DFMGameplay.DFMTieBreakerHealthComponent.GetMaxHP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6305ad0
	float GetHPPercent(); // Function DFMGameplay.DFMTieBreakerHealthComponent.GetHPPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x63059f0
	float GetCurrentHP(); // Function DFMGameplay.DFMTieBreakerHealthComponent.GetCurrentHP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63057e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTODLevelSequenceActor
// Size: 0x7d8 (Inherited: 0x768)
class ADFMTODLevelSequenceActor : public ALevelSequenceActor {
public:

	struct FSoftObjectPath SkylightCapturePath; // 0x768(0x18)
	struct FSoftObjectPath ReflectionCapturePath; // 0x780(0x18)
	char pad_798[0x18]; // 0x798(0x18)
	bool bEnableTickInGame; // 0x7b0(0x01)
	char pad_7B1[0xb]; // 0x7b1(0x0b)
	struct TWeakObjectPtr<struct AGPPostEffectManager> PostEffectManager; // 0x7bc(0x08)
	struct FName AmbientLightMapGroup; // 0x7c4(0x08)
	struct FName AmbientLightMapGroupHD; // 0x7cc(0x08)
	char pad_7D4[0x4]; // 0x7d4(0x04)

	void SetupFogMesh(); // Function DFMGameplay.DFMTODLevelSequenceActor.SetupFogMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x63072f0
	void SetTODSystemRunningStatus(bool Status, bool bChangeSkyboxStatus, struct UClass* ActorClassToSwitchStatus, struct FString ActorNameToSwitchStatus); // Function DFMGameplay.DFMTODLevelSequenceActor.SetTODSystemRunningStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6307110
	void SetSequenceManagerRunningStatus(bool Status); // Function DFMGameplay.DFMTODLevelSequenceActor.SetSequenceManagerRunningStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6306ff0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTODLightingActor
// Size: 0x3a0 (Inherited: 0x378)
class ADFMTODLightingActor : public AActor {
public:

	bool bCleanTagInPC; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct FString DefaultTag; // 0x380(0x10)
	struct FString PreMobileTag; // 0x390(0x10)

	void BP_RefreshTODLight(); // Function DFMGameplay.DFMTODLightingActor.BP_RefreshTODLight // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTODSubSystem
// Size: 0x188 (Inherited: 0x38)
class UDFMTODSubSystem : public UGameInstanceSubsystem {
public:

	struct TMap<struct ADFMTODLevelSequenceActor*, int64_t> SequencerManagerMap; // 0x38(0x50)
	struct FSoftObjectPath TODSubLevelSequenceTablePath; // 0x88(0x18)
	char pad_A0[0x98]; // 0xa0(0x98)
	struct TMap<struct FSoftObjectPath, struct ALevelSequenceActor*> EffectSequence; // 0x138(0x50)

	void TransToNewWeather(int64_t& InWeatherId); // Function DFMGameplay.DFMTODSubSystem.TransToNewWeather // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63073e0
	void SetSequenceManagerRunningStatus(bool Status); // Function DFMGameplay.DFMTODSubSystem.SetSequenceManagerRunningStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6307080
	void OnLoadTODSubLevelSequenceTableCompelete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMTODSubSystem.OnLoadTODSubLevelSequenceTableCompelete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6306080
	void OnLoadTODSettingsTableFinished(struct TArray<struct FSoftObjectPath> Assets); // Function DFMGameplay.DFMTODSubSystem.OnLoadTODSettingsTableFinished // (Final|Native|Protected) // @ game+0x6305ef0
	void OnGameFlowLeave(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFMTODSubSystem.OnGameFlowLeave // (Final|Native|Protected) // @ game+0xe7b0f0
	void OnGameFlowEnter(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFMTODSubSystem.OnGameFlowEnter // (Final|Native|Protected) // @ game+0x6305e70
	void OnClientPlayerMatchOver(enum class EMatchOverReason& MatchOverReason); // Function DFMGameplay.DFMTODSubSystem.OnClientPlayerMatchOver // (Final|Native|Protected|HasOutParms) // @ game+0x6305de0
	void GMTransToNewWeather(int64_t InWeatherId); // Function DFMGameplay.DFMTODSubSystem.GMTransToNewWeather // (Final|Native|Public|BlueprintCallable) // @ game+0x63055d0
	struct TArray<struct FString> GetEnableVolumeKeyArr(); // Function DFMGameplay.DFMTODSubSystem.GetEnableVolumeKeyArr // (Final|Native|Public|BlueprintCallable) // @ game+0x6305920
	int32_t STATIC_GetEditorOnlyCurrentWeatherID(); // Function DFMGameplay.DFMTODSubSystem.GetEditorOnlyCurrentWeatherID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6305900
	struct FName STATIC_GetEditorOnlyCurrentCurAddLightParms(); // Function DFMGameplay.DFMTODSubSystem.GetEditorOnlyCurrentCurAddLightParms // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63058e0
	struct TArray<struct FString> STATIC_GetEditorEnableVolumeKeyArr(); // Function DFMGameplay.DFMTODSubSystem.GetEditorEnableVolumeKeyArr // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6305810
	int64_t GetCurWeatherID(); // Function DFMGameplay.DFMTODSubSystem.GetCurWeatherID // (Final|Native|Public|BlueprintCallable) // @ game+0x63057c0
	struct FName GetCharacterTODLightParmsFactor(); // Function DFMGameplay.DFMTODSubSystem.GetCharacterTODLightParmsFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x63056e0
	struct UDFMTODSubSystem* STATIC_Get(); // Function DFMGameplay.DFMTODSubSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6305650
	void STATIC_EditorApplyWeatherSubSequence(struct FString WeatherID); // Function DFMGameplay.DFMTODSubSystem.EditorApplyWeatherSubSequence // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63054c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMVehicleMarkerItem
// Size: 0x6c0 (Inherited: 0x6b0)
class UDFMVehicleMarkerItem : public UGPVehicleMarkerItem {
public:

	char pad_6B0[0x10]; // 0x6b0(0x10)

	void OnVehicleTakeHit(struct AActor* DamageMaker, struct AActor* DamageTaker); // Function DFMGameplay.DFMVehicleMarkerItem.OnVehicleTakeHit // (Final|Native|Public) // @ game+0x63062e0
	void OnShowHealthBarTimeEnd(); // Function DFMGameplay.DFMVehicleMarkerItem.OnShowHealthBarTimeEnd // (Final|Native|Public) // @ game+0x63061c0
	void OnBreakthroughBroadcastShowMarkerTimerHandleEnd(); // Function DFMGameplay.DFMVehicleMarkerItem.OnBreakthroughBroadcastShowMarkerTimerHandleEnd // (Final|Native|Public) // @ game+0x6305dc0
	void OnBreakthroughBroadcastShowMarker(enum class EBreakthroughBroadcastMarkerType& BreakthroughBroadcastMarkerType, struct TArray<struct AActor*>& MarkedItems, float ShowTime); // Function DFMGameplay.DFMVehicleMarkerItem.OnBreakthroughBroadcastShowMarker // (Final|Native|Public|HasOutParms) // @ game+0x6305c50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterRippleEffectDataTableManager
// Size: 0x48 (Inherited: 0x38)
class UDFMWaterRippleEffectDataTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterInteractionManager
// Size: 0x430 (Inherited: 0x378)
class ADFMWaterInteractionManager : public AActor {
public:

	float IntervalToCheckWaterDistance; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct TMap<enum class EDFMWaterInteractionType, struct FDFMWaterInteractionConfig> WaterInteractionConfigs; // 0x380(0x50)
	float CaptureHeight; // 0x3d0(0x04)
	float FlipScale; // 0x3d4(0x04)
	struct UParticleRenderComponent2D* RenderComponent1; // 0x3d8(0x08)
	struct UParticleRenderComponent2D* RenderComponent2; // 0x3e0(0x08)
	char pad_3E8[0x20]; // 0x3e8(0x20)
	struct TArray<struct AActor*> ShowOnlyActors; // 0x408(0x10)
	struct TArray<struct ADFMWaterRippleEffect*> RippleEffectPool; // 0x418(0x10)
	char pad_428[0x8]; // 0x428(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterInteractionSettings
// Size: 0x58 (Inherited: 0x40)
class UDFMWaterInteractionSettings : public UDeveloperSettings {
public:

	struct UClass* WaterInteractionManagerClass; // 0x40(0x08)
	float MinDistanceToDisableWaterInteraction; // 0x48(0x04)
	float MaxDistanceToKeepRippleEffect; // 0x4c(0x04)
	float MaxDistanceToDrawVehicleWaterMask; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterInteractionSubsystem
// Size: 0x40 (Inherited: 0x38)
class UDFMWaterInteractionSubsystem : public UWorldSubsystem {
public:

	struct ADFMWaterInteractionManager* WaterInteractionManager; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterInteractionUtil
// Size: 0x30 (Inherited: 0x30)
class UDFMWaterInteractionUtil : public UBlueprintFunctionLibrary {
public:


	void STATIC_StopRippleEffect(struct UObject* WorldContextObject, struct ADFMWaterRippleEffect* RippleEffect); // Function DFMGameplay.DFMWaterInteractionUtil.StopRippleEffect // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6307330
	struct ADFMWaterRippleEffect* STATIC_PlayRippleEffect(struct UObject* WorldContextObject, struct FName& EffectId, struct AActor* Target, struct FTransform& RelativeTransform); // Function DFMGameplay.DFMWaterInteractionUtil.PlayRippleEffect // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6306500
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterMaskActor
// Size: 0x388 (Inherited: 0x378)
class ADFMWaterMaskActor : public AActor {
public:

	struct UStaticMeshComponent* MaskMeshComp; // 0x378(0x08)
	struct AActor* Target; // 0x380(0x08)

	void OnTargetDestroyed(struct AActor* DestroyedActor); // Function DFMGameplay.DFMWaterMaskActor.OnTargetDestroyed // (Final|Native|Protected) // @ game+0x63061e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWaterRippleEffect
// Size: 0x3a8 (Inherited: 0x378)
class ADFMWaterRippleEffect : public AActor {
public:

	struct UParticleSystemComponent* RippleEffect; // 0x378(0x08)
	char pad_380[0x10]; // 0x380(0x10)
	struct AActor* Target; // 0x390(0x08)
	char pad_398[0x10]; // 0x398(0x10)

	void Stop(); // Function DFMGameplay.DFMWaterRippleEffect.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x6307310
	void Play(struct FName EffectId, struct AActor* AttachParent, struct FTransform& AttachTransform); // Function DFMGameplay.DFMWaterRippleEffect.Play // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x63063a0
	void OnTargetDestroyed(struct AActor* DestroyedActor); // Function DFMGameplay.DFMWaterRippleEffect.OnTargetDestroyed // (Final|Native|Protected) // @ game+0x6306260
	void OnReadyToStop(); // Function DFMGameplay.DFMWaterRippleEffect.OnReadyToStop // (Final|Native|Protected) // @ game+0x6306180
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMilitaryPropsAnimInstance
// Size: 0xa80 (Inherited: 0x280)
class UDFMilitaryPropsAnimInstance : public UGPMilitaryPropsAnimInstance {
public:

	struct FDFMilitaryPropsAnimInstanceProxy LocalProxy; // 0x280(0x7d0)
	float EnterPointOffset; // 0xa50(0x04)
	float MoveToPointOffset; // 0xa54(0x04)
	float RotationSpeed; // 0xa58(0x04)
	float MaxRotationYaw; // 0xa5c(0x04)
	float MaxRotationPitch; // 0xa60(0x04)
	struct FName EnterMontageName; // 0xa64(0x08)
	struct FName ExitMontageName; // 0xa6c(0x08)
	float MeshYawOffset; // 0xa74(0x04)
	char pad_A78[0x8]; // 0xa78(0x08)

	void SetMaxRotationYaw(float InMaxRotationYaw); // Function DFMGameplay.DFMilitaryPropsAnimInstance.SetMaxRotationYaw // (Final|Native|Public|BlueprintCallable) // @ game+0x630bc10
	struct FTransform GetMoveToPoint(float Z); // Function DFMGameplay.DFMilitaryPropsAnimInstance.GetMoveToPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x630b1b0
	float GetMaxRotationYaw(); // Function DFMGameplay.DFMilitaryPropsAnimInstance.GetMaxRotationYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x630b180
	struct FTransform GetEnterPoint(float Z); // Function DFMGameplay.DFMilitaryPropsAnimInstance.GetEnterPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x630b0d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTigerDataComponentAnim
// Size: 0xab0 (Inherited: 0xab0)
class UDFMTigerDataComponentAnim : public UModularWeaponDataComponentAnim {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponCompositeMeshManager
// Size: 0x3d0 (Inherited: 0x3d0)
class UDFMWeaponCompositeMeshManager : public UModularWeaponCompositeMeshManager {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponDataAnalysisComponent
// Size: 0x240 (Inherited: 0x100)
class UDFMWeaponDataAnalysisComponent : public UActorComponent {
public:

	char pad_100[0x140]; // 0x100(0x140)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponDataComponentAmmo_Item
// Size: 0xd28 (Inherited: 0x770)
class UDFMWeaponDataComponentAmmo_Item : public UWeaponDataComponentAmmo {
public:

	struct FAmmoContext CurrentAmmoData; // 0x770(0x10)
	int32_t CacheCarriedAmmoNum; // 0x780(0x04)
	char pad_784[0x55c]; // 0x784(0x55c)
	enum class EPendingReloadType PendingReloadType; // 0xce0(0x01)
	char pad_CE1[0x7]; // 0xce1(0x07)
	struct UWeaponFuncComponentSpread* FuncSpread; // 0xce8(0x08)
	struct TArray<struct FAmmoDataItem> CurReloadParam; // 0xcf0(0x10)
	enum class EGPWeaponChangeClipMode ChangeClipMode; // 0xd00(0x01)
	char pad_D01[0x3]; // 0xd01(0x03)
	int32_t CurReloadAmmoIndex; // 0xd04(0x04)
	bool bConsumeAmmo; // 0xd08(0x01)
	char pad_D09[0x7]; // 0xd09(0x07)
	struct FAddAttributeArrayHandle AddAttributeArrayHandle; // 0xd10(0x10)
	uint64_t LastAmmoId; // 0xd20(0x08)

	void UpdateCacheCarriedAmmoCount(); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.UpdateCacheCarriedAmmoCount // (Final|Native|Protected) // @ game+0x630bda0
	void ServerSetPendingReloadType(enum class EPendingReloadType ReloadType); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.ServerSetPendingReloadType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4906380
	void ServerSelectPendingReloadAmmoByGid(struct FInventoryItemInfo ItemInfo); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.ServerSelectPendingReloadAmmoByGid // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x630bb30
	void ServerSelectAmmoByRoulette(uint64_t SelectAmmoByRoulette); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.ServerSelectAmmoByRoulette // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf510
	void OnServerItemMoveNotify(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.OnServerItemMoveNotify // (Final|Native|Protected) // @ game+0x630b710
	void OnRep_CarriedAmmo(int32_t& PreCarriedAmmoNum); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.OnRep_CarriedAmmo // (Final|Native|Protected|HasOutParms) // @ game+0x630b5f0
	void OnRep_AmmoData(); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.OnRep_AmmoData // (Final|Native|Protected) // @ game+0x630b5d0
	void NotifyClientSelectPendingReloadAmmoByGid(struct FInventoryItemInfo ItemInfo, struct AWeaponBase* Weapon, enum class EPendingReloadType InPendingReloadType); // Function DFMGameplay.DFMWeaponDataComponentAmmo_Item.NotifyClientSelectPendingReloadAmmoByGid // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x630b470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponDataComponentDamage
// Size: 0x698 (Inherited: 0x698)
class UDFMWeaponDataComponentDamage : public UGPWeaponDataComponentDamage {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FWeaponFunctionConfigForGameModeManager
// Size: 0x48 (Inherited: 0x38)
class UFWeaponFunctionConfigForGameModeManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponDependentImpl
// Size: 0x38 (Inherited: 0x30)
class UDFMWeaponDependentImpl : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPreviewWeapon
// Size: 0x430 (Inherited: 0x378)
class ADFMPreviewWeapon : public AActor {
public:

	uint32_t ItemID; // 0x378(0x04)
	char pad_37C[0x54]; // 0x37c(0x54)
	struct USkeletalMeshComponent* AssembledWeapon; // 0x3d0(0x08)
	struct TMap<struct FString, struct USkeletalMeshComponent*> MeshPathToComponentMap; // 0x3d8(0x50)
	char pad_428[0x8]; // 0x428(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWidgetComponent
// Size: 0x820 (Inherited: 0x800)
class UDFMWidgetComponent : public UWidgetComponent {
public:

	float ScreenOffset; // 0x800(0x04)
	float HeadHeight; // 0x804(0x04)
	struct FName BindBoneName; // 0x808(0x08)
	struct UParticleSystem* PSSameCamp; // 0x810(0x08)
	char pad_818[0x8]; // 0x818(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWidgetComponentInvalidate
// Size: 0x800 (Inherited: 0x800)
class UDFMWidgetComponentInvalidate : public UWidgetComponent {
public:


	void InvalidateLayer(); // Function DFMGameplay.DFMWidgetComponentInvalidate.InvalidateLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x630b400
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWorldSettings
// Size: 0x790 (Inherited: 0x728)
class ADFMWorldSettings : public AGPWorldSettings {
public:

	int32_t MapType; // 0x728(0x04)
	int32_t MapType_HD; // 0x72c(0x04)
	struct UDataTable* PreloadTable; // 0x730(0x08)
	int64_t WeatherID; // 0x738(0x08)
	uint64_t DeadbodyAmmoBoxConfigId; // 0x740(0x08)
	struct FName GameMapId; // 0x748(0x08)
	struct FName GameMapID_HD; // 0x750(0x08)
	bool IsOpenAILabDebug; // 0x758(0x01)
	bool IsConnectAISvr; // 0x759(0x01)
	char pad_75A[0x2]; // 0x75a(0x02)
	struct FName AILabDownStreamIp; // 0x75c(0x08)
	int32_t AILabDownPort; // 0x764(0x04)
	uint64_t AILabMapId; // 0x768(0x08)
	uint32_t AIDropDebugId; // 0x770(0x04)
	char pad_774[0x4]; // 0x774(0x04)
	struct TArray<int32_t> HolidayIDs; // 0x778(0x10)
	bool bEnableEditorHolidayID; // 0x788(0x01)
	char pad_789[0x7]; // 0x789(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DialogStateMachine
// Size: 0x80 (Inherited: 0x30)
class UDialogStateMachine : public UObject {
public:

	struct TArray<struct UDialogStateNode*> NodeList; // 0x30(0x10)
	struct TArray<int64_t> DialogActionList; // 0x40(0x10)
	struct TArray<int64_t> GroupActionList; // 0x50(0x10)
	struct TArray<struct FName> FocusNPCNames; // 0x60(0x10)
	/*struct FMulticastInlineDelegate*/char OnDialogueAutoComplete[0x10]; // 0x70(0x10)

	void OnStateExecuteComplete(); // Function DFMGameplay.DialogStateMachine.OnStateExecuteComplete // (Final|Native|Protected) // @ game+0x630b870
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaAISpawnComponent
// Size: 0x2b0 (Inherited: 0x240)
class UDramaAISpawnComponent : public USceneComponent {
public:

	char pad_240[0x14]; // 0x240(0x14)
	int32_t DefaultSpawnStart; // 0x254(0x04)
	int32_t DefaultSpawnEnd; // 0x258(0x04)
	int32_t DefaultSpawnCountLimit; // 0x25c(0x04)
	struct FName NpcName; // 0x260(0x08)
	struct TArray<struct FDramaAISpawnInfo> npcNames; // 0x268(0x10)
	struct UDataTable* NpcTemplateTable; // 0x278(0x08)
	bool bForceSpawn; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float ForceDistance; // 0x284(0x04)
	struct AAISpawnChecker* SpawnChecker; // 0x288(0x08)
	struct ADramaArea* ParentDramaArea; // 0x290(0x08)
	int32_t LastSpawnedDifficulty; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	/*struct FMulticastInlineDelegate*/char OnSpawnEnd[0x10]; // 0x2a0(0x10)

	void StartSpawnWithTransform(struct FTransform Transform); // Function DFMGameplay.DramaAISpawnComponent.StartSpawnWithTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63100d0
	void StartSpawn(int32_t Difficulty); // Function DFMGameplay.DramaAISpawnComponent.StartSpawn // (Final|Native|Public|BlueprintCallable) // @ game+0x6310050
	void SetSpawnData(int32_t SpawnStart, int32_t SpawnEnd, int32_t SpawnCountLimit); // Function DFMGameplay.DramaAISpawnComponent.SetSpawnData // (Final|Native|Public|BlueprintCallable) // @ game+0x630fdc0
	void SetRespawnPosibility(float Percentage); // Function DFMGameplay.DramaAISpawnComponent.SetRespawnPosibility // (Final|Native|Public|BlueprintCallable) // @ game+0x630fd40
	void OnAICheckerSpawnEnd(struct AAISpawnChecker* SpawnChecker); // Function DFMGameplay.DramaAISpawnComponent.OnAICheckerSpawnEnd // (Final|Native|Public) // @ game+0x630f470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaActingCustomInterface
// Size: 0x30 (Inherited: 0x30)
class UDramaActingCustomInterface : public UInterface {
public:


	void UnBindDramaArea(); // Function DFMGameplay.DramaActingCustomInterface.UnBindDramaArea // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x928210
	void SetStandaloneDramaMontages(struct TMap<struct FName, struct UAnimMontage*>& Montages); // Function DFMGameplay.DramaActingCustomInterface.SetStandaloneDramaMontages // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x630fec0
	void SetStandaloneDramaBTAsset(struct UBehaviorTree* BTAsset); // Function DFMGameplay.DramaActingCustomInterface.SetStandaloneDramaBTAsset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x36ad760
	void SetDramaBehaviorNeedRestart(bool isNeedRestart); // Function DFMGameplay.DramaActingCustomInterface.SetDramaBehaviorNeedRestart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x49145f0
	void OnUnBindDramaArea(struct ADramaArea* DramaArea); // Function DFMGameplay.DramaActingCustomInterface.OnUnBindDramaArea // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174ae30
	void OnBindDramaArea(struct ADramaArea* DramaArea); // Function DFMGameplay.DramaActingCustomInterface.OnBindDramaArea // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x89f670
	bool IsStandaloneDrama(); // Function DFMGameplay.DramaActingCustomInterface.IsStandaloneDrama // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1761400
	bool IsDramaBehaviorNeedRestart(); // Function DFMGameplay.DramaActingCustomInterface.IsDramaBehaviorNeedRestart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x92e3d0
	bool IsDramaActing(enum class EAIDramaPriority Priority); // Function DFMGameplay.DramaActingCustomInterface.IsDramaActing // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x630f3e0
	struct UBehaviorTree* GetDramaBTAsset(); // Function DFMGameplay.DramaActingCustomInterface.GetDramaBTAsset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174a500
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaDebugInterface
// Size: 0x30 (Inherited: 0x30)
class UDramaDebugInterface : public UInterface {
public:


	float GetDramaDebugLineWidth(); // Function DFMGameplay.DramaDebugInterface.GetDramaDebugLineWidth // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x630ecb0
	enum class EAIDramaDebugLineType GetDramaDebugLineType(); // Function DFMGameplay.DramaDebugInterface.GetDramaDebugLineType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1036840
	struct FLinearColor GetDramaDebugLineColor(); // Function DFMGameplay.DramaDebugInterface.GetDramaDebugLineColor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x630ec70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIHearingModifyVolume
// Size: 0x3a8 (Inherited: 0x380)
class AAIHearingModifyVolume : public ATriggerBox {
public:

	float WeaponSoundDistance; // 0x380(0x04)
	float NearShootGunSoundDistance; // 0x384(0x04)
	float SilencerSoundDistance; // 0x388(0x04)
	float SprintSoundDistance; // 0x38c(0x04)
	float RunSoundDistance; // 0x390(0x04)
	float WalkSoundDistance; // 0x394(0x04)
	float OperateSoundDistance; // 0x398(0x04)
	float ExplodeSoundDistance; // 0x39c(0x04)
	float VehicleSoundDistance; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)

	void OnVolumeEndOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.AIHearingModifyVolume.OnVolumeEndOverlap // (Final|Native|Public) // @ game+0x630fb70
	void OnVolumeBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.AIHearingModifyVolume.OnVolumeBeginOverlap // (Final|Native|Public) // @ game+0x630fab0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RoleSeeker
// Size: 0x378 (Inherited: 0x378)
class ARoleSeeker : public AActor {
public:


	float EvaluateAIScore(struct ADramaScript* DramaStarring, enum class EDramaRole AsRole, struct AAIController* WhichAI); // Function DFMGameplay.RoleSeeker.EvaluateAIScore // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaRoleComponent
// Size: 0x5c0 (Inherited: 0x570)
class UDramaRoleComponent : public UArrowComponent {
public:

	/*struct TSoftObjectPtr<UBehaviorTree>*/char LinkedBTAsset[0x28]; // 0x570(0x28)
	enum class EDramaRole ActAs; // 0x598(0x01)
	char pad_599[0x7]; // 0x599(0x07)
	struct UClass* Seeker; // 0x5a0(0x08)
	struct ARoleSeeker* XSeeker; // 0x5a8(0x08)
	struct AAIController* BoundAIController; // 0x5b0(0x08)
	char pad_5B8[0x8]; // 0x5b8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaScriptSetting
// Size: 0x118 (Inherited: 0x100)
class UDramaScriptSetting : public UActorComponent {
public:

	struct FString DramaScriptName; // 0x100(0x10)
	char AsRole; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DroneFlightPathSpline
// Size: 0x380 (Inherited: 0x378)
class ADroneFlightPathSpline : public AActor {
public:

	struct USplineComponent* FlightPath; // 0x378(0x08)

	void Test(); // Function DFMGameplay.DroneFlightPathSpline.Test // (Final|Native|Public) // @ game+0x63101c0
	float GetWholeDistance(); // Function DFMGameplay.DroneFlightPathSpline.GetWholeDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x630f350
	struct FTransform GetTransformByDistance(float Distance); // Function DFMGameplay.DroneFlightPathSpline.GetTransformByDistance // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x630f2a0
	float GetStraightDistance(); // Function DFMGameplay.DroneFlightPathSpline.GetStraightDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x630f270
	float CalcSplineRelativeScale(float StraightDistance); // Function DFMGameplay.DroneFlightPathSpline.CalcSplineRelativeScale // (Final|Native|Public|BlueprintCallable) // @ game+0x630eab0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnterMovePath
// Size: 0x3a8 (Inherited: 0x378)
class AEnterMovePath : public AActor {
public:

	struct FVector DefaultOffset; // 0x378(0x0c)
	struct FRotator DefaultRotationOffset; // 0x384(0x0c)
	struct UCurveFloat* CurveFloat; // 0x390(0x08)
	float PathFlyTime; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct USplineComponent* Spline; // 0x3a0(0x08)

	struct USplineComponent* GetSpline(); // Function DFMGameplay.EnterMovePath.GetSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x6313a40
	void AdjustTransformToFitPlayerStart_BP(struct FRotator WorldRotator, struct FVector WorldLocation); // Function DFMGameplay.EnterMovePath.AdjustTransformToFitPlayerStart_BP // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvManageSubsystem
// Size: 0xc0 (Inherited: 0x38)
class UEnvManageSubsystem : public UWorldSubsystem {
public:

	char pad_38[0x88]; // 0x38(0x88)

	bool ReturnSpecialPos(struct FSpecialPosInfo& LastSpecialPos); // Function DFMGameplay.EnvManageSubsystem.ReturnSpecialPos // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6314490
	bool GetNearestSpecialPos_Angle(struct FSpecialPosInfo LastSpecialPos, struct ACHARACTER* CHARACTER, float MaxDistance, struct TArray<struct FAngleRange> AngleRanges, struct FSpecialPosInfo& OutSpecialPos); // Function DFMGameplay.EnvManageSubsystem.GetNearestSpecialPos_Angle // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63137e0
	struct UEnvManageSubsystem* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.EnvManageSubsystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6313720
	void AddSpecialPos(struct AEnvSpecialPos* SpecialPos); // Function DFMGameplay.EnvManageSubsystem.AddSpecialPos // (Final|Native|Public|BlueprintCallable) // @ game+0x6313520
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryContext_BlackBoardActor
// Size: 0x38 (Inherited: 0x30)
class UEnvQueryContext_BlackBoardActor : public UEnvQueryContext {
public:

	struct FName BlackboardKey; // 0x30(0x08)

	bool BP_ProvideContext(struct AActor* QueryOwner, struct TArray<struct AActor*>& OutActors); // Function DFMGameplay.EnvQueryContext_BlackBoardActor.BP_ProvideContext // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryContext_BlackBoardActorLocation
// Size: 0x38 (Inherited: 0x30)
class UEnvQueryContext_BlackBoardActorLocation : public UEnvQueryContext {
public:

	struct FName BlackboardKey; // 0x30(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryContext_QuerierNavLoc
// Size: 0x38 (Inherited: 0x30)
class UEnvQueryContext_QuerierNavLoc : public UEnvQueryContext {
public:

	float ProjRangeXY; // 0x30(0x04)
	float ProjRangeZ; // 0x34(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryGenerator_SpecifyAngleCone
// Size: 0x1c0 (Inherited: 0x88)
class UEnvQueryGenerator_SpecifyAngleCone : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct UClass* CenterActor; // 0x88(0x08)
	struct UClass* GoalActor; // 0x90(0x08)
	char bIncludeContextLocation : 1; // 0x98(0x01)
	char pad_98_1 : 7; // 0x98(0x01)
	enum class EInAllDirection OffsetDirection; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	struct FVector offset; // 0x9c(0x0c)
	struct FAIDataProviderFloatValue ConeDegrees; // 0xa8(0x38)
	struct FAIDataProviderFloatValue AngleStep; // 0xe0(0x38)
	struct FAIDataProviderFloatValue Range; // 0x118(0x38)
	struct FAIDataProviderFloatValue AlignedPointsDistance; // 0x150(0x38)
	struct FAIDataProviderFloatValue IncreaseRate; // 0x188(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_AvoidGrenade
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_AvoidGrenade : public UEnvQueryTest {
public:

	float MaxAvoidRadius; // 0x200(0x04)
	char pad_204[0x4]; // 0x204(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_AvoidOtherBot
// Size: 0x230 (Inherited: 0x200)
class UEnvQueryTest_AvoidOtherBot : public UEnvQueryTest {
public:

	enum class EEnvTestDistance TestMode; // 0x200(0x01)
	char pad_201[0x3]; // 0x201(0x03)
	float MaxAvoidRadius; // 0x204(0x04)
	float MaxAvoidSeconds; // 0x208(0x04)
	float MaxAvoidAngleDot; // 0x20c(0x04)
	float MaxAvoidAngleRadius; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
	struct UClass* TesterContext; // 0x218(0x08)
	struct FName AvoidTag; // 0x220(0x08)
	bool bFastMode; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_AvoidThreatVehical
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_AvoidThreatVehical : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_BasicCoverCheck
// Size: 0x220 (Inherited: 0x200)
class UEnvQueryTest_BasicCoverCheck : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float ZOffset_Stand; // 0x208(0x04)
	float ZOffset_Crounch; // 0x20c(0x04)
	bool bDrawDebug; // 0x210(0x01)
	char pad_211[0x7]; // 0x211(0x07)
	struct UCurveFloat* DistToObstaclePointScore; // 0x218(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_BasicVisibilityCheck
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_BasicVisibilityCheck : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	bool bDrawDebug; // 0x208(0x01)
	char pad_209[0x7]; // 0x209(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_BestFightAngle
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_BestFightAngle : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float BestAngle; // 0x208(0x04)
	char pad_20C[0x4]; // 0x20c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_BestFightDistance
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_BestFightDistance : public UEnvQueryTest {
public:

	struct UClass* DistanceTo; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_ConstantDist
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_ConstantDist : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_CosAngle
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_CosAngle : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float BeatCosPrefer; // 0x208(0x04)
	char pad_20C[0x4]; // 0x20c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEnvQueryTest_DistanceDiff
// Size: 0x248 (Inherited: 0x200)
class UGPEnvQueryTest_DistanceDiff : public UEnvQueryTest {
public:

	enum class EAITestDistanceType TestDistanceMode; // 0x200(0x01)
	char pad_201[0x7]; // 0x201(0x07)
	struct UClass* DistanceTo; // 0x208(0x08)
	struct FAIDataProviderFloatValue TargetDistanceValue; // 0x210(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_DistanceWithDynamicScoreFactor
// Size: 0x230 (Inherited: 0x210)
class UEnvQueryTest_DistanceWithDynamicScoreFactor : public UEnvQueryTest_Distance {
public:

	struct FName BoolBBName; // 0x210(0x08)
	float BigScoreFactor; // 0x218(0x04)
	float SmallScoreFactor; // 0x21c(0x04)
	bool UseNavMeshPathDistance; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	struct UClass* FilterClass; // 0x228(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_DistToZone
// Size: 0x200 (Inherited: 0x200)
class UEnvQueryTest_DistToZone : public UEnvQueryTest {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_FindWall
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_FindWall : public UEnvQueryTest {
public:

	float MaxAroundRadius; // 0x200(0x04)
	char pad_204[0x4]; // 0x204(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_IsFlatGround
// Size: 0x200 (Inherited: 0x200)
class UEnvQueryTest_IsFlatGround : public UEnvQueryTest {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_IsPolyNarrowLane
// Size: 0x200 (Inherited: 0x200)
class UEnvQueryTest_IsPolyNarrowLane : public UEnvQueryTest {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_LineOfSight
// Size: 0x228 (Inherited: 0x200)
class UEnvQueryTest_LineOfSight : public UEnvQueryTest {
public:

	struct UClass* QuerierContext; // 0x200(0x08)
	struct UClass* TesterContext; // 0x208(0x08)
	enum class EDrawDebugTrace DrawType; // 0x210(0x01)
	bool bPreferCover; // 0x211(0x01)
	bool bTesterSightToItem; // 0x212(0x01)
	char pad_213[0x1]; // 0x213(0x01)
	float Width; // 0x214(0x04)
	float StandHeight; // 0x218(0x04)
	float CrouchHeight; // 0x21c(0x04)
	bool bTestCrouch; // 0x220(0x01)
	bool bCheckFoliage; // 0x221(0x01)
	char pad_222[0x6]; // 0x222(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_NavRayCheck
// Size: 0x208 (Inherited: 0x200)
class UEnvQueryTest_NavRayCheck : public UEnvQueryTest {
public:

	struct UClass* FilterClass; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_NearCover
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_NearCover : public UEnvQueryTest {
public:

	struct UClass* QuerierContext; // 0x200(0x08)
	enum class EDrawDebugTrace DrawType; // 0x208(0x01)
	char pad_209[0x7]; // 0x209(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_PathfindingStraightBatch
// Size: 0x2c0 (Inherited: 0x200)
class UEnvQueryTest_PathfindingStraightBatch : public UEnvQueryTest {
public:

	enum class EEnvTestPathfindingStraightBatch TestMode; // 0x200(0x01)
	char pad_201[0x7]; // 0x201(0x07)
	struct UClass* Context; // 0x208(0x08)
	struct FAIDataProviderBoolValue PathFromContext; // 0x210(0x38)
	struct FAIDataProviderBoolValue SkipUnreachable; // 0x248(0x38)
	struct UClass* FilterClass; // 0x280(0x08)
	struct FAIDataProviderFloatValue ScanRangeMultiplier; // 0x288(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_ShootBlock
// Size: 0x220 (Inherited: 0x200)
class UEnvQueryTest_ShootBlock : public UEnvQueryTest {
public:

	struct UClass* QuerierContext; // 0x200(0x08)
	struct UClass* TargetContext; // 0x208(0x08)
	enum class EDrawDebugTrace DrawType; // 0x210(0x01)
	bool bPreferBlock; // 0x211(0x01)
	bool bTargetToItem; // 0x212(0x01)
	char pad_213[0x1]; // 0x213(0x01)
	float WidthMargin; // 0x214(0x04)
	bool bNearCover; // 0x218(0x01)
	char pad_219[0x7]; // 0x219(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_SpecialDist
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_SpecialDist : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float SpecialDist; // 0x208(0x04)
	char pad_20C[0x4]; // 0x20c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvQueryTest_SurroundingVisibilityCheck
// Size: 0x210 (Inherited: 0x200)
class UEnvQueryTest_SurroundingVisibilityCheck : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	bool bDrawDebug; // 0x208(0x01)
	char pad_209[0x7]; // 0x209(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvSpecialPosComponent
// Size: 0x240 (Inherited: 0x240)
class UEnvSpecialPosComponent : public USceneComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EnvSpecialPos
// Size: 0x390 (Inherited: 0x378)
class AEnvSpecialPos : public AActor {
public:

	struct TArray<struct FSpecialPosInfo> SpecialPosInfos; // 0x378(0x10)
	bool bIsInit; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)

	void RefreshSpecialPos(); // Function DFMGameplay.EnvSpecialPos.RefreshSpecialPos // (Final|Native|Public|BlueprintCallable) // @ game+0x6314470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EquipComponentManager
// Size: 0x90 (Inherited: 0x30)
class UEquipComponentManager : public UObject {
public:

	struct AActor* Owner; // 0x30(0x08)
	struct TMap<enum class EEquipmentType, struct UActorComponent*> EquipComps; // 0x38(0x50)
	char pad_88[0x8]; // 0x88(0x08)

	void ShowSeamless(); // Function DFMGameplay.EquipComponentManager.ShowSeamless // (Final|Native|Public) // @ game+0x63149f0
	void OnUnequip(enum class EEquipmentType EquipType, uint64_t ItemID); // Function DFMGameplay.EquipComponentManager.OnUnequip // (Final|Native|Public) // @ game+0x6314390
	void OnEquip(enum class EEquipmentType EquipType, uint64_t ItemID); // Function DFMGameplay.EquipComponentManager.OnEquip // (Final|Native|Public) // @ game+0x6313e10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EquipmentAdaptationComponent
// Size: 0x150 (Inherited: 0x100)
class UEquipmentAdaptationComponent : public UActorComponent {
public:

	struct TArray<uint32_t> HeadPartEquipmentsAdpationCompare; // 0x100(0x10)
	struct TArray<uint32_t> EquipmentTopHeadPrioritys; // 0x110(0x10)
	struct TArray<uint32_t> EquipmentFacePrioritys; // 0x120(0x10)
	struct TArray<uint32_t> EquipmentEarPrioritys; // 0x130(0x10)
	struct TArray<uint32_t> EquipmentEyePrioritys; // 0x140(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EscortBoss_DoorTrigger
// Size: 0x3b8 (Inherited: 0x380)
class AEscortBoss_DoorTrigger : public ATriggerBox {
public:

	char pad_380[0x4]; // 0x380(0x04)
	struct FName DoorTag; // 0x384(0x08)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct AActor* DoorActor; // 0x390(0x08)
	struct FName DoorEffectGreenTag; // 0x398(0x08)
	struct FName DoorEffectRedTag; // 0x3a0(0x08)
	struct FName LootDoorTag; // 0x3a8(0x08)
	float Time2OpenLootDoor; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)

	void TriggerPass(struct UEscortBoss_PushMoveComponent* InBossComp); // Function DFMGameplay.EscortBoss_DoorTrigger.TriggerPass // (Final|Native|Protected|BlueprintCallable) // @ game+0x6314a10
	void OnTriggerEndOverlapInternal(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.EscortBoss_DoorTrigger.OnTriggerEndOverlapInternal // (Final|Native|Protected) // @ game+0x498fb50
	void OnTriggerBeginOverlapInternal(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.EscortBoss_DoorTrigger.OnTriggerBeginOverlapInternal // (Final|Native|Protected) // @ game+0x63142d0
	bool IsDoorOpen(); // Function DFMGameplay.EscortBoss_DoorTrigger.IsDoorOpen // (Final|Native|Protected|BlueprintCallable) // @ game+0x6313a70
	void BP_TriggerPassAudio(struct AActor* InDoor); // Function DFMGameplay.EscortBoss_DoorTrigger.BP_TriggerPassAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_TriggerDenyAudio(struct AActor* InDoor); // Function DFMGameplay.EscortBoss_DoorTrigger.BP_TriggerDenyAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EscortBoss_PushMoveComponent
// Size: 0x660 (Inherited: 0x580)
class UEscortBoss_PushMoveComponent : public USphereComponent {
public:

	float PushMoveRate; // 0x580(0x04)
	char pad_584[0x14]; // 0x584(0x14)
	struct TArray<struct AGPCharacter*> InAreaTeammates; // 0x598(0x10)
	char pad_5A8[0x8]; // 0x5a8(0x08)
	int32_t CarryBodyTeamID; // 0x5b0(0x04)
	char pad_5B4[0x4]; // 0x5b4(0x04)
	struct TArray<struct ADFMCharacter*> TeamMatePlayers; // 0x5b8(0x10)
	char pad_5C8[0x8]; // 0x5c8(0x08)
	struct TArray<struct AInteractor_DoorBase*> LootDoorArr; // 0x5d0(0x10)
	struct APlayerExitBase* BossPlayerExit; // 0x5e0(0x08)
	struct AActor* Trigger; // 0x5e8(0x08)
	char pad_5F0[0x8]; // 0x5f0(0x08)
	struct FText ExitUIInfoOpenDesc; // 0x5f8(0x18)
	struct FText ExitUIInfoCloseDesc; // 0x610(0x18)
	struct FText ExitUIInfoFinishDesc; // 0x628(0x18)
	char pad_640[0x8]; // 0x640(0x08)
	/*struct FMulticastInlineDelegate*/char OnBossExitEnd[0x10]; // 0x648(0x10)
	char pad_658[0x8]; // 0x658(0x08)

	void SetPushMoveRaidus(float PushMoveRaidus); // Function DFMGameplay.EscortBoss_PushMoveComponent.SetPushMoveRaidus // (Final|Native|Protected|BlueprintCallable) // @ game+0x6314970
	void ServerSubmitTextTips2ContractTeam(struct FText TextTips, int32_t ContractTeamID); // Function DFMGameplay.EscortBoss_PushMoveComponent.ServerSubmitTextTips2ContractTeam // (Final|Native|Protected|BlueprintCallable) // @ game+0x6314840
	void ServerRangeCircle(bool bEnable); // Function DFMGameplay.EscortBoss_PushMoveComponent.ServerRangeCircle // (Final|Native|Public|BlueprintCallable) // @ game+0x63147b0
	void ServerOpenLootDoors(float Time2OpenLootDoor, struct FName& LootDoorTag); // Function DFMGameplay.EscortBoss_PushMoveComponent.ServerOpenLootDoors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63146d0
	void ServerEnablePushMove(int32_t ContractTeamID, bool bEnable); // Function DFMGameplay.EscortBoss_PushMoveComponent.ServerEnablePushMove // (Final|Native|Public|BlueprintCallable) // @ game+0x6314610
	void ServerChangeContractTeamCamp(int32_t ContractTeamID, enum class ECampType CampId); // Function DFMGameplay.EscortBoss_PushMoveComponent.ServerChangeContractTeamCamp // (Final|Native|Protected|BlueprintCallable) // @ game+0x6314550
	void RebornRomytheusFromImpendingDeath(); // Function DFMGameplay.EscortBoss_PushMoveComponent.RebornRomytheusFromImpendingDeath // (Final|Native|Protected|BlueprintCallable) // @ game+0x6314450
	void OnServerGPCharacterPreDropCarryBody(struct AGPCharacterBase* CurrentCarrySelfBuddy); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnServerGPCharacterPreDropCarryBody // (Final|Native|Protected) // @ game+0x6314250
	void OnServerGPCharacterBeingCarry(bool bCarrying); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnServerGPCharacterBeingCarry // (Final|Native|Protected|BlueprintCallable) // @ game+0x63141c0
	void OnServerAddExitQA(struct APlayerExitBase* InPlayerExit, float Time2CloseExit, struct FName QATag, struct FText InExitUIInfoOpenDesc, struct FText InExitUIInfoCloseDesc, struct FText InExitUIInfoFinishDesc); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnServerAddExitQA // (Final|Native|Protected|BlueprintCallable) // @ game+0x6313ef0
	void OnLootDoorTimer(); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnLootDoorTimer // (Final|Native|Protected) // @ game+0x6313ed0
	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnEndOverlap // (Final|Native|Public) // @ game+0x6313cd0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.EscortBoss_PushMoveComponent.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x6313ad0
	bool IsTeammatesInArea(); // Function DFMGameplay.EscortBoss_PushMoveComponent.IsTeammatesInArea // (Final|Native|Public|BlueprintCallable) // @ game+0x6313aa0
	void FireReturnAction_OnActorEndOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.EscortBoss_PushMoveComponent.FireReturnAction_OnActorEndOverlap // (Final|Native|Protected) // @ game+0x6313660
	void FireReturnAction_OnActorBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.EscortBoss_PushMoveComponent.FireReturnAction_OnActorBeginOverlap // (Final|Native|Protected) // @ game+0x63135a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitTipsComponent
// Size: 0x108 (Inherited: 0x100)
class UExitTipsComponent : public UActorComponent {
public:

	struct APlayerExitBase* ExitBase; // 0x100(0x08)

	void OnAwakeChanged(bool bAwake); // Function DFMGameplay.ExitTipsComponent.OnAwakeChanged // (Final|Native|Public) // @ game+0x63193c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FakeParatrooperDropZone
// Size: 0x3f0 (Inherited: 0x378)
class AFakeParatrooperDropZone : public AActor {
public:

	struct UClass* TransportAircraftClass; // 0x378(0x08)
	float AircraftHeight; // 0x380(0x04)
	float AircraftSpawnDistance; // 0x384(0x04)
	float Speed; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	/*struct TSoftObjectPtr<UParticleSystem>*/char ParticleSystem[0x28]; // 0x390(0x28)
	float Life; // 0x3b8(0x04)
	float Rate; // 0x3bc(0x04)
	struct FVector size; // 0x3c0(0x0c)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct ASOLParatrooperAircraft* Aircraft; // 0x3d0(0x08)
	struct UParticleSystemComponent* PSComp; // 0x3d8(0x08)
	char pad_3E0[0x10]; // 0x3e0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEQSItem_SOLCoverPoint
// Size: 0x38 (Inherited: 0x38)
class UDFMEQSItem_SOLCoverPoint : public UGPEnvQueryItemType_CommonPoint {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEQSGenerator_SOLCoverPoint
// Size: 0x150 (Inherited: 0x88)
class UDFMEQSGenerator_SOLCoverPoint : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct FAIDataProviderFloatValue CircleRadius; // 0x88(0x38)
	struct FAIDataProviderIntValue MinNormalAngelDeg; // 0xc0(0x38)
	struct FAIDataProviderBoolValue GenerateAroundQuerier; // 0xf8(0x38)
	struct UClass* MainTargetContext; // 0x130(0x08)
	bool bIgnoreCoverOccupied; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct TArray<enum class EPeekType> AllowPeekTypes; // 0x140(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQTest_SOLCoverCanShootTarget
// Size: 0x218 (Inherited: 0x200)
class UEQTest_SOLCoverCanShootTarget : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float PeekOffsetLength; // 0x208(0x04)
	bool bPeekFromHigh; // 0x20c(0x01)
	char pad_20D[0x3]; // 0x20d(0x03)
	float OverridePeekHeight; // 0x210(0x04)
	float OverridePeekUpHeight; // 0x214(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCoverEQInstanceBPWrapper
// Size: 0x80 (Inherited: 0x80)
class UDFMCoverEQInstanceBPWrapper : public UGPEnvQueryInstanceBPWrapper {
public:


	struct TArray<struct FSOLEqsCoverPointInfo> GetResultsAsCover(); // Function DFMGameplay.DFMCoverEQInstanceBPWrapper.GetResultsAsCover // (Final|Native|Private|BlueprintCallable|BlueprintPure) // @ game+0x63192e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQTest_PointIsNotBehindTarget
// Size: 0x218 (Inherited: 0x200)
class UEQTest_PointIsNotBehindTarget : public UEnvQueryTest {
public:

	struct UClass* InputActorContext; // 0x200(0x08)
	float PeekOffsetLength; // 0x208(0x04)
	bool bPeekFromHigh; // 0x20c(0x01)
	char pad_20D[0x3]; // 0x20d(0x03)
	float AllowedDegree; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FirebatFloorBurnVolume
// Size: 0x420 (Inherited: 0x378)
class AFirebatFloorBurnVolume : public AActor {
public:

	char pad_378[0x18]; // 0x378(0x18)
	int32_t DamageId; // 0x390(0x04)
	struct FName ScreenPostFXName; // 0x394(0x08)
	int32_t FlameBuffId; // 0x39c(0x04)
	int32_t TagBuffId; // 0x3a0(0x04)
	char FlameBuffTriggerTimes; // 0x3a4(0x01)
	enum class ECampType Camp; // 0x3a5(0x01)
	char pad_3A6[0x2]; // 0x3a6(0x02)
	struct FName Burn1PFx; // 0x3a8(0x08)
	enum class ECharacterPart PainPart; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	int32_t PainBuffId; // 0x3b4(0x04)
	struct TWeakObjectPtr<struct UActorComponent> DefaultFireBaThrowerComponent; // 0x3b8(0x08)
	struct USphereComponent* BurningVolume_CPP; // 0x3c0(0x08)
	struct FName FloorBurnFXName; // 0x3c8(0x08)
	struct FName ScreenFXName; // 0x3d0(0x08)
	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct FTransform FXRelativeTransform; // 0x3e0(0x30)
	uint32_t AttackCDBuff; // 0x410(0x04)
	char pad_414[0x4]; // 0x414(0x04)
	struct UFXResourceContainerComponent* FX; // 0x418(0x08)

	void ApplyDamage(struct ADFMCharacter* Char, struct FVector ImpactPoint); // Function DFMGameplay.FirebatFloorBurnVolume.ApplyDamage // (Net|Native|Event|NetMulticast|Public|HasDefaults|BlueprintCallable) // @ game+0x631c780
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FixedTrackRocketMovementComponent
// Size: 0x1a8 (Inherited: 0x100)
class UFixedTrackRocketMovementComponent : public UActorComponent {
public:

	char pad_100[0x20]; // 0x100(0x20)
	struct FName ExplodeEffectID; // 0x120(0x08)
	struct FName SpecialExplodeEffectID; // 0x128(0x08)
	int32_t AttackerValueId; // 0x130(0x04)
	struct FGuidedRocketMovementParam GuidedRocketMovementParam; // 0x134(0x30)
	bool bExplode; // 0x164(0x01)
	bool bFlying; // 0x165(0x01)
	char pad_166[0x22]; // 0x166(0x22)
	struct UFXResourceContainerComponent* ExplodeEffectComponent; // 0x188(0x08)
	float GuidedRocketInitSpeed; // 0x190(0x04)
	float Bezier2ShapeFactor; // 0x194(0x04)
	bool bIsOnlyOffsetZ; // 0x198(0x01)
	char pad_199[0x3]; // 0x199(0x03)
	float Bezier2OffsetFactor; // 0x19c(0x04)
	float BulletMaxDistance; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)

	void StopMovementImmdiately(); // Function DFMGameplay.FixedTrackRocketMovementComponent.StopMovementImmdiately // (Final|Native|Public|BlueprintCallable) // @ game+0x631e280
	void OnRep_GuidedRocketMovementParam(); // Function DFMGameplay.FixedTrackRocketMovementComponent.OnRep_GuidedRocketMovementParam // (Final|Native|Protected) // @ game+0x631d6b0
	void OnRep_Flying(); // Function DFMGameplay.FixedTrackRocketMovementComponent.OnRep_Flying // (Final|Native|Protected) // @ game+0x631d690
	void OnRep_Explode(); // Function DFMGameplay.FixedTrackRocketMovementComponent.OnRep_Explode // (Final|Native|Protected) // @ game+0x631d650
	void InitMovementParam(struct FGuidedRocketMovementParam& InMovementParam); // Function DFMGameplay.FixedTrackRocketMovementComponent.InitMovementParam // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x631cc00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FixTrackRocketLauncher
// Size: 0x570 (Inherited: 0x3d8)
class AFixTrackRocketLauncher : public APawn {
public:

	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct UClass* FixTrackRocketClass; // 0x3e0(0x08)
	int32_t RocketCount; // 0x3e8(0x04)
	char pad_3EC[0x4]; // 0x3ec(0x04)
	struct TMap<struct FName, struct FRotator> CurrentBoneRelRotatorMap; // 0x3f0(0x50)
	float YawTurnSpeed; // 0x440(0x04)
	float RollTurnSpeed; // 0x444(0x04)
	bool bActived; // 0x448(0x01)
	char pad_449[0x3]; // 0x449(0x03)
	struct FVector TargetLoc; // 0x44c(0x0c)
	int32_t CurrentRocketCount; // 0x458(0x04)
	bool bFiring; // 0x45c(0x01)
	bool AimingTarget; // 0x45d(0x01)
	bool ReverseAimingTarget; // 0x45e(0x01)
	char pad_45F[0x1]; // 0x45f(0x01)
	float DelayFireTime; // 0x460(0x04)
	struct FName FireSocketEffectID; // 0x464(0x08)
	struct FName FireSocketEffectID_Bottom; // 0x46c(0x08)
	float DelayReverseAimingTime; // 0x474(0x04)
	float DesirPitch; // 0x478(0x04)
	char pad_47C[0xc]; // 0x47c(0x0c)
	struct FSoftObjectPath AirDefense_Turn_Start; // 0x488(0x18)
	struct FSoftObjectPath AirDefense_Turn_Stop; // 0x4a0(0x18)
	struct FSoftObjectPath AirDefense_Turn_End; // 0x4b8(0x18)
	struct TArray<struct AActor*> FixedTrackRockets; // 0x4d0(0x10)
	struct TArray<struct UActorComponent*> MeshComponents; // 0x4e0(0x10)
	struct UFXResourceContainerComponent* FireEffectComponent; // 0x4f0(0x08)
	struct UFXResourceContainerComponent* FireEffectComponent_Bottom; // 0x4f8(0x08)
	struct TArray<struct UGPAudioEventAsset*> AudioAsset; // 0x500(0x10)
	char pad_510[0x38]; // 0x510(0x38)
	struct AGPCharacter* CurrentOperateCharacter; // 0x548(0x08)
	struct AActor* TargetActor; // 0x550(0x08)
	struct AQuestAutoTrackBullet* QuestAutoTrackBullet; // 0x558(0x08)
	struct UClass* AutoTrackVehicleClass; // 0x560(0x08)
	struct FName AutoTrackTargetTag; // 0x568(0x08)

	void ServerFireAutoTrack(); // Function DFMGameplay.FixTrackRocketLauncher.ServerFireAutoTrack // (Final|Native|Protected) // @ game+0x631de60
	void ServerFire(struct FVector InTargetLoc, bool bSpecialExplode); // Function DFMGameplay.FixTrackRocketLauncher.ServerFire // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x631dd80
	void ServerDelayFireAutoTrack(); // Function DFMGameplay.FixTrackRocketLauncher.ServerDelayFireAutoTrack // (Final|Native|Protected) // @ game+0x631dd60
	void OnVehicleDiedNtf(struct FDamageResultInfo& DestroyedDamageInfo); // Function DFMGameplay.FixTrackRocketLauncher.OnVehicleDiedNtf // (Final|Native|Protected|HasOutParms) // @ game+0x631da10
	void OnRep_ReverseAiming(); // Function DFMGameplay.FixTrackRocketLauncher.OnRep_ReverseAiming // (Final|Native|Protected) // @ game+0x631d6d0
	void OnRep_Firing(); // Function DFMGameplay.FixTrackRocketLauncher.OnRep_Firing // (Final|Native|Protected) // @ game+0x631d670
	void OnRep_Actived(); // Function DFMGameplay.FixTrackRocketLauncher.OnRep_Actived // (Final|Native|Protected) // @ game+0x631d630
	void OnHelicopterMoveStateChange(int32_t MoveState, struct AActor* Vehicle); // Function DFMGameplay.FixTrackRocketLauncher.OnHelicopterMoveStateChange // (Final|Native|Protected) // @ game+0x631d0b0
	void OnFireMissileOnInteract(struct AGPCharacter* CHARACTER, struct AActor* InteractActor, bool bReadToFire); // Function DFMGameplay.FixTrackRocketLauncher.OnFireMissileOnInteract // (Final|Native|Protected) // @ game+0x631cfa0
	void ActivateLauncher(bool Activate); // Function DFMGameplay.FixTrackRocketLauncher.ActivateLauncher // (Final|Native|Public|BlueprintCallable) // @ game+0x631c6f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FixTrackRocketLauncherAnimInstance
// Size: 0x2e0 (Inherited: 0x280)
class UFixTrackRocketLauncherAnimInstance : public UAnimInstance {
public:

	struct FFixTrackRocketLauncherAnimInstanceProxy LocalProxy; // 0x280(0x50)
	bool Actived; // 0x2d0(0x01)
	bool AimingTarget; // 0x2d1(0x01)
	bool ReverseAimingTarget; // 0x2d2(0x01)
	char pad_2D3[0xd]; // 0x2d3(0x0d)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FlameTower
// Size: 0x3e8 (Inherited: 0x3d8)
class AFlameTower : public APawn {
public:

	struct USkeletalMeshComponent* FlameTowerMesh; // 0x3d8(0x08)
	struct URotatingMovementComponent* RotatingMovementComp; // 0x3e0(0x08)

	void SetEnableRotating(bool bRotating, struct FRotator RotationRate); // Function DFMGameplay.FlameTower.SetEnableRotating // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x631df00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FlameTowerController
// Size: 0x4a8 (Inherited: 0x480)
class AFlameTowerController : public AAIController {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x480(0x08)
	struct ADFMCharacter* TargetCharacter; // 0x488(0x08)
	bool bIsFire; // 0x490(0x01)
	char pad_491[0x7]; // 0x491(0x07)
	struct UCurveFloat* FlameTowerFireCurve; // 0x498(0x08)
	float FireTime; // 0x4a0(0x04)
	float DamageValue; // 0x4a4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FlashDroneMovementComponent
// Size: 0x5c0 (Inherited: 0x5c0)
class UFlashDroneMovementComponent : public UGPWeaponProjectileMovementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Formation
// Size: 0x450 (Inherited: 0x378)
class AFormation : public AActor {
public:

	bool bForcePlay; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct UFormationSlotPattern* FormationPattern; // 0x380(0x08)
	struct TArray<struct FSlotAssignment> SlotAssignments; // 0x388(0x10)
	/*struct FMulticastInlineDelegate*/char OnFormationFinish[0x10]; // 0x398(0x10)
	int32_t MaxLoopCount; // 0x3a8(0x04)
	int32_t LoopCount; // 0x3ac(0x04)
	char pad_3B0[0xa0]; // 0x3b0(0xa0)

	void SetWayPointsNoLoop(struct TArray<struct FVector>& Path); // Function DFMGameplay.Formation.SetWayPointsNoLoop // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x631e1b0
	void SetWayPoints(struct TArray<struct FVector>& Path); // Function DFMGameplay.Formation.SetWayPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x631e0e0
	void SetLoopCount(int32_t InLoopCount); // Function DFMGameplay.Formation.SetLoopCount // (Final|Native|Public|BlueprintCallable) // @ game+0x631e060
	void SetFormationPattern(struct UFormationSlotPattern* pattern); // Function DFMGameplay.Formation.SetFormationPattern // (Final|Native|Public|BlueprintCallable) // @ game+0x631dfe0
	bool IsFinish(); // Function DFMGameplay.Formation.IsFinish // (Final|Native|Public|BlueprintCallable) // @ game+0x631ccb0
	struct TArray<struct AAIController*> GetMembers(); // Function DFMGameplay.Formation.GetMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x631cb20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GadgetItemActorInterface
// Size: 0x30 (Inherited: 0x30)
class UGadgetItemActorInterface : public UInterface {
public:


	void InitGadgetActor(struct ACHARACTER* CharacterOwner); // Function DFMGameplay.GadgetItemActorInterface.InitGadgetActor // (Native|Public) // @ game+0x89f540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerStartHelper_AntiTerrorDrill
// Size: 0x80 (Inherited: 0x30)
class UPlayerStartHelper_AntiTerrorDrill : public UObject {
public:

	char pad_30[0x50]; // 0x30(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_AntiTerrorDrill
// Size: 0x600 (Inherited: 0x5f8)
class AGameMode_AntiTerrorDrill : public AGPGameMode {
public:

	struct UPlayerStartHelper_AntiTerrorDrill* PlayerStartHelper; // 0x5f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_GeneBatchTest
// Size: 0x420 (Inherited: 0x418)
class AGameMode_GeneBatchTest : public AGameModeBase {
public:

	struct APlayerStart* FixPosPlayerStart; // 0x418(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameplayMonitorManager
// Size: 0x3c8 (Inherited: 0x378)
class AGameplayMonitorManager : public AActor {
public:

	struct TMap<struct FName, struct FMonitorArray> MonitorMap; // 0x378(0x50)

	struct TArray<struct AGameplayMonitor*> GetMonitorsByGroup(struct UObject* WorldContextObject, struct FName Group); // Function DFMGameplay.GameplayMonitorManager.GetMonitorsByGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6322010
	struct AGameplayMonitorManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.GameplayMonitorManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6321ea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameState_AntiTerrorDrill
// Size: 0x500 (Inherited: 0x500)
class AGameState_AntiTerrorDrill : public AGPGameState {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GeneralSignificanceComponent
// Size: 0x198 (Inherited: 0x178)
class UGeneralSignificanceComponent : public USignificanceBase {
public:

	char pad_178[0x7]; // 0x178(0x07)
	enum class EGeneralSignificanceType GeneralActorType; // 0x17f(0x01)
	char pad_180[0x18]; // 0x180(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GiantTowerWeaponDoorAnimInstance
// Size: 0x290 (Inherited: 0x280)
class UGiantTowerWeaponDoorAnimInstance : public UAnimInstance {
public:

	bool bIsActiving; // 0x280(0x01)
	bool bIsActived; // 0x281(0x01)
	char pad_282[0xe]; // 0x282(0x0e)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GMWeaponComponent
// Size: 0x128 (Inherited: 0x100)
class UGMWeaponComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct ADFMPlayerController* PlayerController; // 0x108(0x08)
	struct AGPCharacter* Char; // 0x110(0x08)
	struct AWeaponBase* CurWeapon; // 0x118(0x08)
	char pad_120[0x8]; // 0x120(0x08)

	void ServerProcessGMWeapon(struct FName CmdName, struct FString Params); // Function DFMGameplay.GMWeaponComponent.ServerProcessGMWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6322cd0
	void GMWeapon(struct FName CmdName, struct FString Params); // Function DFMGameplay.GMWeaponComponent.GMWeapon // (Final|Exec|Native|Public) // @ game+0x6321d40
	void GMW_CheatSpread(); // Function DFMGameplay.GMWeaponComponent.GMW_CheatSpread // (Final|Exec|Native|Public) // @ game+0x6321d20
	void GMW_CheatRecoil(); // Function DFMGameplay.GMWeaponComponent.GMW_CheatRecoil // (Final|Exec|Native|Public) // @ game+0x6321d00
	void GMServerWeapon(struct FName CmdName, struct FString Params); // Function DFMGameplay.GMWeaponComponent.GMServerWeapon // (Final|Exec|Native|Public) // @ game+0x6321ba0
	void GMServerSpawnProjectile(uint64_t Guid, struct FString ClassPath, struct FVector InitLoc, struct FRotator InitRot); // Function DFMGameplay.GMWeaponComponent.GMServerSpawnProjectile // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x6321a00
	void ClientProcessGMWeapon(struct FName CmdName, struct FString Params); // Function DFMGameplay.GMWeaponComponent.ClientProcessGMWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6321630
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPBuffEffectFunctions
// Size: 0x30 (Inherited: 0x30)
class UGPBuffEffectFunctions : public UObject {
public:


	void STATIC_TriggerCameraShakeAnim(struct AActor* Actor, enum class EJoggleCameraType CameraType); // Function DFMGameplay.GPBuffEffectFunctions.TriggerCameraShakeAnim // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6327460
	void STATIC_SetPostProcessActive(struct FString PostEffectName, bool bEnabled); // Function DFMGameplay.GPBuffEffectFunctions.SetPostProcessActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6327200
	void STATIC_RemovePostProcess(/*struct AActor* Actor, struct TSoftObjectPtr<UMaterialInstance> MaterialInstance*/); // Function DFMGameplay.GPBuffEffectFunctions.RemovePostProcess // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6326d40
	struct AGPPlayerController* STATIC_GetLocalGPPlayerController(struct AActor* Actor); // Function DFMGameplay.GPBuffEffectFunctions.GetLocalGPPlayerController // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6326b60
	void STATIC_BE_PlayVoice(/*struct AActor* Actor, struct TSoftObjectPtr<UGPAudioEventAsset> VoicePtr*/); // Function DFMGameplay.GPBuffEffectFunctions.BE_PlayVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6326910
	void STATIC_AddPostProcess(/*struct AActor* Actor, struct TSoftObjectPtr<UMaterialInstance> MaterialInstance, float Weight*/); // Function DFMGameplay.GPBuffEffectFunctions.AddPostProcess // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6326730
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_AssaultShockEffect
// Size: 0xa0 (Inherited: 0x50)
class UGPCameraModifier_AssaultShockEffect : public UGPCameraModifier {
public:

	struct UCurveFloat* SlowRotationScalarCurve; // 0x50(0x08)
	struct UCurveFloat* SlowRotationMaxValueCurve; // 0x58(0x08)
	char pad_60[0x40]; // 0x60(0x40)

	void SetAssaultShockEffectSlowRotation(bool bSlowRotation, float InLastTime); // Function DFMGameplay.GPCameraModifier_AssaultShockEffect.SetAssaultShockEffectSlowRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x6326ff0
	void SetAssaultShockEffectDelay(bool bDelay, float InDelayTime, float InLastTime); // Function DFMGameplay.GPCameraModifier_AssaultShockEffect.SetAssaultShockEffectDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x6326ef0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_AssaultSpeedUpEffect
// Size: 0x98 (Inherited: 0x50)
class UGPCameraModifier_AssaultSpeedUpEffect : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	bool LinearInterpolate; // 0x51(0x01)
	char pad_52[0x2]; // 0x52(0x02)
	float InlinearInterpolateSpeed; // 0x54(0x04)
	float FovExtendRate; // 0x58(0x04)
	float FovMaxExtend; // 0x5c(0x04)
	float FovMinExtend; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	/*struct TSoftObjectPtr<UMaterialInstance>*/char EffectMaterialInstance[0x28]; // 0x68(0x28)
	char pad_90[0x8]; // 0x90(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_ExplosionBeHit
// Size: 0xc8 (Inherited: 0x50)
class UGPCameraModifier_ExplosionBeHit : public UGPCameraModifier {
public:

	struct FRotator MaxRotator; // 0x50(0x0c)
	float MinTimeWeakScale; // 0x5c(0x04)
	float MinDistanceWeakScale; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct TMap<enum class EExplosionType, struct FBeHitCameraModifierConfig> BeHitCameraConfigMap; // 0x68(0x50)
	char pad_B8[0x10]; // 0xb8(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_Fire
// Size: 0x60 (Inherited: 0x50)
class UGPCameraModifier_Fire : public UGPCameraModifier {
public:

	float AttenuationTime; // 0x50(0x04)
	bool bEnable; // 0x54(0x01)
	char pad_55[0xb]; // 0x55(0x0b)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_FPPCameraBoneAnim
// Size: 0x60 (Inherited: 0x50)
class UGPCameraModifier_FPPCameraBoneAnim : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FName FocusBoneName; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_FPPCameraOperate
// Size: 0x80 (Inherited: 0x50)
class UGPCameraModifier_FPPCameraOperate : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FRotator LeftLeanPeekCameraRotator; // 0x54(0x0c)
	struct FRotator RightLeanPeekCameraRotator; // 0x60(0x0c)
	float RotatorLerpSpeed; // 0x6c(0x04)
	char pad_70[0x10]; // 0x70(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_InVehicle
// Size: 0x58 (Inherited: 0x50)
class UGPCameraModifier_InVehicle : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_JoggleCamera
// Size: 0xa8 (Inherited: 0x50)
class UGPCameraModifier_JoggleCamera : public UGPCameraModifier {
public:

	struct TMap<enum class EJoggleCameraType, struct FJoggleCameraConfig> JoggleCameraConfigMap; // 0x50(0x50)
	char pad_A0[0x8]; // 0xa0(0x08)

	void TryJoggleCamera(bool bEnable, enum class EJoggleCameraType JoggleCameraType); // Function DFMGameplay.GPCameraModifier_JoggleCamera.TryJoggleCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x6327510
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_RebornEffect
// Size: 0x198 (Inherited: 0x50)
class UGPCameraModifier_RebornEffect : public UGPCameraModifier {
public:

	float WaitBodyDieAnimEndDelayTime; // 0x50(0x04)
	float WaitBodyDieAnimEndSwitchToTPPDelayTime; // 0x54(0x04)
	struct FVector BodyDieEndPlayerLocation; // 0x58(0x0c)
	bool bInheritBodyDiePlayerLocation; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct FVector BodyDieEndCameraRelativeLocation; // 0x68(0x0c)
	struct FVector BodyDieEndCameraLocation; // 0x74(0x0c)
	struct FRotator BodyDieEndCameraRotation; // 0x80(0x0c)
	float BodyDieEndCameraFOV; // 0x8c(0x04)
	bool bInheritBodyDieCameraParam; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float SwitchToFocusBodyTime; // 0x94(0x04)
	float FocusBodyDistance; // 0x98(0x04)
	float CameraInterpToDelay; // 0x9c(0x04)
	float FocusBodyHeight; // 0xa0(0x04)
	float DistanceLimit; // 0xa4(0x04)
	bool bInterpTo; // 0xa8(0x01)
	bool bFocusBody; // 0xa9(0x01)
	char pad_AA[0x2]; // 0xaa(0x02)
	struct FVector FocusBodyEndLocation; // 0xac(0x0c)
	struct FRotator FocusBodyEndRotation; // 0xb8(0x0c)
	struct FVector LastCameraLocation; // 0xc4(0x0c)
	struct FRotator LastCameraRotation; // 0xd0(0x0c)
	float FocusBodyHideActorTime; // 0xdc(0x04)
	float FocusBodyShowActorTime; // 0xe0(0x04)
	float FocusBodyRotationSpeed; // 0xe4(0x04)
	struct UCurveFloat* CameraLocCurve; // 0xe8(0x08)
	float CameraLocCurveZeroValue; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct UCurveFloat* CameraRotationCurve; // 0xf8(0x08)
	struct UCurveVector* CameraRotationCurveAxis; // 0x100(0x08)
	struct UCurveFloat* CameraFovCurve; // 0x108(0x08)
	bool bUseCurveMaxTimeForSkipLerpInCameraRotation; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float EndRate; // 0x114(0x04)
	bool bEnable; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct FString CurrentMI; // 0x120(0x10)
	char pad_130[0x2d]; // 0x130(0x2d)
	bool bDoHideActorOperation; // 0x15d(0x01)
	bool bDoShowActorOperation; // 0x15e(0x01)
	char pad_15F[0x1]; // 0x15f(0x01)
	struct FTimerHandle SwitchToTPPTimer; // 0x160(0x08)
	struct FTimerHandle SwitchToFPPTimer; // 0x168(0x08)
	float SwitchToFPPTime; // 0x170(0x04)
	bool bKeepInHighView; // 0x174(0x01)
	char pad_175[0x3]; // 0x175(0x03)
	struct FVector HighViewCameraLocation; // 0x178(0x0c)
	struct FRotator HighViewCameraRotation; // 0x184(0x0c)
	float HighViewCameraFOV; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)

	void SwitchToTPP(); // Function DFMGameplay.GPCameraModifier_RebornEffect.SwitchToTPP // (Final|Native|Public) // @ game+0x6327440
	void SwitchToFPP(); // Function DFMGameplay.GPCameraModifier_RebornEffect.SwitchToFPP // (Final|Native|Public) // @ game+0x6327420
	void OnClientPlayerMatchOver(enum class EMatchOverReason& MatchOverReason); // Function DFMGameplay.GPCameraModifier_RebornEffect.OnClientPlayerMatchOver // (Final|Native|Public|HasOutParms) // @ game+0x6326cb0
	void InheritBodyDiePlayerLocation(); // Function DFMGameplay.GPCameraModifier_RebornEffect.InheritBodyDiePlayerLocation // (Final|Native|Public) // @ game+0x6326c90
	void InheritBodyDieCameraParam(); // Function DFMGameplay.GPCameraModifier_RebornEffect.InheritBodyDieCameraParam // (Final|Native|Public) // @ game+0x6326c70
	void CreateSwitchToTPPTimer(); // Function DFMGameplay.GPCameraModifier_RebornEffect.CreateSwitchToTPPTimer // (Final|Native|Public) // @ game+0x6326b20
	void CreateSwitchToFPPTimer(); // Function DFMGameplay.GPCameraModifier_RebornEffect.CreateSwitchToFPPTimer // (Final|Native|Public) // @ game+0x6326b00
	void CancelSwitchToTPPTimer(); // Function DFMGameplay.GPCameraModifier_RebornEffect.CancelSwitchToTPPTimer // (Final|Native|Public) // @ game+0x6326ae0
	void CancelSwitchToFPPTimer(); // Function DFMGameplay.GPCameraModifier_RebornEffect.CancelSwitchToFPPTimer // (Final|Native|Public) // @ game+0x6326ac0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_RedeployEffect
// Size: 0xd0 (Inherited: 0x50)
class UGPCameraModifier_RedeployEffect : public UGPCameraModifier {
public:

	struct UCurveFloat* CameraLocCurve; // 0x50(0x08)
	struct UCurveFloat* CameraRotationCurve; // 0x58(0x08)
	bool bEnable; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct FString CurrentMI; // 0x68(0x10)
	char pad_78[0x48]; // 0x78(0x48)
	bool bUseFRotatorLerp; // 0xc0(0x01)
	char pad_C1[0xf]; // 0xc1(0x0f)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_TPPCameraBoneAnim
// Size: 0x78 (Inherited: 0x50)
class UGPCameraModifier_TPPCameraBoneAnim : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FName FocusBoneName; // 0x54(0x08)
	bool useLocation; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
	float locationScale; // 0x60(0x04)
	bool UseRotation; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	float RotationScale; // 0x68(0x04)
	bool bNeedReadFadeCurveInAnimation; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct FName FadeCurveName; // 0x70(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_WeaponGunSway
// Size: 0x58 (Inherited: 0x50)
class UGPCameraModifier_WeaponGunSway : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_WeaponRecoil
// Size: 0x58 (Inherited: 0x50)
class UGPCameraModifier_WeaponRecoil : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEQSGenerator_CircleBetweenQuerierAndTarget
// Size: 0xb0 (Inherited: 0x88)
class UGPEQSGenerator_CircleBetweenQuerierAndTarget : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct UClass* GenerateTarget; // 0x88(0x08)
	float SmallestRoundRadius; // 0x90(0x04)
	char RoundLayerNum; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	uint32_t NodeSpacing; // 0x98(0x04)
	bool bAvoidClosePathToTarget; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	struct UClass* AvoidTargetCenter; // 0xa0(0x08)
	float AvoidMinPathDistanceSq; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)

	bool ShouldAvoidPoint(struct FVector& avoidTargetPoint, struct FVector& testingPoint); // Function DFMGameplay.GPEQSGenerator_CircleBetweenQuerierAndTarget.ShouldAvoidPoint // (Final|Native|Private|HasOutParms|HasDefaults|Const) // @ game+0x632d1c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.LogicAudioManager
// Size: 0x88 (Inherited: 0x30)
class ULogicAudioManager : public UObject {
public:

	struct TMap<uint64_t, struct FGPFSMAudioTrigger> HandleTriggerMap; // 0x30(0x50)
	char pad_80[0x8]; // 0x80(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FSMLogicAudioStatic
// Size: 0x30 (Inherited: 0x30)
class UFSMLogicAudioStatic : public UBlueprintFunctionLibrary {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPInventoryBase
// Size: 0x950 (Inherited: 0x378)
class AGPInventoryBase : public AInventoryBase {
public:

	struct FName InventoryIdName; // 0x378(0x08)
	struct FInventoryItemInfo ItemInfo; // 0x380(0x538)
	struct ADFMCharacter* OwnerCharacter; // 0x8b8(0x08)
	int32_t TotalCount; // 0x8c0(0x04)
	int32_t Durability; // 0x8c4(0x04)
	int32_t Priority; // 0x8c8(0x04)
	char pad_8CC[0x4]; // 0x8cc(0x04)
	struct FItemID InventoryId; // 0x8d0(0x18)
	uint64_t InventoryGID; // 0x8e8(0x08)
	char pad_8F0[0x10]; // 0x8f0(0x10)
	enum class EAttachPosition AttachPosition; // 0x900(0x04)
	char pad_904[0xc]; // 0x904(0x0c)
	struct FName AttachSocketName; // 0x910(0x08)
	struct FName AttachSocketName3P; // 0x918(0x08)
	struct FVector LastPickUpLocation; // 0x920(0x0c)
	char pad_92C[0x4]; // 0x92c(0x04)
	int64_t LastPickUpTime; // 0x930(0x08)
	bool IsReplaceOldInventory; // 0x938(0x01)
	char pad_939[0x7]; // 0x939(0x07)
	struct TArray<struct FGunDescRow> GunDesc; // 0x940(0x10)

	void SetItemInfo(struct FInventoryItemInfo& _ItemInfo); // Function DFMGameplay.GPInventoryBase.SetItemInfo // (Native|Public|HasOutParms) // @ game+0x632ce70
	void SetGunDesc(struct TArray<struct FGunDescRow>& _GunDesc); // Function DFMGameplay.GPInventoryBase.SetGunDesc // (Native|Public|HasOutParms) // @ game+0x632ccd0
	void ReplicateOwnerCharacter(); // Function DFMGameplay.GPInventoryBase.ReplicateOwnerCharacter // (Native|Public) // @ game+0x632ccb0
	void OnRep_TotalCount(); // Function DFMGameplay.GPInventoryBase.OnRep_TotalCount // (Native|Public) // @ game+0x48d32b0
	void OnRep_Durability(); // Function DFMGameplay.GPInventoryBase.OnRep_Durability // (Native|Public) // @ game+0x632ca20
	void OnRep_AttachPos(); // Function DFMGameplay.GPInventoryBase.OnRep_AttachPos // (Native|Public) // @ game+0x1d21120
	bool ModifyDamageTaken(int32_t& Damage, struct AGPInventoryBase*& HitArmor, struct FHitResult& HitInfo, struct AActor* DamageCauser); // Function DFMGameplay.GPInventoryBase.ModifyDamageTaken // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x632bcd0
	bool IsWeapon(); // Function DFMGameplay.GPInventoryBase.IsWeapon // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x37028b0
	bool IsThrowableWeapon(); // Function DFMGameplay.GPInventoryBase.IsThrowableWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bca0
	bool IsPistolWeapon(); // Function DFMGameplay.GPInventoryBase.IsPistolWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bc70
	bool IsMeleeWeapon(); // Function DFMGameplay.GPInventoryBase.IsMeleeWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bc40
	bool IsMainWeapon(); // Function DFMGameplay.GPInventoryBase.IsMainWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bc10
	bool IsEquipped(); // Function DFMGameplay.GPInventoryBase.IsEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bbe0
	bool IsEquipment(); // Function DFMGameplay.GPInventoryBase.IsEquipment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bbb0
	bool IsAvatarItem(); // Function DFMGameplay.GPInventoryBase.IsAvatarItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bb80
	bool IsApparel(); // Function DFMGameplay.GPInventoryBase.IsApparel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bb50
	bool IsAmmo(); // Function DFMGameplay.GPInventoryBase.IsAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632bb20
	void InventoryIdNameUpdated(); // Function DFMGameplay.GPInventoryBase.InventoryIdNameUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0xbcc1a0
	uint32_t GetSellPrice(); // Function DFMGameplay.GPInventoryBase.GetSellPrice // (Native|Public|Const) // @ game+0x632b990
	uint32_t GetPrice(); // Function DFMGameplay.GPInventoryBase.GetPrice // (Native|Public|Const) // @ game+0x632b8b0
	char GetPreUseAnimType(); // Function DFMGameplay.GPInventoryBase.GetPreUseAnimType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3700ec0
	struct UStaticMeshComponent* GetItemMesh(bool bForceCreate); // Function DFMGameplay.GPInventoryBase.GetItemMesh // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x632b750
	struct FInventoryItemInfo GetItemInfo(); // Function DFMGameplay.GPInventoryBase.GetItemInfo // (Final|Native|Public) // @ game+0x632b720
	struct FItemID GetID(); // Function DFMGameplay.GPInventoryBase.GetID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x632b6e0
	struct TArray<struct FGunDescRow> GetGunDesc(); // Function DFMGameplay.GPInventoryBase.GetGunDesc // (Native|Public) // @ game+0x632b690
	struct UModularWeaponDesc* GetExtraInfoData(); // Function DFMGameplay.GPInventoryBase.GetExtraInfoData // (Native|Public|Const) // @ game+0x405fc40
	enum class EAttachPosition GetAttachPosition(); // Function DFMGameplay.GPInventoryBase.GetAttachPosition // (Final|Native|Public|Const) // @ game+0x632b670
	void ClientRemoved(); // Function DFMGameplay.GPInventoryBase.ClientRemoved // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x128d870
	void ClientGivenTo(struct APawn* NewInstigator); // Function DFMGameplay.GPInventoryBase.ClientGivenTo // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x632b5e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPPerfGroupSettings
// Size: 0x50 (Inherited: 0x40)
class UGPPerfGroupSettings : public UDeveloperSettings {
public:

	struct TArray<struct FGPPerfGroup> Groups; // 0x40(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPPerfManager
// Size: 0xd0 (Inherited: 0x38)
class UGPPerfManager : public UGameInstanceSubsystem {
public:

	char pad_38[0x98]; // 0x38(0x98)

	void OnNetReconnectSuccess(); // Function DFMGameplay.GPPerfManager.OnNetReconnectSuccess // (Final|Native|Private) // @ game+0x6331fa0
	void OnNetReconnectFail(int32_t RetryTime); // Function DFMGameplay.GPPerfManager.OnNetReconnectFail // (Final|Native|Private) // @ game+0x6331f20
	void OnNetDisconnectInSeamless(struct UWorld* World, struct UNetDriver* NetDriver, enum class ENetworkFailure FailureType); // Function DFMGameplay.GPPerfManager.OnNetDisconnectInSeamless // (Final|Native|Private) // @ game+0x6331e20
	void OnGameFlowStageChanged(enum class EGameFlowStageType Stage); // Function DFMGameplay.GPPerfManager.OnGameFlowStageChanged // (Final|Native|Private) // @ game+0x6331ca0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPPlayAnimUtil
// Size: 0x30 (Inherited: 0x30)
class UGPPlayAnimUtil : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPReplayStageInterface
// Size: 0x30 (Inherited: 0x30)
class UGPReplayStageInterface : public UInterface {
public:


	void ResetForReplay(); // Function DFMGameplay.GPReplayStageInterface.ResetForReplay // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BackUpForReplay(); // Function DFMGameplay.GPReplayStageInterface.BackUpForReplay // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPReplayStageManager
// Size: 0x398 (Inherited: 0x378)
class AGPReplayStageManager : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct TArray<struct UBaseUIView*> ViewArray; // 0x388(0x10)

	void STATIC_UnRegisterInReplayStageManager(/*struct UObject* WorldContextObject, struct TScriptInterface<IGPReplayStageInterface> RegisterObj*/); // Function DFMGameplay.GPReplayStageManager.UnRegisterInReplayStageManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6332890
	void StartReplay(); // Function DFMGameplay.GPReplayStageManager.StartReplay // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void STATIC_ReplayCurStage(struct UObject* WorldContextObject); // Function DFMGameplay.GPReplayStageManager.ReplayCurStage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6332560
	void STATIC_RegisterInReplayStageManager(/*struct UObject* WorldContextObject, struct TScriptInterface<IGPReplayStageInterface> RegisterObj*/); // Function DFMGameplay.GPReplayStageManager.RegisterInReplayStageManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6332490
	struct AGPReplayStageManager* STATIC_GetInstance(struct UObject* WorldContextObject); // Function DFMGameplay.GPReplayStageManager.GetInstance // (Final|Native|Static|Public) // @ game+0x63312b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPTSignificanceInspectorContext
// Size: 0x78 (Inherited: 0x30)
class UGPTSignificanceInspectorContext : public UObject {
public:

	char pad_30[0x48]; // 0x30(0x48)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPTSignificanceInspector
// Size: 0x58 (Inherited: 0x58)
class UGPTSignificanceInspector : public UGPToolBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIAvoidableActorInterface
// Size: 0x30 (Inherited: 0x30)
class UDFMAIAvoidableActorInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GrenadeDetectComponent
// Size: 0x5f0 (Inherited: 0x588)
class UGrenadeDetectComponent : public UCapsuleComponent {
public:

	char pad_588[0x18]; // 0x588(0x18)
	struct UDFMAIThreatRecordComponent* AIThreatComponent; // 0x5a0(0x08)
	struct UAIAdvancedPerceptionComponent* AIPerceptionComponent; // 0x5a8(0x08)
	float AICheckDist; // 0x5b0(0x04)
	float SmokeBombRadius; // 0x5b4(0x04)
	float SmokeBombInterRadius; // 0x5b8(0x04)
	float SmokeBombHeight; // 0x5bc(0x04)
	float SmokeBombInterHeight; // 0x5c0(0x04)
	float SmokeBombInterVisionSize; // 0x5c4(0x04)
	float SmokeBombOuterExposedFactor; // 0x5c8(0x04)
	float FlashBangInnerRadius; // 0x5cc(0x04)
	float FlashBangOuterRadius; // 0x5d0(0x04)
	float FlashBangOuterAngleRange; // 0x5d4(0x04)
	float AbilityRange; // 0x5d8(0x04)
	char pad_5DC[0x4]; // 0x5dc(0x04)
	struct TArray<struct FGrenadeRecord> DetectedGrenades; // 0x5e0(0x10)

	void OnWorldThrowableWeaponProjectileCreate(struct AActor* ProjectileActor); // Function DFMGameplay.GrenadeDetectComponent.OnWorldThrowableWeaponProjectileCreate // (Final|Native|Public) // @ game+0x6332300
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.GrenadeDetectComponent.OnOverlapEnd // (Final|Native|Public) // @ game+0x63321c0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.GrenadeDetectComponent.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x6331fc0
	void NotifySupportStomExploded(struct AActor* ProjectileActor, struct ACHARACTER* OwnerCharacter); // Function DFMGameplay.GrenadeDetectComponent.NotifySupportStomExploded // (Final|Native|Public) // @ game+0x6331be0
	void NotifySupportFrogExploded(struct AActor* ProjectileActor, struct ACHARACTER* OwnerCharacter); // Function DFMGameplay.GrenadeDetectComponent.NotifySupportFrogExploded // (Final|Native|Public) // @ game+0x6331b20
	void NotifyStunGrenadeExploded(struct AActor* ProjectileActor, struct ACHARACTER* OwnerCharacter); // Function DFMGameplay.GrenadeDetectComponent.NotifyStunGrenadeExploded // (Final|Native|Public) // @ game+0x6331a60
	void NotifyFlashBangExploded(struct AActor* ProjectileActor, struct ACHARACTER* OwnerCharacter); // Function DFMGameplay.GrenadeDetectComponent.NotifyFlashBangExploded // (Final|Native|Public) // @ game+0x63319a0
	bool IsProjectileInSight(struct AActor* Projectile); // Function DFMGameplay.GrenadeDetectComponent.IsProjectileInSight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63316d0
	bool IsGrenadeExist(float SpecifyRadius, bool bContainFriend); // Function DFMGameplay.GrenadeDetectComponent.IsGrenadeExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6331600
	bool IsBlindByFlashBang(float Time); // Function DFMGameplay.GrenadeDetectComponent.IsBlindByFlashBang // (Final|Native|Public|BlueprintCallable) // @ game+0x6331570
	bool IsAvoidProjectile(float SpecifyRadius); // Function DFMGameplay.GrenadeDetectComponent.IsAvoidProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x63314e0
	int32_t GetGrenadeNumBySelf(); // Function DFMGameplay.GrenadeDetectComponent.GetGrenadeNumBySelf // (Final|Native|Public|BlueprintCallable) // @ game+0x6331240
	void CanSeeAnySmokeBomb(); // Function DFMGameplay.GrenadeDetectComponent.CanSeeAnySmokeBomb // (Final|Native|Public) // @ game+0x6330bd0
	float CalcSightBlockRate(struct FVector Start, struct FVector End, enum class EDrawDebugTrace enableDebugDraw); // Function DFMGameplay.GrenadeDetectComponent.CalcSightBlockRate // (Final|Native|Public|HasDefaults) // @ game+0x6330aa0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIMission
// Size: 0x40 (Inherited: 0x30)
class UAIMission : public UObject {
public:

	float Priority; // 0x30(0x04)
	bool bStarted; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct AAIGroup* GoalGroup; // 0x38(0x08)

	void Start(); // Function DFMGameplay.AIMission.Start // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x8951b0
	void Resume(); // Function DFMGameplay.AIMission.Resume // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x8964b0
	void Interrupt(); // Function DFMGameplay.AIMission.Interrupt // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x895c00
	void Finish(); // Function DFMGameplay.AIMission.Finish // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x924260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupPawn
// Size: 0x3e0 (Inherited: 0x3d8)
class AAIGroupPawn : public APawn {
public:

	struct UGameplayTasksComponent* DummyTask; // 0x3d8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroup
// Size: 0x5c0 (Inherited: 0x480)
class AAIGroup : public AAIController {
public:

	bool AllowedMerge; // 0x480(0x01)
	char pad_481[0x3]; // 0x481(0x03)
	struct FVector GroupLocation; // 0x484(0x0c)
	struct TMap<struct AAIController*, struct FAISingleState> AIScenesStateMap; // 0x490(0x50)
	struct TArray<struct AAIGroup*> Slaves; // 0x4e0(0x10)
	struct AAIGroup* Master; // 0x4f0(0x08)
	struct TMap<struct AAIGroup*, struct FGroupControllers> SlavesControllers; // 0x4f8(0x50)
	/*struct TSoftObjectPtr<UBehaviorTree>*/char BTGroupAI[0x28]; // 0x548(0x28)
	struct UAIGroupThreatComponent* AIThreadRecordComp; // 0x570(0x08)
	struct UObject* ConfigObject; // 0x578(0x08)
	struct UAIEventComponent* AIEventComponent; // 0x580(0x08)
	struct TArray<struct FGroupMember> GroupMembers; // 0x588(0x10)
	struct TArray<struct UAIReportEvent*> SingleAIReports; // 0x598(0x10)
	char pad_5A8[0x8]; // 0x5a8(0x08)
	/*struct FMulticastInlineDelegate*/char GroupMemberDied[0x10]; // 0x5b0(0x10)

	void SendEventToSelf(struct UAIEvent* Event); // Function DFMGameplay.AIGroup.SendEventToSelf // (Final|Native|Public|BlueprintCallable) // @ game+0x6332750
	void SendEventToMemberByController(struct AAIController* MemberRef, struct UAIEvent* Event); // Function DFMGameplay.AIGroup.SendEventToMemberByController // (Final|Native|Public|BlueprintCallable) // @ game+0x6332690
	void SendEventToMember(int32_t MemberId, struct UAIEvent* Event); // Function DFMGameplay.AIGroup.SendEventToMember // (Final|Native|Public|BlueprintCallable) // @ game+0x63325d0
	struct AAIGroup* STATIC_QueryMemberGroupAI(struct AAIController* MemberRef); // Function DFMGameplay.AIGroup.QueryMemberGroupAI // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6332380
	void OnGroupMemberDied(struct AGPCharacterBase* GPCharacterBase, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AIGroup.OnGroupMemberDied // (Final|Native|Public) // @ game+0x6331d20
	void OnGroupMemberAerialVehicleDied(struct AAerialVehicle* AerialVehicle); // Function DFMGameplay.AIGroup.OnGroupMemberAerialVehicleDied // (Final|Native|Public) // @ game+0x895130
	struct UAIReportEvent* GetSingleAIReport(); // Function DFMGameplay.AIGroup.GetSingleAIReport // (Final|Native|Public|BlueprintCallable) // @ game+0x6331430
	int32_t GetMemberNum(); // Function DFMGameplay.AIGroup.GetMemberNum // (Final|Native|Public|BlueprintCallable) // @ game+0x63313e0
	struct TArray<struct FGroupMember> GetMember(); // Function DFMGameplay.AIGroup.GetMember // (Final|Native|Public|BlueprintCallable) // @ game+0x6331330
	struct FVector GetGroupLocation(); // Function DFMGameplay.AIGroup.GetGroupLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6331270
	struct AAIController* STATIC_GetControllerFromMember(struct FGroupMember& member); // Function DFMGameplay.AIGroup.GetControllerFromMember // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x63311a0
	struct TArray<struct FAISingleState> GetAllSingleStateList(struct UAIScenesInteractiveComponent* InteractiveComp); // Function DFMGameplay.AIGroup.GetAllSingleStateList // (Final|Native|Public|BlueprintCallable) // @ game+0x6331070
	struct TArray<struct AAIController*> GetAIControllers(); // Function DFMGameplay.AIGroup.GetAIControllers // (Final|Native|Public|BlueprintCallable) // @ game+0x6330db0
	struct TArray<struct FVector> FindPath(struct FVector Start, struct FVector End); // Function DFMGameplay.AIGroup.FindPath // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6330c80
	bool ContainController(struct AAIController* MemberRef); // Function DFMGameplay.AIGroup.ContainController // (Final|Native|Public|BlueprintCallable) // @ game+0x6330bf0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GroupAISystem
// Size: 0xb0 (Inherited: 0x30)
class UGroupAISystem : public UObject {
public:

	struct UClass* AIGroupClass; // 0x30(0x08)
	struct TArray<struct AAIGroup*> AIGroups; // 0x38(0x10)
	struct TArray<struct AFormation*> Formations; // 0x48(0x10)
	struct TMap<char, struct FScenesActorList> ScenesActorsCategoryList; // 0x58(0x50)
	char pad_A8[0x8]; // 0xa8(0x08)

	struct AAIGroup* TemporaryMergedGroup(struct AAIGroup* groupA, struct AAIGroup* groupB); // Function DFMGameplay.GroupAISystem.TemporaryMergedGroup // (Final|Native|Public) // @ game+0x63327d0
	bool RecoverGroups(struct AAIGroup* Group); // Function DFMGameplay.GroupAISystem.RecoverGroups // (Final|Native|Public) // @ game+0x6332400
	struct AAIGroup* NewGroup(struct UClass* AIGroupClassIn); // Function DFMGameplay.GroupAISystem.NewGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x6331910
	struct AFormation* NewFormation(); // Function DFMGameplay.GroupAISystem.NewFormation // (Final|Native|Public|BlueprintCallable) // @ game+0x63318e0
	struct AAIGroup* MergeGroup(struct AAIGroup* groupA, struct AAIGroup* groupB); // Function DFMGameplay.GroupAISystem.MergeGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x6331820
	bool JoinGroup(struct AAIGroup* GoalGroup, struct AAIController* AIController); // Function DFMGameplay.GroupAISystem.JoinGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x6331760
	struct UGroupAISystem* STATIC_Instance(struct UObject* WorldContext); // Function DFMGameplay.GroupAISystem.Instance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6331460
	int32_t GetScenesActorsInWorld(); // Function DFMGameplay.GroupAISystem.GetScenesActorsInWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x6331400
	struct TArray<struct AAIGroup*> GetAllGroups(); // Function DFMGameplay.GroupAISystem.GetAllGroups // (Final|Native|Public|BlueprintCallable) // @ game+0x6330f30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIEventComponent
// Size: 0x110 (Inherited: 0x100)
class UAIEventComponent : public UActorComponent {
public:

	struct FAIEventQueue AIEventQueue; // 0x100(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GuidedRocketAnimInstance
// Size: 0x2a0 (Inherited: 0x280)
class UGuidedRocketAnimInstance : public UAnimInstance {
public:

	struct ADFMSceneWeapon* OwnerSceneWeapon; // 0x280(0x08)
	float AimPitch; // 0x288(0x04)
	float AimYaw; // 0x28c(0x04)
	bool IsFppWeapon; // 0x290(0x01)
	char pad_291[0xf]; // 0x291(0x0f)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GuidedRocketMovementComponent
// Size: 0x6b0 (Inherited: 0x5c0)
class UGuidedRocketMovementComponent : public UGPWeaponProjectileMovementComponent {
public:

	char pad_5C0[0xa0]; // 0x5c0(0xa0)
	struct FGuidedRocketMovementParam GuidedRocketMovementParam; // 0x660(0x30)
	float GuidedRocketInitSpeed; // 0x690(0x04)
	float Bezier2ShapeFactor; // 0x694(0x04)
	bool bIsOnlyOffsetZ; // 0x698(0x01)
	char pad_699[0x3]; // 0x699(0x03)
	float Bezier2OffsetFactor; // 0x69c(0x04)
	float BulletMaxDistance; // 0x6a0(0x04)
	char pad_6A4[0xc]; // 0x6a4(0x0c)

	void InitMovementParam(struct FGuidedRocketMovementParam& InMovementParam); // Function DFMGameplay.GuidedRocketMovementComponent.InitMovementParam // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63371f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HackGameComponent
// Size: 0x130 (Inherited: 0x100)
class UHackGameComponent : public UActorComponent {
public:

	struct FSoftObjectPath NarrativeTablePath; // 0x100(0x18)
	struct TArray<int64_t> NarrativeIDs; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)

	void OnTableLoadComplete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.HackGameComponent.OnTableLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6337880
	void CreateNarratives(struct TArray<struct FHackGameNarrativeProps>& NarrativeProps); // Function DFMGameplay.HackGameComponent.CreateNarratives // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HallCharacterBase
// Size: 0x7d0 (Inherited: 0x798)
class AHallCharacterBase : public ACHARACTER {
public:

	struct UGPSkeletalMeshComponent* TPPMeshHair; // 0x798(0x08)
	struct UGPSkeletalMeshComponent* TPPMeshHead; // 0x7a0(0x08)
	struct UGPSkeletalMeshComponent* TPPMeshUpper; // 0x7a8(0x08)
	struct UGPSkeletalMeshComponent* TPPMeshLower; // 0x7b0(0x08)
	struct TArray<struct USkeletalMeshComponent*> AllMesh; // 0x7b8(0x10)
	char pad_7C8[0x8]; // 0x7c8(0x08)

	void UnlockSkeletalMeshComp(); // Function DFMGameplay.HallCharacterBase.UnlockSkeletalMeshComp // (Final|Native|Public|BlueprintCallable) // @ game+0x6337ec0
	void UnequipWatch(struct FName watchItemId); // Function DFMGameplay.HallCharacterBase.UnequipWatch // (Native|Public|BlueprintCallable) // @ game+0x6337e30
	void UnequipByEquipmentType(enum class EEquipmentType EquipmentType); // Function DFMGameplay.HallCharacterBase.UnequipByEquipmentType // (Native|Public|BlueprintCallable) // @ game+0x6337db0
	void Unequip(struct FName ItemID); // Function DFMGameplay.HallCharacterBase.Unequip // (Native|Public|BlueprintCallable) // @ game+0x6337d20
	void TryLockNotEmptyMeshComp(); // Function DFMGameplay.HallCharacterBase.TryLockNotEmptyMeshComp // (Final|Native|Public|BlueprintCallable) // @ game+0x6337d00
	void SetUIMatSlotIngoreRender(bool isIngore); // Function DFMGameplay.HallCharacterBase.SetUIMatSlotIngoreRender // (Native|Public) // @ game+0x6337bc0
	void SetSkeletalMeshTickEnabled(bool bEnabled); // Function DFMGameplay.HallCharacterBase.SetSkeletalMeshTickEnabled // (Native|Public) // @ game+0x6337b30
	void SetAvatar(struct FName InAvatarId); // Function DFMGameplay.HallCharacterBase.SetAvatar // (Native|Public|BlueprintCallable) // @ game+0x6337aa0
	void EquipWatch(struct FName watchItemId); // Function DFMGameplay.HallCharacterBase.EquipWatch // (Native|Public|BlueprintCallable) // @ game+0x62c47a0
	void Equip(struct FName ItemID); // Function DFMGameplay.HallCharacterBase.Equip // (Native|Public|BlueprintCallable) // @ game+0x6336d40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HealthStateTriggerRowTableManager
// Size: 0xa8 (Inherited: 0x38)
class UHealthStateTriggerRowTableManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x70]; // 0x38(0x70)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelicopterInteractorActor
// Size: 0x420 (Inherited: 0x378)
class AHelicopterInteractorActor : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	bool bIsEnableToPlayPath; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	/*struct TSet<struct ADFMCharacter*>*/char OnHelicopterCharacters[0x50]; // 0x388(0x50)
	struct UGPPathFollowComponent* GPPathFollowCom; // 0x3d8(0x08)
	float FlyIntervalTime; // 0x3e0(0x04)
	char pad_3E4[0x3c]; // 0x3e4(0x3c)

	void SetbFollowPath(bool bFollow); // Function DFMGameplay.HelicopterInteractorActor.SetbFollowPath // (Final|Native|Public|BlueprintCallable) // @ game+0x6337c50
	void OnSpineEndFollow(struct AActor* PathFollower); // Function DFMGameplay.HelicopterInteractorActor.OnSpineEndFollow // (Final|Native|Public) // @ game+0x6337800
	void GetOnHelicopter(struct AActor* Actor); // Function DFMGameplay.HelicopterInteractorActor.GetOnHelicopter // (Final|Native|Public|BlueprintCallable) // @ game+0x63370a0
	void GetOffHelicopter(struct AActor* Actor); // Function DFMGameplay.HelicopterInteractorActor.GetOffHelicopter // (Final|Native|Public|BlueprintCallable) // @ game+0x6337020
	int32_t GetHelicopterCharactersNum(); // Function DFMGameplay.HelicopterInteractorActor.GetHelicopterCharactersNum // (Final|Native|Public|BlueprintCallable) // @ game+0x6336f60
	bool GetbFollwPath(); // Function DFMGameplay.HelicopterInteractorActor.GetbFollwPath // (Final|Native|Public|BlueprintCallable) // @ game+0x63371c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetComponent
// Size: 0x270 (Inherited: 0x100)
class UHelmetComponent : public UActorComponent {
public:

	char pad_100[0x100]; // 0x100(0x100)
	struct ACHARACTER* CHARACTER; // 0x200(0x08)
	struct TMap<struct UClass*, struct UHelmetViewBase*> ViewMap; // 0x208(0x50)
	char pad_258[0x4]; // 0x258(0x04)
	struct TWeakObjectPtr<struct UEquipComponentManager> EquipComponentManager; // 0x25c(0x08)
	char pad_264[0xc]; // 0x264(0x0c)

	void ServerToggleMask(bool InOpen); // Function DFMGameplay.HelmetComponent.ServerToggleMask // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35e4130
	void OnRep_Opened(); // Function DFMGameplay.HelmetComponent.OnRep_Opened // (Final|Native|Public) // @ game+0x6337710
	void OnRep_Config(); // Function DFMGameplay.HelmetComponent.OnRep_Config // (Final|Native|Public) // @ game+0x63376f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetFaceMaskStateSubsystem
// Size: 0x48 (Inherited: 0x38)
class UHelmetFaceMaskStateSubsystem : public UWorldSubsystem {
public:

	struct TArray<struct FHelmetMaskDamageInfo> MaskInfoArray; // 0x38(0x10)

	struct UHelmetFaceMaskStateSubsystem* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.HelmetFaceMaskStateSubsystem.Get // (Final|Native|Static|Public) // @ game+0x6336ea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelemetParticalSystemComponent
// Size: 0x7f0 (Inherited: 0x7d0)
class UHelemetParticalSystemComponent : public UParticleSystemComponent {
public:

	char pad_7D0[0x4]; // 0x7d0(0x04)
	struct FVector2D EffectSize; // 0x7d4(0x08)
	char pad_7DC[0x14]; // 0x7dc(0x14)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetEffectMeshAnimInstance
// Size: 0x2b0 (Inherited: 0x280)
class UHelmetEffectMeshAnimInstance : public UAnimInstance {
public:

	bool bHelmetMaskOpened; // 0x280(0x01)
	bool bHelmetMaskWaggled; // 0x281(0x01)
	char pad_282[0x6]; // 0x282(0x06)
	struct UAnimSequence* CloseHelmet; // 0x288(0x08)
	struct UAnimSequence* CloseHelmetIdle; // 0x290(0x08)
	struct UAnimSequence* OpenHelmet; // 0x298(0x08)
	struct UAnimSequence* OpenHelmetIdle; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CameraTransComponent
// Size: 0x240 (Inherited: 0x240)
class UCameraTransComponent : public USceneComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HitFaceMaskEffectComponent
// Size: 0x1b0 (Inherited: 0x108)
class UHitFaceMaskEffectComponent : public UGPNetworkActorComponent {
public:

	struct AGPCharacter* GPCharacter; // 0x108(0x08)
	struct USkeletalMeshComponent* FaceMaskEffectParent; // 0x110(0x08)
	struct TArray<struct FGlassBreakeInfo> GlassBreakInfoArray; // 0x118(0x10)
	struct FSoftObjectPath GlassBreakTemplate; // 0x128(0x18)
	struct TMap<int32_t, struct UParticleSystemComponent*> CreatedGlassBreakPSCMap; // 0x140(0x50)
	char pad_190[0x20]; // 0x190(0x20)

	void ResetAllEffects(); // Function DFMGameplay.HitFaceMaskEffectComponent.ResetAllEffects // (Final|Native|Public) // @ game+0x6337a80
	void OnOwnerCharacterReborn(); // Function DFMGameplay.HitFaceMaskEffectComponent.OnOwnerCharacterReborn // (Final|Native|Public) // @ game+0x63376d0
	void OnOwnerCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.HitFaceMaskEffectComponent.OnOwnerCharacterDied // (Final|Native|Public) // @ game+0x63375d0
	void FaceMaskTakeDamage(float BulletBaseDamage, struct FVector DamageMakerLocalLocation); // Function DFMGameplay.HitFaceMaskEffectComponent.FaceMaskTakeDamage // (Final|Native|Protected|HasDefaults) // @ game+0x6336dd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HitNotifyInterface
// Size: 0x30 (Inherited: 0x30)
class UHitNotifyInterface : public UInterface {
public:


	void OnNtfHit(struct FHitResult& HitResult); // Function DFMGameplay.HitNotifyInterface.OnNtfHit // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x6337500
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HittableActor
// Size: 0x418 (Inherited: 0x388)
class AHittableActor : public AStaticMeshActor {
public:

	char pad_388[0x90]; // 0x388(0x90)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HoldAndUseItemInterface
// Size: 0x30 (Inherited: 0x30)
class UHoldAndUseItemInterface : public UInterface {
public:


	void GetUseAndHoldItemClass(); // Function DFMGameplay.HoldAndUseItemInterface.GetUseAndHoldItemClass // (Native|Public) // @ game+0x6337120
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BuffImmunityInfo
// Size: 0x40 (Inherited: 0x30)
class UBuffImmunityInfo : public UObject {
public:

	float ContinueTime; // 0x30(0x04)
	uint32_t Counter; // 0x34(0x04)
	float LastAddTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InactivePlayerDetectComponent
// Size: 0x100 (Inherited: 0x100)
class UInactivePlayerDetectComponent : public UActorComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InactivePlayerDetectSystem
// Size: 0x428 (Inherited: 0x378)
class AInactivePlayerDetectSystem : public AActor {
public:

	struct TMap<struct TWeakObjectPtr<struct ADFMCharacter>, float> InactivePlayerCharacter; // 0x378(0x50)
	struct TMap<struct TWeakObjectPtr<struct ADFMCharacter>, bool> LongTimeInactivePlayerCharacter; // 0x3c8(0x50)
	struct TArray<struct TWeakObjectPtr<struct ADFMCharacter>> PlayerCharacterList; // 0x418(0x10)

	void RemoveFromLongTimeInactivePlayerMap(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InactivePlayerDetectSystem.RemoveFromLongTimeInactivePlayerMap // (Final|Native|Public|BlueprintCallable) // @ game+0x633c940
	void RemoveFromInactivePlayerMap(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InactivePlayerDetectSystem.RemoveFromInactivePlayerMap // (Final|Native|Public|BlueprintCallable) // @ game+0x633c8c0
	void AddToLongTimeInactivePlayerMap(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InactivePlayerDetectSystem.AddToLongTimeInactivePlayerMap // (Final|Native|Public|BlueprintCallable) // @ game+0x633acc0
	void AddToInactivePlayerMap(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InactivePlayerDetectSystem.AddToInactivePlayerMap // (Final|Native|Public|BlueprintCallable) // @ game+0x633ac40
	struct ADFMCharacter* AcquireInactivePlayerCharacter(); // Function DFMGameplay.InactivePlayerDetectSystem.AcquireInactivePlayerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x633ac10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractAcquireItemBase
// Size: 0x3e0 (Inherited: 0x378)
class AInteractAcquireItemBase : public AActor {
public:

	struct UMeshComponent* MeshCompFPP; // 0x378(0x08)
	struct UMeshComponent* MeshCompTPP; // 0x380(0x08)
	struct FName InventoryId; // 0x388(0x08)
	struct UAnimSequence* AnimPlay; // 0x390(0x08)
	float DelayRefreshAppearanceTime; // 0x398(0x04)
	bool bNeedInspection; // 0x39c(0x01)
	char pad_39D[0x3]; // 0x39d(0x03)
	float DelayRefreshAppearanceTimeStamp; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct FTimerHandle RefreshAppearanceTimerHandle; // 0x3a8(0x08)
	char pad_3B0[0x8]; // 0x3b0(0x08)
	struct FVector translation; // 0x3b8(0x0c)
	struct FRotator Rot; // 0x3c4(0x0c)
	struct FVector Scale; // 0x3d0(0x0c)
	bool bUpdateSkeletonMeshLodImmediately; // 0x3dc(0x01)
	char pad_3DD[0x3]; // 0x3dd(0x03)

	void UpdateSkeletonMeshLod(struct USkeletalMeshComponent* SkeletalMeshComp); // Function DFMGameplay.InteractAcquireItemBase.UpdateSkeletonMeshLod // (Final|Native|Public|Const) // @ game+0x633cb00
	void SetUpdateSkeletonMeshLodImmediately(); // Function DFMGameplay.InteractAcquireItemBase.SetUpdateSkeletonMeshLodImmediately // (Final|Native|Public) // @ game+0x633cae0
	void RefreshTppAppearance(); // Function DFMGameplay.InteractAcquireItemBase.RefreshTppAppearance // (Final|Native|Protected) // @ game+0x633c8a0
	void RefreshFppAppearance(); // Function DFMGameplay.InteractAcquireItemBase.RefreshFppAppearance // (Final|Native|Protected) // @ game+0x633c880
	void OnLoadComplete(struct TArray<struct FSoftObjectPath> Path); // Function DFMGameplay.InteractAcquireItemBase.OnLoadComplete // (Final|Native|Protected) // @ game+0x633c620
	struct FName GetInventoryId(); // Function DFMGameplay.InteractAcquireItemBase.GetInventoryId // (Final|Native|Public|Const) // @ game+0x633b4d0
	void CheckIfSkeletalMeshOrStaticMesh(struct UObject* TargetMeshObject, enum class ECheckItemMeshType& CheckItemMeshType); // Function DFMGameplay.InteractAcquireItemBase.CheckIfSkeletalMeshOrStaticMesh // (Final|Native|Protected|HasOutParms|Const) // @ game+0x633add0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ChildLight
// Size: 0x390 (Inherited: 0x378)
class AInteractor_ChildLight : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct FLightInfo LightInfo; // 0x388(0x02)
	char pad_38A[0x6]; // 0x38a(0x06)

	void OnRepLightInfo(); // Function DFMGameplay.Interactor_ChildLight.OnRepLightInfo // (Final|Native|Public) // @ game+0x6340ac0
	void OnLightInfoChange(bool IsPower, bool IsDamaged); // Function DFMGameplay.Interactor_ChildLight.OnLightInfoChange // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void OnDamaged(); // Function DFMGameplay.Interactor_ChildLight.OnDamaged // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BroadcastDamaged(); // Function DFMGameplay.Interactor_ChildLight.BroadcastDamaged // (Net|Native|Event|NetMulticast|Protected) // @ game+0xbd2900
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_CodedLock_SubNumberActor
// Size: 0x390 (Inherited: 0x378)
class AInteractor_CodedLock_SubNumberActor : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	int32_t Index; // 0x380(0x04)
	int32_t Number; // 0x384(0x04)
	struct UAsyncStaticMeshComponent* SubNumberMesh; // 0x388(0x08)

	void OnRep_Number(int32_t old); // Function DFMGameplay.Interactor_CodedLock_SubNumberActor.OnRep_Number // (Final|Native|Public) // @ game+0x6340ba0
	void OnRep_Index(int32_t old); // Function DFMGameplay.Interactor_CodedLock_SubNumberActor.OnRep_Index // (Final|Native|Public) // @ game+0x6340b00
	void InitSubNumberActor(int32_t InIndex, int32_t InNumber, struct FTransform InTransform, struct UStaticMesh* InMesh); // Function DFMGameplay.Interactor_CodedLock_SubNumberActor.InitSubNumberActor // (Final|Native|Public|HasDefaults) // @ game+0x633f2c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ElevatorDoor
// Size: 0x3f8 (Inherited: 0x378)
class AInteractor_ElevatorDoor : public AActor {
public:

	struct UStaticMeshComponent* ElevatorOutDoorTop; // 0x378(0x08)
	struct UStaticMeshComponent* ElevatorOutDoorDown; // 0x380(0x08)
	struct UStaticMeshComponent* ElevatorOutDoorDownNet; // 0x388(0x08)
	struct USplineComponent* InnerDoorTopSplineComp; // 0x390(0x08)
	struct USplineComponent* InnerDoorDownSplineComp; // 0x398(0x08)
	struct USplineComponent* InnerDoorDownNetSplineComp; // 0x3a0(0x08)
	enum class EElevatorDoorState CurOutDoorState; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float ElevatorDoorMovingStartTime; // 0x3ac(0x04)
	char pad_3B0[0x14]; // 0x3b0(0x14)
	float TotalDoorMoveTime; // 0x3c4(0x04)
	struct UCurveFloat* TopDoorOpenCurve; // 0x3c8(0x08)
	struct UCurveFloat* TopDoorCloseCurve; // 0x3d0(0x08)
	struct UCurveFloat* DownDoorOpenCurve; // 0x3d8(0x08)
	struct UCurveFloat* DownDoorCloseCurve; // 0x3e0(0x08)
	struct UCurveFloat* DownNetDoorOpenCurve; // 0x3e8(0x08)
	struct UCurveFloat* DownNetDoorCloseCurve; // 0x3f0(0x08)

	void OnRep_CurDoorStateChange(); // Function DFMGameplay.Interactor_ElevatorDoor.OnRep_CurDoorStateChange // (Final|Native|Public) // @ game+0x63476d0
	void MoveDoorHandle(bool bWantOpen); // Function DFMGameplay.Interactor_ElevatorDoor.MoveDoorHandle // (Final|Native|Public) // @ game+0x6346b80
	void ElevatorDoorMove(struct UStaticMeshComponent* ElevatorDoor, struct USplineComponent* DoorSpline, struct UCurveFloat* DoorCurve, float Curtime); // Function DFMGameplay.Interactor_ElevatorDoor.ElevatorDoorMove // (Final|Native|Public) // @ game+0x63467e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PatrolRobotTriggerActor
// Size: 0x398 (Inherited: 0x378)
class APatrolRobotTriggerActor : public AActor {
public:

	struct UBoxComponent* BoxComponent; // 0x378(0x08)
	enum class EPatrolRobotTriggerType TriggerType; // 0x380(0x01)
	char pad_381[0x3]; // 0x381(0x03)
	float StopDuration; // 0x384(0x04)
	struct AInteractorBase* LockedDoor; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.PatrolRobotTriggerActor.OnOverlapEnd // (Native|Public) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.PatrolRobotTriggerActor.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x36ce950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_RescueDavidPoint
// Size: 0x3c0 (Inherited: 0x378)
class AInteractor_RescueDavidPoint : public AActor {
public:

	/*struct TSoftClassPtr<UObject>*/char DavidBodySoftClass[0x28]; // 0x378(0x28)
	struct FName NpcName; // 0x3a0(0x08)
	struct FName FashionConfigName; // 0x3a8(0x08)
	struct ADFMNPCCharacter* CachedDavid; // 0x3b0(0x08)
	bool bUseCarryBodyIgnoreColl; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)

	void OnDavidLoaded(struct FSoftObjectPath& InPath); // Function DFMGameplay.Interactor_RescueDavidPoint.OnDavidLoaded // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x634a270
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ShopStationItemConfigManager
// Size: 0x48 (Inherited: 0x38)
class UShopStationItemConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BombCutWireInfo
// Size: 0x38 (Inherited: 0x30)
class UBombCutWireInfo : public UObject {
public:

	int32_t WireIdx; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ZiplineActor
// Size: 0x4a0 (Inherited: 0x458)
class AInteractor_ZiplineActor : public AZiplineInteractorActor {
public:

	char pad_458[0x8]; // 0x458(0x08)
	struct AInteractorBase* RedInteractor; // 0x460(0x08)
	struct AInteractorBase* GreenInteractor; // 0x468(0x08)
	struct AInteractorBase* GetOffZiplineInteractor; // 0x470(0x08)
	struct UClass* GetOffZiplineInteractorClass; // 0x478(0x08)
	struct UClass* GetOnZiplineGreenInteractorClass; // 0x480(0x08)
	struct UClass* GetOnZiplineRedInteractorClass; // 0x488(0x08)
	struct UStaticMeshComponent* RedInteractorPoint; // 0x490(0x08)
	struct UStaticMeshComponent* GreenInteractorPoint; // 0x498(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAsyncSkeletalMeshComponent
// Size: 0xf60 (Inherited: 0xf50)
class UInteractorAsyncSkeletalMeshComponent : public UAsyncSkeletalMeshComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnMeshLoadCompleted[0x10]; // 0xf50(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAsyncStaticMeshComponent
// Size: 0x830 (Inherited: 0x818)
class UInteractorAsyncStaticMeshComponent : public UAsyncStaticMeshComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnStaticMeshLoadCompleted[0x10]; // 0x818(0x10)
	char pad_828[0x8]; // 0x828(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorBoxComponent
// Size: 0x590 (Inherited: 0x590)
class UInteractorBoxComponent : public UBoxComponent {
public:


	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.InteractorBoxComponent.OnEndOverlap // (Final|Native|Protected) // @ game+0x63321c0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.InteractorBoxComponent.OnBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x6331fc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorBPLib
// Size: 0x30 (Inherited: 0x30)
class UInteractorBPLib : public UObject {
public:


	void STATIC_OperateInteractor(struct AActor* InInteractor, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorBPLib.OperateInteractor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6357600
	void STATIC_OpenBox(struct UObject* WorldContextObject, struct AActor* InBox); // Function DFMGameplay.InteractorBPLib.OpenBox // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6357550
	bool STATIC_IsDoor(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.IsDoor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356ad0
	bool STATIC_IsAcquireItem(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.IsAcquireItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6356940
	void STATIC_GiveItem(struct UInventoryManager* Mgr, struct FName& ID, int32_t Quantity, int32_t Slot, int32_t Source); // Function DFMGameplay.InteractorBPLib.GiveItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x63567b0
	int32_t STATIC_GetGeneralSkillLevel(struct APlayerController* InPlayerController, int32_t GeneralSkillID); // Function DFMGameplay.InteractorBPLib.GetGeneralSkillLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63565d0
	void STATIC_ExecuteInteractByTag(struct AActor* InInteractor, struct FGameplayTag OperatorTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorBPLib.ExecuteInteractByTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6356310
	bool STATIC_DoorNeedKicked(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.DoorNeedKicked // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356290
	bool STATIC_DoorIsOpen(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.DoorIsOpen // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356210
	bool STATIC_DoorIsLock(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.DoorIsLock // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356190
	bool STATIC_AICanInteract(struct AActor* InInteractor); // Function DFMGameplay.InteractorBPLib.AICanInteract // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6355f30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecuteOperatorCondition
// Size: 0x30 (Inherited: 0x30)
class UInteractorExecuteOperatorCondition : public UObject {
public:


	bool IsAllowExecute(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag OperateTag); // Function DFMGameplay.InteractorExecuteOperatorCondition.IsAllowExecute // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x63569c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecuteOperatorInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorExecuteOperatorInterface : public UInterface {
public:


	void ProcessOperatorTag(struct FGameplayTag OperateTag, struct FGameplayTag OriginTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorInterface.ProcessOperatorTag // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x63577b0
	void OnReset(); // Function DFMGameplay.InteractorExecuteOperatorInterface.OnReset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xf12fc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorGeneratePasswordComponent
// Size: 0x120 (Inherited: 0x100)
class UInteractorGeneratePasswordComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnGenPwdComplete[0x10]; // 0x100(0x10)
	int32_t VerifyPassword; // 0x110(0x04)
	int32_t PasswordEveryBodyNum; // 0x114(0x04)
	int32_t PasswordNum; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)

	bool VerifyPwd(int32_t Password); // Function DFMGameplay.InteractorGeneratePasswordComponent.VerifyPwd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6357c70
	void OnRep_Password(); // Function DFMGameplay.InteractorGeneratePasswordComponent.OnRep_Password // (Final|Native|Protected) // @ game+0x6357390
	struct TArray<int32_t> GetPasswordArray(); // Function DFMGameplay.InteractorGeneratePasswordComponent.GetPasswordArray // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356730
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorGrabItemBase
// Size: 0x3c8 (Inherited: 0x378)
class AInteractorGrabItemBase : public AActor {
public:

	char pad_378[0x18]; // 0x378(0x18)
	struct FName ItemID; // 0x390(0x08)
	float StartGrabTimeStamp; // 0x398(0x04)
	float PauseDuration; // 0x39c(0x04)
	float RestartPunishTime; // 0x3a0(0x04)
	float GrabTimeLimit; // 0x3a4(0x04)
	struct UMeshComponent* MeshComp; // 0x3a8(0x08)
	char pad_3B0[0x8]; // 0x3b0(0x08)
	float LODCullingDistance; // 0x3b8(0x04)
	bool bIsCompleted; // 0x3bc(0x01)
	char pad_3BD[0x3]; // 0x3bd(0x03)
	float LastPauseTime; // 0x3c0(0x04)
	bool bEnable; // 0x3c4(0x01)
	char pad_3C5[0x3]; // 0x3c5(0x03)

	void OnRep_ItemID(); // Function DFMGameplay.InteractorGrabItemBase.OnRep_ItemID // (Final|Native|Protected) // @ game+0x635c860
	void OnRep_IsCompleted(bool bCompleted); // Function DFMGameplay.InteractorGrabItemBase.OnRep_IsCompleted // (Final|Native|Protected) // @ game+0x635c7d0
	void OnRep_bEnable(); // Function DFMGameplay.InteractorGrabItemBase.OnRep_bEnable // (Final|Native|Protected) // @ game+0x635c880
	void OnMeshComponentCreated(struct UMeshComponent* OutMeshComp); // Function DFMGameplay.InteractorGrabItemBase.OnMeshComponentCreated // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void OnLoadComplete(struct FSoftObjectPath& Path); // Function DFMGameplay.InteractorGrabItemBase.OnLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x635c6f0
	void OnEnableChange(bool bIsEnable); // Function DFMGameplay.InteractorGrabItemBase.OnEnableChange // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void OnClientCompleted(); // Function DFMGameplay.InteractorGrabItemBase.OnClientCompleted // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	bool MarkComplete(); // Function DFMGameplay.InteractorGrabItemBase.MarkComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x635c5f0
	void MakeRadialDamage(struct AActor* MakerInstigator, struct FHitResult& HitResult, int64_t& AttakerValueId, struct TArray<struct AActor*>& IgnoreActors, int32_t& HitId, struct FMakeDamageParams& Params); // Function DFMGameplay.InteractorGrabItemBase.MakeRadialDamage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x635c220
	bool IsEnabled(); // Function DFMGameplay.InteractorGrabItemBase.IsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x635c1f0
	bool IsComplete(); // Function DFMGameplay.InteractorGrabItemBase.IsComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x635c1c0
	void DisableOwnerGrabItem(); // Function DFMGameplay.InteractorGrabItemBase.DisableOwnerGrabItem // (Final|Native|Public|BlueprintCallable) // @ game+0x635ba20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorLevelDesignComponent
// Size: 0x100 (Inherited: 0x100)
class UInteractorLevelDesignComponent : public UActorComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorManningComponent
// Size: 0x610 (Inherited: 0x580)
class UInteractorManningComponent : public USphereComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnClientTeammateManning[0x10]; // 0x580(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientTeammateManningCompleted[0x10]; // 0x590(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientStartOrStopManning[0x10]; // 0x5a0(0x10)
	float ProgressPerSecond; // 0x5b0(0x04)
	float ManningEndedTime; // 0x5b4(0x04)
	struct FName UI_Operation_Guard_Progress; // 0x5b8(0x08)
	struct FText ManningTitle; // 0x5c0(0x18)
	bool bEnableManningMapCircle; // 0x5d8(0x01)
	char pad_5D9[0x3]; // 0x5d9(0x03)
	int32_t OwnerTeamID; // 0x5dc(0x04)
	bool bEnable; // 0x5e0(0x01)
	char pad_5E1[0x3]; // 0x5e1(0x03)
	float RemainManningTime; // 0x5e4(0x04)
	bool bManningTiming; // 0x5e8(0x01)
	bool bManningCompleted; // 0x5e9(0x01)
	bool bEnableSignificance; // 0x5ea(0x01)
	char pad_5EB[0x5]; // 0x5eb(0x05)
	struct TArray<struct AGPCharacter*> InAreaTeammates; // 0x5f0(0x10)
	struct AGPGameState* GPGameState; // 0x600(0x08)
	char pad_608[0x8]; // 0x608(0x08)

	void ServerSetManningEnable(bool Enable, int32_t TeamId); // Function DFMGameplay.InteractorManningComponent.ServerSetManningEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x6360040
	void Reset(); // Function DFMGameplay.InteractorManningComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x635ffa0
	void OnRep_ManningTiming(); // Function DFMGameplay.InteractorManningComponent.OnRep_ManningTiming // (Final|Native|Protected) // @ game+0x635fce0
	void OnRep_ManningCompleted(); // Function DFMGameplay.InteractorManningComponent.OnRep_ManningCompleted // (Final|Native|Protected) // @ game+0x635fcc0
	void OnRep_Enable(); // Function DFMGameplay.InteractorManningComponent.OnRep_Enable // (Final|Native|Protected) // @ game+0x635fc80
	void OnManningViewShowed(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.InteractorManningComponent.OnManningViewShowed // (Final|Native|Private) // @ game+0x635fb80
	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.InteractorManningComponent.OnEndOverlap // (Final|Native|Protected) // @ game+0x635fa40
	void OnClientManningCompleted(); // Function DFMGameplay.InteractorManningComponent.OnClientManningCompleted // (Final|Native|Protected) // @ game+0x635fa20
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.InteractorManningComponent.OnBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x635f820
	float GetManningProgress(); // Function DFMGameplay.InteractorManningComponent.GetManningProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x635f4b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorMovingAddPulseComponent
// Size: 0x130 (Inherited: 0x100)
class UInteractorMovingAddPulseComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	float PulseQuantity; // 0x108(0x04)
	struct FName MeshCompName; // 0x10c(0x08)
	struct FName BoneName; // 0x114(0x08)
	bool bIsIgnoreOwnerOperator; // 0x11c(0x01)
	char pad_11D[0x3]; // 0x11d(0x03)
	struct FVector SweepExtendScale; // 0x120(0x0c)
	char pad_12C[0x4]; // 0x12c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOpenWorldRefLinkManager
// Size: 0x3c8 (Inherited: 0x378)
class AInteractorOpenWorldRefLinkManager : public ALevelSubsystem {
public:

	struct TMap<struct FName, struct FRefLinkComps> LinkCompsMap; // 0x378(0x50)

	struct TArray<struct UInteractorRefLinkComponent*> GetRefLinkCompsByGroup(struct FName InGroup); // Function DFMGameplay.InteractorOpenWorldRefLinkManager.GetRefLinkCompsByGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x635f4e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptConditionLib
// Size: 0x30 (Inherited: 0x30)
class UInteractorOptConditionLib : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptControllerSwitchComponent
// Size: 0x310 (Inherited: 0x100)
class UInteractorOptControllerSwitchComponent : public UActorComponent {
public:

	bool bSwitchActiveStatus; // 0x100(0x01)
	enum class EWorkVehicleSwitchStatus ControllerSwitchStatus; // 0x101(0x01)
	bool bHasAlreadyTriggerOnce; // 0x102(0x01)
	char pad_103[0x1]; // 0x103(0x01)
	float SwitchBlinkIntervalTime; // 0x104(0x04)
	struct FLinearColor DefaultLightColor; // 0x108(0x10)
	struct FLinearColor GreenLightColor; // 0x118(0x10)
	struct FLinearColor RedLightColor; // 0x128(0x10)
	struct FLinearColor YellowLightColor; // 0x138(0x10)
	bool bIsNeedTriggerBySkill; // 0x148(0x01)
	bool bCanOnlyTriggerOnce; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	float DelayCloseAbilityFireArrowTime; // 0x14c(0x04)
	float SkillTriggerRadius; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct TMap<int32_t, float> SkillIdAndTimeTriggerInfo; // 0x158(0x50)
	struct TMap<struct FName, struct FControllerLightNameInfo> ControllerNameInfoMap; // 0x1a8(0x50)
	struct FText NeedTriggerBySkillText; // 0x1f8(0x18)
	struct FText HasAlreadyTriggerBySkillText; // 0x210(0x18)
	struct FText TriggerBySkillSwitchActivatedText; // 0x228(0x18)
	float TriggerBySkillSwitchActivatedTextShowTime; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct FSoftObjectPath ButtonClickAudioEvent; // 0x248(0x18)
	struct FSoftObjectPath ControllerOnAudioEvent; // 0x260(0x18)
	struct FSoftObjectPath ControllerOffAudioEvent; // 0x278(0x18)
	bool bIfGreenOnBlink; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct AInteractorBaseProxy* OwnerInteractorBaseProxy; // 0x298(0x08)
	struct TMap<struct USceneComponent*, struct FControllerLightComps> ControllerCompMap; // 0x2a0(0x50)
	char pad_2F0[0x20]; // 0x2f0(0x20)

	void TriggerBySkillFireArrow(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.InteractorOptControllerSwitchComponent.TriggerBySkillFireArrow // (Final|Native|Public|HasOutParms) // @ game+0x63635c0
	void SetMaterialColor(struct UMaterialInstanceDynamic* InMat, enum class EWorkVehicleSwitchLightType SwitchLightType); // Function DFMGameplay.InteractorOptControllerSwitchComponent.SetMaterialColor // (Final|Native|Public|Const) // @ game+0x6363470
	void SetLightCompColor(struct UMeshComponent* LightComp, enum class EWorkVehicleSwitchLightType SwitchLightType); // Function DFMGameplay.InteractorOptControllerSwitchComponent.SetLightCompColor // (Final|Native|Public|Const) // @ game+0x63633b0
	void OnRep_ControllerSwitchStatus(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.OnRep_ControllerSwitchStatus // (Final|Native|Private) // @ game+0x6362fe0
	void OnOptProcessEnd(struct ACHARACTER* InOptCharacter, struct AActor* InOptInteractor, struct FGameplayTag InOptTag); // Function DFMGameplay.InteractorOptControllerSwitchComponent.OnOptProcessEnd // (Final|Native|Public) // @ game+0x6362ee0
	void OnOptProcessBegin(struct ACHARACTER* InOptCharacter, struct AActor* InOptInteractor, struct FGameplayTag InOptTag); // Function DFMGameplay.InteractorOptControllerSwitchComponent.OnOptProcessBegin // (Final|Native|Public) // @ game+0x6362de0
	void OnDelayStopFireArrowDamage(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.OnDelayStopFireArrowDamage // (Final|Native|Public|Const) // @ game+0x6362dc0
	void OnControllerSwitchOff(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.OnControllerSwitchOff // (Final|Native|Public) // @ game+0x6362da0
	void LightBlink(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.LightBlink // (Final|Native|Public) // @ game+0x6362d80
	void InitTriggerBySkillStatus(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.InitTriggerBySkillStatus // (Final|Native|Public) // @ game+0x6362d60
	void InitSceneComp(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.InitSceneComp // (Final|Native|Public) // @ game+0x6362d40
	struct AInteractorBaseProxy* GetOwnerInteractorBaseProxy(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.GetOwnerInteractorBaseProxy // (Final|Native|Public) // @ game+0x6362d10
	struct FText GetNeedTriggerBySkillText(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.GetNeedTriggerBySkillText // (Final|Native|Public) // @ game+0x6362c70
	struct USceneComponent* GetNearestControllerComp(struct FVector& RadialLocation); // Function DFMGameplay.InteractorOptControllerSwitchComponent.GetNearestControllerComp // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6362bd0
	bool GetIsNeedTriggerBySkill(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.GetIsNeedTriggerBySkill // (Final|Native|Public|Const) // @ game+0x6362ba0
	struct FText GetHasAlreadyTriggerBySkillText(); // Function DFMGameplay.InteractorOptControllerSwitchComponent.GetHasAlreadyTriggerBySkillText // (Final|Native|Public) // @ game+0x6362b00
	bool EMPTakerShouldEffect(struct ACHARACTER* EMPOwner); // Function DFMGameplay.InteractorOptControllerSwitchComponent.EMPTakerShouldEffect // (Final|Native|Public) // @ game+0x6362a40
	void EMPTakerApplyEffect(float EffectTimeSeconds, enum class EEMPType EmpType, struct ACHARACTER* EMPOwner, struct AActor* Projectile); // Function DFMGameplay.InteractorOptControllerSwitchComponent.EMPTakerApplyEffect // (Final|Native|Public) // @ game+0x63628f0
	void DamageTakerApplyDamageEffect(bool& bIsServer, struct FDamageResultInfo& DamageResult); // Function DFMGameplay.InteractorOptControllerSwitchComponent.DamageTakerApplyDamageEffect // (Final|Native|Public|HasOutParms) // @ game+0x63627d0
	void ClientShowLight(enum class EWorkVehicleSwitchStatus SwitchStatus); // Function DFMGameplay.InteractorOptControllerSwitchComponent.ClientShowLight // (Final|Native|Public) // @ game+0x6362750
	void ClientPlayAudio(struct FSoftObjectPath& AudioPath); // Function DFMGameplay.InteractorOptControllerSwitchComponent.ClientPlayAudio // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x6362670
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptInterruptComponent
// Size: 0x170 (Inherited: 0x100)
class UInteractorOptInterruptComponent : public UActorComponent {
public:

	struct AActor* CachedOwner; // 0x100(0x08)
	struct TMap<struct FGameplayTag, struct FInteractorInterruptCheckBox> Tag2InterruptCheckBox; // 0x108(0x50)
	char pad_158[0x8]; // 0x158(0x08)
	struct FString CachedInterruptString; // 0x160(0x10)

	void OnToStand(); // Function DFMGameplay.InteractorOptInterruptComponent.OnToStand // (Final|Native|Protected) // @ game+0x6366c50
	void OnToProne(); // Function DFMGameplay.InteractorOptInterruptComponent.OnToProne // (Final|Native|Protected) // @ game+0x6366c30
	void OnToCrouch(); // Function DFMGameplay.InteractorOptInterruptComponent.OnToCrouch // (Final|Native|Protected) // @ game+0x6366c10
	void OnReloadAmmo(bool InbIsEnter); // Function DFMGameplay.InteractorOptInterruptComponent.OnReloadAmmo // (Final|Native|Protected) // @ game+0x6366ac0
	void OnMovingChanged(); // Function DFMGameplay.InteractorOptInterruptComponent.OnMovingChanged // (Final|Native|Protected) // @ game+0x6366aa0
	void OnKnockBack(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.InteractorOptInterruptComponent.OnKnockBack // (Final|Native|Protected) // @ game+0x6366880
	void OnJumpChanged(); // Function DFMGameplay.InteractorOptInterruptComponent.OnJumpChanged // (Final|Native|Protected) // @ game+0x6366860
	void OnInADS(); // Function DFMGameplay.InteractorOptInterruptComponent.OnInADS // (Final|Native|Protected) // @ game+0x6366840
	void OnImpendingDeath(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.InteractorOptInterruptComponent.OnImpendingDeath // (Final|Native|Protected) // @ game+0x63667c0
	void OnGameHudStateChanged(); // Function DFMGameplay.InteractorOptInterruptComponent.OnGameHudStateChanged // (Final|Native|Protected) // @ game+0x63667a0
	void OnFiring(); // Function DFMGameplay.InteractorOptInterruptComponent.OnFiring // (Final|Native|Protected) // @ game+0x6366780
	void OnDeath(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.InteractorOptInterruptComponent.OnDeath // (Final|Native|Protected) // @ game+0x6366680
	void OnChangeWeapon(struct AWeaponBase* LastWeapon, struct AWeaponBase* CurrentWeapon); // Function DFMGameplay.InteractorOptInterruptComponent.OnChangeWeapon // (Final|Native|Protected) // @ game+0x63665c0
	void OnCastSkill(enum class ECharingSlot InSlot, int32_t InSkillID, bool InbCastOrEnd); // Function DFMGameplay.InteractorOptInterruptComponent.OnCastSkill // (Final|Native|Protected) // @ game+0x63664b0
	void OnAssassinate(bool InBeing); // Function DFMGameplay.InteractorOptInterruptComponent.OnAssassinate // (Final|Native|Protected) // @ game+0x6366420
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessDurationInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorProcessDurationInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessFOVCurveComponent
// Size: 0x150 (Inherited: 0x100)
class UInteractorProcessFOVCurveComponent : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	struct FGameplayTagContainer TriggerTags; // 0x110(0x20)
	struct UCurveFloat* FOVAdditiveCurve; // 0x130(0x08)
	float FOVAdditiveCurveEndSmoothTime; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UCurveFloat* FOVMutrixOneMinusCurve; // 0x140(0x08)
	float FOVMutrixOneMinusCurveEndTime; // 0x148(0x04)
	float FOVMutrixOneMinusCurveEndSmoothTime; // 0x14c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessMoveNtyInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorProcessMoveNtyInterface : public UInterface {
public:


	void ProcessMoveStart(); // Function DFMGameplay.InteractorProcessMoveNtyInterface.ProcessMoveStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xf12f80
	void ProcessMoveComplete(); // Function DFMGameplay.InteractorProcessMoveNtyInterface.ProcessMoveComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xf12fc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimNtyInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorProcessPawnAnimNtyInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnDeathEventComponent
// Size: 0x150 (Inherited: 0x100)
class UInteractorProcessPawnDeathEventComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct FGameplayTag OnPawnImpendingDeathInterruptTag; // 0x108(0x08)
	struct FGameplayTag OnPawnDieInterruptTag; // 0x110(0x08)
	struct FGameplayTag OnKnockBackTag; // 0x118(0x08)
	struct FGameplayTag OnAssassinateTag; // 0x120(0x08)
	struct FGameplayTag OnExternalInterruptTag; // 0x128(0x08)
	bool bKnockBack; // 0x130(0x01)
	bool bAssassinate; // 0x131(0x01)
	char pad_132[0x2]; // 0x132(0x02)
	struct FGameplayTag CustomBeginTag; // 0x134(0x08)
	struct FGameplayTag CustomEndTag; // 0x13c(0x08)
	bool bDirectCallProcessPawnEnd; // 0x144(0x01)
	char pad_145[0x3]; // 0x145(0x03)
	struct ACHARACTER* CachedOperatorCharacter; // 0x148(0x08)

	void OnPawnImpendingDeath(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.InteractorProcessPawnDeathEventComponent.OnPawnImpendingDeath // (Final|Native|Protected) // @ game+0x6369420
	void OnPawnDie(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.InteractorProcessPawnDeathEventComponent.OnPawnDie // (Final|Native|Protected) // @ game+0x63693a0
	void OnKnockBack(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.InteractorProcessPawnDeathEventComponent.OnKnockBack // (Final|Native|Protected) // @ game+0x6369320
	void OnInterruptInteraction(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.InteractorProcessPawnDeathEventComponent.OnInterruptInteraction // (Final|Native|Protected) // @ game+0x63692a0
	void OnAssassinate(bool InBeing); // Function DFMGameplay.InteractorProcessPawnDeathEventComponent.OnAssassinate // (Final|Native|Protected) // @ game+0x63691f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnEventNtyInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorProcessPawnEventNtyInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnOverflowInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorProcessPawnOverflowInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessUseC4Component
// Size: 0x208 (Inherited: 0x100)
class UInteractorProcessUseC4Component : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	struct TArray<struct UObject*> PreloadMeshs; // 0x110(0x10)
	struct FGameplayTagContainer TriggerBeginTags; // 0x120(0x20)
	struct FGameplayTagContainer TriggerEndTags; // 0x140(0x20)
	struct FGameplayTagContainer TriggerInterruptTags; // 0x160(0x20)
	struct AInteractAcquireItemBase* CachedAcquireItem; // 0x180(0x08)
	struct AInteractorGrabItemBase* GrabActor; // 0x188(0x08)
	struct FTimerHandle DelayGrabItemHandle; // 0x190(0x08)
	struct FVector translation; // 0x198(0x0c)
	struct FRotator Rot; // 0x1a4(0x0c)
	struct FVector Scale; // 0x1b0(0x0c)
	bool bInterrupted; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)
	struct FUseAcquireC4Info AcquireItem; // 0x1c0(0x38)
	/*struct FMulticastInlineDelegate*/char GrabItemCompletedEvent[0x10]; // 0x1f8(0x10)

	void OnRep_Interrupted(); // Function DFMGameplay.InteractorProcessUseC4Component.OnRep_Interrupted // (Final|Native|Protected) // @ game+0x636ce70
	void OnRep_GrabActor(struct AInteractorGrabItemBase* OldGrabItem); // Function DFMGameplay.InteractorProcessUseC4Component.OnRep_GrabActor // (Final|Native|Protected) // @ game+0x636cdf0
	void OnPreLoadC4MeshComplete(struct TArray<struct FSoftObjectPath> Path); // Function DFMGameplay.InteractorProcessUseC4Component.OnPreLoadC4MeshComplete // (Final|Native|Protected) // @ game+0x636cc60
	void OnGrabActorDestroy(struct AActor* DestroyActor); // Function DFMGameplay.InteractorProcessUseC4Component.OnGrabActorDestroy // (Final|Native|Protected) // @ game+0x2279c80
	bool IsGrabing(); // Function DFMGameplay.InteractorProcessUseC4Component.IsGrabing // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x636caa0
	bool IsExitGrabUnable(); // Function DFMGameplay.InteractorProcessUseC4Component.IsExitGrabUnable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x636ca70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessUseItemComponent
// Size: 0x1b8 (Inherited: 0x100)
class UInteractorProcessUseItemComponent : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	struct FGameplayTagContainer TriggerBeginTags; // 0x110(0x20)
	struct FGameplayTagContainer TriggerEndTags; // 0x130(0x20)
	struct FGameplayTagContainer TriggerInterruptTags; // 0x150(0x20)
	struct AInteractAcquireItemBase* CachedAcquireItem; // 0x170(0x08)
	struct FVector translation; // 0x178(0x0c)
	struct FRotator Rot; // 0x184(0x0c)
	struct FVector Scale; // 0x190(0x0c)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct TArray<struct FUseAcquireItemInfo> AcquireItems; // 0x1a0(0x10)
	bool bIgnoreConsume; // 0x1b0(0x01)
	char pad_1B1[0x7]; // 0x1b1(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorRefLinkComponent
// Size: 0x120 (Inherited: 0x100)
class UInteractorRefLinkComponent : public UActorComponent {
public:

	struct FLinkGroupInfo LinkGroupInfo; // 0x100(0x1c)
	char pad_11C[0x4]; // 0x11c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSingleItemPrestartLogicComponent
// Size: 0x108 (Inherited: 0x100)
class UInteractorSingleItemPrestartLogicComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSpawnPickComponent
// Size: 0x270 (Inherited: 0x240)
class UInteractorSpawnPickComponent : public USceneComponent {
public:

	char pad_240[0x8]; // 0x240(0x08)
	struct FGameplayTagContainer TriggerTags; // 0x248(0x20)
	int64_t PointID; // 0x268(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSwitcherAnimInstance
// Size: 0x9f0 (Inherited: 0x280)
class UInteractorSwitcherAnimInstance : public UAnimInstance {
public:

	struct FInteractorSwitcherAnimInstanceProxy LocalProxy; // 0x280(0x770)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorUseCountLimitComponent
// Size: 0x1b0 (Inherited: 0x100)
class UInteractorUseCountLimitComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct TMap<struct FGameplayTag, int32_t> ConsumeMap; // 0x108(0x50)
	struct TMap<struct FGameplayTag, int32_t> CurrentConsumeMap; // 0x158(0x50)
	int32_t MaxUseCount; // 0x1a8(0x04)
	bool bIsRunOut; // 0x1ac(0x01)
	char pad_1AD[0x3]; // 0x1ad(0x03)

	bool HasRunOut(); // Function DFMGameplay.InteractorUseCountLimitComponent.HasRunOut // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x636f6b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorWidgetComponent
// Size: 0x840 (Inherited: 0x800)
class UInteractorWidgetComponent : public UWidgetComponent {
public:

	struct FSoftClassPath WidgetSoftPath; // 0x800(0x18)
	/*struct FMulticastInlineDelegate*/char OnWidgetLoadComplete[0x10]; // 0x818(0x10)
	struct TArray<uint64_t> LoadHandles; // 0x828(0x10)
	char pad_838[0x8]; // 0x838(0x08)

	void SetWidgetSoftPath(struct FSoftClassPath InWidgetSoftPath); // Function DFMGameplay.InteractorWidgetComponent.SetWidgetSoftPath // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x636fe40
	void OnWidgetClassLoadComplete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.InteractorWidgetComponent.OnWidgetClassLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x636fd60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractSystem
// Size: 0xaf0 (Inherited: 0x100)
class UInteractSystem : public UActorComponent {
public:

	bool bIsValidSystem; // 0x100(0x01)
	bool bLoadAllExecutor; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)
	struct TMap<struct FGameplayTag, struct UInteractExecutor*> ExecutorMap; // 0x108(0x50)
	struct TArray<struct UInteractExecutor*> ExecutorCacheArr; // 0x158(0x10)
	char pad_168[0x8]; // 0x168(0x08)
	bool bUseGridBasedManagement; // 0x170(0x01)
	char pad_171[0x7]; // 0x171(0x07)
	struct TArray<struct AActor*> ServerInteractorArray; // 0x178(0x10)
	/*struct TSet<struct AActor*>*/char ServerMovableInteractorSet[0x50]; // 0x188(0x50)
	char pad_1D8[0x4]; // 0x1d8(0x04)
	int32_t ServerWorldSubRegionSize; // 0x1dc(0x04)
	int32_t ClientWorldSubRegionSize; // 0x1e0(0x04)
	char pad_1E4[0x16c]; // 0x1e4(0x16c)
	struct TMap<struct AActor*, struct FIntPoint> ServerInteractorPointMap; // 0x350(0x50)
	struct TMap<struct FIntPoint, struct FSubRegionInteractorInfo> ServerSubRegionInteractorInfoMap; // 0x3a0(0x50)
	struct TArray<struct AActor*> CacheInteractorArr; // 0x3f0(0x10)
	struct TMap<struct ADFMCharacter*, struct FIntPoint> ServerCharacterPointMap; // 0x400(0x50)
	bool bShowLoadAnimationsLog; // 0x450(0x01)
	char pad_451[0x7]; // 0x451(0x07)
	struct TMap<struct TWeakObjectPtr<struct UObject>, uint64_t> AnimationHandleMap; // 0x458(0x50)
	bool bLoadAllAnimInstanceClass; // 0x4a8(0x01)
	char pad_4A9[0x7]; // 0x4a9(0x07)
	struct TMap<struct UClass*, struct UClass*> AnimInstanceClassMap; // 0x4b0(0x50)
	struct TArray<struct UClass*> BPClassCacheArr; // 0x500(0x10)
	struct TArray<struct UClass*> AnimInstanceClassCacheArr; // 0x510(0x10)
	char pad_520[0x60]; // 0x520(0x60)
	struct TArray<struct FDFMMapDoorInfoRow> MapDoorInfoArray; // 0x580(0x10)
	char pad_590[0x68]; // 0x590(0x68)
	struct UMaterialInterface* InteractorOutlineMat; // 0x5f8(0x08)
	struct FLinearColor InteractorOutlineColor; // 0x600(0x10)
	struct UMaterialInstanceDynamic* InteractorOutlineMatInst; // 0x610(0x08)
	int32_t InteractorOutlineStencilValue_HD; // 0x618(0x04)
	char pad_61C[0x4]; // 0x61c(0x04)
	struct FString InteractorOutlineEffectName_HD; // 0x620(0x10)
	struct TArray<struct UDFInteractableComponentBase*> CachedInteractableComponents; // 0x630(0x10)
	struct TArray<struct UDFInteractableComponentBase*> CachedInteractableComponents_Client; // 0x640(0x10)
	struct TArray<struct UDFInteractableComponentBase*> CachedInteractableComponents_ClientFinal; // 0x650(0x10)
	struct TMap<enum class EDeadBodySkeletalMeshType, struct FSoftObjectPath> SkeletalMeshPathMap; // 0x660(0x50)
	char pad_6B0[0x8]; // 0x6b0(0x08)
	struct TArray<struct USkeletalMesh*> CacheSkeletalMeshes; // 0x6b8(0x10)
	struct TMap<enum class EDeadBodySkeletalMeshType, struct USkeletalMesh*> CacheSkeletalMeshMap; // 0x6c8(0x50)
	struct UMaterialInterface* Mat_Translucent; // 0x718(0x08)
	struct TArray<struct UMaterialInstanceDynamic*> UsingTranslucentDynamicMatArr; // 0x720(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> AvailableTranslucentDynamicMatArr; // 0x730(0x10)
	struct FVector MinAimedBoxExtent; // 0x740(0x0c)
	int32_t MinUpOffsetZOfPickup; // 0x74c(0x04)
	enum class ECollisionChannel CheckCollisionChannel; // 0x750(0x01)
	char pad_751[0x3]; // 0x751(0x03)
	float CheckCollSweepRadius; // 0x754(0x04)
	bool bUseCheckCollSweep_iOS; // 0x758(0x01)
	bool bUseCheckCollSweep_Android; // 0x759(0x01)
	bool bUseCheckCollSweep_HD; // 0x75a(0x01)
	bool bUseCheckCollSweep_DS; // 0x75b(0x01)
	bool bReFilterHitResult; // 0x75c(0x01)
	char pad_75D[0x3]; // 0x75d(0x03)
	struct TArray<struct FCheckBlockReFilterHitResultInfo> CheckBlockReFilterHitResultInfo; // 0x760(0x10)
	char pad_770[0x8]; // 0x770(0x08)
	uint32_t TickTimesInRound_Mobile; // 0x778(0x04)
	uint32_t TickTimesInRound_HD; // 0x77c(0x04)
	struct TArray<struct AActor*> TempFilterAllIgnoreCollActors; // 0x780(0x10)
	struct TArray<struct AActor*> CachedFilterIgnoreCollActors; // 0x790(0x10)
	struct TArray<struct AActor*> CachedFilterPlayers; // 0x7a0(0x10)
	struct TArray<struct AActor*> CachedFilterDeadBodies; // 0x7b0(0x10)
	struct TArray<struct AActor*> CachedFilterPickups; // 0x7c0(0x10)
	float FilterIgnoreCollActorsDis; // 0x7d0(0x04)
	float RefreshFilterPlayerInterval; // 0x7d4(0x04)
	char pad_7D8[0x4]; // 0x7d8(0x04)
	float RefreshFilterDeadBodyInterval; // 0x7dc(0x04)
	char pad_7E0[0x4]; // 0x7e0(0x04)
	float RefreshFilterPickupInterval; // 0x7e4(0x04)
	char pad_7E8[0x10]; // 0x7e8(0x10)
	struct TArray<struct AActor*> TempIgnoreCollActors; // 0x7f8(0x10)
	struct TArray<struct AActor*> CachedLocalPawnChildActors; // 0x808(0x10)
	float RefreshLocalPawnChildActorsInterval; // 0x818(0x04)
	char pad_81C[0x4]; // 0x81c(0x04)
	struct TMap<struct AActor*, float> RefreshLocalPawnChildActorsLastStampMap; // 0x820(0x50)
	struct TArray<struct AActor*> CachedOptCharChildActors; // 0x870(0x10)
	struct TArray<struct AActor*> CachedFilterIgnoreCollOtherActors_DS; // 0x880(0x10)
	struct TArray<struct AActor*> CachedFilterIgnoreCollOtherActors_Client; // 0x890(0x10)
	struct TArray<struct AActor*> CachedFilterIgnoreCollOtherActors_ClientAndDS; // 0x8a0(0x10)
	float SceneQueryRadius; // 0x8b0(0x04)
	bool bUseSceneQuery; // 0x8b4(0x01)
	char pad_8B5[0x3]; // 0x8b5(0x03)
	struct TArray<struct AActor*> AdditionalInteractorArray; // 0x8b8(0x10)
	struct TArray<struct AActor*> AdditionalInteractorArray_Client; // 0x8c8(0x10)
	struct TArray<struct AActor*> AdditionalInteractorArray_ClientFinal; // 0x8d8(0x10)
	float OwnDuration; // 0x8e8(0x04)
	bool bUseShortOwnAfterOpenBox; // 0x8ec(0x01)
	char pad_8ED[0x3]; // 0x8ed(0x03)
	float ShortOwnDurationAfterOpenBox; // 0x8f0(0x04)
	bool bUseShortOwnAfterOpenSISafeBox; // 0x8f4(0x01)
	char pad_8F5[0x3]; // 0x8f5(0x03)
	float ShortOwnDurationAfterOpenSISafeBox; // 0x8f8(0x04)
	int32_t BuildSignalStationMaxTimesInMatch; // 0x8fc(0x04)
	struct TArray<int32_t> AllSignalStationIDArray; // 0x900(0x10)
	float PakMachineOwnDuration; // 0x910(0x04)
	float PakMachineCountDownTime; // 0x914(0x04)
	struct FName PakUseItemIDName; // 0x918(0x08)
	int32_t PakUseItemCount; // 0x920(0x04)
	struct FName PakMachineGenItemIDName; // 0x924(0x08)
	float PakMachineDieInRangeMax; // 0x92c(0x04)
	float ItemHeapOwnDuration; // 0x930(0x04)
	float ItemHeapCountDownTime; // 0x934(0x04)
	struct FName ItemHeapUseItemIDName; // 0x938(0x08)
	int32_t ItemHeapUseItemCount; // 0x940(0x04)
	struct FName ItemHeapGenItemIDName; // 0x944(0x08)
	int32_t ItemHeapInteractLimitCount; // 0x94c(0x04)
	struct TArray<struct FInteractorPreStateCondition> PreStateConditions; // 0x950(0x10)
	struct TArray<struct FInteractablePreStateCondition> InteractablePreStateConditions; // 0x960(0x10)
	struct TArray<struct FInteractorPreStateCondition> CannotInteractWhenWeaponNotIdleConditions; // 0x970(0x10)
	struct TArray<struct FInteractorPreStateCondition> IgnoreAddPreStateConditionsIronGauze; // 0x980(0x10)
	bool bUseForwardAndCheckHitFirstly; // 0x990(0x01)
	bool bUseDSCheckNearly; // 0x991(0x01)
	char pad_992[0x2]; // 0x992(0x02)
	float NearlyThreshold; // 0x994(0x04)
	bool bDSUseClientPosToCheckBlock; // 0x998(0x01)
	char pad_999[0x3]; // 0x999(0x03)
	float DSCheckPlayerInInteractorRangeScale; // 0x99c(0x04)
	struct FText DSCheckRangeErrorTips; // 0x9a0(0x18)
	struct FText DSCheckCollisionErrorTips; // 0x9b8(0x18)
	struct FText DSCheckOnDoorErrorTips; // 0x9d0(0x18)
	struct FText DSCheckOnTeammateErrorTips; // 0x9e8(0x18)
	bool bShowDSCheckErrorTips; // 0xa00(0x01)
	char pad_A01[0x3]; // 0xa01(0x03)
	float CarryingDavidVOInterval; // 0xa04(0x04)
	struct TArray<struct FName> ArriveDoorVOArray; // 0xa08(0x10)
	struct TArray<struct FName> OpenDoorVOArray; // 0xa18(0x10)
	struct TArray<struct FName> CarryOnVyronVOArray; // 0xa28(0x10)
	struct TArray<struct FName> CarryOnNotVyronVOArray; // 0xa38(0x10)
	struct TArray<struct FName> CarryDownVyronVOArray; // 0xa48(0x10)
	struct TArray<struct FName> CarryDownNotVyronVOArray; // 0xa58(0x10)
	struct TArray<struct FName> CarryingVyronVOArray; // 0xa68(0x10)
	struct TArray<struct FName> CarryingNotVyronVOArray; // 0xa78(0x10)
	bool bUseBoxMatchingContainerColl; // 0xa88(0x01)
	bool bUseCheckDoorConsumeItemInfo; // 0xa89(0x01)
	bool bUseCheckHack; // 0xa8a(0x01)
	bool bUseCheckCapture; // 0xa8b(0x01)
	bool bUseCheckUnlock; // 0xa8c(0x01)
	bool bGlassParticleUseScale; // 0xa8d(0x01)
	bool bUseCalcLocByTag; // 0xa8e(0x01)
	bool bIgnoreCheckProcessing; // 0xa8f(0x01)
	bool bUseFakeTickInterval; // 0xa90(0x01)
	char pad_A91[0x3]; // 0xa91(0x03)
	float FakeTickInterval; // 0xa94(0x04)
	float DSRotateDoorOpenSpeedScale; // 0xa98(0x04)
	float DSRotateDoorCloseSpeedScale; // 0xa9c(0x04)
	float DSSlideDoorOpenSpeedScale; // 0xaa0(0x04)
	float DSSlideDoorCloseSpeedScale; // 0xaa4(0x04)
	bool bUseNativeTickForRotateDoor; // 0xaa8(0x01)
	char pad_AA9[0x3]; // 0xaa9(0x03)
	float ReleaseCountDownDuration; // 0xaac(0x04)
	struct TArray<struct FName> CountDownDoorReleasedByCardVOArray; // 0xab0(0x10)
	struct FName CountDownDoorPulledVO; // 0xac0(0x08)
	float CountDownDoorPulledVOInterval; // 0xac8(0x04)
	char pad_ACC[0x4]; // 0xacc(0x04)
	struct TArray<struct AInteractor_DoorBase*> CountDowningReleaseDoors; // 0xad0(0x10)
	char pad_AE0[0x8]; // 0xae0(0x08)
	struct AInteractor_DoorBase* OnlyOneVoVolumeDoor; // 0xae8(0x08)

	void OnRep_MapDoorInfoArray(); // Function DFMGameplay.InteractSystem.OnRep_MapDoorInfoArray // (Final|Native|Public) // @ game+0x636fd40
	void OnRep_CachedInteractableComponents(); // Function DFMGameplay.InteractSystem.OnRep_CachedInteractableComponents // (Final|Native|Protected) // @ game+0x636fd20
	void OnExecutorLoadedComplete(struct TArray<struct FSoftObjectPath> AnimsToLoad, struct TArray<struct FGameplayTag> Tags); // Function DFMGameplay.InteractSystem.OnExecutorLoadedComplete // (Final|Native|Protected) // @ game+0x636fad0
	void OnDeadBoxSkeletalMeshLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef, struct TArray<enum class EDeadBodySkeletalMeshType> SkeletalMeshTypes); // Function DFMGameplay.InteractSystem.OnDeadBoxSkeletalMeshLoadComplete // (Final|Native|Public) // @ game+0x636f880
	void OnCountDownDoorPulledVOTH(); // Function DFMGameplay.InteractSystem.OnCountDownDoorPulledVOTH // (Final|Native|Protected) // @ game+0x636f860
	void OnAnimInstanceClassLoadedComplete(struct TArray<struct FSoftObjectPath> BPClassAndAnimInstanceArrToLoad); // Function DFMGameplay.InteractSystem.OnAnimInstanceClassLoadedComplete // (Final|Native|Protected) // @ game+0x636f6d0
	bool GetBigMapDoorInfoByKeyId(struct FName& DoorName, struct FBigMapDoorInfo& OutBigMapDoorInfo); // Function DFMGameplay.InteractSystem.GetBigMapDoorInfoByKeyId // (Final|RequiredAPI|Native|Public|HasOutParms) // @ game+0x636f530
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryAudioComponent
// Size: 0x60 (Inherited: 0x30)
class UInventoryAudioComponent : public UObject {
public:

	char pad_30[0x20]; // 0x30(0x20)
	struct TArray<struct UGPAudioEventAsset*> SearchAudioEventAssets; // 0x50(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryDataCenter
// Size: 0x148 (Inherited: 0x30)
class UInventoryDataCenter : public UObject {
public:

	char pad_30[0x118]; // 0x30(0x118)

	struct FBaseSpaceItem AllocateSpaceItem(struct FInventoryItemInfo& ItemInfo); // Function DFMGameplay.InventoryDataCenter.AllocateSpaceItem // (Final|Native|Public|HasOutParms) // @ game+0x636f440
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryCoundownTableMgr
// Size: 0x48 (Inherited: 0x38)
class UInventoryCoundownTableMgr : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryManager
// Size: 0x738 (Inherited: 0x100)
class UInventoryManager : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	float CarryCheckDistance; // 0x108(0x04)
	float ServerCarryBoxTracePointOffset; // 0x10c(0x04)
	struct AActor* PreCarryActor; // 0x110(0x08)
	struct AInventoryPickup_DeadBody* CarringDeadBody; // 0x118(0x08)
	char pad_120[0xc0]; // 0x120(0xc0)
	int32_t CurCapacity; // 0x1e0(0x04)
	int32_t TotalCapacity; // 0x1e4(0x04)
	float InitCapacity; // 0x1e8(0x04)
	float PickupRadius; // 0x1ec(0x04)
	float AdditiveStartTimeStamp; // 0x1f0(0x04)
	float AdditiveEndTimeStamp; // 0x1f4(0x04)
	char pad_1F8[0x8]; // 0x1f8(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x200(0x08)
	float WeaponBoxPriceQuota; // 0x208(0x04)
	float ArmorBoxPriceQuota; // 0x20c(0x04)
	float SundriesBoxPriceQuota; // 0x210(0x04)
	char pad_214[0x5c]; // 0x214(0x5c)
	struct TArray<uint64_t> StartupItemGIDs; // 0x270(0x10)
	struct FInvMgrRepData RepData; // 0x280(0x48)
	struct FItemArray RepItemArray; // 0x2c8(0x120)
	float CapacityPercent; // 0x3e8(0x04)
	char pad_3EC[0x4]; // 0x3ec(0x04)
	/*struct TMap<struct FName, struct TSoftObjectPtr<UGPAudioEventAsset>>*/char PlayAudioEvents[0x50]; // 0x3f0(0x50)
	/*struct TMap<struct FName, struct TSoftObjectPtr<UGPAudioEventAsset>>*/char StopAudioEvents[0x50]; // 0x440(0x50)
	struct UInventoryAudioComponent* AudioComponent; // 0x490(0x08)
	char pad_498[0x40]; // 0x498(0x40)
	/*struct FMulticastInlineDelegate*/char OnServerInventoryItemMoveNotify[0x10]; // 0x4d8(0x10)
	/*struct FDelegate*/char CheckCanUnequipAmmoDelegate[0x10]; // 0x4e8(0x10)
	struct TMap<enum class EAttachPosition, struct UItemSpace*> SpaceMap; // 0x4f8(0x50)
	struct TMap<enum class EAttachPosition, struct UItemSpace*> FashionSpaceMap; // 0x548(0x50)
	struct TArray<struct FAIDropItem> AIDropItemList; // 0x598(0x10)
	char pad_5A8[0x60]; // 0x5a8(0x60)
	bool bAutoLootingMode; // 0x608(0x01)
	char pad_609[0x7]; // 0x609(0x07)
	struct TArray<uint64_t> SeasonPropIdArr; // 0x610(0x10)
	char pad_620[0x19]; // 0x620(0x19)
	enum class EPlayerLootingState PlayerLootingState; // 0x639(0x01)
	char pad_63A[0x6]; // 0x63a(0x06)
	struct AInventoryPickup_OpenBox* CurrentSearchingBox; // 0x640(0x08)
	char pad_648[0x8]; // 0x648(0x08)
	struct TArray<uint64_t> AllSearchedBoxs; // 0x650(0x10)
	struct TArray<uint64_t> AllSearchedItems; // 0x660(0x10)
	char pad_670[0x74]; // 0x670(0x74)
	bool bDumpInventoriesPreNetReceive; // 0x6e4(0x01)
	char pad_6E5[0xb]; // 0x6e5(0x0b)
	/*struct TSoftClassPtr<UObject>*/char CarryBodyQuestSoftClass[0x28]; // 0x6f0(0x28)
	char pad_718[0x20]; // 0x718(0x20)

	void TryMarkItemHasSearched(uint64_t ItemGid); // Function DFMGameplay.InventoryManager.TryMarkItemHasSearched // (Final|Native|Public) // @ game+0x637a220
	void TryMarkBoxHasSearched(uint64_t BoxUin); // Function DFMGameplay.InventoryManager.TryMarkBoxHasSearched // (Final|Native|Public) // @ game+0x637a1a0
	void SpawnCarryBodyForQuest(struct AInventoryPickup_DeadBodyQuest* CarryBodyQuest, struct ADFMCharacter* DFMCh); // Function DFMGameplay.InventoryManager.SpawnCarryBodyForQuest // (Final|Native|Public) // @ game+0x637a0e0
	void SortSlotRequest(enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.SortSlotRequest // (Final|Native|Public) // @ game+0x637a060
	void ServerWeaponUnEquipAmmo(uint64_t GunGID, int32_t Num, struct TArray<bool> InPutInSafeBoxFirst, uint64_t InAmmoToEquipGid); // Function DFMGameplay.InventoryManager.ServerWeaponUnEquipAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379de0
	void ServerUpdateWeaponItem(uint64_t GunGID, struct FGPWeaponDescInfo GunDescInfo); // Function DFMGameplay.InventoryManager.ServerUpdateWeaponItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379c30
	void ServerUpdateWeaponAdapterDynamic(int64_t AdpaterGid, struct FModularWeaponPartNodeAttr& NodeAttr); // Function DFMGameplay.InventoryManager.ServerUpdateWeaponAdapterDynamic // (Final|Native|Public|HasOutParms) // @ game+0x6379ad0
	void ServerTransferAllVehicleItems(); // Function DFMGameplay.InventoryManager.ServerTransferAllVehicleItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1751280
	void ServerSwitchCurrentWeapon(uint64_t WeaponGId); // Function DFMGameplay.InventoryManager.ServerSwitchCurrentWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379a40
	void ServerStopLootContainer(struct AInventoryPickup_Container* Container); // Function DFMGameplay.InventoryManager.ServerStopLootContainer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x491a110
	void ServerStartLootContainer(struct AInventoryPickup_Container* Container); // Function DFMGameplay.InventoryManager.ServerStartLootContainer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35fd650
	void ServerSortSlot(enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.ServerSortSlot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3664b20
	void ServerSetAutoLootingMode(bool bAutoLoot); // Function DFMGameplay.InventoryManager.ServerSetAutoLootingMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63799b0
	void ServerRequestAutoFillAmmoSlot(enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.ServerRequestAutoFillAmmoSlot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379920
	void ServerRefillAmmo(enum class EAttachPosition TargetBulletSpacePos, uint64_t TargetAmmoId); // Function DFMGameplay.InventoryManager.ServerRefillAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379850
	void ServerProcessItemMoveCmds(struct TArray<struct FItemMoveCmd> MoveCmds, bool EnableClientTips); // Function DFMGameplay.InventoryManager.ServerProcessItemMoveCmds // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63795d0
	void ServerProcessItemMoveCmd(struct FItemMoveCmd MoveCmd, bool EnableClientTips); // Function DFMGameplay.InventoryManager.ServerProcessItemMoveCmd // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63794c0
	void ServerNotifySwitchFromLoot2BagView(); // Function DFMGameplay.InventoryManager.ServerNotifySwitchFromLoot2BagView // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x174f5a0
	void ServerHandleFastUnEquip(int64_t AdpaterGid, int64_t GunGID, struct UObject* TargetContatiner, enum class EAttachPosition Attach, int32_t X, int32_t Y, int32_t SubIndex, bool bRotatar); // Function DFMGameplay.InventoryManager.ServerHandleFastUnEquip // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379290
	void ServerHandleFastEquip(int64_t AdpaterGid, int64_t SrcGunGid, int64_t TargetGunGid, uint64_t SocketGUID, int32_t SocketId); // Function DFMGameplay.InventoryManager.ServerHandleFastEquip // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379110
	void ServerEquipPveWeapon(struct FInventoryItemInfo ItemInfo); // Function DFMGameplay.InventoryManager.ServerEquipPveWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6379040
	void ServerEquipItem(uint64_t ItemGid, enum class EAttachPosition EquipPos); // Function DFMGameplay.InventoryManager.ServerEquipItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6378f70
	void ServerConsumePartDurabilityByID(uint64_t ItemGid, uint64_t PartItemId, uint32_t Durability); // Function DFMGameplay.InventoryManager.ServerConsumePartDurabilityByID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6378e70
	void ServerConsumePartDurabilityByGID(uint64_t ItemGid, uint64_t PartGid, uint32_t Durability); // Function DFMGameplay.InventoryManager.ServerConsumePartDurabilityByGID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6378d70
	void ServerConsumeItemDurabilityByID(uint64_t ItemID, uint32_t Durability); // Function DFMGameplay.InventoryManager.ServerConsumeItemDurabilityByID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6378ca0
	void ServerConsumeItemDurabilityByGID(uint64_t gid, uint32_t Durability); // Function DFMGameplay.InventoryManager.ServerConsumeItemDurabilityByGID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd870
	void ServerConsumeItemByID(uint64_t ItemID, uint32_t Count); // Function DFMGameplay.InventoryManager.ServerConsumeItemByID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62ceeb0
	void ServerConsumeItemByGID(uint64_t gid, uint32_t Count); // Function DFMGameplay.InventoryManager.ServerConsumeItemByGID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6378bd0
	void ServerCheckFrequentDataUpdated(); // Function DFMGameplay.InventoryManager.ServerCheckFrequentDataUpdated // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x17553a0
	void ServerAttempCarrySomeone(struct AInventoryPickup_DeadBody* CarryDeadBody); // Function DFMGameplay.InventoryManager.ServerAttempCarrySomeone // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4901d70
	void RequestSetAutoLootingMode(bool bAutoLoot); // Function DFMGameplay.InventoryManager.RequestSetAutoLootingMode // (Final|Native|Public) // @ game+0x6378b30
	void ReqPickupCurrency(struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.InventoryManager.ReqPickupCurrency // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbd8930
	void RecordLootPurpleColorItem(); // Function DFMGameplay.InventoryManager.RecordLootPurpleColorItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6378b10
	bool PutItemBackIntoInventory(uint64_t ItemID, uint32_t Num); // Function DFMGameplay.InventoryManager.PutItemBackIntoInventory // (Final|Native|Public) // @ game+0x6378a50
	void PickRequest(struct FInventoryItemInfo& Info, enum class EAttachPosition pos, int32_t Count, int32_t LimitCount, int32_t ApproachType, bool EnableClientTips, int32_t TargetIndex, int32_t TargetX, int32_t TargetY); // Function DFMGameplay.InventoryManager.PickRequest // (Final|Native|Public|HasOutParms) // @ game+0x6378770
	void OnServerPlayerSettlement(enum class EMatchOverReason QuitReason, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InventoryManager.OnServerPlayerSettlement // (Native|Public) // @ game+0x63786a0
	void OnServerItemMoveNotify(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.InventoryManager.OnServerItemMoveNotify // (Final|Native|Protected) // @ game+0x6378600
	void OnServerGuardPlayerUinArrayUpdate(int32_t InState, struct TArray<int64_t> GuardPlayerUinArray); // Function DFMGameplay.InventoryManager.OnServerGuardPlayerUinArrayUpdate // (Final|Native|Public) // @ game+0x63784a0
	void OnServerAbilityVehicleOperate(bool bOperated, struct AActor* Vehicle, struct ACHARACTER* CHARACTER); // Function DFMGameplay.InventoryManager.OnServerAbilityVehicleOperate // (Final|Native|Public) // @ game+0x63783a0
	void OnServerAbilityVehicleDestroy(struct AActor* Vehicle, struct ACHARACTER* CHARACTER, enum class EAbilityVehicleDestroyReason reason); // Function DFMGameplay.InventoryManager.OnServerAbilityVehicleDestroy // (Final|Native|Public) // @ game+0x63782a0
	void OnReq_CapacityPercent(); // Function DFMGameplay.InventoryManager.OnReq_CapacityPercent // (Native|Public) // @ game+0x4947230
	void OnRepItemArray(); // Function DFMGameplay.InventoryManager.OnRepItemArray // (Native|Public) // @ game+0x48e8b60
	void OnRepData(); // Function DFMGameplay.InventoryManager.OnRepData // (Native|Public) // @ game+0x48e8b00
	void OnCharacterDeath(struct FKillInfo& KillInfo); // Function DFMGameplay.InventoryManager.OnCharacterDeath // (Final|Native|Public|HasOutParms) // @ game+0x36632c0
	void NotifyServerEndManageVehicle(); // Function DFMGameplay.InventoryManager.NotifyServerEndManageVehicle // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x22bc2f0
	void NotifyLootSearchInfo(struct FLootSearchInfo LootSearchInfo); // Function DFMGameplay.InventoryManager.NotifyLootSearchInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6378140
	void NotifyLootSearchDone(struct AInventoryPickup_Container* SearchBox); // Function DFMGameplay.InventoryManager.NotifyLootSearchDone // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x129b970
	void NotifyLootSearchCancel(struct AInventoryPickup_Container* SearchBox); // Function DFMGameplay.InventoryManager.NotifyLootSearchCancel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0xbd8ba0
	void NotifyClientStartManageVehicle(); // Function DFMGameplay.InventoryManager.NotifyClientStartManageVehicle // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x227b4f0
	void NetMultiPlayStartCarryActorAnim(struct AActor* BeCarryActor, struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.InventoryManager.NetMultiPlayStartCarryActorAnim // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6378070
	void NetMultiPlayDropCarryActorAnim(); // Function DFMGameplay.InventoryManager.NetMultiPlayDropCarryActorAnim // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x40a6c20
	void NetMultiClearCarryBodyData(struct AActor* BeCarryActor, struct AInventoryPickup_DeadBody* Deadbody, struct FRotator ActorRot, struct FVector ValidLoc); // Function DFMGameplay.InventoryManager.NetMultiClearCarryBodyData // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x6377ef0
	void MarkItemHasSearched(uint64_t ItemGid); // Function DFMGameplay.InventoryManager.MarkItemHasSearched // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360bb60
	void MarkBoxHasSearched(uint64_t BoxUin); // Function DFMGameplay.InventoryManager.MarkBoxHasSearched // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360b770
	void InitInventorySpace(); // Function DFMGameplay.InventoryManager.InitInventorySpace // (Final|Native|Private) // @ game+0x6377ed0
	bool HasKey(int32_t KeyID); // Function DFMGameplay.InventoryManager.HasKey // (Final|Native|Public|Const) // @ game+0x6377e40
	uint64_t GetPlayerTotalPriceCustom(/*struct TSet<enum class EAttachPosition>& ExtraIncludePos, struct TSet<enum class EAttachPosition>& ExtraExcludePos*/); // Function DFMGameplay.InventoryManager.GetPlayerTotalPriceCustom // (Final|Native|Public|HasOutParms|Const) // @ game+0x6377c90
	int64_t GetPlayerTotalPrice(bool bIncludeTeammateBind, bool bOnlyIncludeShown, bool bPrintLog); // Function DFMGameplay.InventoryManager.GetPlayerTotalPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6377b70
	struct FSoftObjectPath GetPlayAudioEventPathByName(struct FName& EventName); // Function DFMGameplay.InventoryManager.GetPlayAudioEventPathByName // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6377ac0
	void GetMatchedAmmoId(/*uint64_t InWeaponId, struct TSet<uint64_t>& AmmoIdSet*/); // Function DFMGameplay.InventoryManager.GetMatchedAmmoId // (Final|Native|Public|HasOutParms) // @ game+0x6377940
	int32_t GetLootPurpleColorItemCount(); // Function DFMGameplay.InventoryManager.GetLootPurpleColorItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6377920
	int32_t GetItemSumDurability(struct FName ItemIDName); // Function DFMGameplay.InventoryManager.GetItemSumDurability // (Final|Native|Public) // @ game+0x6377760
	struct UItemSpace* GetItemSpace(enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.GetItemSpace // (Native|Public|Const) // @ game+0x63776c0
	void GetItemsByPos(int32_t pos, struct TArray<struct FInventoryItemInfo>& ItemArray); // Function DFMGameplay.InventoryManager.GetItemsByPos // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x63777f0
	int32_t GetItemCount(struct FName ItemID); // Function DFMGameplay.InventoryManager.GetItemCount // (Final|Native|Public) // @ game+0x63775f0
	float GetCapacityPercent(bool bIgnoreKeyChain); // Function DFMGameplay.InventoryManager.GetCapacityPercent // (Final|Native|Public) // @ game+0x63774e0
	void GetAllMatchedAmmo(struct TArray<struct FInventoryItemInfo>& ItemArray); // Function DFMGameplay.InventoryManager.GetAllMatchedAmmo // (Final|Native|Public|HasOutParms) // @ game+0x63773e0
	void GetAllKeys(/*struct TSet<uint64_t>& AllKeys*/); // Function DFMGameplay.InventoryManager.GetAllKeys // (Final|Native|Public|HasOutParms) // @ game+0x63772d0
	void GetAllInventory(struct TArray<struct FInventoryItemInfo>& ItemArray, bool IncludeDogTag); // Function DFMGameplay.InventoryManager.GetAllInventory // (Final|Native|Public|HasOutParms) // @ game+0x6377190
	void GetAllDropInventory(struct TArray<struct FAIDropItem>& DropItemArray); // Function DFMGameplay.InventoryManager.GetAllDropInventory // (Final|Native|Public|HasOutParms) // @ game+0x63770c0
	void GetAllAmmo(struct TArray<struct FInventoryItemInfo>& ItemArray); // Function DFMGameplay.InventoryManager.GetAllAmmo // (Final|Native|Public|HasOutParms) // @ game+0x6376fc0
	struct UInventoryManager* STATIC_Get(struct AActor* Owner); // Function DFMGameplay.InventoryManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6376f40
	bool GainMissionRewards(struct TArray<uint64_t> ItemIds, struct TArray<int32_t> Num, struct FVector pos); // Function DFMGameplay.InventoryManager.GainMissionRewards // (Final|Native|Public|HasDefaults) // @ game+0x6376d10
	bool GainItem2Positions(uint64_t ItemID, int32_t Num, uint64_t Guid, struct TArray<enum class EAttachPosition> CandidatePositions, int32_t BindType, uint64_t BindPlayerId, struct AActor* SourceActor); // Function DFMGameplay.InventoryManager.GainItem2Positions // (Final|Native|Public) // @ game+0x6376890
	bool GainItem2Bag(uint64_t ItemID, int32_t Num, uint64_t Guid, int32_t BindType, uint64_t BindPlayerId, struct AActor* SourceActor); // Function DFMGameplay.InventoryManager.GainItem2Bag // (Final|Native|Public) // @ game+0x63766e0
	bool GainItem(uint64_t ItemID, int32_t Num, uint64_t Guid, enum class EAttachPosition pos, int32_t BindType, uint64_t BindPlayerId, struct AActor* SourceActor); // Function DFMGameplay.InventoryManager.GainItem // (Final|Native|Public) // @ game+0x6376b20
	void DiscardRequest(uint64_t ItemGid, int32_t Count, bool DisableCapacityCheck, uint64_t ToItemGID); // Function DFMGameplay.InventoryManager.DiscardRequest // (Final|Native|Public) // @ game+0x6376590
	void ClientSendItemMoveCmd(struct FItemMoveCmd MoveCmd, bool EnableClientTips); // Function DFMGameplay.InventoryManager.ClientSendItemMoveCmd // (Final|Native|Public) // @ game+0x6376480
	void ClientSendFastUnEquip(int64_t AdpaterGid, int64_t GunGID, struct UObject* TargetContatiner, enum class EAttachPosition Attach, int32_t X, int32_t Y, int32_t SubIndex, bool bRotatar); // Function DFMGameplay.InventoryManager.ClientSendFastUnEquip // (Final|Native|Public) // @ game+0x6376250
	void ClientSendFastEquip(int64_t AdpaterGid, int64_t GunGID, int64_t TargetGunGid, uint64_t ParentGid, int32_t SocketId); // Function DFMGameplay.InventoryManager.ClientSendFastEquip // (Final|Native|Public) // @ game+0x63760c0
	void ClientReportLootInteraction(struct AActor* LootObj); // Function DFMGameplay.InventoryManager.ClientReportLootInteraction // (Net|Native|Event|Public|NetServer) // @ game+0x6376030
	void ClientPlayAudioEventByPath(struct FSoftObjectPath AudioSoftPath, struct AActor* AudioActor, bool bIsLoop); // Function DFMGameplay.InventoryManager.ClientPlayAudioEventByPath // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x6375ee0
	void ClientNotifyUnEquipAmmo(struct TArray<struct FUnequipAmmoResultNotifyStruct> UnequipAmmoResult, char ResultCode); // Function DFMGameplay.InventoryManager.ClientNotifyUnEquipAmmo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375dd0
	void ClientNotifyTransferResult(bool Result); // Function DFMGameplay.InventoryManager.ClientNotifyTransferResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x21b3610
	void ClientNotifyItemSourceInvalid(uint64_t ItemGid, uint64_t ItemID); // Function DFMGameplay.InventoryManager.ClientNotifyItemSourceInvalid // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375d00
	void ClientNotifyItemMoveResult(uint64_t CmdGid, enum class EItemMoveResult Result, enum class EItemMoveExtraInfo MoveExtraInfo); // Function DFMGameplay.InventoryManager.ClientNotifyItemMoveResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375c00
	void ClientNotifyItemDrop(uint64_t ItemID); // Function DFMGameplay.InventoryManager.ClientNotifyItemDrop // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x4919fb0
	void ClientNotifyItemConsumeAll(uint64_t ItemID); // Function DFMGameplay.InventoryManager.ClientNotifyItemConsumeAll // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375b70
	void ClientNotifyFastUnEquipSuccess(enum class EFastEquipResult Result, struct FFastEquipResult EquipInfo, uint64_t ItemID); // Function DFMGameplay.InventoryManager.ClientNotifyFastUnEquipSuccess // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375810
	void ClientNotifyFastUnEquipResult(enum class EFastEquipResult Result); // Function DFMGameplay.InventoryManager.ClientNotifyFastUnEquipResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6208050
	void ClientNotifyFastEquipSuccess(enum class EFastEquipResult Result, struct FFastEquipResult EquipInfo, uint64_t ItemID); // Function DFMGameplay.InventoryManager.ClientNotifyFastEquipSuccess // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63754b0
	void ClientNotifyFastEquipResult(enum class EFastEquipResult Result); // Function DFMGameplay.InventoryManager.ClientNotifyFastEquipResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6375430
	void ClientConfirmCarrySomeone(); // Function DFMGameplay.InventoryManager.ClientConfirmCarrySomeone // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x36604b0
	bool CheckWeaponClipCountUpdateValid(struct UGPModularWeaponDesc* SrcWeaponDesc, struct UGPModularWeaponDesc* NewWeaponDesc); // Function DFMGameplay.InventoryManager.CheckWeaponClipCountUpdateValid // (Final|Native|Public) // @ game+0x6375370
	bool STATIC_CheckWeaponCanModify(uint64_t PoorItemId); // Function DFMGameplay.InventoryManager.CheckWeaponCanModify // (Final|Native|Static|Public) // @ game+0x63752f0
	void CheckSpaceEnoughForAmmoUnequip_Test(bool bLeftMainWeapon); // Function DFMGameplay.InventoryManager.CheckSpaceEnoughForAmmoUnequip_Test // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6375260
	bool CheckSpaceEnoughForAmmoUnequip(struct TArray<struct FAmmoDataItem> AmmoItems, int32_t& AvailableNum); // Function DFMGameplay.InventoryManager.CheckSpaceEnoughForAmmoUnequip // (Final|Native|Public|HasOutParms) // @ game+0x63750e0
	bool CheckItemHasSearched(uint64_t ItemGid); // Function DFMGameplay.InventoryManager.CheckItemHasSearched // (Final|Native|Public|Const) // @ game+0x6375050
	bool CheckBoxHasSearched(uint64_t BoxUin); // Function DFMGameplay.InventoryManager.CheckBoxHasSearched // (Final|Native|Public|Const) // @ game+0x6374fc0
	void AttempUpdateWeaponItem(uint64_t GunGID, struct UGPModularWeaponDesc* NewDesc); // Function DFMGameplay.InventoryManager.AttempUpdateWeaponItem // (Final|Native|Public) // @ game+0x6374440
	enum class EItemUseCondition AttemptUseItemWithArgs(struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs Args); // Function DFMGameplay.InventoryManager.AttemptUseItemWithArgs // (Final|Native|Public|HasOutParms) // @ game+0x6374dc0
	enum class EItemUseCondition AttemptUseItemByID(uint64_t ItemID, enum class ECharacterPart Part); // Function DFMGameplay.InventoryManager.AttemptUseItemByID // (Final|Native|Public) // @ game+0x6374d00
	enum class EItemUseCondition AttemptUseItem(struct FInventoryItemInfo& ItemInfo, enum class ECharacterPart Part, enum class EUseItemInputSource UseItemInputSource); // Function DFMGameplay.InventoryManager.AttemptUseItem // (Final|Native|Public|HasOutParms) // @ game+0x6374bb0
	void AttemptSwitchWeaponByGid(uint64_t ItemGid); // Function DFMGameplay.InventoryManager.AttemptSwitchWeaponByGid // (Final|Native|Public) // @ game+0x6374b30
	void AttemptExchangeItem(uint64_t ItemGid, enum class EAttachPosition AttachPosition, int32_t X, int32_t Y, bool bRotated); // Function DFMGameplay.InventoryManager.AttemptExchangeItem // (Final|Native|Public) // @ game+0x63749a0
	void AttemptEquipItemByID(uint64_t ItemID, enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.AttemptEquipItemByID // (Final|Native|Public) // @ game+0x63748e0
	void AttemptEquipItem(uint64_t ItemGid, enum class EAttachPosition pos); // Function DFMGameplay.InventoryManager.AttemptEquipItem // (Final|Native|Public) // @ game+0x6374820
	void AttemptConsumeItemDurabilityByID(uint64_t ItemID, int32_t Durability); // Function DFMGameplay.InventoryManager.AttemptConsumeItemDurabilityByID // (Final|Native|Public) // @ game+0x6374760
	void AttemptConsumeItemDurabilityByGID(uint64_t gid, uint32_t Durability); // Function DFMGameplay.InventoryManager.AttemptConsumeItemDurabilityByGID // (Final|Native|Public) // @ game+0x63746a0
	void AttemptConsumeItemByID(uint64_t ItemID, uint32_t Count); // Function DFMGameplay.InventoryManager.AttemptConsumeItemByID // (Final|Native|Public) // @ game+0x63745e0
	void AttemptConsumeItemByGID(uint64_t gid, uint32_t Count); // Function DFMGameplay.InventoryManager.AttemptConsumeItemByGID // (Final|Native|Public) // @ game+0x6374520
	void AttemptCancelUseItem(); // Function DFMGameplay.InventoryManager.AttemptCancelUseItem // (Final|Native|Public) // @ game+0x6374500
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryMovementComponent
// Size: 0x5b0 (Inherited: 0x590)
class UInventoryMovementComponent : public UBoxComponent {
public:

	struct TArray<struct AInventoryPickup_DeadBody*> DeadBodyCacheArr; // 0x590(0x10)
	char pad_5A0[0x10]; // 0x5a0(0x10)

	void StartMove(bool bStart); // Function DFMGameplay.InventoryMovementComponent.StartMove // (Final|Native|Public|BlueprintCallable) // @ game+0x637e120
	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.InventoryMovementComponent.OnEndOverlap // (Final|Native|Public) // @ game+0x637d240
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.InventoryMovementComponent.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x637cf60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickupOpenBoxAnimInstance
// Size: 0x9d0 (Inherited: 0x280)
class UInventoryPickupOpenBoxAnimInstance : public UAnimInstance {
public:

	struct FPickupOpenBoxAnimInstanceProxy LocalProxy; // 0x280(0x750)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryUseItemManager
// Size: 0x440 (Inherited: 0x100)
class UInventoryUseItemManager : public UActorComponent {
public:

	struct ADFMCharacter* PCOwner; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)
	struct TMap<uint64_t, struct UActorComponent*> ItemFunComponent; // 0x118(0x50)
	struct TArray<struct FRepItemFunComponentInfo> RepItemFunComponentIds; // 0x168(0x10)
	struct TArray<uint64_t> ItemIdAnimCaches; // 0x178(0x10)
	char pad_188[0x50]; // 0x188(0x50)
	uint64_t PendingRouleteeSelectItemGID; // 0x1d8(0x08)
	struct FRepItemInfoForSpectating CurrentRouleteeSelectItemInfo; // 0x1e0(0x20)
	/*struct FMulticastInlineDelegate*/char OnRouleteeSelectItemChange[0x10]; // 0x200(0x10)
	char pad_210[0x20]; // 0x210(0x20)
	float RefreshItemHealthTemporary_Time; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct TArray<enum class EItemHealthRecommendType> RecommandTypes; // 0x238(0x10)
	struct TArray<enum class EItemHealthRecommendType> RecommandTypes_Temporary; // 0x248(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemHealthRecommendStateChange[0x10]; // 0x258(0x10)
	/*struct FMulticastInlineDelegate*/char OnItemHealthRecommendIdChange[0x10]; // 0x268(0x10)
	uint64_t ServerRecommandItemId; // 0x278(0x08)
	struct TArray<struct UTexture*> CacheForceKeepFullMipLevels; // 0x280(0x10)
	struct FRepItemInfo PreUseItemInfo; // 0x290(0x70)
	struct USkeletalMeshComponent* m_UsingItemMesh; // 0x300(0x08)
	struct UGPSkeletalMeshComponent* CacheMeshComponent; // 0x308(0x08)
	struct UAnimMontage* CharacterUsingItem_Montage; // 0x310(0x08)
	struct UAnimMontage* CharacterUsingItem_Montage3P; // 0x318(0x08)
	bool DesiredSpawnHoldItemTranValid; // 0x320(0x01)
	char pad_321[0xf]; // 0x321(0x0f)
	struct FTransform DesiredSpawnHoldItemTrans; // 0x330(0x30)
	char pad_360[0x58]; // 0x360(0x58)
	struct AWeaponBase* ReloadingWeapon; // 0x3b8(0x08)
	char pad_3C0[0x8]; // 0x3c0(0x08)
	bool bWaitingLoadMesh; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct FPendingPlayMeshItemAnimationInfo PendingPlayMeshItemAnim; // 0x3d0(0x70)

	void StopUseItemAnim(); // Function DFMGameplay.InventoryUseItemManager.StopUseItemAnim // (Final|Native|Public) // @ game+0x17621d0
	void StopPlayerUseItemAnim(); // Function DFMGameplay.InventoryUseItemManager.StopPlayerUseItemAnim // (Final|Native|Public) // @ game+0x6386670
	enum class EItemUseCondition STATIC_StaticCheckItemCanUseByFunctionTypeWithTxtArgs(struct ADFMCharacter* Owner, struct FInventoryItemInfo& ItemInfo, enum class EUseItemFunctionType FunctionType, enum class ECharacterPart Part, struct TArray<int32_t>& OutArgs); // Function DFMGameplay.InventoryUseItemManager.StaticCheckItemCanUseByFunctionTypeWithTxtArgs // (Final|Native|Static|Public|HasOutParms) // @ game+0x6386440
	enum class EItemUseCondition STATIC_StaticCheckHealthItemCanUseByFunctionType(struct ADFMCharacter* Owner, struct FInventoryItemInfo& ItemInfo, enum class EUseItemFunctionType FunctionType, enum class ECharacterPart Part); // Function DFMGameplay.InventoryUseItemManager.StaticCheckHealthItemCanUseByFunctionType // (Final|Native|Static|Public|HasOutParms) // @ game+0x63862b0
	void SetUsingItemTipsVisible(bool Show); // Function DFMGameplay.InventoryUseItemManager.SetUsingItemTipsVisible // (Final|Native|Protected) // @ game+0x6386190
	void SetPreUseItemInfo(struct FRepItemInfo InPreUseItemInfo); // Function DFMGameplay.InventoryUseItemManager.SetPreUseItemInfo // (Final|Native|Protected) // @ game+0x6385f30
	void ServerUseItemImpl_Skill(struct UInventoryItemBase* InvItem, struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs& UseItemArgs); // Function DFMGameplay.InventoryUseItemManager.ServerUseItemImpl_Skill // (Final|Native|Public|HasOutParms) // @ game+0x6385d00
	void ServerUseItemImpl_ItemHealth(struct UInventoryItemBase* InvItem, struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs& UseItemArgs); // Function DFMGameplay.InventoryUseItemManager.ServerUseItemImpl_ItemHealth // (Final|Native|Public|HasOutParms) // @ game+0x6385b50
	void ServerUseItemImpl_Ammo(struct UInventoryItemBase* InvItem, struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs& UseItemArgs); // Function DFMGameplay.InventoryUseItemManager.ServerUseItemImpl_Ammo // (Final|Native|Public|HasOutParms) // @ game+0x63859a0
	void ServerTryUseItem(struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs UseItemArgs); // Function DFMGameplay.InventoryUseItemManager.ServerTryUseItem // (Final|Native|Public|HasOutParms) // @ game+0x63857a0
	void ServerTryCancelUseItem(enum class ECancelUseItemReason reason); // Function DFMGameplay.InventoryUseItemManager.ServerTryCancelUseItem // (Final|Native|Public) // @ game+0x6385720
	void ServerSetSpawnItemTransform(struct FTransform SpawnTrans); // Function DFMGameplay.InventoryUseItemManager.ServerSetSpawnItemTransform // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x6385630
	void ServerRouleteeSelectItem(uint64_t ItemGid); // Function DFMGameplay.InventoryUseItemManager.ServerRouleteeSelectItem // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x36f8350
	void ServerCancelBackgroudUsingItem(); // Function DFMGameplay.InventoryUseItemManager.ServerCancelBackgroudUsingItem // (Final|Native|Public) // @ game+0x6385610
	void ServerAttemptUseItem(uint64_t ItemGid, struct FUseItemArgs UseItemArgs, float ClientAnimTime); // Function DFMGameplay.InventoryUseItemManager.ServerAttemptUseItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6385430
	void ServerAttemptCancelUseItem(enum class ECancelUseItemReason reason); // Function DFMGameplay.InventoryUseItemManager.ServerAttemptCancelUseItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x61ec260
	void RouleteeSelectItem(uint64_t ItemGid); // Function DFMGameplay.InventoryUseItemManager.RouleteeSelectItem // (Final|Native|Protected) // @ game+0x63853b0
	void ProcessPreUseItemMeshOuter(); // Function DFMGameplay.InventoryUseItemManager.ProcessPreUseItemMeshOuter // (Final|Native|Protected) // @ game+0x6385390
	void ProcessPreUseItemMesh(struct FRepItemInfo PreUseItemInfo); // Function DFMGameplay.InventoryUseItemManager.ProcessPreUseItemMesh // (Final|Native|Public) // @ game+0x6385130
	void PlayUseItemAnim(uint64_t ItemID, float AnimLogicTime, enum class EUseItemAnimType UseItemAnimType, bool bLoop, float StartAtTime, bool bCallFromAsyncCallback); // Function DFMGameplay.InventoryUseItemManager.PlayUseItemAnim // (Final|Native|Public) // @ game+0x6384f60
	void PlayThreePlayerAnim(uint64_t ItemID, float AnimLogicTime, float StartAtTime, bool bCallFromAsyncCallback); // Function DFMGameplay.InventoryUseItemManager.PlayThreePlayerAnim // (Final|Native|Public) // @ game+0x6384e10
	void PlayPlayerUseItemAnim(uint64_t ItemID, float AnimLogicTime, enum class EUseItemAnimType UseItemAnimType, float StartAtTime, bool bCallFromAsyncCallback); // Function DFMGameplay.InventoryUseItemManager.PlayPlayerUseItemAnim // (Final|Native|Public) // @ game+0x6384c80
	void PlayPendngItemMeshAnim(); // Function DFMGameplay.InventoryUseItemManager.PlayPendngItemMeshAnim // (Final|Native|Public) // @ game+0x6384c60
	void OnWeaponReloadingNotify(struct AWeaponBase* Weapon, struct TArray<struct FAmmoDataItem> ReloadParam); // Function DFMGameplay.InventoryUseItemManager.OnWeaponReloadingNotify // (Final|Native|Public) // @ game+0x6384a00
	void OnWeaponReloadingFinishNotify(struct AWeaponBase* Weapon); // Function DFMGameplay.InventoryUseItemManager.OnWeaponReloadingFinishNotify // (Final|Native|Public) // @ game+0x6384980
	void OnServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.InventoryUseItemManager.OnServerMatchEnd // (Final|Native|Protected) // @ game+0x6384640
	void OnRep_ServerRecommandItemId(); // Function DFMGameplay.InventoryUseItemManager.OnRep_ServerRecommandItemId // (Final|Native|Protected) // @ game+0x6384620
	void OnRep_PreUseItemInfo(); // Function DFMGameplay.InventoryUseItemManager.OnRep_PreUseItemInfo // (Final|Native|Protected) // @ game+0x63845e0
	void OnRep_ItemIdAnimCaches(); // Function DFMGameplay.InventoryUseItemManager.OnRep_ItemIdAnimCaches // (Final|Native|Protected) // @ game+0x63845c0
	void OnRep_ItemFunComponentIds(); // Function DFMGameplay.InventoryUseItemManager.OnRep_ItemFunComponentIds // (Final|Native|Protected) // @ game+0x63845a0
	void OnRep_CurrentRouleteeSelectItemGID(); // Function DFMGameplay.InventoryUseItemManager.OnRep_CurrentRouleteeSelectItemGID // (Final|Native|Protected) // @ game+0x6384560
	void OnListenSolItemHeathlRecommandTimer(); // Function DFMGameplay.InventoryUseItemManager.OnListenSolItemHeathlRecommandTimer // (Final|Native|Protected) // @ game+0x6384440
	void OnListenSolHelmetArmorChangedForItemHeathlRecommand(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.InventoryUseItemManager.OnListenSolHelmetArmorChangedForItemHeathlRecommand // (Final|Native|Protected) // @ game+0x6384340
	void OnListenSolHealthStateChangedForItemHeathlRecommand(struct AGPCharacterBase* Target, enum class ECharacterPart Part, enum class ECharacterPartHealthState OldState, enum class ECharacterPartHealthState NewState); // Function DFMGameplay.InventoryUseItemManager.OnListenSolHealthStateChangedForItemHeathlRecommand // (Final|Native|Protected) // @ game+0x63841f0
	void OnListenSolHealthChangedForItemHeathlRecommand(struct AActor* Owner, int32_t CurrentValue, int32_t MaxValue); // Function DFMGameplay.InventoryUseItemManager.OnListenSolHealthChangedForItemHeathlRecommand // (Final|Native|Protected) // @ game+0x63840f0
	void OnListenSolArmorChangedForItemHeathlRecommand(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.InventoryUseItemManager.OnListenSolArmorChangedForItemHeathlRecommand // (Final|Native|Protected) // @ game+0x6383ff0
	void OnInventoryItemMoveNotify(struct FItemMoveCmd& ItemMoveCmd); // Function DFMGameplay.InventoryUseItemManager.OnInventoryItemMoveNotify // (Final|Native|Protected|HasOutParms) // @ game+0x6383cf0
	void OnInventoryItemAddOrRemove(uint64_t ItemID, uint64_t gid, bool bAdd); // Function DFMGameplay.InventoryUseItemManager.OnInventoryItemAddOrRemove // (Final|Native|Protected) // @ game+0x6383be0
	bool STATIC_IsHealthItemNeedChoiceCharacterPart(struct FInventoryItemInfo& Inv); // Function DFMGameplay.InventoryUseItemManager.IsHealthItemNeedChoiceCharacterPart // (Final|Native|Static|Public|HasOutParms) // @ game+0x6383580
	void GetUseItemAnimIn(/*struct FUseItemAnimSet AnimSet, struct TSoftObjectPtr<UAnimSequenceBase>& FPPAnim, struct TSoftObjectPtr<UAnimSequenceBase>& TPPAnim*/); // Function DFMGameplay.InventoryUseItemManager.GetUseItemAnimIn // (Final|Native|Public|HasOutParms) // @ game+0x6383130
	float GetUseAnimTime(uint64_t ItemID, enum class EUseItemAnimType useTyp); // Function DFMGameplay.InventoryUseItemManager.GetUseAnimTime // (Final|Native|Public) // @ game+0x6383060
	uint64_t GetRecommandHealthItems(); // Function DFMGameplay.InventoryUseItemManager.GetRecommandHealthItems // (Final|Native|Public) // @ game+0x6383010
	struct FUseItemAnimSet GetPlayerUseItemAnimSet(uint64_t ItemID, enum class EUseItemAnimType UseType); // Function DFMGameplay.InventoryUseItemManager.GetPlayerUseItemAnimSet // (Final|Native|Public) // @ game+0x6382e80
	struct FUseItemAnimSet GetItemUseAnimSet(uint64_t ItemID, enum class EUseItemAnimType UseType); // Function DFMGameplay.InventoryUseItemManager.GetItemUseAnimSet // (Final|Native|Public) // @ game+0x6382d80
	void GetItemAnimAsset(struct FUseItemAnimSet AnimSet, bool usingGivingXPP, bool givingIsFPP); // Function DFMGameplay.InventoryUseItemManager.GetItemAnimAsset // (Final|Native|Public) // @ game+0x6382b30
	struct FText GetCanNotUseTips(enum class EItemUseCondition UseCondition, struct TArray<int32_t> Args); // Function DFMGameplay.InventoryUseItemManager.GetCanNotUseTips // (Final|Native|Public) // @ game+0x6382960
	struct UInventoryUseItemManager* STATIC_Get(struct AActor* Owner); // Function DFMGameplay.InventoryUseItemManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6382890
	enum class ECharacterPart FindBestPartForGivingHealthItemGID(uint64_t gid); // Function DFMGameplay.InventoryUseItemManager.FindBestPartForGivingHealthItemGID // (Final|Native|Public) // @ game+0x6382800
	enum class ECharacterPart FindBestPartForGivingHealthItem(struct FInventoryItemInfo& Inv); // Function DFMGameplay.InventoryUseItemManager.FindBestPartForGivingHealthItem // (Final|Native|Public|HasOutParms) // @ game+0x6382730
	void DestoryUsingItemMesh(); // Function DFMGameplay.InventoryUseItemManager.DestoryUsingItemMesh // (Final|Native|Public) // @ game+0x6382510
	void CustomMarkPreUseItemInfoDirty(); // Function DFMGameplay.InventoryUseItemManager.CustomMarkPreUseItemInfoDirty // (Final|Native|Protected) // @ game+0x63824f0
	void ClientStopUseItem(struct AGPInventoryBase* Inv); // Function DFMGameplay.InventoryUseItemManager.ClientStopUseItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x360b770
	void ClientPreUseItem(struct FInventoryItemInfo ItemInfo, struct FRepItemInfo RepItemInfo, enum class ECharacterPart Part); // Function DFMGameplay.InventoryUseItemManager.ClientPreUseItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6381fd0
	void ClientNotifyUseItemFaild(uint64_t ItemID, uint64_t ItemGid, enum class EItemUseCondition reason); // Function DFMGameplay.InventoryUseItemManager.ClientNotifyUseItemFaild // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6381ed0
	void ClientFinshUseItem(bool bFinished); // Function DFMGameplay.InventoryUseItemManager.ClientFinshUseItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6381e40
	void ClientCancelUseItem(); // Function DFMGameplay.InventoryUseItemManager.ClientCancelUseItem // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x3615dc0
	enum class EItemUseCondition CheckItemCanUseByLimitFunctions(struct FInventoryItemInfo& ItemInfo, struct TArray<enum class EUseItemFunctionType>& LimitFunctions, struct ADFMCharacter* TargetCharacter, enum class ECharacterPart Part, bool bShowTips); // Function DFMGameplay.InventoryUseItemManager.CheckItemCanUseByLimitFunctions // (Final|Native|Public|HasOutParms) // @ game+0x6381bf0
	enum class EItemUseCondition CheckItemCanUse(struct FInventoryItemInfo& ItemInfo, struct ADFMCharacter* TargetCharacter, struct FUseItemArgs InUseItemArgs, bool bShowTips); // Function DFMGameplay.InventoryUseItemManager.CheckItemCanUse // (Final|Native|Public|HasOutParms) // @ game+0x6381960
	enum class EItemUseCondition CheckHealthItemCanUse(struct FInventoryItemInfo& ItemInfo, enum class ECharacterPart Part, bool bShowTips); // Function DFMGameplay.InventoryUseItemManager.CheckHealthItemCanUse // (Final|Native|Public|HasOutParms) // @ game+0x63817e0
	enum class EItemUseCondition AttemptUseItemWithArgs(struct FInventoryItemInfo& ItemInfo, struct FUseItemArgs UseItemArgs); // Function DFMGameplay.InventoryUseItemManager.AttemptUseItemWithArgs // (Final|Native|Public|HasOutParms) // @ game+0x6381590
	enum class EItemUseCondition AttemptUseItem(struct FInventoryItemInfo& ItemInfo, enum class ECharacterPart Part, enum class EUseItemInputSource UseItemInputSource); // Function DFMGameplay.InventoryUseItemManager.AttemptUseItem // (Final|Native|Public|HasOutParms) // @ game+0x6381440
	void AttemptCancelUseItem(enum class ECancelUseItemReason reason); // Function DFMGameplay.InventoryUseItemManager.AttemptCancelUseItem // (Final|Native|Public) // @ game+0x63813c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryUtil
// Size: 0x30 (Inherited: 0x30)
class UInventoryUtil : public UObject {
public:


	bool STATIC_IsWeaponPos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsWeaponPos // (Final|Native|Static|Public) // @ game+0x638d4a0
	bool STATIC_IsSoftObjectPathNull(struct FSoftObjectPath& Path); // Function DFMGameplay.InventoryUtil.IsSoftObjectPathNull // (Final|Native|Static|Public|HasOutParms|HasDefaults) // @ game+0x638d3c0
	bool STATIC_IsSingleSizePos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsSingleSizePos // (Final|Native|Static|Public) // @ game+0x638d340
	bool STATIC_IsNearbyContainerPos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsNearbyContainerPos // (Final|Native|Static|Public) // @ game+0x638d2c0
	bool STATIC_IsEquipmentPos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsEquipmentPos // (Final|Native|Static|Public) // @ game+0x638d240
	bool STATIC_IsEquipablePos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsEquipablePos // (Final|Native|Static|Public) // @ game+0x638d1c0
	bool STATIC_IsContainerPos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsContainerPos // (Final|Native|Static|Public) // @ game+0x638d140
	bool STATIC_IsContainerEquipPos(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.IsContainerEquipPos // (Final|Native|Static|Public) // @ game+0x638d0c0
	enum class EAttachPosition STATIC_GetRefEquipPosByContainer(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.GetRefEquipPosByContainer // (Final|Native|Static|Public) // @ game+0x638cec0
	int32_t STATIC_GetLootingKeyChainContainerMaxLength(); // Function DFMGameplay.InventoryUtil.GetLootingKeyChainContainerMaxLength // (Final|Native|Static|Public) // @ game+0x638ce90
	float STATIC_GetItemHealth(uint64_t ItemID); // Function DFMGameplay.InventoryUtil.GetItemHealth // (Final|Native|Static|Public) // @ game+0x638ce00
	int32_t STATIC_GetDepositoryKeyChainContainerMaxLength(); // Function DFMGameplay.InventoryUtil.GetDepositoryKeyChainContainerMaxLength // (Final|Native|Static|Public) // @ game+0x638cd90
	enum class EAttachPosition STATIC_GetContainerPosByRefEquipment(enum class EAttachPosition pos); // Function DFMGameplay.InventoryUtil.GetContainerPosByRefEquipment // (Final|Native|Static|Public) // @ game+0x638cd10
	enum class EItemBindType STATIC_GetBindType(struct AGPCharacter* CharacterUin, uint64_t BindPlayerId, bool bIsRawBinded); // Function DFMGameplay.InventoryUtil.GetBindType // (Final|Native|Static|Public) // @ game+0x638cc20
	bool STATIC_GenerateSpaceDataForPocket(struct FItemSpaceRepData& SpaceData); // Function DFMGameplay.InventoryUtil.GenerateSpaceDataForPocket // (Final|Native|Static|Public|HasOutParms) // @ game+0x638cb80
	bool STATIC_GenerateSpaceDataByEquipmentId(uint64_t EquipmentItemId, struct FItemSpaceRepData& SpaceData); // Function DFMGameplay.InventoryUtil.GenerateSpaceDataByEquipmentId // (Final|Native|Static|Public|HasOutParms) // @ game+0x638caa0
	bool STATIC_CheckTwoAmmoCanCombine(uint64_t& SourcePlayerId, uint64_t& TargetPlayerId, struct AGPCharacter* ProcessCharacter, uint64_t& NewBindPlayerId); // Function DFMGameplay.InventoryUtil.CheckTwoAmmoCanCombine // (Final|Native|Static|Public|HasOutParms) // @ game+0x638c8f0
	bool STATIC_CheckItemCanBePlaced(struct UItemSpace* TargetSpace, struct FBaseSpaceItem& TargetItem); // Function DFMGameplay.InventoryUtil.CheckItemCanBePlaced // (Final|Native|Static|Public|HasOutParms) // @ game+0x638c7f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemInfoProvider
// Size: 0x38 (Inherited: 0x38)
class UItemInfoProvider : public UItemInfoBaseProvider {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemSpace
// Size: 0x248 (Inherited: 0x30)
class UItemSpace : public UObject {
public:

	char pad_30[0x40]; // 0x30(0x40)
	struct UItemSpace* RefContainerSpace; // 0x70(0x08)
	struct UItemSpace* RefBagContainerSpace; // 0x78(0x08)
	struct UItemSpace* BindWeaponSpace; // 0x80(0x08)
	struct UItemSpace* BindBulletSpace; // 0x88(0x08)
	char pad_90[0x1b8]; // 0x90(0x1b8)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemSpawnPoint
// Size: 0x380 (Inherited: 0x378)
class AItemSpawnPoint : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)

	bool IsSpecifiedDropItemId(); // Function DFMGameplay.ItemSpawnPoint.IsSpecifiedDropItemId // (Native|Event|Public|BlueprintEvent) // @ game+0x35a2c00
	struct FString GetUniqueName(); // Function DFMGameplay.ItemSpawnPoint.GetUniqueName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FSpecifiedDropItemInfo GetSpecifiedDropItemInfo(); // Function DFMGameplay.ItemSpawnPoint.GetSpecifiedDropItemInfo // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetSmallAreaCustomName(); // Function DFMGameplay.ItemSpawnPoint.GetSmallAreaCustomName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetMapName(); // Function DFMGameplay.ItemSpawnPoint.GetMapName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetBigAreaName(); // Function DFMGameplay.ItemSpawnPoint.GetBigAreaName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.KuroshioShell
// Size: 0x408 (Inherited: 0x378)
class AKuroshioShell : public AActor {
public:

	char pad_378[0x18]; // 0x378(0x18)
	struct USphereComponent* SceneRoot; // 0x390(0x08)
	struct UProjectileMovementComponent* ProjectileMovementComponent; // 0x398(0x08)
	struct FKuroshioShellMovementParameter MovementParameter; // 0x3a0(0x24)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	int64_t ExplodeAttackerValueId; // 0x3c8(0x08)
	struct TArray<struct UClass*> DamageEffect; // 0x3d0(0x10)
	struct FName ExplosionEffectId; // 0x3e0(0x08)
	struct FName ShellTrailEffectID; // 0x3e8(0x08)
	float KnockDownRadius; // 0x3f0(0x04)
	float DelayDisappearTime; // 0x3f4(0x04)
	char pad_3F8[0x8]; // 0x3f8(0x08)
	struct UFXResourceContainerComponent* ShellFX; // 0x400(0x08)

	struct UFXResourceContainerComponent* PlayShellTrailEffect(); // Function DFMGameplay.KuroshioShell.PlayShellTrailEffect // (Final|Native|Public) // @ game+0x638d870
	void PlayShellExplosionEffect(); // Function DFMGameplay.KuroshioShell.PlayShellExplosionEffect // (Final|Native|Public) // @ game+0x638d850
	void PlayFlyByAudio(float Life); // Function DFMGameplay.KuroshioShell.PlayFlyByAudio // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnShellHitBP(); // Function DFMGameplay.KuroshioShell.OnShellHitBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnShellHit(struct FHitResult& ImpactResult); // Function DFMGameplay.KuroshioShell.OnShellHit // (Final|Native|Public|HasOutParms) // @ game+0x638d740
	void OnRep_MovementParameter(); // Function DFMGameplay.KuroshioShell.OnRep_MovementParameter // (Final|Native|Public) // @ game+0x638d720
	void DestroySelf(); // Function DFMGameplay.KuroshioShell.DestroySelf // (Final|Native|Protected) // @ game+0x638ca80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.KuroshioShellingArea
// Size: 0x3a8 (Inherited: 0x378)
class AKuroshioShellingArea : public AActor {
public:

	struct FSOLTimelineEventRange Range; // 0x378(0x08)
	struct TArray<struct FKuroshioShellingTemplateConfig> TemplateConfigs; // 0x380(0x10)
	struct TArray<struct AKuroshioShellingSubArea*> Areas; // 0x390(0x10)
	char pad_3A0[0x8]; // 0x3a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.KuroshioShellingSubArea
// Size: 0x380 (Inherited: 0x378)
class AKuroshioShellingSubArea : public AActor {
public:

	struct UBoxComponent* Box; // 0x378(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.KuroshioShellingTemplate
// Size: 0x3a8 (Inherited: 0x378)
class AKuroshioShellingTemplate : public AActor {
public:

	struct FSOLTimelineEventRange ShellNumRange; // 0x378(0x08)
	enum class EKuroshioShellDropMethod DropMethod; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct TArray<struct FVector2D> DropOrder; // 0x388(0x10)
	float Extent; // 0x398(0x04)
	float ExtraRandomOffset; // 0x39c(0x04)
	float FireInterval; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Landmine
// Size: 0x3e0 (Inherited: 0x378)
class ALandmine : public AActor {
public:

	char pad_378[0x20]; // 0x378(0x20)
	struct FLandmineDataFX LandmineDataFX; // 0x398(0x18)
	struct UBoxComponent* CacheHitBox; // 0x3b0(0x08)
	struct FName HitBoxName; // 0x3b8(0x08)
	int64_t ExplodeAttackerValueId; // 0x3c0(0x08)
	float LandmineDamageHeightOffset; // 0x3c8(0x04)
	float LandmineValidProbability; // 0x3cc(0x04)
	struct UFXResourceContainerComponent* ExplosionFXComp; // 0x3d0(0x08)
	char pad_3D8[0x4]; // 0x3d8(0x04)
	bool bHasBroken; // 0x3dc(0x01)
	char pad_3DD[0x3]; // 0x3dd(0x03)

	void ServerMakeDamage(); // Function DFMGameplay.Landmine.ServerMakeDamage // (Final|Native|Public) // @ game+0x638d8a0
	void PlayExplosionEffectOnCharacter(); // Function DFMGameplay.Landmine.PlayExplosionEffectOnCharacter // (Final|Native|Public|Const) // @ game+0x638d830
	void PlayExplosionEffect(); // Function DFMGameplay.Landmine.PlayExplosionEffect // (Final|Native|Public) // @ game+0x638d810
	void OnLandmineOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Landmine.OnLandmineOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x638d520
	void MulticastClientPlayExplosionEffect(); // Function DFMGameplay.Landmine.MulticastClientPlayExplosionEffect // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xbd2900
	void InitHitBox(); // Function DFMGameplay.Landmine.InitHitBox // (Final|Native|Public) // @ game+0x638d0a0
	void HideStaticMesh(); // Function DFMGameplay.Landmine.HideStaticMesh // (Final|Native|Public|Const) // @ game+0x638d080
	struct FName GetExplosionEffectName(); // Function DFMGameplay.Landmine.GetExplosionEffectName // (Final|Native|Public|Const) // @ game+0x638cdc0
	void ClientPlayExplosionEffect(); // Function DFMGameplay.Landmine.ClientPlayExplosionEffect // (Final|Native|Public) // @ game+0x638ca60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.LoginGameMode
// Size: 0x460 (Inherited: 0x460)
class ALoginGameMode : public AGameMode {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.LootingGlobalDefine
// Size: 0x30 (Inherited: 0x30)
class ULootingGlobalDefine : public UObject {
public:


	void STATIC_GetSlotsNeedSearch(struct TArray<uint32_t>& SlotsNeedSearch); // Function DFMGameplay.LootingGlobalDefine.GetSlotsNeedSearch // (Final|Native|Static|Public|HasOutParms) // @ game+0x638cf40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.LootSpaceInterface
// Size: 0x30 (Inherited: 0x30)
class ULootSpaceInterface : public UInterface {
public:


	enum class ELootObjType GetLootObjType(); // Function DFMGameplay.LootSpaceInterface.GetLootObjType // (Native|Public) // @ game+0x92e3d0
	struct FInventoryItemInfo GetItemByGID(uint64_t ItemGid); // Function DFMGameplay.LootSpaceInterface.GetItemByGID // (Native|Public) // @ game+0x6390b90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.LootUtil
// Size: 0x38 (Inherited: 0x30)
class ULootUtil : public UObject {
public:

	struct UItemSpace* TempSpace; // 0x30(0x08)

	bool STATIC_IsKeyContainerIndexMatchCurrentMap(char GridIndex, uint64_t CurrentMapId); // Function DFMGameplay.LootUtil.IsKeyContainerIndexMatchCurrentMap // (Final|Native|Static|Public) // @ game+0x6390d30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapEconomyData
// Size: 0x258 (Inherited: 0x38)
class UMapEconomyData : public UGameInstanceSingletonHelper {
public:

	char pad_38[0x220]; // 0x38(0x220)

	struct FPointResult STATIC_GetDropPointData(struct UObject* WorldContextObject, int32_t MapLevel, int32_t PointID, struct FString MapName, struct FString BigArea, struct FString SmallArea); // Function DFMGameplay.MapEconomyData.GetDropPointData // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x63906d0
	struct FBoxResult STATIC_GetDropBoxData(struct UObject* WorldContextObject, int32_t MapLevel, int32_t boxId, struct FString MapName, struct FString BigArea, struct FString SmallArea); // Function DFMGameplay.MapEconomyData.GetDropBoxData // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x63902f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapIconBlueprintsInterface
// Size: 0x30 (Inherited: 0x30)
class UMapIconBlueprintsInterface : public UInterface {
public:


	float GetRealWorldRange(); // Function DFMGameplay.MapIconBlueprintsInterface.GetRealWorldRange // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapInfoComponent
// Size: 0x6a0 (Inherited: 0x100)
class UMapInfoComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnCustomMapIconRemoved[0x10]; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)
	bool bHasLoadAllControllerClass; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct TArray<struct UMapIconViewController*> MapItemViewControllerArr; // 0x120(0x10)
	struct TMap<struct FName, struct UMapIconViewController*> MapItemViewControllerMap; // 0x130(0x50)
	struct TMap<enum class EDFMMapIconType, struct UClass*> MapIconControllerClassMap; // 0x180(0x50)
	struct TArray<struct UClass*> MapIconControllerClassCacheArr; // 0x1d0(0x10)
	struct TMap<enum class EDFMMapIconType, struct UClass*> MiniMapIconViewClassMap; // 0x1e0(0x50)
	struct TArray<struct UClass*> MiniMapIconViewClassCacheArr; // 0x230(0x10)
	struct TMap<enum class EDFMMapIconType, struct UClass*> BigMapIconViewClassMap; // 0x240(0x50)
	struct TArray<struct UClass*> BigMapIconViewClassCacheArr; // 0x290(0x10)
	char pad_2A0[0x18]; // 0x2a0(0x18)
	/*struct FMulticastInlineDelegate*/char OnMarkedItemNameChanged[0x10]; // 0x2b8(0x10)
	struct FDFMMapSignInfo MapSignInfo; // 0x2c8(0x38)
	char pad_300[0x8]; // 0x300(0x08)
	struct TArray<struct FString> MarkedItemNameArr; // 0x308(0x10)
	struct TArray<struct FVector> SniperMarkLocationArr; // 0x318(0x10)
	struct TArray<struct FKillInfo> TeammateKillInfoArr; // 0x328(0x10)
	struct FTimerHandle MapSignTimerHandle; // 0x338(0x08)
	float HitLocMaxZDiff; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct UDataTable* QuestTrackingDataTable; // 0x348(0x08)
	char pad_350[0x8]; // 0x350(0x08)
	struct TArray<struct FSOLQuestMapInfo> QuestObjectionTrackerArr; // 0x358(0x10)
	struct TArray<struct FSOLQuest> MapQuestArr; // 0x368(0x10)
	bool bQuestInited; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct TArray<struct FMapTrackData> TrackedTargetArr; // 0x380(0x10)
	struct TArray<struct FMapQuestLocationData> MapQuestLocationDataArray; // 0x390(0x10)
	int64_t CurrentTrackedQuestObjectiveID; // 0x3a0(0x08)
	struct FBigMapExitInfos BigMapExitInfos; // 0x3a8(0xa0)
	char pad_448[0x8]; // 0x448(0x08)
	struct UDataTable* MapLocationStructDataTable; // 0x450(0x08)
	struct TArray<struct FMapLocationStruct> Level2POIRows; // 0x458(0x10)
	struct TArray<struct FMapLocationStruct> Level2POIRows_Event; // 0x468(0x10)
	struct TArray<struct FMapLocationStruct> Level1POIRows; // 0x478(0x10)
	struct TArray<struct FMapLocationStruct> Level1POIRows_Event; // 0x488(0x10)
	struct TMap<struct FName, struct UMapItemRangeViewController*> BossRangeViewControllerCache; // 0x498(0x50)
	struct UDataTable* POIProductCollectionDataTable; // 0x4e8(0x08)
	char pad_4F0[0x18]; // 0x4f0(0x18)
	/*struct FMulticastInlineDelegate*/char OnClientUpdateTeamKillIcon[0x10]; // 0x508(0x10)
	struct TArray<struct FDFMMapDetectorData> DetectorMapSignInfo; // 0x518(0x10)
	char pad_528[0x10]; // 0x528(0x10)
	struct UClass* DetectorActorClass; // 0x538(0x08)
	int32_t DetectorSkillID; // 0x540(0x04)
	bool bShowDetectorBigMap; // 0x544(0x01)
	enum class EMapClickMode MapClickMode; // 0x545(0x01)
	char pad_546[0x2]; // 0x546(0x02)
	float DetectorMapRadius; // 0x548(0x04)
	float DetectorRadius; // 0x54c(0x04)
	float MinPlaceDetectRadius; // 0x550(0x04)
	struct FName MinPlaceText; // 0x554(0x08)
	float MinPlaceTextTime; // 0x55c(0x04)
	float DetectorRadiusScale; // 0x560(0x04)
	float SlideSpeed; // 0x564(0x04)
	float SupportMarkerShowTime; // 0x568(0x04)
	bool bIsShowMarkerInMap; // 0x56c(0x01)
	char pad_56D[0x7]; // 0x56d(0x07)
	bool bShowPlayerEnemyBody; // 0x574(0x01)
	bool bShowAIEnemyBody; // 0x575(0x01)
	char pad_576[0x2]; // 0x576(0x02)
	float DeadBodyIconLastTime; // 0x578(0x04)
	float AIDeadBodyIconLastTime; // 0x57c(0x04)
	struct FEnemyLocationInfo EnemyLocationInfo; // 0x580(0x30)
	struct FDetectorLocationInfo DetectorLocationInfo; // 0x5b0(0x30)
	char pad_5E0[0x30]; // 0x5e0(0x30)
	struct TArray<struct FBigMapWishItemInfo> WishItemInfos; // 0x610(0x10)
	char pad_620[0x8]; // 0x620(0x08)
	struct TArray<int64_t> ActivityItemList; // 0x628(0x10)
	char pad_638[0x8]; // 0x638(0x08)
	struct FDFMMapSignMapExtraSync ExtraSyncTeamMateMapSignInfos; // 0x640(0x50)
	char pad_690[0x10]; // 0x690(0x10)

	void SetSniperMarkLocationArr(struct TArray<struct FVector>& InMarkLocationArr); // Function DFMGameplay.MapInfoComponent.SetSniperMarkLocationArr // (Final|Native|Public|HasOutParms) // @ game+0x63964b0
	void SetQuestObjectionMarked(struct FName& ObjectionIdName, bool bInMark); // Function DFMGameplay.MapInfoComponent.SetQuestObjectionMarked // (Final|Native|Public|HasOutParms) // @ game+0x63963e0
	void ServerSetSniperMarkLocationArr(struct TArray<struct FVector> InMarkLocationArr); // Function DFMGameplay.MapInfoComponent.ServerSetSniperMarkLocationArr // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x6396310
	void ServerSetQuestObjectionMarked(struct FName ObjectionIdName, bool bInMark); // Function DFMGameplay.MapInfoComponent.ServerSetQuestObjectionMarked // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6396240
	void ServerRequestAllQuestTrackLocation(struct TArray<struct FQuestFullID> RequestIDArr); // Function DFMGameplay.MapInfoComponent.ServerRequestAllQuestTrackLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6396170
	void ServerRemoveTeammateKillInfo(uint64_t BeKillUin); // Function DFMGameplay.MapInfoComponent.ServerRemoveTeammateKillInfo // (Final|Native|Public) // @ game+0x63960f0
	void ServerRemoveMapSign(); // Function DFMGameplay.MapInfoComponent.ServerRemoveMapSign // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x63960a0
	void ServerGetItemInfoByRayCast(struct FVector StartLocation, struct FVector EndLocation); // Function DFMGameplay.MapInfoComponent.ServerGetItemInfoByRayCast // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x6395ff0
	void ServerDelayAddTeammateKillInfo(struct FKillInfo NewAddKillInfo); // Function DFMGameplay.MapInfoComponent.ServerDelayAddTeammateKillInfo // (Final|Native|Public) // @ game+0x6395f50
	void ServerClearMapSign(); // Function DFMGameplay.MapInfoComponent.ServerClearMapSign // (Final|Native|Public) // @ game+0x6395f30
	void ServerArtilleryShelling(struct FDFMMapIconData Data); // Function DFMGameplay.MapInfoComponent.ServerArtilleryShelling // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6395e90
	void ServerAddSupportSkillInfo(struct FSupportSkillInfo SupportSkillInfo); // Function DFMGameplay.MapInfoComponent.ServerAddSupportSkillInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6395db0
	void ServerAddNewPrepareBattleMapSign(struct FVector InLoc, struct FVector InDir); // Function DFMGameplay.MapInfoComponent.ServerAddNewPrepareBattleMapSign // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x6395d00
	void ServerAddNewMapSign(struct FVector InNewLoc, enum class EMapSignType MapMarkType, struct FName MarkTargetName, bool bNeedLineTrace); // Function DFMGameplay.MapInfoComponent.ServerAddNewMapSign // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x6395b80
	void ServerAddNewIconMarkSign(enum class EMapSignType MapMarkType, struct FName MarkTargetName, struct FVector Location); // Function DFMGameplay.MapInfoComponent.ServerAddNewIconMarkSign // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x6395a40
	void ServerAddDetectorMapSign(struct FDFMMapIconData Data); // Function DFMGameplay.MapInfoComponent.ServerAddDetectorMapSign // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63959a0
	void SendSerializedMapSignInfo(char ChangeType); // Function DFMGameplay.MapInfoComponent.SendSerializedMapSignInfo // (Final|Native|Public) // @ game+0x6395920
	void RemoveMapSign(bool bForceServer); // Function DFMGameplay.MapInfoComponent.RemoveMapSign // (Final|Native|Public) // @ game+0x6395890
	void RefreshMapSign(); // Function DFMGameplay.MapInfoComponent.RefreshMapSign // (Final|Native|Public) // @ game+0x6395870
	void OnRep_TeammateKillInfoArr(); // Function DFMGameplay.MapInfoComponent.OnRep_TeammateKillInfoArr // (Final|Native|Public) // @ game+0x6395850
	void OnRep_QuestObjectionTrackerArr(); // Function DFMGameplay.MapInfoComponent.OnRep_QuestObjectionTrackerArr // (Final|Native|Public) // @ game+0x17621d0
	void OnRep_MarkedItemNameArr(); // Function DFMGameplay.MapInfoComponent.OnRep_MarkedItemNameArr // (Final|Native|Public) // @ game+0x6395830
	void OnRep_MapSignInfo(); // Function DFMGameplay.MapInfoComponent.OnRep_MapSignInfo // (Final|Native|Public) // @ game+0x6395810
	void OnRep_DetectorMapSignInfo(); // Function DFMGameplay.MapInfoComponent.OnRep_DetectorMapSignInfo // (Final|Native|Public) // @ game+0x63957f0
	void OnRep_CurrentTrackedQuestObjectiveID(); // Function DFMGameplay.MapInfoComponent.OnRep_CurrentTrackedQuestObjectiveID // (Final|Native|Public) // @ game+0x63957d0
	void OnRemoveMapSign(); // Function DFMGameplay.MapInfoComponent.OnRemoveMapSign // (Final|Native|Public) // @ game+0x63957b0
	void OnPlayerKilledServerNotify(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* WeaponDesc); // Function DFMGameplay.MapInfoComponent.OnPlayerKilledServerNotify // (Final|Native|Public|HasOutParms) // @ game+0x63956b0
	void OnMarkMapTarget(char MapSignTypeInt, struct FName& TargetName, struct FVector& Location, bool bIsAdd); // Function DFMGameplay.MapInfoComponent.OnMarkMapTarget // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6395530
	void OnIconControllerLoadedComplete(struct TArray<struct FSoftObjectPath> IconControllersToLoad, struct TArray<enum class EDFMMapIconType> MapIconTypes); // Function DFMGameplay.MapInfoComponent.OnIconControllerLoadedComplete // (Final|Native|Public) // @ game+0x63952e0
	void OnClientEvacuationEventCreate(struct ASOLEvacuationEvent* InSOLEvacuationEvent); // Function DFMGameplay.MapInfoComponent.OnClientEvacuationEventCreate // (Final|Native|Protected) // @ game+0x6395260
	void OnAsyncLoadQuestTrackingTable(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.MapInfoComponent.OnAsyncLoadQuestTrackingTable // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6395180
	void OnAsyncLoadMapPOIProductCollectionTable(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.MapInfoComponent.OnAsyncLoadMapPOIProductCollectionTable // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x63950a0
	void OnAsyncLoadMapLocationTable(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.MapInfoComponent.OnAsyncLoadMapLocationTable // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6394fc0
	void NtfServerMarkerQuestObjectiveID(int64_t QuestObjectiveID); // Function DFMGameplay.MapInfoComponent.NtfServerMarkerQuestObjectiveID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360b800
	void NtfMarkerQuestObjectiveID(int64_t QuestObjectiveID); // Function DFMGameplay.MapInfoComponent.NtfMarkerQuestObjectiveID // (Final|Native|Public) // @ game+0x6394f40
	void NtfClientTrackTargetArrChanged(struct FName IconName, bool bVisiblity); // Function DFMGameplay.MapInfoComponent.NtfClientTrackTargetArrChanged // (Final|Native|Public) // @ game+0x6394e70
	void NtfClientRemoveTrackTarget(int32_t OldContractID); // Function DFMGameplay.MapInfoComponent.NtfClientRemoveTrackTarget // (Final|Native|Public) // @ game+0x6394df0
	bool IsDoorTracked(struct FString DoorName); // Function DFMGameplay.MapInfoComponent.IsDoorTracked // (Final|Native|Public) // @ game+0x6394d20
	void InitPOIInfoByName(struct FString TableName); // Function DFMGameplay.MapInfoComponent.InitPOIInfoByName // (Final|Native|Public|BlueprintCallable) // @ game+0x6394c00
	void InitMapPOIProductCollectionByName(struct FString TableName); // Function DFMGameplay.MapInfoComponent.InitMapPOIProductCollectionByName // (Final|Native|Public|BlueprintCallable) // @ game+0x6394ae0
	void HandleGMAddQuest(); // Function DFMGameplay.MapInfoComponent.HandleGMAddQuest // (Final|Native|Protected) // @ game+0x6394ac0
	void GMInitQuestDataTable(struct UDataTable* InDataTable); // Function DFMGameplay.MapInfoComponent.GMInitQuestDataTable // (Final|Native|Protected) // @ game+0x6394600
	int32_t GetSortValue(struct FSOLQuest& Quest); // Function DFMGameplay.MapInfoComponent.GetSortValue // (Final|Native|Public|HasOutParms) // @ game+0x63949c0
	struct FDFMMapSignInfo GetMapSignInfo(); // Function DFMGameplay.MapInfoComponent.GetMapSignInfo // (Final|Native|Public) // @ game+0x6394970
	bool GetMapQuestMapTrackingInfo(struct FQuestFullID& FullID, struct FSOLQuestMapInfo& QuestMapTrackingInfo); // Function DFMGameplay.MapInfoComponent.GetMapQuestMapTrackingInfo // (Final|Native|Public|HasOutParms) // @ game+0x6394840
	void GetLineTraceWorldLocation(struct FVector InNewLoc); // Function DFMGameplay.MapInfoComponent.GetLineTraceWorldLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63947c0
	struct FString GetItemInfoByRayCast(struct FVector& StartLocation, struct FVector& EndLocation); // Function DFMGameplay.MapInfoComponent.GetItemInfoByRayCast // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6394680
	int32_t FindQuestTrackerByQuestFullId(struct FQuestFullID& QuestFullID); // Function DFMGameplay.MapInfoComponent.FindQuestTrackerByQuestFullId // (Final|Native|Public|HasOutParms) // @ game+0x6394550
	void ClientSetEnemyLocationInfo(struct FEnemyLocationInfo InEnemyLocationInfo); // Function DFMGameplay.MapInfoComponent.ClientSetEnemyLocationInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6394470
	void ClientSetCommonEnemyLocationInfo(struct FEnemyLocationInfo InEnemyLocationInfo); // Function DFMGameplay.MapInfoComponent.ClientSetCommonEnemyLocationInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6394390
	void ClientSetCommonDetectorLocationInfo(struct FDetectorLocationInfo InDetectorLocationInfo); // Function DFMGameplay.MapInfoComponent.ClientSetCommonDetectorLocationInfo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63942f0
	void ClientAsyncLoadQuestTrackingTableByName(struct FString TableName); // Function DFMGameplay.MapInfoComponent.ClientAsyncLoadQuestTrackingTableByName // (Final|Native|Public|BlueprintCallable) // @ game+0x63941d0
	void AsyncLoadGMAddQuestTable(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.MapInfoComponent.AsyncLoadGMAddQuestTable // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x63940f0
	void AddNewMapSign(struct FVector& InNewLoc, enum class EMapSignType MarkType, struct FName& MarkTargetName, bool bNeedLineTrace, float Duration); // Function DFMGameplay.MapInfoComponent.AddNewMapSign // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6393f20
	void AddNewIconMarkSign(enum class EMapSignType MarkType, struct FName& MarkTargetName, struct FVector& Location); // Function DFMGameplay.MapInfoComponent.AddNewIconMarkSign // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6393e00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapInfoSystem
// Size: 0x610 (Inherited: 0x100)
class UMapInfoSystem : public UActorComponent {
public:

	struct TMap<int64_t, struct UTeamMateSignIconViewController*> TeamMateSignIconControllerMap; // 0x100(0x50)
	char pad_150[0x8]; // 0x150(0x08)
	struct TArray<struct FAmmoBoxInfo> BreakthroughAmmoBoxInfo; // 0x158(0x10)
	/*struct TSet<struct FName>*/char BreakthroughAmmoBoxNameSet[0x50]; // 0x168(0x50)
	struct TMap<struct UMapIconViewController*, bool> ExistMapCtrlMap; // 0x1b8(0x50)
	struct TMap<struct FName, struct FTimerHandle> ServerSupportSkillInfoMap; // 0x208(0x50)
	struct TArray<struct FSupportSkillInfo> SupportSkillInfoArray; // 0x258(0x10)
	struct TMap<struct FName, struct FMapIconCtrlArray> ClientSupportSkillIconControllerMap; // 0x268(0x50)
	struct TMap<struct FName, struct UMapIconViewController*> QAMakerMapIconControllerMap; // 0x2b8(0x50)
	struct TArray<struct FQAMakerMapIconInfo> PendingQAMarkerArr; // 0x308(0x10)
	struct TArray<struct FVehicleOnFireInfo> VehicleOnFireInfoArray; // 0x318(0x10)
	struct TMap<uint32_t, struct FTimerHandle> VehicleOnFireTimerMap; // 0x328(0x50)
	float VehicleOnFireTime; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct TArray<struct FHighValueBoxInfo> HighValueBoxInfoArray; // 0x380(0x10)
	struct TArray<struct FHelicopterDeterrenceInfo> HelicopterDeterrenceInfoArray; // 0x390(0x10)
	struct FBossLocInfo BossLocInfo; // 0x3a0(0x30)
	char pad_3D0[0x1b0]; // 0x3d0(0x1b0)
	struct TArray<struct UObject*> IconSpriteArray; // 0x580(0x10)
	char pad_590[0x8]; // 0x590(0x08)
	struct UMapPlayer2SignLineController* Player2SignLineController; // 0x598(0x08)
	struct TArray<struct AMapFloorVolume*> MiniMapFloorVolumeStack; // 0x5a0(0x10)
	struct UFloorVolumeMapIconViewController* FloorVolumeMapIconViewController; // 0x5b0(0x08)
	struct UTexture2D* FloorVolumeTexture; // 0x5b8(0x08)
	struct AMapMultiFloorVolume* MiniMapMultiFloorVolume; // 0x5c0(0x08)
	struct AMapFloorVolume* MiniMapFloorVolume; // 0x5c8(0x08)
	struct APOITriggerActor* CurPOITriggerActor; // 0x5d0(0x08)
	char pad_5D8[0x28]; // 0x5d8(0x28)
	struct AMapFloorVolume* BigMapFloorVolume; // 0x600(0x08)
	struct UFloorVolumeMapIconViewController* BigMapFloorVolumeCtrl; // 0x608(0x08)

	void UpdateBossUpdateLoc(); // Function DFMGameplay.MapInfoSystem.UpdateBossUpdateLoc // (Native|Public) // @ game+0x3615dc0
	void UpdateAllPlayerMarkIcon(); // Function DFMGameplay.MapInfoSystem.UpdateAllPlayerMarkIcon // (Native|Protected) // @ game+0x35a3800
	void RemoveVehicleOnFireInfoWhenTimeOut(uint32_t InVehicleID); // Function DFMGameplay.MapInfoSystem.RemoveVehicleOnFireInfoWhenTimeOut // (Final|Native|Public) // @ game+0x639a570
	void RemoveBreakthroughAmmoBox(struct AActor* AmmoBox); // Function DFMGameplay.MapInfoSystem.RemoveBreakthroughAmmoBox // (Final|Native|Public|BlueprintCallable) // @ game+0x639a4f0
	void OnVehicleBeginFire(struct AActor* CHARACTER, struct AActor* Vehicle); // Function DFMGameplay.MapInfoSystem.OnVehicleBeginFire // (Final|Native|Public) // @ game+0x639a2c0
	void OnRep_VehicleOnFireInfoArray(); // Function DFMGameplay.MapInfoSystem.OnRep_VehicleOnFireInfoArray // (Final|Native|Public) // @ game+0x639a2a0
	void OnRep_SupportSkillInfoArray(); // Function DFMGameplay.MapInfoSystem.OnRep_SupportSkillInfoArray // (Final|Native|Public) // @ game+0x639a260
	void OnRep_HighValueBoxInfoArray(); // Function DFMGameplay.MapInfoSystem.OnRep_HighValueBoxInfoArray // (Final|Native|Public) // @ game+0x639a1c0
	void OnRep_HelicopterDeterrenceInfoArray(); // Function DFMGameplay.MapInfoSystem.OnRep_HelicopterDeterrenceInfoArray // (Final|Native|Public) // @ game+0x639a1a0
	void OnRep_BreakthroughAmmoBoxInfo(); // Function DFMGameplay.MapInfoSystem.OnRep_BreakthroughAmmoBoxInfo // (Final|Native|Public) // @ game+0x639a180
	void OnRep_BossLocInfo(); // Function DFMGameplay.MapInfoSystem.OnRep_BossLocInfo // (Final|Native|Public) // @ game+0x639a160
	void OnPlayerMarkMapIcon(uint64_t PlayerId, struct FDFMMapSignInfo& MapSignInfo); // Function DFMGameplay.MapInfoSystem.OnPlayerMarkMapIcon // (Native|Protected|HasOutParms) // @ game+0x639a050
	void OnLoadedAllControllerClass(); // Function DFMGameplay.MapInfoSystem.OnLoadedAllControllerClass // (Final|Native|Protected) // @ game+0x6399cf0
	void OnClientQAMakerMapIconInfoUpdate(struct FQAMakerMapIconInfo& QAMakerMapIconInfo); // Function DFMGameplay.MapInfoSystem.OnClientQAMakerMapIconInfoUpdate // (Final|Native|Protected|HasOutParms) // @ game+0x6399bf0
	void OnClientInventoryKeyChanged(bool bIsAddKey, struct FName& KeyIdName); // Function DFMGameplay.MapInfoSystem.OnClientInventoryKeyChanged // (Final|Native|Protected|HasOutParms) // @ game+0x6399b20
	void OnBigMapSelectedMapFloorVolume(struct AMapFloorVolume* FloorVolume, bool bSelected); // Function DFMGameplay.MapInfoSystem.OnBigMapSelectedMapFloorVolume // (Final|Native|Public) // @ game+0x6399a30
	void OnBigMapAsyncLoadFloorVolumeTexture(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.MapInfoSystem.OnBigMapAsyncLoadFloorVolumeTexture // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6399950
	void OnAsyncLoadFloorVolumeTexture(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.MapInfoSystem.OnAsyncLoadFloorVolumeTexture // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6399870
	struct UMapInfoConfig* GetMapInfoConfig(struct FString MapName); // Function DFMGameplay.MapInfoSystem.GetMapInfoConfig // (Final|Native|Public) // @ game+0x63996a0
	struct UMapInfoSystem* STATIC_GetInst(struct UObject* WorldContextObject); // Function DFMGameplay.MapInfoSystem.GetInst // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6399620
	void AddBreakthroughAmmoBox(struct AActor* AmmoBox, bool bVehicleSupplyStation); // Function DFMGameplay.MapInfoSystem.AddBreakthroughAmmoBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6398dd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapFloorVolume
// Size: 0x438 (Inherited: 0x378)
class AMapFloorVolume : public AActor {
public:

	struct UBoxComponent* EditorBoxComponent; // 0x378(0x08)
	struct UBoxComponent* RuntimeOverlapBoxComponent; // 0x380(0x08)
	struct USceneCaptureComponent2D* EditorSceneCaptureComponent2D; // 0x388(0x08)
	enum class EMapFloorType FloorType; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	int32_t FloorWidth; // 0x394(0x04)
	int32_t FloorHeight; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct TArray<float> EditorCaptureOffSetZ; // 0x3a0(0x10)
	int32_t EditorCaptureOffSetIndex; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)
	struct AMapMultiFloorVolume* MultiFloorVolume; // 0x3b8(0x08)
	float MiniMapZoomRadio; // 0x3c0(0x04)
	float MiniMapZoomTime; // 0x3c4(0x04)
	struct FSoftObjectPath MapFloorTexture; // 0x3c8(0x18)
	bool bRuntimeOverlapEqualEditorBox; // 0x3e0(0x01)
	char pad_3E1[0x7]; // 0x3e1(0x07)
	struct TMap<struct FString, struct UMaterialInterface*> PostProcessMatMap; // 0x3e8(0x50)

	void UsePostProcessMat(struct USceneCaptureComponent2D* InCapture2D, struct FString PPMatName); // Function DFMGameplay.MapFloorVolume.UsePostProcessMat // (Final|Native|Protected|BlueprintCallable) // @ game+0x639a6f0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.MapFloorVolume.OnOverlapEnd // (Native|Protected) // @ game+0x6399f10
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.MapFloorVolume.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x6399d10
	struct USceneCaptureComponent2D* GetCaptureComponentByIndex(int32_t Index); // Function DFMGameplay.MapFloorVolume.GetCaptureComponentByIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x6399590
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapMultiFloorVolume
// Size: 0x3d8 (Inherited: 0x378)
class AMapMultiFloorVolume : public AActor {
public:

	struct UBoxComponent* BoxComponent; // 0x378(0x08)
	struct TArray<struct AMapFloorVolume*> MapFloorVolumeChildren; // 0x380(0x10)
	struct FText MultiFloorName; // 0x390(0x18)
	float BigMapSelectedScale; // 0x3a8(0x04)
	bool bTriggerUpdateBox; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)
	struct FString MultiFloorEnName; // 0x3b0(0x10)
	bool bTestGetMapFloorStructs; // 0x3c0(0x01)
	char pad_3C1[0x17]; // 0x3c1(0x17)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.MapMultiFloorVolume.OnOverlapEnd // (Native|Public) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.MapMultiFloorVolume.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x36ce950
	struct TArray<struct FMapFloorStruct> BP_GetMapFloorStructs(); // Function DFMGameplay.MapMultiFloorVolume.BP_GetMapFloorStructs // (Final|Native|Public|BlueprintCallable) // @ game+0x6399050
	struct TArray<struct FMapFloorCaptureInfo> BP_GetMapFloorCaptureInfo(); // Function DFMGameplay.MapMultiFloorVolume.BP_GetMapFloorCaptureInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x6398ea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMMapRegionHelperActor
// Size: 0x388 (Inherited: 0x378)
class ADFMMapRegionHelperActor : public AActor {
public:

	enum class EMapRegionHelperType HelperType; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct UBoxComponent* BoxComponent; // 0x380(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Minefield
// Size: 0x3c8 (Inherited: 0x378)
class AMinefield : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct UClass* LandmineToSpawn; // 0x380(0x08)
	int32_t MinefieldLandmineNum; // 0x388(0x04)
	float MinefieldRadius; // 0x38c(0x04)
	float MinefieldRandLocMinDist; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct TArray<struct TWeakObjectPtr<struct ALandmine>> Landmines; // 0x398(0x10)
	struct TArray<struct FVector> RandomLocArray; // 0x3a8(0x10)
	struct TArray<struct FVector> LandmineTargetLocs; // 0x3b8(0x10)

	struct ALandmine* SpawnLandMine(struct FVector& LandmineLoc, struct FRotator& LandmineRot); // Function DFMGameplay.Minefield.SpawnLandMine // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x639a5f0
	struct FVector RandomPointInCircle(struct FVector& CircleCenter, float CircleRadius); // Function DFMGameplay.Minefield.RandomPointInCircle // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x639a400
	bool GenerateRandomPointInMinefield(struct FVector& CircleCenter, float CircleRadius, struct TArray<struct FVector>& ExistingRandomPoints, struct FVector& OutRandomPoint); // Function DFMGameplay.Minefield.GenerateRandomPointInMinefield // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x63993c0
	void GenerateMinefieldForTargetRandomLoc(); // Function DFMGameplay.Minefield.GenerateMinefieldForTargetRandomLoc // (Final|Native|Public) // @ game+0x63993a0
	void GenerateMinefield(); // Function DFMGameplay.Minefield.GenerateMinefield // (Final|Native|Public) // @ game+0x6399380
	void DrawMinefieldCircle(); // Function DFMGameplay.Minefield.DrawMinefieldCircle // (Final|Native|Protected|Const) // @ game+0x6399360
	void DestroyMinefield(); // Function DFMGameplay.Minefield.DestroyMinefield // (Final|Native|Public) // @ game+0x6399340
	float CalculateMinDistance(struct FVector& CandidateLoc, struct TArray<struct FVector>& ExistingRandomPoints); // Function DFMGameplay.Minefield.CalculateMinDistance // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x6399200
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MinimalReplicationPolicy
// Size: 0x400 (Inherited: 0x378)
class AMinimalReplicationPolicy : public AActor {
public:

	struct FMinimalRepCollectFrequency CollectFrequencySetting; // 0x378(0x02)
	bool bIsSpawned; // 0x37a(0x01)
	char pad_37B[0x5]; // 0x37b(0x05)
	struct TArray<uint64_t> AllTeamStartIds; // 0x380(0x10)
	struct TArray<char> AllTeamStartCamp; // 0x390(0x10)
	bool AllTeamStartIdsCollected; // 0x3a0(0x01)
	char pad_3A1[0x7]; // 0x3a1(0x07)
	struct TArray<struct FVector> AllTeamStartLocations; // 0x3a8(0x10)
	struct TArray<uint64_t> AllCapturePointsIds; // 0x3b8(0x10)
	struct TArray<struct AActor*> AllRebornWarTower; // 0x3c8(0x10)
	char pad_3D8[0x18]; // 0x3d8(0x18)
	struct UPackageMap* PackageMap; // 0x3f0(0x08)
	struct AGPGameMode* GameMode; // 0x3f8(0x08)

	void OnRepDynamicActorsFlagChanged(); // Function DFMGameplay.MinimalReplicationPolicy.OnRepDynamicActorsFlagChanged // (Final|Native|Protected) // @ game+0x639a140
	void OnRep_TeamStart(); // Function DFMGameplay.MinimalReplicationPolicy.OnRep_TeamStart // (Final|Native|Private) // @ game+0x639a280
	void OnRep_RefreshRebornTower(); // Function DFMGameplay.MinimalReplicationPolicy.OnRep_RefreshRebornTower // (Final|Native|Private) // @ game+0x639a240
	void OnRep_RefreshPlayer(); // Function DFMGameplay.MinimalReplicationPolicy.OnRep_RefreshPlayer // (Final|Native|Private) // @ game+0x639a220
	void OnRep_RedeployPoint(); // Function DFMGameplay.MinimalReplicationPolicy.OnRep_RedeployPoint // (Final|Native|Private) // @ game+0x639a200
	void OnRep_OnSpawned(); // Function DFMGameplay.MinimalReplicationPolicy.OnRep_OnSpawned // (Final|Native|Private) // @ game+0x639a1e0
	void InitActorMap(); // Function DFMGameplay.MinimalReplicationPolicy.InitActorMap // (Final|Native|Protected) // @ game+0x6399770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MinimalReplicationPolicyCollection
// Size: 0x48 (Inherited: 0x38)
class UMinimalReplicationPolicyCollection : public UWorldSubsystem {
public:

	struct AMinimalReplicationPolicy* SingletonActor; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MockPathHelper
// Size: 0x620 (Inherited: 0x378)
class AMockPathHelper : public AActor {
public:

	float PushOutDist; // 0x378(0x04)
	float MaxIntersectLength; // 0x37c(0x04)
	float ShortSegExpandLength; // 0x380(0x04)
	float ShortSegmentThreshold; // 0x384(0x04)
	int32_t AreaMaskFlag; // 0x388(0x04)
	float WallCheckDist; // 0x38c(0x04)
	bool bRemoveExtremeShortSegment; // 0x390(0x01)
	bool bExtendFirstLastSegment; // 0x391(0x01)
	bool DrawOriginPath; // 0x392(0x01)
	bool DrawProcessedPath; // 0x393(0x01)
	bool DrawRaycast; // 0x394(0x01)
	char pad_395[0x3]; // 0x395(0x03)
	struct UArrowComponent* Start; // 0x398(0x08)
	struct UArrowComponent* End; // 0x3a0(0x08)
	struct USphereComponent* SphereComponent; // 0x3a8(0x08)
	struct ULineBatchComponent* Drawer; // 0x3b0(0x08)
	struct TArray<struct FVector> PathPoints; // 0x3b8(0x10)
	struct UTextRenderComponent* TextRenderComp; // 0x3c8(0x08)
	struct ARecastNavMesh* RecastNavMesh; // 0x3d0(0x08)
	struct FDFMCoverInfo GeneratedCover; // 0x3d8(0x28)
	struct FDFMCoverContext GeneratedContext; // 0x400(0x1b0)
	char pad_5B0[0x40]; // 0x5b0(0x40)
	bool bUseGeneratedPath; // 0x5f0(0x01)
	bool bSwapEndpoints; // 0x5f1(0x01)
	char pad_5F2[0x2]; // 0x5f2(0x02)
	float GenPathLength; // 0x5f4(0x04)
	float GenPathDegree; // 0x5f8(0x04)
	struct FVector ForwardVector; // 0x5fc(0x0c)
	bool bPathGenFocusPlayer; // 0x608(0x01)
	char pad_609[0x3]; // 0x609(0x03)
	float GenPathFocusYaw; // 0x60c(0x04)
	float GenPathFocusPitch; // 0x610(0x04)
	char pad_614[0xc]; // 0x614(0x0c)

	void SnapExistedCover(bool bStart, struct FGameplayTagContainer& StateTags, bool bIsLeftCover, bool bIsRightCover, bool bIsStand); // Function DFMGameplay.MockPathHelper.SnapExistedCover // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x63a18f0
	void PushOutSegments(); // Function DFMGameplay.MockPathHelper.PushOutSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a17d0
	void ProcessNavSegments(); // Function DFMGameplay.MockPathHelper.ProcessNavSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a17b0
	void ProcessCover(bool bStart, struct FGameplayTagContainer& StateTags, bool bIsLeftCover, bool bIsRightCover, bool bIsStand); // Function DFMGameplay.MockPathHelper.ProcessCover // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x63a1590
	void OnRep_PathPoints(); // Function DFMGameplay.MockPathHelper.OnRep_PathPoints // (Final|Native|Protected) // @ game+0x63a1570
	void OnPathUpdated(); // Function DFMGameplay.MockPathHelper.OnPathUpdated // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void MergeShortSegments(); // Function DFMGameplay.MockPathHelper.MergeShortSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a1380
	bool MergeLastShortSegments(); // Function DFMGameplay.MockPathHelper.MergeLastShortSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a1350
	void MergeLastLongSegments(); // Function DFMGameplay.MockPathHelper.MergeLastLongSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a1330
	void MergeCoplanarSegments(); // Function DFMGameplay.MockPathHelper.MergeCoplanarSegments // (Final|Native|Protected|BlueprintCallable) // @ game+0x63a1310
	void InsertCoverEntry(bool bStart, struct FGameplayTagContainer& StateTags, bool bIsLeftCover, bool bIsRightCover, bool bIsStand); // Function DFMGameplay.MockPathHelper.InsertCoverEntry // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x63a10c0
	struct FVector GetPathGenFocus(); // Function DFMGameplay.MockPathHelper.GetPathGenFocus // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x63a1080
	bool GetCameraTransform(struct FVector& OutLoc, struct FVector& OutForward); // Function DFMGameplay.MockPathHelper.GetCameraTransform // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x63a0ef0
	void GenerateZPath(); // Function DFMGameplay.MockPathHelper.GenerateZPath // (Final|Native|Public|BlueprintCallable) // @ game+0x63a0ed0
	void GenerateStraightPath(); // Function DFMGameplay.MockPathHelper.GenerateStraightPath // (Final|Native|Public|BlueprintCallable) // @ game+0x63a0eb0
	void FulfillPathToController(struct ADFMAIController* AIController); // Function DFMGameplay.MockPathHelper.FulfillPathToController // (Final|Native|Public|BlueprintCallable) // @ game+0x63a0e30
	void DebugCoverEntry(bool bStart, struct FGameplayTagContainer& StateTags, bool bIsLeftCover, bool bIsRightCover, bool bIsStand); // Function DFMGameplay.MockPathHelper.DebugCoverEntry // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x63a0b00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_BlendOut
// Size: 0x48 (Inherited: 0x40)
class UAnimNotify_BlendOut : public UAnimNotify {
public:

	struct TWeakObjectPtr<struct UMotionAction_AnimPath> AnimPathAction; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_SwitchToFixedMGIK
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_SwitchToFixedMGIK : public UAnimNotify {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_AnimPlayAlign
// Size: 0x50 (Inherited: 0x40)
class UAnimNotify_AnimPlayAlign : public UAnimNotify {
public:

	struct FAnimAlignConfig AlignConfig; // 0x40(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionActionReplicateComponent
// Size: 0x100 (Inherited: 0x100)
class UMotionActionReplicateComponent : public UActorComponent {
public:


	void SyncInitStateToClient(struct UMotionActionComponent* Target, struct FInitStateSyncMsg Msg); // Function DFMGameplay.MotionActionReplicateComponent.SyncInitStateToClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63a8570
	void SendMsg_RequestSeparatorFrame(struct UMotionActionComponent* Target, struct FMotionActionMsg_RequestSeparatorFrame Msg); // Function DFMGameplay.MotionActionReplicateComponent.SendMsg_RequestSeparatorFrame // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63a84a0
	void SendMsg_NewTickActionFrame(struct UMotionActionComponent* Target, struct FMotionActionMsg_NewTickActionFrame Msg); // Function DFMGameplay.MotionActionReplicateComponent.SendMsg_NewTickActionFrame // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63a8370
	void SendMsg_NewActionFrame(struct UMotionActionComponent* Target, struct FMotionActionMsg_NewActionFrames Msg); // Function DFMGameplay.MotionActionReplicateComponent.SendMsg_NewActionFrame // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63a8240
	void RequestInitState(struct UMotionActionComponent* Target); // Function DFMGameplay.MotionActionReplicateComponent.RequestInitState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360b770
	void ReportPlasmolysis(enum class EPlasmolysisType PlasmolysisType, struct ADFMAICharacter* AICharacter, struct FVector LocA, struct FVector LocB); // Function DFMGameplay.MotionActionReplicateComponent.ReportPlasmolysis // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63a8040
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BPUtility_ListAIAnims
// Size: 0x30 (Inherited: 0x30)
class UBPUtility_ListAIAnims : public UBlueprintFunctionLibrary {
public:


	struct TArray<struct FString> STATIC_ListAnims(struct UDataTable* DataTable); // Function DFMGameplay.BPUtility_ListAIAnims.ListAnims // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63a7ba0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionGraphSystem
// Size: 0x2a0 (Inherited: 0x38)
class UMotionGraphSystem : public UWorldSubsystem {
public:

	struct TMap<struct FMotionGraphConfigKey, struct FMotionGraphConfigSetValue> MotionGraphConfigSets; // 0x38(0x50)
	/*struct TSet<struct FSoftObjectPath>*/char LoadedExAnims[0x50]; // 0x88(0x50)
	struct TMap<struct UDataTable*, int32_t> ExtraAnimTableLoaded; // 0xd8(0x50)
	/*struct TSet<struct UAnimationAsset*>*/char AnimCacheSet[0x50]; // 0x128(0x50)
	char pad_178[0x108]; // 0x178(0x108)
	struct TArray<struct FMotionGraphConfig> MotionGraphConfigList; // 0x280(0x10)
	struct TArray<struct FPathFollowGoal> PathFollowGoals; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionPathFilter_SprintTurn
// Size: 0x48 (Inherited: 0x30)
class UMotionPathFilter_SprintTurn : public UObject {
public:

	char pad_30[0x18]; // 0x30(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_MotionMovementSection
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_MotionMovementSection : public UAnimNotify {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionPlanLogger
// Size: 0x40 (Inherited: 0x30)
class UMotionPlanLogger : public UObject {
public:

	char pad_30[0x10]; // 0x30(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionSMStateInstance
// Size: 0x1d0 (Inherited: 0xd0)
class UMotionSMStateInstance : public USMStateInstance {
public:

	struct FGameplayTag StateExportTag; // 0xd0(0x08)
	struct FGameplayTagContainer StateFilterTags; // 0xd8(0x20)
	struct FGameplayTagContainer StateLockerTags; // 0xf8(0x20)
	bool bCheckSegmentType; // 0x118(0x01)
	bool bCombineAction; // 0x119(0x01)
	bool bPreferFocus; // 0x11a(0x01)
	bool bRandomizedCost; // 0x11b(0x01)
	float MotionCostFactor; // 0x11c(0x04)
	struct FMotionStateConfig StateConfig; // 0x120(0x20)
	struct TArray<enum class EAIAdditiveBehavior> AdditiveBehaviorSwitches; // 0x140(0x10)
	struct FMotionStateAnimConfig AnimConfig; // 0x150(0x80)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionSMTransitionInstance
// Size: 0xb8 (Inherited: 0xb0)
class UMotionSMTransitionInstance : public USMTransitionInstance {
public:

	struct FMotionTransitionConfig TransitionConfig; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionSMInstance
// Size: 0x608 (Inherited: 0x608)
class UMotionSMInstance : public USMInstance {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionSMStateMachineInstance
// Size: 0xf8 (Inherited: 0xd8)
class UMotionSMStateMachineInstance : public USMStateMachineInstance {
public:

	struct FGameplayTagContainer StateFilterTags; // 0xd8(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MultiInteractorBase
// Size: 0x770 (Inherited: 0x378)
class AMultiInteractorBase : public AActor {
public:

	char pad_378[0x1f8]; // 0x378(0x1f8)
	bool bCalculateAngleUseZ; // 0x570(0x01)
	char pad_571[0x7]; // 0x571(0x07)
	struct FText InteractorName; // 0x578(0x18)
	float InteracterToCharacterDistanceToleranceSquare; // 0x590(0x04)
	bool bHideWhiteDot; // 0x594(0x01)
	char pad_595[0x3]; // 0x595(0x03)
	struct FName InteractorHUDName; // 0x598(0x08)
	struct TArray<struct FInteractOperators> InteractedOperatorArray; // 0x5a0(0x10)
	struct TArray<struct AGPCharacter*> WaitingInteractOperatorArray; // 0x5b0(0x10)
	struct TArray<struct USceneComponent*> InteractPointArray; // 0x5c0(0x10)
	struct FGameplayTag InteractorTag; // 0x5d0(0x08)
	struct FGameplayTagContainer InteractableTags; // 0x5d8(0x20)
	bool CustombActive_HD; // 0x5f8(0x01)
	bool CustombEnable_HD; // 0x5f9(0x01)
	bool CustombNeedHUDFixedPos_HD; // 0x5fa(0x01)
	bool CustombIsTagNumOverTwo_HD; // 0x5fb(0x01)
	bool CustombIsNeedFilterPre_HD; // 0x5fc(0x01)
	bool CustombIsNeedFilter3C_HD; // 0x5fd(0x01)
	bool CustombIsNeedShowWhiteDot_HD; // 0x5fe(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_HD; // 0x5ff(0x01)
	float CustomDetectShowWhiteDotHorizontalAngle_HD; // 0x600(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_HD; // 0x604(0x04)
	float CustomDetectShowWhiteDotMinRadius_HD; // 0x608(0x04)
	float CustomDetectShowWhiteDotMaxRadius_HD; // 0x60c(0x04)
	bool CustombIsNeedShowOutline_HD; // 0x610(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_HD; // 0x611(0x01)
	char pad_612[0x2]; // 0x612(0x02)
	float CustomDetectShowOutlineHorizontalAngle_HD; // 0x614(0x04)
	float CustomDetectShowOutlineVerticalAngle_HD; // 0x618(0x04)
	float CustomDetectShowOutlineMinRadius_HD; // 0x61c(0x04)
	float CustomDetectShowOutlineMaxRadius_HD; // 0x620(0x04)
	float CustomDetectShowHUDMinRadius_HD; // 0x624(0x04)
	float CustomDetectShowHUDMaxRadius_HD; // 0x628(0x04)
	struct FName CustomDetectShowHUDBoxCompName_HD; // 0x62c(0x08)
	char pad_634[0x4]; // 0x634(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_HD; // 0x638(0x08)
	float CustomDetectShowHUDHorizontalAngle_HD; // 0x640(0x04)
	float CustomDetectShowHUDVerticalAngle_HD; // 0x644(0x04)
	bool CustombIsNeedInteractPointForward_HD; // 0x648(0x01)
	bool CustombUseAimedBoxFilterHUDDir_HD; // 0x649(0x01)
	bool CustombUseBoxFilterHUDRange_HD; // 0x64a(0x01)
	bool CustombIsNeedShowToButton_HD; // 0x64b(0x01)
	bool CustombIsNeedCheckAllowShowWidget_HD; // 0x64c(0x01)
	bool CustombIsNeedFilterCollision_HD; // 0x64d(0x01)
	enum class EInteractorHUDType CustomHUDType_HD; // 0x64e(0x01)
	enum class EInteractorPriority CustomInteractorPriority_HD; // 0x64f(0x01)
	bool CustombIsNeedGather_HD; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct FText CustomButtonTitle_HD; // 0x658(0x18)
	bool CustombCanJump_HD; // 0x670(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_HD; // 0x671(0x01)
	bool CustombNeedIgnoreSelf_HD; // 0x672(0x01)
	char pad_673[0x5]; // 0x673(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_HD; // 0x678(0x10)
	float CustomCachedCanOverlapInterval_HD; // 0x688(0x04)
	float CustomCachedAllowShowWidgetInterval_HD; // 0x68c(0x04)
	float CustomCachedFilterCollisionInterval_HD; // 0x690(0x04)
	float CustomCachedScreenPosInterval_HD; // 0x694(0x04)
	bool CustombActive_Mobile; // 0x698(0x01)
	bool CustombEnable_Mobile; // 0x699(0x01)
	bool CustombIsNeedFilterPre_Mobile; // 0x69a(0x01)
	bool CustombIsNeedFilter3C_Mobile; // 0x69b(0x01)
	bool CustombIsNeedShowWhiteDot_Mobile; // 0x69c(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_Mobile; // 0x69d(0x01)
	char pad_69E[0x2]; // 0x69e(0x02)
	float CustomDetectShowWhiteDotHorizontalAngle_Mobile; // 0x6a0(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_Mobile; // 0x6a4(0x04)
	float CustomDetectShowWhiteDotMinRadius_Mobile; // 0x6a8(0x04)
	float CustomDetectShowWhiteDotMaxRadius_Mobile; // 0x6ac(0x04)
	bool CustombIsNeedShowOutline_Mobile; // 0x6b0(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_Mobile; // 0x6b1(0x01)
	char pad_6B2[0x2]; // 0x6b2(0x02)
	float CustomDetectShowOutlineHorizontalAngle_Mobile; // 0x6b4(0x04)
	float CustomDetectShowOutlineVerticalAngle_Mobile; // 0x6b8(0x04)
	float CustomDetectShowOutlineMinRadius_Mobile; // 0x6bc(0x04)
	float CustomDetectShowOutlineMaxRadius_Mobile; // 0x6c0(0x04)
	float CustomDetectShowHUDMinRadius_Mobile; // 0x6c4(0x04)
	float CustomDetectShowHUDMaxRadius_Mobile; // 0x6c8(0x04)
	struct FName CustomDetectShowHUDBoxCompName_Mobile; // 0x6cc(0x08)
	char pad_6D4[0x4]; // 0x6d4(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_Mobile; // 0x6d8(0x08)
	float CustomDetectShowHUDHorizontalAngle_Mobile; // 0x6e0(0x04)
	float CustomDetectShowHUDVerticalAngle_Mobile; // 0x6e4(0x04)
	bool CustombIsNeedInteractPointForward_Mobile; // 0x6e8(0x01)
	bool CustombUseAimedBoxFilterHUDDir_Mobile; // 0x6e9(0x01)
	bool CustombUseBoxFilterHUDRange_Mobile; // 0x6ea(0x01)
	bool CustombIsNeedShowToButton_Mobile; // 0x6eb(0x01)
	bool CustombIsNeedCheckAllowShowWidget_Mobile; // 0x6ec(0x01)
	bool CustombIsNeedFilterCollision_Mobile; // 0x6ed(0x01)
	enum class EInteractorHUDType CustomHUDType_Mobile; // 0x6ee(0x01)
	enum class EInteractorPriority CustomInteractorPriority_Mobile; // 0x6ef(0x01)
	bool CustombIsNeedGather_Mobile; // 0x6f0(0x01)
	char pad_6F1[0x7]; // 0x6f1(0x07)
	/*struct TSoftObjectPtr<UObject>*/char CustomButtonSoftIcon_Mobile[0x28]; // 0x6f8(0x28)
	struct FText CustomButtonTitle_Mobile; // 0x720(0x18)
	bool CustombCanJump_Mobile; // 0x738(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_Mobile; // 0x739(0x01)
	bool CustombNeedIgnoreSelf_Mobile; // 0x73a(0x01)
	char pad_73B[0x5]; // 0x73b(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_Mobile; // 0x740(0x10)
	float CustomCachedCanOverlapInterval_Mobile; // 0x750(0x04)
	float CustomCachedAllowShowWidgetInterval_Mobile; // 0x754(0x04)
	float CustomCachedFilterCollisionInterval_Mobile; // 0x758(0x04)
	float CustomCachedScreenPosInterval_Mobile; // 0x75c(0x04)
	enum class EInteractorType CustomInteractorType; // 0x760(0x01)
	char pad_761[0x3]; // 0x761(0x03)
	struct FVector CustomInteractPointOffset; // 0x764(0x0c)

	void ServerUpdateVehicleSeatState(int32_t InteractIndex, struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorBase.ServerUpdateVehicleSeatState // (Final|Native|Protected) // @ game+0x63aa870
	void OnRep_InteractedOperatorArray(); // Function DFMGameplay.MultiInteractorBase.OnRep_InteractedOperatorArray // (Final|Native|Protected) // @ game+0x63aa850
	int32_t GetInteractMaxOperatorCount(int32_t InteractIndex); // Function DFMGameplay.MultiInteractorBase.GetInteractMaxOperatorCount // (Native|Public|BlueprintCallable) // @ game+0x63aa7b0
	enum class EInteractorType BP_GetInteractorType(); // Function DFMGameplay.MultiInteractorBase.BP_GetInteractorType // (Final|Native|Public|BlueprintCallable) // @ game+0x63aa770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavDebugger
// Size: 0x498 (Inherited: 0x378)
class ANavDebugger : public AActor {
public:

	float OverrideHeuristicScale; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct UActorComponent* m_DebugLineBatcher; // 0x380(0x08)
	bool bDrawRuntimeDebugInfo; // 0x388(0x01)
	char pad_389[0x7]; // 0x389(0x07)
	struct ARecastNavMesh* RecastNavMesh; // 0x390(0x08)
	struct AActor* StartActor; // 0x398(0x08)
	struct AActor* EndActor; // 0x3a0(0x08)
	bool bNeedAutoRebuild; // 0x3a8(0x01)
	bool bUseGlobalSimpleLink; // 0x3a9(0x01)
	bool bIsNavMeshDriven; // 0x3aa(0x01)
	bool bBuildFallingLink; // 0x3ab(0x01)
	bool bBuildVaultLink; // 0x3ac(0x01)
	bool bBuildJumpLink; // 0x3ad(0x01)
	bool bBuildZiplineLink; // 0x3ae(0x01)
	bool bBuildClimbLadderLink; // 0x3af(0x01)
	bool bBuildCustomizeLink; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	float MaxYawDegrees; // 0x3b4(0x04)
	float NavLinkInterval; // 0x3b8(0x04)
	float ZiplineNavLinkInterval; // 0x3bc(0x04)
	float AcceptWallMinLength; // 0x3c0(0x04)
	float VaultLinkMinHeight; // 0x3c4(0x04)
	float VaultPassHeighTest; // 0x3c8(0x04)
	float VaultPassLenghtTest; // 0x3cc(0x04)
	float JumpLinkMinHeight; // 0x3d0(0x04)
	bool bOptimizeSmartLink; // 0x3d4(0x01)
	char pad_3D5[0x3]; // 0x3d5(0x03)
	struct ANavLinkProxy* GlobalSimpleLink; // 0x3d8(0x08)
	char pad_3E0[0xb8]; // 0x3e0(0xb8)

	void ClearNavLinks(); // Function DFMGameplay.NavDebugger.ClearNavLinks // (Final|Native|Public) // @ game+0x63ae120
	void BuildNavLinks(); // Function DFMGameplay.NavDebugger.BuildNavLinks // (Final|Native|Public) // @ game+0x63adbf0
	void BP_OnLevelSelectionChanged(struct UObject* NewSelection); // Function DFMGameplay.NavDebugger.BP_OnLevelSelectionChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BenchTMap(); // Function DFMGameplay.NavDebugger.BenchTMap // (Final|Native|Public) // @ game+0x63adbd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VaultNavLink
// Size: 0x3c8 (Inherited: 0x3c8)
class AVaultNavLink : public ANavLinkProxy {
public:


	void OnReach(struct AActor* Agent, struct FVector& Destination); // Function DFMGameplay.VaultNavLink.OnReach // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63af590
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.JumpNavLink
// Size: 0x3c8 (Inherited: 0x3c8)
class AJumpNavLink : public ANavLinkProxy {
public:


	void OnReach(struct AActor* Agent, struct FVector& Destination); // Function DFMGameplay.JumpNavLink.OnReach // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63af4c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavExtendTileFilterInterface
// Size: 0x30 (Inherited: 0x30)
class UNavExtendTileFilterInterface : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavExtendAgent
// Size: 0x968 (Inherited: 0x378)
class ANavExtendAgent : public AActor {
public:

	bool SectorFilterNav; // 0x378(0x01)
	bool CreateJPSData; // 0x379(0x01)
	bool IsDebugMode; // 0x37a(0x01)
	char pad_37B[0x5ed]; // 0x37b(0x5ed)

	void TestMarkNarrowLanePoly(); // Function DFMGameplay.NavExtendAgent.TestMarkNarrowLanePoly // (Final|Native|Public) // @ game+0x63afd70
	struct ANavExtendAgent* STATIC_GetSingleton(struct UObject* WorldContextObject); // Function DFMGameplay.NavExtendAgent.GetSingleton // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63ae7c0
	void EditorStartBuildAll(struct ANavigationData* NavData); // Function DFMGameplay.NavExtendAgent.EditorStartBuildAll // (Final|Native|Public) // @ game+0x63ae640
	void EditorInitNavMesh(); // Function DFMGameplay.NavExtendAgent.EditorInitNavMesh // (Final|Native|Public) // @ game+0x63ae620
	void ClearDebugInfo(); // Function DFMGameplay.NavExtendAgent.ClearDebugInfo // (Final|Native|Public) // @ game+0x63ae100
	bool CheckLocationConnected(struct FVector Location1, struct FVector Location2, struct FVector Extent); // Function DFMGameplay.NavExtendAgent.CheckLocationConnected // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63adf80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavExtendAgentConfig
// Size: 0x3a8 (Inherited: 0x378)
class ANavExtendAgentConfig : public AActor {
public:

	bool BuildNarrowLane; // 0x378(0x01)
	bool NarrowLaneVaultAddCost; // 0x379(0x01)
	char pad_37A[0x6]; // 0x37a(0x06)
	struct TArray<struct FVector> NarrowLaneTracePoints; // 0x380(0x10)
	float NarrowLaneRadius; // 0x390(0x04)
	float NarrowLaneNavRaycast; // 0x394(0x04)
	struct TArray<struct FNarrowLanePatchMark> PatchMarkArr; // 0x398(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavExtendAgentDebug
// Size: 0x488 (Inherited: 0x378)
class ANavExtendAgentDebug : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	uint32_t TestStartDomainId; // 0x380(0x04)
	uint32_t TestEndDomainId; // 0x384(0x04)
	uint32_t TestDomainConnResult; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct AActor* IndicateDebugActor; // 0x390(0x08)
	struct FString DebugShowPolyId; // 0x398(0x10)
	uint32_t DebugTileIndex; // 0x3a8(0x04)
	int32_t DebugTileX; // 0x3ac(0x04)
	int32_t DebugTileY; // 0x3b0(0x04)
	int32_t DebugTileLayer; // 0x3b4(0x04)
	int32_t DebugArea; // 0x3b8(0x04)
	int32_t DebugType; // 0x3bc(0x04)
	uint32_t DebugShowConnDomainId; // 0x3c0(0x04)
	uint32_t DebugPolyExtTag; // 0x3c4(0x04)
	uint32_t DebugJPSCellId; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct FString DebugJPSLinkText; // 0x3d0(0x10)
	struct FString DebugJPSLinkInText; // 0x3e0(0x10)
	struct AActor* PathStartActor; // 0x3f0(0x08)
	struct AActor* PathEndActor; // 0x3f8(0x08)
	struct FString DebugDomainPath; // 0x400(0x10)
	int32_t DebugTestPathCount; // 0x410(0x04)
	bool DebugFindJPSPath; // 0x414(0x01)
	char pad_415[0x3]; // 0x415(0x03)
	int64_t DebugTestPathConsumeTick; // 0x418(0x08)
	bool DebugTestRealPath; // 0x420(0x01)
	bool DebugTestTacePath; // 0x421(0x01)
	bool DebugTestTaceCell; // 0x422(0x01)
	char pad_423[0x5]; // 0x423(0x05)
	struct AActor* DebugUpdateTileActor; // 0x428(0x08)
	struct AActor* DebugFromActor; // 0x430(0x08)
	struct AActor* DebugToActor; // 0x438(0x08)
	int32_t ShowCoverRadius; // 0x440(0x04)
	int32_t ShowCoverTestCount; // 0x444(0x04)
	int64_t ShowCoverConsumeTime; // 0x448(0x08)
	struct TArray<struct AActor*> CoverAvoidActors; // 0x450(0x10)
	struct AActor* CoverViewActor; // 0x460(0x08)
	uint32_t CoverTestLineTraceCount; // 0x468(0x04)
	int32_t OccupyPointId; // 0x46c(0x04)
	int32_t OccupyUin; // 0x470(0x04)
	float OccupyCoverTime; // 0x474(0x04)
	int32_t OccupyCoverCount; // 0x478(0x04)
	float StraightDistance; // 0x47c(0x04)
	float StraightStep; // 0x480(0x04)
	float StraightAngleStep; // 0x484(0x04)

	void TestDomainConn(); // Function DFMGameplay.NavExtendAgentDebug.TestDomainConn // (Final|Native|Public) // @ game+0x63afd50
	void ShowDebugPolyInfo(); // Function DFMGameplay.NavExtendAgentDebug.ShowDebugPolyInfo // (Final|Native|Public) // @ game+0x63afab0
	void ShowDebugPath(); // Function DFMGameplay.NavExtendAgentDebug.ShowDebugPath // (Final|Native|Public) // @ game+0x63afa90
	void ShowCovers(); // Function DFMGameplay.NavExtendAgentDebug.ShowCovers // (Final|Native|Public) // @ game+0x63afa70
	void ReleaseOccupyUin(); // Function DFMGameplay.NavExtendAgentDebug.ReleaseOccupyUin // (Final|Native|Public) // @ game+0x63af940
	void OccupyCoverPoint(); // Function DFMGameplay.NavExtendAgentDebug.OccupyCoverPoint // (Final|Native|Public) // @ game+0x63aea80
	void GetOccupyCoverPoint(); // Function DFMGameplay.NavExtendAgentDebug.GetOccupyCoverPoint // (Final|Native|Public) // @ game+0x63ae710
	void FindStraightLocation(); // Function DFMGameplay.NavExtendAgentDebug.FindStraightLocation // (Final|Native|Public) // @ game+0x63ae6c0
	void DebugUpdateTile(); // Function DFMGameplay.NavExtendAgentDebug.DebugUpdateTile // (Final|Native|Public) // @ game+0x63ae4b0
	void DebugFindPathTest(); // Function DFMGameplay.NavExtendAgentDebug.DebugFindPathTest // (Final|Native|Public) // @ game+0x63ae490
	void ClearDebugDraw(); // Function DFMGameplay.NavExtendAgentDebug.ClearDebugDraw // (Final|Native|Public) // @ game+0x63ae0e0
	void CheckOccupyCoverTimeOut(); // Function DFMGameplay.NavExtendAgentDebug.CheckOccupyCoverTimeOut // (Final|Native|Public) // @ game+0x63ae0c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavigationSubsystem
// Size: 0x90 (Inherited: 0x38)
class UNavigationSubsystem : public UWorldSubsystem {
public:

	char pad_38[0x58]; // 0x38(0x58)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavProxy
// Size: 0x3a0 (Inherited: 0x378)
class ANavProxy : public AActor {
public:

	char pad_378[0x28]; // 0x378(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavWaterConvexActor
// Size: 0x3d8 (Inherited: 0x378)
class ANavWaterConvexActor : public AActor {
public:

	float RaycastCellSize; // 0x378(0x04)
	float RaycastStepSize; // 0x37c(0x04)
	float SurfaceAbove; // 0x380(0x04)
	float SurfaceBelow; // 0x384(0x04)
	int32_t MergeAxisMaxCount; // 0x388(0x04)
	float ConvexBoxExpandAbove; // 0x38c(0x04)
	float ConvexBoxExpandBelow; // 0x390(0x04)
	float ConvexExpand2D; // 0x394(0x04)
	bool ShowDebug; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)
	struct TArray<struct FString> WaterActorKeywords; // 0x3a0(0x10)
	struct TArray<struct FString> IncludeWaterColliderKeywords; // 0x3b0(0x10)
	struct TArray<struct FString> WaterLevelNameFilter; // 0x3c0(0x10)
	bool UnloadWaterLevelOnFinish; // 0x3d0(0x01)
	bool CheckNavBoundsVolume; // 0x3d1(0x01)
	char pad_3D2[0x6]; // 0x3d2(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NavWaterConvexShapComponent
// Size: 0x700 (Inherited: 0x578)
class UNavWaterConvexShapComponent : public UShapeComponent {
public:

	char pad_578[0x188]; // 0x578(0x188)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBInventoryManager
// Size: 0x2a0 (Inherited: 0x100)
class UOBInventoryManager : public UActorComponent {
public:

	struct FInvMgrRepData InventoryRepData; // 0x100(0x48)
	struct FItemArray InventoryItemArray; // 0x148(0x120)
	struct FName CharacterAvatarID; // 0x268(0x08)
	bool bIsInit; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	uint64_t PlayerUin; // 0x278(0x08)
	struct TArray<uint64_t> TeammateUinArray; // 0x280(0x10)
	struct AActor* LootingObj; // 0x290(0x08)
	bool bIsOpenBag; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)

	void SetIsInit(bool bInIsInit); // Function DFMGameplay.OBInventoryManager.SetIsInit // (Final|Native|Public) // @ game+0x63af9e0
	void OnRep_PlayerUin(); // Function DFMGameplay.OBInventoryManager.OnRep_PlayerUin // (Final|Native|Public) // @ game+0x63af700
	void OnRep_LootingObj(); // Function DFMGameplay.OBInventoryManager.OnRep_LootingObj // (Final|Native|Public) // @ game+0x63af6c0
	void OnRep_InventoryRepData(); // Function DFMGameplay.OBInventoryManager.OnRep_InventoryRepData // (Final|Native|Public) // @ game+0x63af6a0
	void OnRep_InventoryItemArray(); // Function DFMGameplay.OBInventoryManager.OnRep_InventoryItemArray // (Final|Native|Public) // @ game+0x63af680
	void OnRep_bIsOpenBag(); // Function DFMGameplay.OBInventoryManager.OnRep_bIsOpenBag // (Final|Native|Public) // @ game+0x63af760
	void OnOpenBagStateChange(uint64_t InPlayerUin, bool bInIsOpenBag); // Function DFMGameplay.OBInventoryManager.OnOpenBagStateChange // (Final|Native|Public) // @ game+0x63af0c0
	void OnLootingObjChange(uint64_t InPlayerUin, struct AActor* LootObj); // Function DFMGameplay.OBInventoryManager.OnLootingObjChange // (Final|Native|Public) // @ game+0x63af000
	void OnInventoryRepInfoChange(uint64_t InPlayerUin, struct FInventoryRepInfo& InventoryRepInfo); // Function DFMGameplay.OBInventoryManager.OnInventoryRepInfoChange // (Final|Native|Public|HasOutParms) // @ game+0x63aeea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBMatchInfoStatComponent
// Size: 0x2b8 (Inherited: 0x100)
class UOBMatchInfoStatComponent : public UActorComponent {
public:

	char pad_100[0xf8]; // 0x100(0xf8)
	struct TArray<struct FOBTeamMatchStat> TeamStats; // 0x1f8(0x10)
	uint16_t TeamNums; // 0x208(0x02)
	uint16_t PlayerNums; // 0x20a(0x02)
	char pad_20C[0x4]; // 0x20c(0x04)
	struct FOBPlayerMatchStat CurrentOBPlayerStat; // 0x210(0x18)
	/*struct FMulticastInlineDelegate*/char OBClientOnTeamNumsUpdate[0x10]; // 0x228(0x10)
	/*struct FMulticastInlineDelegate*/char OBClientOnPlayerNumsUpdate[0x10]; // 0x238(0x10)
	/*struct FMulticastInlineDelegate*/char OBClientOnTeamStatsUpdate[0x10]; // 0x248(0x10)
	/*struct FMulticastInlineDelegate*/char OnCurrentOBTeamChanged[0x10]; // 0x258(0x10)
	/*struct FMulticastInlineDelegate*/char OnShowTeamInfo[0x10]; // 0x268(0x10)
	bool bShowingTeamInfo; // 0x278(0x01)
	bool bNeedShowOutlineEffect; // 0x279(0x01)
	char pad_27A[0xe]; // 0x27a(0x0e)
	struct TArray<struct FLinearColor> TeamColors; // 0x288(0x10)
	char pad_298[0x10]; // 0x298(0x10)
	bool bNeedShowPlayerMarker; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	struct FName MatchObserverMainViewUIName; // 0x2ac(0x08)
	bool bShowingMouseCursor; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)

	void ShowPlayerOutLineEffectOnFreeCamera(bool bShow, struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.ShowPlayerOutLineEffectOnFreeCamera // (Final|Native|Public|Const) // @ game+0x63afc90
	void ShowPlayerOutLineEffectOnCharacter(bool bShow, struct AGPCharacter* CurrentOBCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.ShowPlayerOutLineEffectOnCharacter // (Final|Native|Public) // @ game+0x63afbd0
	void ShowPlayerOutLineEffect(struct AGPCharacter* InCharacter, bool bShow, enum class EOutLineEffectType OutLineEffectType); // Function DFMGameplay.OBMatchInfoStatComponent.ShowPlayerOutLineEffect // (Final|Native|Public|Const) // @ game+0x63afad0
	void ServerOBSpecificPlayer(uint64_t PlayerUin); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBSpecificPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360bb60
	void ServerOBPrevTeamPlayer(); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBPrevTeamPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x361c8e0
	void ServerOBPrevTeam(); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBPrevTeam // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35a3800
	void ServerOBNextTeamPlayer(); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBNextTeamPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3615dc0
	void ServerOBNextTeam(); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBNextTeam // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3624900
	void ServerOBNearestPlayer(); // Function DFMGameplay.OBMatchInfoStatComponent.ServerOBNearestPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x22790c0
	void RemovePlayerMarker(struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.RemovePlayerMarker // (Final|Native|Public) // @ game+0x63af960
	void OnUnregisterActor(struct AActor* ChangedActor); // Function DFMGameplay.OBMatchInfoStatComponent.OnUnregisterActor // (Native|Protected) // @ game+0x3653400
	void OnServerPlayerBeRescued(struct AGPCharacter* BeRescuedPlayer); // Function DFMGameplay.OBMatchInfoStatComponent.OnServerPlayerBeRescued // (Final|Native|Protected) // @ game+0x63af8c0
	void OnServerInitNewPlayer(struct APlayerController* NewPlayerController, struct AGPPlayerState* NewPlayerState); // Function DFMGameplay.OBMatchInfoStatComponent.OnServerInitNewPlayer // (Final|Native|Protected) // @ game+0x63af800
	void OnServerAfterRedeployCharacterShow(uint64_t PlayerUin); // Function DFMGameplay.OBMatchInfoStatComponent.OnServerAfterRedeployCharacterShow // (Final|Native|Protected) // @ game+0x63af780
	void OnRep_TeamStats(); // Function DFMGameplay.OBMatchInfoStatComponent.OnRep_TeamStats // (Final|Native|Protected) // @ game+0x63af740
	void OnRep_TeamNums(); // Function DFMGameplay.OBMatchInfoStatComponent.OnRep_TeamNums // (Final|Native|Protected) // @ game+0x63af720
	void OnRep_PlayerNums(); // Function DFMGameplay.OBMatchInfoStatComponent.OnRep_PlayerNums // (Final|Native|Protected) // @ game+0x63af6e0
	void OnRep_CurrentOBPlayerStat(); // Function DFMGameplay.OBMatchInfoStatComponent.OnRep_CurrentOBPlayerStat // (Final|Native|Protected) // @ game+0x63af660
	void OnRegisterActor(struct AActor* ChangedActor); // Function DFMGameplay.OBMatchInfoStatComponent.OnRegisterActor // (Native|Protected) // @ game+0x36f8350
	void OnPlayerKnockDownNotify(struct FKillInfo& NewAddKillInfo); // Function DFMGameplay.OBMatchInfoStatComponent.OnPlayerKnockDownNotify // (Final|Native|Protected|HasOutParms) // @ game+0x63af410
	void OnPlayerKillInfoNtf(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* Desc); // Function DFMGameplay.OBMatchInfoStatComponent.OnPlayerKillInfoNtf // (Final|Native|Protected|HasOutParms) // @ game+0x63af310
	void OnPlayerInventoryValueChanged(struct AGPCharacterBase* CHARACTER, int64_t NewValue); // Function DFMGameplay.OBMatchInfoStatComponent.OnPlayerInventoryValueChanged // (Final|Native|Protected) // @ game+0x63af250
	void OnPlayerInEscape(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.OBMatchInfoStatComponent.OnPlayerInEscape // (Final|Native|Protected) // @ game+0x63af190
	void OnGameLoadSuccess(int32_t MapID, enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.OBMatchInfoStatComponent.OnGameLoadSuccess // (Final|Native|Public) // @ game+0x63aede0
	void OnClientOBTeamItemCheckStatusChanged(int32_t TeamId, bool bIsChecked); // Function DFMGameplay.OBMatchInfoStatComponent.OnClientOBTeamItemCheckStatusChanged // (Final|Native|Protected) // @ game+0x63aed20
	void OnClientCharacterLiveStatusChanged(struct AGPPlayerState* PlayerState, int32_t CharacterLiveStatus); // Function DFMGameplay.OBMatchInfoStatComponent.OnClientCharacterLiveStatusChanged // (Final|Native|Protected) // @ game+0x63aec60
	void OnClientAICharacterDied(struct AGPCharacter* GPAICharacter); // Function DFMGameplay.OBMatchInfoStatComponent.OnClientAICharacterDied // (Final|Native|Protected) // @ game+0x63aebe0
	void OnClientAICharacterBorn(struct AGPCharacter* GPAICharacter); // Function DFMGameplay.OBMatchInfoStatComponent.OnClientAICharacterBorn // (Final|Native|Protected) // @ game+0x63aeb60
	void OnCharacterDied(struct ACHARACTER* deadCharacter, struct AActor* KillerActor); // Function DFMGameplay.OBMatchInfoStatComponent.OnCharacterDied // (Final|Native|Protected) // @ game+0x63aeaa0
	bool IfObservingPlayer(); // Function DFMGameplay.OBMatchInfoStatComponent.IfObservingPlayer // (Final|Native|Public) // @ game+0x63aea50
	struct FString GetTeamNameByTeamId(int32_t TeamId); // Function DFMGameplay.OBMatchInfoStatComponent.GetTeamNameByTeamId // (Final|Native|Public|Const) // @ game+0x63ae970
	int32_t GetTeamIndexByTeamId(int32_t TeamId); // Function DFMGameplay.OBMatchInfoStatComponent.GetTeamIndexByTeamId // (Final|Native|Public|Const) // @ game+0x63ae8e0
	struct FLinearColor GetTeamColor(int32_t TeamId); // Function DFMGameplay.OBMatchInfoStatComponent.GetTeamColor // (Final|Native|Public|HasDefaults) // @ game+0x63ae840
	struct AGPCharacter* GetPlayerByUin(uint64_t InUin); // Function DFMGameplay.OBMatchInfoStatComponent.GetPlayerByUin // (Final|Native|Public) // @ game+0x63ae730
	struct AGPCharacter* GetNearestPlayer(); // Function DFMGameplay.OBMatchInfoStatComponent.GetNearestPlayer // (Final|Native|Public) // @ game+0x63ae6e0
	void DisplayPlayerMarker(bool bDisplay, struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.DisplayPlayerMarker // (Final|Native|Public) // @ game+0x63ae560
	void DisplayAllPlayerMarkers(bool bDisplay); // Function DFMGameplay.OBMatchInfoStatComponent.DisplayAllPlayerMarkers // (Final|Native|Public) // @ game+0x63ae4d0
	void ClientShowTeamInfo(); // Function DFMGameplay.OBMatchInfoStatComponent.ClientShowTeamInfo // (Final|Native|Public) // @ game+0x63ae470
	void ClientShowPlayerOutLineEffect(bool bShow, struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.ClientShowPlayerOutLineEffect // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63ae3a0
	void ClientShowPlayerMarker(); // Function DFMGameplay.OBMatchInfoStatComponent.ClientShowPlayerMarker // (Final|Native|Public) // @ game+0x63ae380
	void ClientShowOutLineEffect(bool bShow, struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.ClientShowOutLineEffect // (Final|Native|Public) // @ game+0x63ae2c0
	void ClientShowMouseCursor(bool bNeedShow); // Function DFMGameplay.OBMatchInfoStatComponent.ClientShowMouseCursor // (Final|Native|Public) // @ game+0x63ae230
	void ClientInitializeMatchInfo(); // Function DFMGameplay.OBMatchInfoStatComponent.ClientInitializeMatchInfo // (Final|Native|Public) // @ game+0x63ae210
	void ClientDisplayPlayerMarker(bool bShow, struct AGPCharacter* InCharacter); // Function DFMGameplay.OBMatchInfoStatComponent.ClientDisplayPlayerMarker // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63ae140
	bool CheckIfTeamCanOBByTeamSys(int32_t TeamId, struct TArray<uint64_t>& OutCanOBMemberUinList); // Function DFMGameplay.OBMatchInfoStatComponent.CheckIfTeamCanOBByTeamSys // (Final|Native|Public|HasOutParms) // @ game+0x63ade60
	bool CheckIfTeamCanOB(struct FOBTeamMatchStat& OBTeamMatchStat); // Function DFMGameplay.OBMatchInfoStatComponent.CheckIfTeamCanOB // (Final|Native|Public|HasOutParms|Const) // @ game+0x63add30
	bool CheckIfPlayerCanOBByUin(uint64_t PlayerUin); // Function DFMGameplay.OBMatchInfoStatComponent.CheckIfPlayerCanOBByUin // (Final|Native|Public) // @ game+0x63adca0
	bool CheckIfPlayerCanOB(enum class EOBPlayerStatusType OBPlayerStatusType); // Function DFMGameplay.OBMatchInfoStatComponent.CheckIfPlayerCanOB // (Final|Native|Public|Const) // @ game+0x63adc10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OverrideWorldShadingTypeActor
// Size: 0x388 (Inherited: 0x378)
class AOverrideWorldShadingTypeActor : public AActor {
public:

	enum class EPreferredWorldScaleType WorldScaleType; // 0x378(0x01)
	bool bSetMaterialEnableMiniWorld; // 0x379(0x01)
	char pad_37A[0xe]; // 0x37a(0x0e)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ParachuteActor
// Size: 0x430 (Inherited: 0x378)
class AParachuteActor : public AActor {
public:

	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x378(0x08)
	struct UParticleSystemComponent* TrailingSmoke; // 0x380(0x08)
	enum class EParachutePhaseType ParachutePhase; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	struct FName TrailEffectId; // 0x38c(0x08)
	float TrailSpeed; // 0x394(0x04)
	struct FVector2D LifetimeScaleRandomRange; // 0x398(0x08)
	struct FVector2D VelocityRandomRange; // 0x3a0(0x08)
	struct FVector2D DistScaleRange; // 0x3a8(0x08)
	struct FVector2D SizeScaleRange; // 0x3b0(0x08)
	struct FVector2D LifetimeScaleRange; // 0x3b8(0x08)
	struct UGPParachuteComponent* CorrespondingComponent; // 0x3c0(0x08)
	struct AGPCharacter* Paratrooper; // 0x3c8(0x08)
	struct FParachuteActorRepInfo Info; // 0x3d0(0x28)
	struct UGeneralSignificanceComponent* GeneralSignificanceComponent; // 0x3f8(0x08)
	char pad_400[0x30]; // 0x400(0x30)

	void OnRep_ParatrooperReceived(); // Function DFMGameplay.ParachuteActor.OnRep_ParatrooperReceived // (Final|Native|Public) // @ game+0x63b3c20
	void OnRep_ParachuteActorInfoReceived(); // Function DFMGameplay.ParachuteActor.OnRep_ParachuteActorInfoReceived // (Final|Native|Public) // @ game+0x63b3c00
	void OnPostWorldOriginOffsetChange(struct UWorld* InWorld, struct FIntVector Loc1, struct FIntVector Loc2); // Function DFMGameplay.ParachuteActor.OnPostWorldOriginOffsetChange // (Final|Native|Protected|HasDefaults) // @ game+0x63b3ae0
	void OnParachutePhaseChanged_BP(enum class EParachutePhaseType Phase); // Function DFMGameplay.ParachuteActor.OnParachutePhaseChanged_BP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void InitFakeParachute(struct FVector Origin, struct FVector Dest, float WholeTime); // Function DFMGameplay.ParachuteActor.InitFakeParachute // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63b3880
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ParatrooperDropZone
// Size: 0x3e0 (Inherited: 0x378)
class AParatrooperDropZone : public AActor {
public:

	int32_t Weight; // 0x378(0x04)
	float ParachuteTimeInterval; // 0x37c(0x04)
	int32_t TimeInAir; // 0x380(0x04)
	int32_t SignalWaitTime; // 0x384(0x04)
	struct FString POIName; // 0x388(0x10)
	struct ASOLParatrooperAircraft* Aircraft; // 0x398(0x08)
	char pad_3A0[0x9]; // 0x3a0(0x09)
	enum class EPatrolType PatrolType; // 0x3a9(0x01)
	char pad_3AA[0x6]; // 0x3aa(0x06)
	struct TArray<struct FMovePathPointExData> PathPointExData; // 0x3b0(0x10)
	char pad_3C0[0x10]; // 0x3c0(0x10)
	int32_t AINumOfPOI; // 0x3d0(0x04)
	int32_t ParatrooperNum; // 0x3d4(0x04)
	char pad_3D8[0x8]; // 0x3d8(0x08)

	void TriggerParachuteBP(); // Function DFMGameplay.ParatrooperDropZone.TriggerParachuteBP // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnSignalUAV(float ParachuteDelayTime); // Function DFMGameplay.ParatrooperDropZone.SpawnSignalUAV // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnParatrooperBP(); // Function DFMGameplay.ParatrooperDropZone.SpawnParatrooperBP // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void RefreshPathPoints(); // Function DFMGameplay.ParatrooperDropZone.RefreshPathPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x63b3e50
	void CalcParatrooperNumBP(); // Function DFMGameplay.ParatrooperDropZone.CalcParatrooperNumBP // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ParticleSignificanceComponent
// Size: 0x1b0 (Inherited: 0x178)
class UParticleSignificanceComponent : public USignificanceBase {
public:

	char pad_178[0x38]; // 0x178(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PartsDisplay
// Size: 0x3f0 (Inherited: 0x378)
class APartsDisplay : public AActor {
public:

	char pad_378[0x20]; // 0x378(0x20)
	struct APlayerController* PlayerController; // 0x398(0x08)
	char pad_3A0[0x4]; // 0x3a0(0x04)
	struct TWeakObjectPtr<struct ASceneCapture2D> SceneCapture; // 0x3a4(0x08)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct AActor* RadarHandle; // 0x3b0(0x08)
	struct AAssembleWeaponActor* TargetDisplayWeapon; // 0x3b8(0x08)
	struct UMeshComponent* DisplayItemMeshComp; // 0x3c0(0x08)
	char pad_3C8[0x8]; // 0x3c8(0x08)
	struct ASceneCapture2D* CreatedSceneCapture2D; // 0x3d0(0x08)
	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct UModularWeaponDesc* WeaponDesc; // 0x3e0(0x08)
	char pad_3E8[0x8]; // 0x3e8(0x08)

	struct TArray<float> XXX(struct TArray<float> Value); // Function DFMGameplay.PartsDisplay.XXX // (Final|Native|Public|BlueprintCallable) // @ game+0x63b4450
	void ShowDisplayWeapon(struct UModularWeaponDesc* InWeaponDesc); // Function DFMGameplay.PartsDisplay.ShowDisplayWeapon // (Final|Native|Public) // @ game+0x63b4100
	void ShowDisplayItem(uint64_t InItemID, struct FVector2D _ItemSize); // Function DFMGameplay.PartsDisplay.ShowDisplayItem // (Final|Native|Public|HasDefaults) // @ game+0x63b4040
	void RotateDisplayItemAllRound(float DeltaYaw, float DeltaRoll); // Function DFMGameplay.PartsDisplay.RotateDisplayItemAllRound // (Final|Native|Public) // @ game+0x63b3ef0
	void RotateDisplayItem(float DeltaYaw); // Function DFMGameplay.PartsDisplay.RotateDisplayItem // (Final|Native|Public) // @ game+0x63b3e70
	void OpenLookAndMoveInput(); // Function DFMGameplay.PartsDisplay.OpenLookAndMoveInput // (Final|Native|Public) // @ game+0x63b3d20
	void GetVectorDistance(); // Function DFMGameplay.PartsDisplay.GetVectorDistance // (Final|Native|Public) // @ game+0x63b3860
	struct FVector2D GetRTSize(); // Function DFMGameplay.PartsDisplay.GetRTSize // (Final|Native|Public|HasDefaults|Const) // @ game+0x63b3820
	struct APartsDisplay* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.PartsDisplay.Get // (Final|Native|Static|Public) // @ game+0x63b35c0
	struct UTextureRenderTarget2D* CreateSceneCapture2D(bool bIsHighResolution, int64_t _ItemId, bool bIsFrontEnd); // Function DFMGameplay.PartsDisplay.CreateSceneCapture2D // (Final|Native|Public) // @ game+0x63b3210
	void CloseLookAndMoveInput(); // Function DFMGameplay.PartsDisplay.CloseLookAndMoveInput // (Final|Native|Public) // @ game+0x63b31f0
	void ClearSceneCapture(); // Function DFMGameplay.PartsDisplay.ClearSceneCapture // (Final|Native|Public) // @ game+0x63b31d0
	void ClearAttachedComp(); // Function DFMGameplay.PartsDisplay.ClearAttachedComp // (Final|Native|Public) // @ game+0x63b31b0
	void CaptureDisplayItem(); // Function DFMGameplay.PartsDisplay.CaptureDisplayItem // (Final|Native|Public) // @ game+0x63b3190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TextureMipBiasSettingsConfig
// Size: 0x68 (Inherited: 0x40)
class UTextureMipBiasSettingsConfig : public UDeveloperSettings {
public:

	struct FSoftObjectPath MipBiasMCPath; // 0x40(0x18)
	struct TArray<struct FTextureMipBiasSetting> TextureMipBiasSettings; // 0x58(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PerformancePolicyActor
// Size: 0x398 (Inherited: 0x378)
class APerformancePolicyActor : public AActor {
public:

	struct UMaterialParameterCollection* SceneMPC; // 0x378(0x08)
	struct UMaterialParameterCollectionInstance* SceneMPCInstance; // 0x380(0x08)
	struct UTextureMipBiasSettingsConfig* CachedMipBiasSettings; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PerkSubSystem
// Size: 0x80 (Inherited: 0x38)
class UPerkSubSystem : public UWorldSubsystem {
public:

	char pad_38[0x10]; // 0x38(0x10)
	struct TArray<struct FGPPerkCondInfo> CondInfo; // 0x48(0x10)
	struct TArray<struct FGPPerkAdditiveLogicInfo> LogicInfo; // 0x58(0x10)
	struct TArray<int32_t> DirtyTeams; // 0x68(0x10)
	char pad_78[0x8]; // 0x78(0x08)

	void UnApplySharedEffectSource(struct AGPCharacter* Ins, enum class EPerkSharedEffectSource Source); // Function DFMGameplay.PerkSubSystem.UnApplySharedEffectSource // (Final|Native|Public|BlueprintCallable) // @ game+0x63b4300
	void OnServerPlayerRescueSucceedNtf(struct AGPCharacterBase* Player, struct AGPCharacterBase* RescueTarget); // Function DFMGameplay.PerkSubSystem.OnServerPlayerRescueSucceedNtf // (Final|Native|Public) // @ game+0x63b3c60
	struct UPerkSubSystem* STATIC_Get(struct UObject* WorldContext); // Function DFMGameplay.PerkSubSystem.Get // (Final|Native|Static|Public) // @ game+0x63b3640
	void ApplySharedEffectSource(struct AGPCharacter* Ins, enum class EPerkSharedEffectSource Source); // Function DFMGameplay.PerkSubSystem.ApplySharedEffectSource // (Final|Native|Public|BlueprintCallable) // @ game+0x63b2fb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupFactoryComponent
// Size: 0x280 (Inherited: 0x240)
class UPickupFactoryComponent : public USceneComponent {
public:

	float radius; // 0x240(0x04)
	int32_t PointID; // 0x244(0x04)
	bool SpwanInBox; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	uint64_t BoxItemId; // 0x250(0x08)
	struct TArray<struct FName> ItemTags; // 0x258(0x10)
	bool bRecommandAIPick; // 0x268(0x01)
	bool bRandomRotation; // 0x269(0x01)
	bool bKeepRelative; // 0x26a(0x01)
	bool bIsHiddenItem; // 0x26b(0x01)
	char pad_26C[0x4]; // 0x26c(0x04)
	bool AutoSpwan; // 0x270(0x01)
	bool bUseCustomMinUpOffsetZ; // 0x271(0x01)
	char pad_272[0x2]; // 0x272(0x02)
	float CustomMinUpOffsetZ; // 0x274(0x04)
	char pad_278[0x8]; // 0x278(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupLibrary
// Size: 0x30 (Inherited: 0x30)
class UPickupLibrary : public UObject {
public:


	struct AInventoryPickup* STATIC_SpawnNewPickupActor(struct UObject* WorldContextObject, int64_t PointID, struct FTransform SpawnTM); // Function DFMGameplay.PickupLibrary.SpawnNewPickupActor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x63b4180
	struct FName STATIC_RandomPickupID(struct UObject* WorldContextObject, int64_t PointID, int32_t& Number); // Function DFMGameplay.PickupLibrary.RandomPickupID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x63b3d40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupManager
// Size: 0x4c0 (Inherited: 0x378)
class APickupManager : public AActor {
public:

	struct TArray<struct AContainerSpawnPoint*> PendingSpawnPoints; // 0x378(0x10)
	struct TArray<struct AContainerSpawnPoint*> AlreadySpawnPoints; // 0x388(0x10)
	struct TArray<struct UPickupFactoryComponent*> PendingPickupFactoryComps; // 0x398(0x10)
	struct TArray<struct UPickupFactoryComponent*> AlreadyPickupFactoryComps; // 0x3a8(0x10)
	char pad_3B8[0x28]; // 0x3b8(0x28)
	struct UClass* PickupClass; // 0x3e0(0x08)
	struct UClass* PickupWeapClass; // 0x3e8(0x08)
	struct UClass* DeadBodyClass; // 0x3f0(0x08)
	struct UClass* ContainerClass; // 0x3f8(0x08)
	char pad_400[0x80]; // 0x400(0x80)
	struct TArray<struct AActor*> SpotPointActors; // 0x480(0x10)
	struct TArray<struct UPickupFactoryComponent*> CurrentSpotPoints; // 0x490(0x10)
	struct TArray<struct UPickupFactoryComponent*> BirthIslandSpotPoints; // 0x4a0(0x10)
	struct TArray<struct UPickupFactoryComponent*> AirlineSpotPoints; // 0x4b0(0x10)

	void OnDiscardPVEWeapon(/*struct TScriptInterface<IWeaponInterface> PVEWeapon*/); // Function DFMGameplay.PickupManager.OnDiscardPVEWeapon // (Final|Native|Public) // @ game+0x63b3a40
	struct APickupManager* STATIC_GetInst(struct UObject* WorldContext); // Function DFMGameplay.PickupManager.GetInst // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63b3700
	struct AInventoryPickup* STATIC_BP_SpawnPickupActor(struct FName ID, struct FVector Location, struct FRotator Rotation); // Function DFMGameplay.PickupManager.BP_SpawnPickupActor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x63b3070
	void AddSpot(struct UPickupFactoryComponent* Comp); // Function DFMGameplay.PickupManager.AddSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x63b2f30
	void AddDeadBodyBox(struct AGPCharacterBase* OwnerCharacter); // Function DFMGameplay.PickupManager.AddDeadBodyBox // (Final|Native|Public) // @ game+0x63b2eb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupNtyInterface
// Size: 0x30 (Inherited: 0x30)
class UPickupNtyInterface : public UInterface {
public:


	void OnNtySpawnPickup(struct AActor* NewActor); // Function DFMGameplay.PickupNtyInterface.OnNtySpawnPickup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x89f540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupProjectileMovementComponent
// Size: 0x220 (Inherited: 0x220)
class UPickupProjectileMovementComponent : public UProjectileMovementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PilotNavigationManager
// Size: 0x378 (Inherited: 0x378)
class APilotNavigationManager : public ALevelSubsystem {
public:


	struct APilotNavigationManager* STATIC_Instance(struct UObject* WorldContextObj); // Function DFMGameplay.PilotNavigationManager.Instance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63b39a0
	bool FindPilotPath(struct FPilotNavigationQueryData& QueryData); // Function DFMGameplay.PilotNavigationManager.FindPilotPath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63b34d0
	bool FindNavPath(struct AActor* Actor, struct FVector StartLocation, struct FVector EndLocation, struct TArray<struct FVector>& WayPoints); // Function DFMGameplay.PilotNavigationManager.FindNavPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x63b3320
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerDialogueComponent
// Size: 0x180 (Inherited: 0x100)
class UPlayerDialogueComponent : public UActorComponent {
public:

	struct FSoftObjectPath DialogTablePath; // 0x100(0x18)
	struct ADFMAICharacter* CachedDialogPawn; // 0x118(0x08)
	float DialogGroupIntervalTime; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	/*struct FMulticastInlineDelegate*/char OnDialogueBegin[0x10]; // 0x128(0x10)
	/*struct FMulticastInlineDelegate*/char OnDialogueEnd[0x10]; // 0x138(0x10)
	struct UDialogStateMachine* DialogStateMachine; // 0x148(0x08)
	struct FTimerHandle DelayStartDialogTimerHandle; // 0x150(0x08)
	struct FTimerHandle TimerHandle_DelayDialog; // 0x158(0x08)
	enum class EDialogType CachedDialogType; // 0x160(0x01)
	char pad_161[0xf]; // 0x161(0x0f)
	struct TArray<int64_t> DialogGroupIDCacheArr; // 0x170(0x10)

	void StartDialogInSafeHouse(struct ADFMAICharacter* DialogPawn, int64_t GroupID); // Function DFMGameplay.PlayerDialogueComponent.StartDialogInSafeHouse // (Final|Native|Public) // @ game+0x63bcb90
	void StartDialog(struct ADFMAICharacter* DialogPawn); // Function DFMGameplay.PlayerDialogueComponent.StartDialog // (Final|Native|Public|BlueprintCallable) // @ game+0x63bcb10
	void ServerStartDialog(struct ADFMAICharacter* DialogPawn); // Function DFMGameplay.PlayerDialogueComponent.ServerStartDialog // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360b800
	void ServerDelayStartDialog(); // Function DFMGameplay.PlayerDialogueComponent.ServerDelayStartDialog // (Final|Native|Public) // @ game+0x63bc470
	void SendWireless(int64_t GroupID); // Function DFMGameplay.PlayerDialogueComponent.SendWireless // (Final|Native|Public|BlueprintCallable) // @ game+0x63bc3f0
	void OnWirelessTableLoadComplete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.PlayerDialogueComponent.OnWirelessTableLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x63bc150
	void OnReset(); // Function DFMGameplay.PlayerDialogueComponent.OnReset // (Native|Protected) // @ game+0x360c9c0
	void OnDialogueAutoComplete(); // Function DFMGameplay.PlayerDialogueComponent.OnDialogueAutoComplete // (Final|Native|Public) // @ game+0x63bb6c0
	void NPCFocusComplete(struct ADFMAICharacter* DialogPawn); // Function DFMGameplay.PlayerDialogueComponent.NPCFocusComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x63bb290
	void NetMultiStartDialog(struct ADFMAICharacter* DialogPawn); // Function DFMGameplay.PlayerDialogueComponent.NetMultiStartDialog // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x360bad0
	void NetMultiReset(); // Function DFMGameplay.PlayerDialogueComponent.NetMultiReset // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1e36270
	void NetMultiJumpFocus(struct FName NpcName); // Function DFMGameplay.PlayerDialogueComponent.NetMultiJumpFocus // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63bb450
	void NetMultiJumpDialog(struct ADFMAICharacter* DialogPawn, enum class EDialogJumpType JumpType, int64_t JumpId, bool ContinueJump); // Function DFMGameplay.PlayerDialogueComponent.NetMultiJumpDialog // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63bb310
	void JumpNext(); // Function DFMGameplay.PlayerDialogueComponent.JumpNext // (Final|Native|Public) // @ game+0x63baf80
	void JumpFinal(); // Function DFMGameplay.PlayerDialogueComponent.JumpFinal // (Final|Native|Public) // @ game+0x63baf60
	void JumpDialog(enum class EDialogJumpType JumpType, int64_t JumpId, bool ContinueJump, struct FString Args); // Function DFMGameplay.PlayerDialogueComponent.JumpDialog // (Final|Native|Public) // @ game+0x63bad90
	void DelayInsertSMWirelessDialogs(int64_t GroupID); // Function DFMGameplay.PlayerDialogueComponent.DelayInsertSMWirelessDialogs // (Final|Native|Public) // @ game+0x63ba170
	void ConfirmDialog(enum class EDialogJumpType JumpType, int64_t JumpId, bool ContinueJump); // Function DFMGameplay.PlayerDialogueComponent.ConfirmDialog // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63ba070
	void ClientSendWireless(int64_t GroupID); // Function DFMGameplay.PlayerDialogueComponent.ClientSendWireless // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x36f8350
	void ClientJumpDialog(enum class EDialogJumpType JumpType, int64_t BranchID, bool ContinueJump); // Function DFMGameplay.PlayerDialogueComponent.ClientJumpDialog // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63b9c40
	void ClientEndDialog(); // Function DFMGameplay.PlayerDialogueComponent.ClientEndDialog // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x3624900
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerEnterBattleGround
// Size: 0x380 (Inherited: 0x378)
class APlayerEnterBattleGround : public AActor {
public:

	struct UDFMEnteringBattleComponent* EnteringBattleComponent; // 0x378(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitComponent
// Size: 0x1e8 (Inherited: 0x100)
class UPlayerExitComponent : public UActorComponent {
public:

	struct TArray<struct APlayerExitBase*> ExploredExits; // 0x100(0x10)
	bool bSendMatchEndOnEscaped; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct AGPCharacterBase* CharaterOwner; // 0x118(0x08)
	struct TWeakObjectPtr<struct ADFMPlayerState> DFMPlayerState; // 0x120(0x08)
	struct FTimerHandle PlayerExitPointEscapedTimerHandle; // 0x128(0x08)
	/*struct FMulticastInlineDelegate*/char OnAllExitUpdate[0x10]; // 0x130(0x10)
	struct APlayerExitBase* CurrentOccupiedExit; // 0x140(0x08)
	struct FCommonExitCutSceneConfig ExitCutSceneConfig; // 0x148(0x20)
	struct AGPSequenceActor* SequenceActor_OutDoor_Single; // 0x168(0x08)
	struct AGPSequenceActor* SequenceActor_OutDoor_Multi; // 0x170(0x08)
	struct AGPSequenceActor* SequenceActor_InDoor_Single; // 0x178(0x08)
	struct AGPSequenceActor* SequenceActor_InDoor_Multi; // 0x180(0x08)
	bool bSequencePreLoad; // 0x188(0x01)
	char pad_189[0x3]; // 0x189(0x03)
	struct TWeakObjectPtr<struct APlayerExitBase> CurPlayerExitBase; // 0x18c(0x08)
	struct FName RestrictionTipHUD; // 0x194(0x08)
	char pad_19C[0x3c]; // 0x19c(0x3c)
	int32_t LastCountDownSoundPlayTime; // 0x1d8(0x04)
	bool bOpenLocalFocusCheck; // 0x1dc(0x01)
	char pad_1DD[0x3]; // 0x1dd(0x03)
	float CheckInPlayerExitDelayTime; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)

	void TryExitCondition(); // Function DFMGameplay.PlayerExitComponent.TryExitCondition // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3624900
	void TickEscapeCountDown(float DeltaTime); // Function DFMGameplay.PlayerExitComponent.TickEscapeCountDown // (Final|Native|Public) // @ game+0x63e3be0
	void StopAnim(enum class EAnimationPlayType AnimationPlayType); // Function DFMGameplay.PlayerExitComponent.StopAnim // (Net|NetReliableNative|Event|NetMulticast|Public|NetClient) // @ game+0x35e3be0
	void ShowPaymentHUD(); // Function DFMGameplay.PlayerExitComponent.ShowPaymentHUD // (Final|Native|Public) // @ game+0x63e33a0
	void ShowExitRestrictionTip(bool bShow); // Function DFMGameplay.PlayerExitComponent.ShowExitRestrictionTip // (Final|Native|Public|Const) // @ game+0x63e3290
	void ShowEscapingCountDownView(struct FText InTitle, float InEndCountDownTime, bool Colored, int32_t UrgentTime, bool bInUseTenSecondsWidgetShow); // Function DFMGameplay.PlayerExitComponent.ShowEscapingCountDownView // (Final|Native|Public) // @ game+0x63e30a0
	void SetEnterPlayerExit(struct APlayerExitBase* OutExit, float AwakeTime); // Function DFMGameplay.PlayerExitComponent.SetEnterPlayerExit // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35b96a0
	void SetCurrentOccupiedExit(struct APlayerExitBase* InPlayerExitBase); // Function DFMGameplay.PlayerExitComponent.SetCurrentOccupiedExit // (Final|Native|Public) // @ game+0x63e2ac0
	void OnStartLocalFocus(struct AActor* TargetActor); // Function DFMGameplay.PlayerExitComponent.OnStartLocalFocus // (Final|Native|Public) // @ game+0x63de790
	void OnRep_ExploredExits(); // Function DFMGameplay.PlayerExitComponent.OnRep_ExploredExits // (Final|Native|Public) // @ game+0x63de770
	void OnPlayerLeftExitArea(struct APlayerExitBase* OutExit, bool ExitOrNotice); // Function DFMGameplay.PlayerExitComponent.OnPlayerLeftExitArea // (Final|Native|Public) // @ game+0x63de660
	void OnPlayerExitAwakeChangeDelegate(struct APlayerExitBase* PlayerExitBase, bool bAwake); // Function DFMGameplay.PlayerExitComponent.OnPlayerExitAwakeChangeDelegate // (Final|Native|Public) // @ game+0x63de590
	void OnPlayerEnterOrLeftExitArea(struct APlayerExitBase* OutExit, bool ExitOrNotice, bool bEnterOrLeft); // Function DFMGameplay.PlayerExitComponent.OnPlayerEnterOrLeftExitArea // (Final|Native|Public) // @ game+0x63de3b0
	void OnPlayerEnteredExitArea(struct APlayerExitBase* InExit, bool ExitOrNotice); // Function DFMGameplay.PlayerExitComponent.OnPlayerEnteredExitArea // (Final|Native|Public) // @ game+0x63de4c0
	void OnPlayerCancelEscaping(); // Function DFMGameplay.PlayerExitComponent.OnPlayerCancelEscaping // (Final|Native|Public) // @ game+0x63de390
	void OnCountDownChangedNtf(struct FCommonCountDownInfo CountDownInfo); // Function DFMGameplay.PlayerExitComponent.OnCountDownChangedNtf // (Final|Native|Public) // @ game+0x63de070
	void NotifyClientStopUIAudio(); // Function DFMGameplay.PlayerExitComponent.NotifyClientStopUIAudio // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e377d0
	void HidePaymentHUD(); // Function DFMGameplay.PlayerExitComponent.HidePaymentHUD // (Final|Native|Public) // @ game+0x63dd960
	void HideEscapingCountDownView(); // Function DFMGameplay.PlayerExitComponent.HideEscapingCountDownView // (Final|Native|Public) // @ game+0x63dd940
	struct AGPCharacter* GetTargetGPCharacter(); // Function DFMGameplay.PlayerExitComponent.GetTargetGPCharacter // (Final|Native|Public|Const) // @ game+0x63dd090
	enum class EExitState GetExitState(); // Function DFMGameplay.PlayerExitComponent.GetExitState // (Final|Native|Public|BlueprintCallable) // @ game+0x63dd060
	struct ADFMPlayerState* GetDFMPlayerState(); // Function DFMGameplay.PlayerExitComponent.GetDFMPlayerState // (Final|Native|Public) // @ game+0x63dd030
	struct APlayerExitBase* GetCurPlayerExitBase(); // Function DFMGameplay.PlayerExitComponent.GetCurPlayerExitBase // (Final|Native|Public|Const) // @ game+0x63dd000
	void ClientShowUseItemHud(uint64_t ItemID, uint32_t Count); // Function DFMGameplay.PlayerExitComponent.ClientShowUseItemHud // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cfb30
	void ClientPlayCharacterAnimSequence(struct UAnimSequenceBase* AnimToPlay, enum class EAnimationPlayType AnimationPlayType, bool bLoop); // Function DFMGameplay.PlayerExitComponent.ClientPlayCharacterAnimSequence // (Net|NetReliableNative|Event|NetMulticast|Public|NetClient) // @ game+0x63cf2b0
	void ClientHideUseItemHud(); // Function DFMGameplay.PlayerExitComponent.ClientHideUseItemHud // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35e4a10
	void ClientExploredAllExit(); // Function DFMGameplay.PlayerExitComponent.ClientExploredAllExit // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x35a3800
	void CheckInPlayerExit(struct AGPCharacter* TargetFocusCharacter); // Function DFMGameplay.PlayerExitComponent.CheckInPlayerExit // (Final|Native|Public) // @ game+0x63ce8b0
	bool CanMeetExitCondition(); // Function DFMGameplay.PlayerExitComponent.CanMeetExitCondition // (Final|Native|Public) // @ game+0x63ce880
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitLensFlare
// Size: 0x3b8 (Inherited: 0x378)
class APlayerExitLensFlare : public AActor {
public:

	struct UMaterialBillboardComponent* MaterialBillboardComponent; // 0x378(0x08)
	struct UFXResourceContainerComponent* FXResourceContainerComponent; // 0x380(0x08)
	bool bBillboardSizeInit; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	struct FName PostEffctName; // 0x38c(0x08)
	struct FVector2D ViewportSizeUV; // 0x394(0x08)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct UMaterialInterface* EmissiveMaterial; // 0x3a0(0x08)
	struct FVector2D CacheScreenPosition; // 0x3a8(0x08)
	bool bLensFlareEnable; // 0x3b0(0x01)
	char pad_3B1[0x7]; // 0x3b1(0x07)

	void UpdateFlareVisibility(struct FVector& PlayerLocation); // Function DFMGameplay.PlayerExitLensFlare.UpdateFlareVisibility // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x63e4560
	void ShowFlareWidget(bool bShow); // Function DFMGameplay.PlayerExitLensFlare.ShowFlareWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	float GetGlobalMaximumDistance(); // Function DFMGameplay.PlayerExitLensFlare.GetGlobalMaximumDistance // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerGMComponent
// Size: 0x570 (Inherited: 0x100)
class UPlayerGMComponent : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	struct ADFMPlayerController* PlayerController; // 0x110(0x08)
	struct FTimerHandle LandingHandle; // 0x118(0x08)
	struct FTimerHandle GravityScaleHandle; // 0x120(0x08)
	int32_t CurrentActiveActorInx; // 0x128(0x04)
	char pad_12C[0x44]; // 0x12c(0x44)
	struct FString DebugStateInfo; // 0x170(0x10)
	char pad_180[0x10]; // 0x180(0x10)
	struct ACHARACTER* AIViewCharacter; // 0x190(0x08)
	struct ACHARACTER* AIViewDeadCharacter; // 0x198(0x08)
	struct UClass* AILabSpawnerClass; // 0x1a0(0x08)
	struct TArray<struct FName> SuperOverLoadEquipmentIds; // 0x1a8(0x10)
	struct APawn* MonitorAI; // 0x1b8(0x08)
	struct FString DebugInfo; // 0x1c0(0x10)
	char pad_1D0[0x20]; // 0x1d0(0x20)
	struct TArray<struct FAIHitRateDebugData> CachedHRData; // 0x1f0(0x10)
	bool nonPerceptual; // 0x200(0x01)
	struct FMulticastSparseDelegate OnServerSpawnTestAI; // 0x201(0x01)
	bool bPerspective; // 0x202(0x01)
	char pad_203[0x45]; // 0x203(0x45)
	struct UParticleSystemComponent* CurrentPSC; // 0x248(0x08)
	char pad_250[0x20]; // 0x250(0x20)
	struct FAiDifficultyDebugDataInfos AiDifficultyDebugDataInfos; // 0x270(0x28)
	struct FString AILabDebugMsg; // 0x298(0x10)
	struct FString AILabFrameDebugMsg; // 0x2a8(0x10)
	char pad_2B8[0x70]; // 0x2b8(0x70)
	struct UProceduralMeshComponent* ClientDrawFoliageComponent; // 0x328(0x08)
	char pad_330[0x40]; // 0x330(0x40)
	struct ULineBatchComponent* ClientDrawNavComponent; // 0x370(0x08)
	char pad_378[0x18]; // 0x378(0x18)
	struct AActor* FocusActor; // 0x390(0x08)
	char pad_398[0x50]; // 0x398(0x50)
	struct FSimulateAIDebugData SimulateAIDebugData; // 0x3e8(0xa8)
	struct TArray<struct FSimulateAILabDebugData> SimulateAILabDebugData; // 0x490(0x10)
	char pad_4A0[0x8]; // 0x4a0(0x08)
	struct AGPCharacter* CurrentMovementDebugCharacter; // 0x4a8(0x08)
	struct UClass* GMKillMeGameplayEffect; // 0x4b0(0x08)
	struct UClass* GMHurtImPendingDeathGameplayEffect; // 0x4b8(0x08)
	struct UClass* GMResetGameplayEffect; // 0x4c0(0x08)
	struct UClass* GMKillMeAttributeEffect; // 0x4c8(0x08)
	struct UClass* GMResetAttributeEffect; // 0x4d0(0x08)
	struct AActor* WeaponDebugViewTarget; // 0x4d8(0x08)
	float LastRestartTime; // 0x4e0(0x04)
	char pad_4E4[0x24]; // 0x4e4(0x24)
	/*struct FMulticastInlineDelegate*/char OnDrawCover[0x10]; // 0x508(0x10)
	/*struct FMulticastInlineDelegate*/char OnUpdateBTString[0x10]; // 0x518(0x10)
	struct TWeakObjectPtr<struct ADFMAICharacter> AIBTDebugTarget; // 0x528(0x08)
	struct FString AIBTString; // 0x530(0x10)
	struct FString AIMotionActionString; // 0x540(0x10)
	/*struct FMulticastInlineDelegate*/char OnUpdateAIMotionActionString[0x10]; // 0x550(0x10)
	char pad_560[0x10]; // 0x560(0x10)

	void VCCheckTool(float InRangeHalfX, float InRangeHalfY, float InCellSize, float InDeltaAngle, float InDebuglifetime); // Function DFMGameplay.PlayerGMComponent.VCCheckTool // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e4c00
	void UseSkill_T(int32_t SkillId); // Function DFMGameplay.PlayerGMComponent.UseSkill_T // (Final|Exec|Native|Public) // @ game+0x63e4b80
	void UseSkill(int32_t SkillId); // Function DFMGameplay.PlayerGMComponent.UseSkill // (Final|Exec|Native|Public) // @ game+0x63e4b00
	void UseAILabGM(int64_t Uin, struct FString GMCmd); // Function DFMGameplay.PlayerGMComponent.UseAILabGM // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e49f0
	void UpdatePerceptionDebugInfoToClient(struct TArray<struct FPerceptionDebugData> PerceptionDebugInfo); // Function DFMGameplay.PlayerGMComponent.UpdatePerceptionDebugInfoToClient // (Net|Native|Event|Public|NetClient) // @ game+0x63e48e0
	void UpdatePerceptionDebugInfo(float Distance); // Function DFMGameplay.PlayerGMComponent.UpdatePerceptionDebugInfo // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e4860
	void UpdateMonitorAIMouse(struct FVector CamLoc, struct FRotator CamRot, struct FVector pint, struct FVector dir); // Function DFMGameplay.PlayerGMComponent.UpdateMonitorAIMouse // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x63e46e0
	void UpdateMonitorAI(); // Function DFMGameplay.PlayerGMComponent.UpdateMonitorAI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e46c0
	void UpdateHitRateDebugInfoToClient(struct TArray<struct FAIHitRateDebugData> AIHitRateData); // Function DFMGameplay.PlayerGMComponent.UpdateHitRateDebugInfoToClient // (Net|Native|Event|Public|NetClient|BlueprintCallable) // @ game+0x63e45f0
	void UpdateDebugToClient(struct APawn* AICharacter); // Function DFMGameplay.PlayerGMComponent.UpdateDebugToClient // (Final|Native|Public|BlueprintCallable) // @ game+0x63e44e0
	void UpdateAILabInfoToClient(); // Function DFMGameplay.PlayerGMComponent.UpdateAILabInfoToClient // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x3578900
	void UpdateAILabDebug(struct FString Msg); // Function DFMGameplay.PlayerGMComponent.UpdateAILabDebug // (Net|Native|Event|Public|NetClient|BlueprintCallable) // @ game+0x63e4410
	void UpdateAIDifficultyDebugInfoToClient(struct FAiDifficultyDebugDataInfos Infos); // Function DFMGameplay.PlayerGMComponent.UpdateAIDifficultyDebugInfoToClient // (Net|Native|Event|Public|NetClient) // @ game+0x63e41d0
	void UpdateAIDebugInfoToClient(struct APawn* AICharacter, struct FString DebugInfoMsg, struct FString DebugInfoMsgRight); // Function DFMGameplay.PlayerGMComponent.UpdateAIDebugInfoToClient // (Net|Native|Event|Public|NetClient|BlueprintCallable) // @ game+0x63e4050
	void UpdateAIDebugInfo(); // Function DFMGameplay.PlayerGMComponent.UpdateAIDebugInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x63e4030
	void TryLanding(struct FVector StartLoc); // Function DFMGameplay.PlayerGMComponent.TryLanding // (Final|Native|Public|HasDefaults) // @ game+0x63e3fa0
	void TransAILabCommand(int64_t Uin, int32_t Command, float Value); // Function DFMGameplay.PlayerGMComponent.TransAILabCommand // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e3ea0
	void ToggleXPP(); // Function DFMGameplay.PlayerGMComponent.ToggleXPP // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3e80
	void ToggleLocationDebug(int32_t DebugMode); // Function DFMGameplay.PlayerGMComponent.ToggleLocationDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3e00
	void ToggleAudioEventDebugPanel(bool bShow); // Function DFMGameplay.PlayerGMComponent.ToggleAudioEventDebugPanel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3ce0
	void ToggleAILabDebugMode(int32_t DebugMode); // Function DFMGameplay.PlayerGMComponent.ToggleAILabDebugMode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3c60
	void TestWeaponTrace(int32_t TraceTimes); // Function DFMGameplay.PlayerGMComponent.TestWeaponTrace // (Final|Exec|Native|Public) // @ game+0x63e3b60
	void TestServerSwitchAssassinateState(bool Enter); // Function DFMGameplay.PlayerGMComponent.TestServerSwitchAssassinateState // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e3ad0
	void TestServerFinishAssassinate(); // Function DFMGameplay.PlayerGMComponent.TestServerFinishAssassinate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x174adf0
	void TestServerEndMatch(); // Function DFMGameplay.PlayerGMComponent.TestServerEndMatch // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6240270
	void TestGMViewClicked(); // Function DFMGameplay.PlayerGMComponent.TestGMViewClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x63e3ab0
	void SwitchAIPrevPressed(); // Function DFMGameplay.PlayerGMComponent.SwitchAIPrevPressed // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x637d160
	void SwitchAINextPressed(); // Function DFMGameplay.PlayerGMComponent.SwitchAINextPressed // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x174b500
	void StopCutscene(struct FString Tag); // Function DFMGameplay.PlayerGMComponent.StopCutscene // (Final|Exec|Native|Public) // @ game+0x63e3990
	void StartSchemeAI(int32_t PlayerSchemeId); // Function DFMGameplay.PlayerGMComponent.StartSchemeAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3910
	void StarSucker(); // Function DFMGameplay.PlayerGMComponent.StarSucker // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x40843a0
	void SpeedUpOccupy(int32_t multipy, float MoveSpeed); // Function DFMGameplay.PlayerGMComponent.SpeedUpOccupy // (Final|Exec|Native|Public) // @ game+0x63e3850
	void SpawnTestAI(int32_t Index, int32_t Num, struct FVector postion); // Function DFMGameplay.PlayerGMComponent.SpawnTestAI // (Final|Exec|Native|Public|HasDefaults) // @ game+0x63e3740
	void SpawnPvpAiAround(struct FString StrParams, int32_t Num, int32_t ArmedForce); // Function DFMGameplay.PlayerGMComponent.SpawnPvpAiAround // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3600
	void SpawnPortableAmmoBox(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.SpawnPortableAmmoBox // (Final|Exec|Native|Public) // @ game+0x63e3580
	void SpawnGMStatueAI(); // Function DFMGameplay.PlayerGMComponent.SpawnGMStatueAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3560
	void SpawnGMAI(struct FString NpcName, int32_t Num); // Function DFMGameplay.PlayerGMComponent.SpawnGMAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3400
	void SOLRandomContract(); // Function DFMGameplay.PlayerGMComponent.SOLRandomContract // (Final|Exec|Native|Public) // @ game+0x63df260
	void SkillIgnoreCD(); // Function DFMGameplay.PlayerGMComponent.SkillIgnoreCD // (Final|Exec|Native|Public) // @ game+0x63e33e0
	void SkillCheckMemoryLeakage(); // Function DFMGameplay.PlayerGMComponent.SkillCheckMemoryLeakage // (Final|Exec|Native|Public) // @ game+0x63e33c0
	void ShowGroupLocation(); // Function DFMGameplay.PlayerGMComponent.ShowGroupLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x36ca510
	void ShowGMPanel(struct FName PaenlName); // Function DFMGameplay.PlayerGMComponent.ShowGMPanel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3320
	void Show3CDebugInfo(float NearlyDistance); // Function DFMGameplay.PlayerGMComponent.Show3CDebugInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e3020
	void SetPerkCondForceSucceed(); // Function DFMGameplay.PlayerGMComponent.SetPerkCondForceSucceed // (Final|Exec|Native|Public) // @ game+0x63e3000
	void SetMockPathLen(struct AMockPathHelper* MPH, float Degree); // Function DFMGameplay.PlayerGMComponent.SetMockPathLen // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e2f30
	void SetMockPathFocusPlayer(struct AMockPathHelper* MPH, bool bFocus); // Function DFMGameplay.PlayerGMComponent.SetMockPathFocusPlayer // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e2e60
	void SetMockPathFocus(struct AMockPathHelper* MPH, float Yaw, float Pitch); // Function DFMGameplay.PlayerGMComponent.SetMockPathFocus // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e2d60
	void SetMockPathDegree(struct AMockPathHelper* MPH, float Degree); // Function DFMGameplay.PlayerGMComponent.SetMockPathDegree // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e2c90
	void SetEndGameTimeout(float Timeout); // Function DFMGameplay.PlayerGMComponent.SetEndGameTimeout // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e2c10
	void SetDramaNpcName(struct ADramaArea* Drama, struct FName NpcName); // Function DFMGameplay.PlayerGMComponent.SetDramaNpcName // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63e2b40
	void SetCharacterWaitingStartSOLState(int32_t Enable); // Function DFMGameplay.PlayerGMComponent.SetCharacterWaitingStartSOLState // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e2a40
	void SetArmedForce(int32_t armid, int32_t HeroID, int32_t BagId); // Function DFMGameplay.PlayerGMComponent.SetArmedForce // (Final|Exec|Native|Public) // @ game+0x63e2940
	void SetAINonPerceptualEx(bool bNonPerceptual); // Function DFMGameplay.PlayerGMComponent.SetAINonPerceptualEx // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3689660
	void SetAINonPerceptual(bool bNonPerceptual); // Function DFMGameplay.PlayerGMComponent.SetAINonPerceptual // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63e2750
	void SetActorWithTagToLocation(struct FName Tag, struct FVector Location); // Function DFMGameplay.PlayerGMComponent.SetActorWithTagToLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x63e2860
	void SetAbilityByType(enum class ESkillLogicType ESkillLogicType); // Function DFMGameplay.PlayerGMComponent.SetAbilityByType // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63e27e0
	void ServerWeaponUpdatePartDynamicEffective(struct AWeaponBase* Weapon, uint64_t PartFunctionId, bool bDynamicEffective); // Function DFMGameplay.PlayerGMComponent.ServerWeaponUpdatePartDynamicEffective // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2650
	void ServerVCCheck(float InRangeHalfX, float InRangeHalfY, float InCellSize, float InDeltaAngle); // Function DFMGameplay.PlayerGMComponent.ServerVCCheck // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2500
	void ServerUseStartSpotTemplate(struct FName RowId); // Function DFMGameplay.PlayerGMComponent.ServerUseStartSpotTemplate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2470
	void ServerUseCustomMovementSpeed(bool bUseCustomSpeed, float CustomSpeed); // Function DFMGameplay.PlayerGMComponent.ServerUseCustomMovementSpeed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e23a0
	void ServerUseConstMovementSpeed(bool bUseConstSpeed); // Function DFMGameplay.PlayerGMComponent.ServerUseConstMovementSpeed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2310
	void ServerUnEquipPerk(); // Function DFMGameplay.PlayerGMComponent.ServerUnEquipPerk // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3608310
	void ServerTriggerBossDied(); // Function DFMGameplay.PlayerGMComponent.ServerTriggerBossDied // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360c9c0
	void ServerToggleLocationDebug(int32_t DebugMode); // Function DFMGameplay.PlayerGMComponent.ServerToggleLocationDebug // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x364ecd0
	void ServerSwitchToEmptyHand(float DelayTime); // Function DFMGameplay.PlayerGMComponent.ServerSwitchToEmptyHand // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2290
	void ServerSpawnTestAI(int32_t Index, int32_t Num, struct FVector postion); // Function DFMGameplay.PlayerGMComponent.ServerSpawnTestAI // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e2180
	void ServerSpawnPvpAiAround(struct FString StrParams, int32_t Num, int32_t ArmedForce); // Function DFMGameplay.PlayerGMComponent.ServerSpawnPvpAiAround // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e2040
	void ServerSpawnPortableAmmoBox(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.ServerSpawnPortableAmmoBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63bb610
	void ServerSpawnFireArrow(uint64_t BulletId, struct FVector StartLoc, struct FRotator StartRot); // Function DFMGameplay.PlayerGMComponent.ServerSpawnFireArrow // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e1f10
	void ServerSpawnAIForView(struct FName NpcName, int32_t NpcDiffculty); // Function DFMGameplay.PlayerGMComponent.ServerSpawnAIForView // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1e40
	void ServerSOLRandomContract(); // Function DFMGameplay.PlayerGMComponent.ServerSOLRandomContract // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x48d3290
	void ServerSkillIgnoreCD(); // Function DFMGameplay.PlayerGMComponent.ServerSkillIgnoreCD // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2278e10
	void ServerSetPerkCondForceSucceed(); // Function DFMGameplay.PlayerGMComponent.ServerSetPerkCondForceSucceed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x22bc2f0
	void ServerSetEndGameTimeout(float Timeout); // Function DFMGameplay.PlayerGMComponent.ServerSetEndGameTimeout // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1dc0
	void ServerSetCharacterWaitingStartSOLState(int32_t Enable); // Function DFMGameplay.PlayerGMComponent.ServerSetCharacterWaitingStartSOLState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1d30
	void ServerSetBattleClass(uint32_t BattleClassId, struct TArray<uint32_t> AbilityIdArr); // Function DFMGameplay.PlayerGMComponent.ServerSetBattleClass // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1c30
	void ServerSetAmmoConsumeType(struct AWeaponBase* Weapon, int32_t Type); // Function DFMGameplay.PlayerGMComponent.ServerSetAmmoConsumeType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1b60
	void ServerRunLuaCodeOnDS(uint64_t Index, struct FString LuaCode); // Function DFMGameplay.PlayerGMComponent.ServerRunLuaCodeOnDS // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1a50
	void ServerRequestSubtitleSequence(struct FName SubtitleSeqId, enum class ESubtitleSequenceType SubtitleSeqType); // Function DFMGameplay.PlayerGMComponent.ServerRequestSubtitleSequence // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1980
	void ServerReportMapEconomy(); // Function DFMGameplay.PlayerGMComponent.ServerReportMapEconomy // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6240290
	void ServerQueryPath(struct FVector Location); // Function DFMGameplay.PlayerGMComponent.ServerQueryPath // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e1900
	void ServerPlayerBan(); // Function DFMGameplay.PlayerGMComponent.ServerPlayerBan // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x17512a0
	void ServerNotifyAI(uint64_t PlayerId, struct FString NotifyMessage); // Function DFMGameplay.PlayerGMComponent.ServerNotifyAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e17f0
	void ServerMoveToLocation(struct FVector Location); // Function DFMGameplay.PlayerGMComponent.ServerMoveToLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e1770
	void ServerMoveToActor(struct AActor* Actor); // Function DFMGameplay.PlayerGMComponent.ServerMoveToActor // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x637d470
	void ServerModifyAmmo(struct AWeaponBase* Weapon, int32_t Val); // Function DFMGameplay.PlayerGMComponent.ServerModifyAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e16a0
	void ServerLoadQuest(int32_t QuestID); // Function DFMGameplay.PlayerGMComponent.ServerLoadQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x36605a0
	void ServerLandingTest(struct FVector2D LeftUp, struct FVector2D RightUp, struct FVector2D LeftDown); // Function DFMGameplay.PlayerGMComponent.ServerLandingTest // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e15b0
	void ServerKickTeammate(); // Function DFMGameplay.PlayerGMComponent.ServerKickTeammate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1590
	void ServerHasEnoughSpaceToAddAmmo(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.ServerHasEnoughSpaceToAddAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360c630
	void ServerGoto2D(struct FVector2D Location); // Function DFMGameplay.PlayerGMComponent.ServerGoto2D // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e1480
	void ServerGoto(struct FVector Location); // Function DFMGameplay.PlayerGMComponent.ServerGoto // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e1500
	void ServerGMWeaponTestRemoveAllSpawnCharacter(); // Function DFMGameplay.PlayerGMComponent.ServerGMWeaponTestRemoveAllSpawnCharacter // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35e4a10
	void ServerGMWeaponTestCharacterStopAutoFire(); // Function DFMGameplay.PlayerGMComponent.ServerGMWeaponTestCharacterStopAutoFire // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e377d0
	void ServerGMWeaponTestCharacterAutoFire(float FireInterval); // Function DFMGameplay.PlayerGMComponent.ServerGMWeaponTestCharacterAutoFire // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e38c40
	void ServerGMUnEquipLeftWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.ServerGMUnEquipLeftWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x49021a0
	void ServerGMToggleExit(int32_t ID, bool Enable, float countdown); // Function DFMGameplay.PlayerGMComponent.ServerGMToggleExit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0e80
	void ServerGMTimeScale(float Scale); // Function DFMGameplay.PlayerGMComponent.ServerGMTimeScale // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0e00
	void ServerGMTestSpawnCharacterInLocation(struct FTestCharacterParam TestCharacterParam, struct FTestWeaponParam Weapon01, struct FTestWeaponParam Weapon02); // Function DFMGameplay.PlayerGMComponent.ServerGMTestSpawnCharacterInLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0ca0
	void ServerGMSpawnLimit(int32_t Num); // Function DFMGameplay.PlayerGMComponent.ServerGMSpawnLimit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0c10
	void ServerGMSpawnAllSniperDrama(); // Function DFMGameplay.PlayerGMComponent.ServerGMSpawnAllSniperDrama // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x48e8ae0
	void ServerGMSkinPlayer(struct AGPPlayerState* PS, uint64_t WeaponID, uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.ServerGMSkinPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0b10
	void ServerGMSkinGun(struct ADFMCharacter* GPChar, uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.ServerGMSkinGun // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0a40
	void ServerGMSkinAppGun(struct ADFMCharacter* GPChar, uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.ServerGMSkinAppGun // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0970
	void ServerGMSimulateDSFrameTime(float AvgMax, float AvgMin, float StunRate, float StunMax, float StunMin); // Function DFMGameplay.PlayerGMComponent.ServerGMSimulateDSFrameTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e07d0
	void ServerGMShowNavExtInfo(float RefreshTime); // Function DFMGameplay.PlayerGMComponent.ServerGMShowNavExtInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0750
	void ServerGMRemovePerkSPEffect(int32_t Index); // Function DFMGameplay.PlayerGMComponent.ServerGMRemovePerkSPEffect // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3664750
	void ServerGMRemovePerk(int32_t Index); // Function DFMGameplay.PlayerGMComponent.ServerGMRemovePerk // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62ee6f0
	void ServerGMJPSTrace(struct FVector Start, struct FVector End); // Function DFMGameplay.PlayerGMComponent.ServerGMJPSTrace // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63e0670
	void ServerGMGodDamage(bool bEnable); // Function DFMGameplay.PlayerGMComponent.ServerGMGodDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e05e0
	void ServerGMGiveWepaonByDesc(struct FGPWeaponDescInfo WeaponDesc); // Function DFMGameplay.PlayerGMComponent.ServerGMGiveWepaonByDesc // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0470
	void ServerGMGiveWeapon(uint64_t PresetId, struct TArray<uint64_t> Items); // Function DFMGameplay.PlayerGMComponent.ServerGMGiveWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0360
	void ServerGMGiveCurrency(float InValue, int64_t FakeQuestId); // Function DFMGameplay.PlayerGMComponent.ServerGMGiveCurrency // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0290
	void ServerGMForceTeamDamage(bool bForce); // Function DFMGameplay.PlayerGMComponent.ServerGMForceTeamDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35e4130
	void ServerGMEquipLeftWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.ServerGMEquipLeftWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4901fb0
	void ServerGMEnableFriendDamage(bool bEnable); // Function DFMGameplay.PlayerGMComponent.ServerGMEnableFriendDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0200
	void ServerGMConsumeCurrency(float ConsumeValue); // Function DFMGameplay.PlayerGMComponent.ServerGMConsumeCurrency // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0180
	void ServerGMAddPerkSPEffect(int32_t Index); // Function DFMGameplay.PlayerGMComponent.ServerGMAddPerkSPEffect // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62ee940
	void ServerGMAddPerk(int32_t Index); // Function DFMGameplay.PlayerGMComponent.ServerGMAddPerk // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x491ccf0
	void ServerGiveWeaponFromStr(struct FString str); // Function DFMGameplay.PlayerGMComponent.ServerGiveWeaponFromStr // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e13b0
	void ServerGiveResetSlot(); // Function DFMGameplay.PlayerGMComponent.ServerGiveResetSlot // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2278f90
	void ServerGiveItemImpl(int64_t ItemID, int32_t Num, int32_t AttachPos, int32_t BindType); // Function DFMGameplay.PlayerGMComponent.ServerGiveItemImpl // (Final|Native|Public|BlueprintCallable) // @ game+0x63e1270
	void ServerGiveItem(uint64_t ItemID, int32_t Num, enum class EAttachPosition AttachPos, int32_t BindType); // Function DFMGameplay.PlayerGMComponent.ServerGiveItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1130
	void ServerGiveInfinityCarriedAmmo(struct AWeaponBase* Weapon); // Function DFMGameplay.PlayerGMComponent.ServerGiveInfinityCarriedAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e10a0
	void ServerGiveAbilityByType(enum class ESkillLogicType ESkillLogicType); // Function DFMGameplay.PlayerGMComponent.ServerGiveAbilityByType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e1020
	void ServerGiveAbilityByExpertID(int64_t ExpertId); // Function DFMGameplay.PlayerGMComponent.ServerGiveAbilityByExpertID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0f90
	void ServerGetCurrentFirstWeaponItemID(); // Function DFMGameplay.PlayerGMComponent.ServerGetCurrentFirstWeaponItemID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360c9a0
	void ServerForceFinishMission(); // Function DFMGameplay.PlayerGMComponent.ServerForceFinishMission // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0160
	void ServerForceEnableImpendingDeath(bool Enable); // Function DFMGameplay.PlayerGMComponent.ServerForceEnableImpendingDeath // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e00d0
	void ServerForceCheckGuideItem(bool bForceCheckGuideItem); // Function DFMGameplay.PlayerGMComponent.ServerForceCheckGuideItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4974b10
	void ServerFinishCurrentStage(); // Function DFMGameplay.PlayerGMComponent.ServerFinishCurrentStage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x22b8690
	void ServerEquipPerk(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.ServerEquipPerk // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x61f4a10
	void ServerEnablePvpAIDebug(int32_t Param); // Function DFMGameplay.PlayerGMComponent.ServerEnablePvpAIDebug // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x48c8530
	void ServerEnableAISpeakDebug(bool Enable); // Function DFMGameplay.PlayerGMComponent.ServerEnableAISpeakDebug // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e0040
	void ServerDoUseForwardAndCheckHitFirstly(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoUseForwardAndCheckHitFirstly // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dffb0
	void ServerDoUseFakeTickInterval(bool InbUse, float InInterval); // Function DFMGameplay.PlayerGMComponent.ServerDoUseFakeTickInterval // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfee0
	void ServerDoUseDSCheckNearly(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoUseDSCheckNearly // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfe50
	void ServerDoUseCheckUnlock(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoUseCheckUnlock // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfdc0
	void ServerDoUseCheckHack(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoUseCheckHack // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfd30
	void ServerDoUseCheckCollSweep(int32_t Index, bool InbUse, float InRadius); // Function DFMGameplay.PlayerGMComponent.ServerDoUseCheckCollSweep // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfc20
	void ServerDoUseCheckCapture(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoUseCheckCapture // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfb90
	void ServerDoSetNearlyThreshold(float Dis); // Function DFMGameplay.PlayerGMComponent.ServerDoSetNearlyThreshold // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfb10
	void ServerDoSetInteractSystemDSCheck(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoSetInteractSystemDSCheck // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dfa80
	void ServerDoSetDSOpenCloseDoorSpeedScale(float RotOpen, float RotClose, float SlideOpen, float SlideClose); // Function DFMGameplay.PlayerGMComponent.ServerDoSetDSOpenCloseDoorSpeedScale // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df930
	void ServerDoOpenInteractSystemDetailLog(); // Function DFMGameplay.PlayerGMComponent.ServerDoOpenInteractSystemDetailLog // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df910
	void ServerDoDSUseClientPosToCheckBlock(bool InbUse); // Function DFMGameplay.PlayerGMComponent.ServerDoDSUseClientPosToCheckBlock // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df880
	void ServerDisablePvpAIDebug(); // Function DFMGameplay.PlayerGMComponent.ServerDisablePvpAIDebug // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x2277c70
	void ServerDisableMoveClientIsBoss(); // Function DFMGameplay.PlayerGMComponent.ServerDisableMoveClientIsBoss // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4077990
	void ServerCommand(struct FString Cmd); // Function DFMGameplay.PlayerGMComponent.ServerCommand // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df7b0
	void ServerAILabDebugMode(int32_t DebugMode); // Function DFMGameplay.PlayerGMComponent.ServerAILabDebugMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df3a0
	void ServerAIGiveWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.ServerAIGiveWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df310
	void ServerAddVehicleSkinInfo(uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.ServerAddVehicleSkinInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x22bc260
	void ServerAddVehiclePartInfo(uint64_t PartId); // Function DFMGameplay.PlayerGMComponent.ServerAddVehiclePartInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4919fb0
	void ServerAddSlotWeapon(uint64_t PresetId, int32_t Slot); // Function DFMGameplay.PlayerGMComponent.ServerAddSlotWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df6e0
	void ServerAddMerit(float Merit); // Function DFMGameplay.PlayerGMComponent.ServerAddMerit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df660
	void ServerAddAndUseAbilityItem(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.ServerAddAndUseAbilityItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df5d0
	void ServerAddAmmoToInventoryManager(uint64_t ItemID, int32_t Num); // Function DFMGameplay.PlayerGMComponent.ServerAddAmmoToInventoryManager // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df500
	void ServerAcceptActivity(int64_t TaskID, int64_t GoalID); // Function DFMGameplay.PlayerGMComponent.ServerAcceptActivity // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63df430
	void Server2ClientCameraLocDiff(struct FVector ServerCameraLoc); // Function DFMGameplay.PlayerGMComponent.Server2ClientCameraLocDiff // (Net|Native|Event|Public|HasDefaults|NetClient) // @ game+0x63df280
	void ResetCurrentWheeledVehicle(); // Function DFMGameplay.PlayerGMComponent.ResetCurrentWheeledVehicle // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63df240
	void RequestUpdateBTDebugString(struct ADFMAICharacter* CHARACTER); // Function DFMGameplay.PlayerGMComponent.RequestUpdateBTDebugString // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63df1b0
	void RequestHitRateDebugInfo(); // Function DFMGameplay.PlayerGMComponent.RequestHitRateDebugInfo // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x3578a40
	void RequestDrawCover(struct TArray<struct FVector> Locations, float Range, struct ADFMAICharacter* AI); // Function DFMGameplay.PlayerGMComponent.RequestDrawCover // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63df060
	void ReportMapEconomy(); // Function DFMGameplay.PlayerGMComponent.ReportMapEconomy // (Final|Exec|Native|Public) // @ game+0x63df040
	void RemoveScreenEffect(struct FString EffectName); // Function DFMGameplay.PlayerGMComponent.RemoveScreenEffect // (Final|Exec|Native|Public) // @ game+0x63def20
	void RemovePerkSPEffect(int32_t Index); // Function DFMGameplay.PlayerGMComponent.RemovePerkSPEffect // (Final|Exec|Native|Public) // @ game+0x63deea0
	void RemovePerk(int32_t Index); // Function DFMGameplay.PlayerGMComponent.RemovePerk // (Final|Exec|Native|Public) // @ game+0x63dee20
	void RemoveBuff(uint64_t BuffId, char CharaterPart); // Function DFMGameplay.PlayerGMComponent.RemoveBuff // (Final|Exec|Native|Public) // @ game+0x63dece0
	void RemoveAllScreenEffect(); // Function DFMGameplay.PlayerGMComponent.RemoveAllScreenEffect // (Final|Exec|Native|Public) // @ game+0x63decc0
	void RemoveAllBuff(); // Function DFMGameplay.PlayerGMComponent.RemoveAllBuff // (Final|Exec|Native|Public) // @ game+0x63deca0
	void RaidS3ArmoredCarAddHP(float AddedHealth); // Function DFMGameplay.PlayerGMComponent.RaidS3ArmoredCarAddHP // (Final|Exec|Native|Public) // @ game+0x63dec20
	void ProcessExecFunc(struct FString Command); // Function DFMGameplay.PlayerGMComponent.ProcessExecFunc // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63deb60
	void PrintCurrentInteractWorldLocation(); // Function DFMGameplay.PlayerGMComponent.PrintCurrentInteractWorldLocation // (Final|Exec|Native|Public) // @ game+0x63deb40
	void PrintAllCompAndInitAnim(); // Function DFMGameplay.PlayerGMComponent.PrintAllCompAndInitAnim // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63deb20
	void PlayWwiseDynamicDialogue(struct FName& Prefix, struct TMap<struct FName, struct FName>& Switchs); // Function DFMGameplay.PlayerGMComponent.PlayWwiseDynamicDialogue // (Final|Exec|Native|Public|HasOutParms) // @ game+0x63de930
	void PlayerVehicleMaxHP(bool bEnable); // Function DFMGameplay.PlayerGMComponent.PlayerVehicleMaxHP // (Final|Exec|Native|Public) // @ game+0x63dea90
	void PlayCutscene(struct FString Tag); // Function DFMGameplay.PlayerGMComponent.PlayCutscene // (Final|Exec|Native|Public) // @ game+0x63de810
	void OnRep_AIMotionActionString(); // Function DFMGameplay.PlayerGMComponent.OnRep_AIMotionActionString // (Final|Native|Public) // @ game+0x63de750
	void OnRep_AIBTString(); // Function DFMGameplay.PlayerGMComponent.OnRep_AIBTString // (Final|Native|Public) // @ game+0x63de730
	void OnLoadingPercentage(int32_t Percentage); // Function DFMGameplay.PlayerGMComponent.OnLoadingPercentage // (Final|Native|Public) // @ game+0x63de310
	void OnDetorurResult(struct TArray<struct FVector> Paths, struct FVector StartPos, struct FVector EndPos); // Function DFMGameplay.PlayerGMComponent.OnDetorurResult // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63de1b0
	void OnAIViewDeadbody(struct ACHARACTER* CHARACTER, struct AActor* Deadbody); // Function DFMGameplay.PlayerGMComponent.OnAIViewDeadbody // (Final|Native|Public) // @ game+0x63ddfb0
	void NotifyServerRaidS3ArmoredCarAddHP(float AddedHealth); // Function DFMGameplay.PlayerGMComponent.NotifyServerRaidS3ArmoredCarAddHP // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63ddf30
	void NotifyServerPlayerVehicleMaxHP(bool bEnable); // Function DFMGameplay.PlayerGMComponent.NotifyServerPlayerVehicleMaxHP // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63ddea0
	void NotifyLuaCodeResult(uint64_t Index, struct FString Result); // Function DFMGameplay.PlayerGMComponent.NotifyLuaCodeResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63ddd90
	void NotifyAI(struct FString NotifyMessage); // Function DFMGameplay.PlayerGMComponent.NotifyAI // (Final|Exec|Native|Public) // @ game+0x63ddc70
	void MultiWorldStart(uint64_t RoomId, int32_t Port); // Function DFMGameplay.PlayerGMComponent.MultiWorldStart // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63ddb20
	void MultiWorldEnd(uint64_t RoomId); // Function DFMGameplay.PlayerGMComponent.MultiWorldEnd // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dda90
	void MulticastGMTimeScale(float Scale); // Function DFMGameplay.PlayerGMComponent.MulticastGMTimeScale // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63ddbf0
	void KickTeammate(); // Function DFMGameplay.PlayerGMComponent.KickTeammate // (Final|Exec|Native|Public) // @ game+0x63dda70
	bool IsAISpeakDebugEnable(); // Function DFMGameplay.PlayerGMComponent.IsAISpeakDebugEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63dda40
	void InvTest_RefillBullets(bool bLeft, uint64_t TargetBulletID); // Function DFMGameplay.PlayerGMComponent.InvTest_RefillBullets // (Final|Exec|Native|Public) // @ game+0x63dd980
	void GMWhoIsYourDaddy(int32_t Health); // Function DFMGameplay.PlayerGMComponent.GMWhoIsYourDaddy // (Final|Exec|Native|Public) // @ game+0x63dcdb0
	void GMWeaponUpdatePartDynamicEffective(uint64_t PartFunctionId, bool bDynamicEffective); // Function DFMGameplay.PlayerGMComponent.GMWeaponUpdatePartDynamicEffective // (Final|Exec|Native|Public) // @ game+0x63dccc0
	void GMWeaponUpdateBulletModel(int32_t AmmoCount); // Function DFMGameplay.PlayerGMComponent.GMWeaponUpdateBulletModel // (Final|Exec|Native|Public) // @ game+0x63dcc40
	void GMWeaponTestSpawnWeaponMesh(uint64_t WeaponID, uint64_t SkinAppId, char MeshType, uint32_t Index); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestSpawnWeaponMesh // (Final|Exec|Native|Public) // @ game+0x63dcb00
	void GMWeaponTestSpawnCharacterInFace(struct FName CharacterConfig, uint64_t WeaponID, uint64_t SkinAppId, float Distance, int32_t Index, char FaceTo); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestSpawnCharacterInFace // (Final|Exec|Native|Public) // @ game+0x63dc950
	void GMWeaponTestSpawnCharacter(struct FName CharacterConfig, uint64_t WeaponID, uint64_t SkinAppId, struct FVector Location, struct FRotator Rotator, int32_t Index); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestSpawnCharacter // (Final|Exec|Native|Public|HasDefaults) // @ game+0x63dc780
	void GMWeaponTestRemoveAllWeaponMesh(); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestRemoveAllWeaponMesh // (Final|Exec|Native|Public) // @ game+0x63dc760
	void GMWeaponTestRemoveAllSpawnCharacter(); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestRemoveAllSpawnCharacter // (Final|Exec|Native|Public) // @ game+0x63dc740
	void GMWeaponTestFocusWeaponMesh(int32_t Index); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestFocusWeaponMesh // (Final|Exec|Native|Public) // @ game+0x63dc6c0
	void GMWeaponTestCharacterStopAutoFire(); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestCharacterStopAutoFire // (Final|Exec|Native|Public) // @ game+0x63dc6a0
	void GMWeaponTestCharacterAutoFire(float FireInterval); // Function DFMGameplay.PlayerGMComponent.GMWeaponTestCharacterAutoFire // (Final|Exec|Native|Public) // @ game+0x63dc620
	void GMWeaponReplicateTimeOut(int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMWeaponReplicateTimeOut // (Final|Exec|Native|Public) // @ game+0x63dc5a0
	void GMWeaponRefreshFiringAnim(); // Function DFMGameplay.PlayerGMComponent.GMWeaponRefreshFiringAnim // (Final|Exec|Native|Public) // @ game+0x63dc580
	void GMWeaponConsumeType(char ConsumeType); // Function DFMGameplay.PlayerGMComponent.GMWeaponConsumeType // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc500
	void GMWeapon_CallLuaWeaponMain(); // Function DFMGameplay.PlayerGMComponent.GMWeapon_CallLuaWeaponMain // (Final|Exec|Native|Public) // @ game+0x63dcd90
	void GMUseTA(); // Function DFMGameplay.PlayerGMComponent.GMUseTA // (Final|Exec|Native|Public) // @ game+0x63dc4e0
	void GMUseStartSpotTemplate(struct FName RowId); // Function DFMGameplay.PlayerGMComponent.GMUseStartSpotTemplate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc460
	void GMUseOnlyPlayerCharacterWhenCheckPreInMaxDis(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseOnlyPlayerCharacterWhenCheckPreInMaxDis // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc3d0
	void GMUseForwardAndCheckHitFirstly(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseForwardAndCheckHitFirstly // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc340
	void GMUseFakeTickInterval(bool InbUse, float InInterval); // Function DFMGameplay.PlayerGMComponent.GMUseFakeTickInterval // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc280
	void GMUseDSCheckNearly(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseDSCheckNearly // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc1f0
	void GMUseCustomMovementSpeed(bool bUseCustomSpeed, float CustomSpeed); // Function DFMGameplay.PlayerGMComponent.GMUseCustomMovementSpeed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc130
	void GMUseConstMovementSpeed(bool bUseConstSpeed); // Function DFMGameplay.PlayerGMComponent.GMUseConstMovementSpeed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc0a0
	void GMUseClientWhenCheckPreInMaxDis(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseClientWhenCheckPreInMaxDis // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dc010
	void GMUseClientOverlapWhenCheckPreInMaxDis(bool InbUse, float InRadius); // Function DFMGameplay.PlayerGMComponent.GMUseClientOverlapWhenCheckPreInMaxDis // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbf50
	void GMUseCheckUnlock(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseCheckUnlock // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbec0
	void GMUseCheckHack(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseCheckHack // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbe30
	void GMUseCheckCollSweep(int32_t Index, bool InbUse, float InRadius); // Function DFMGameplay.PlayerGMComponent.GMUseCheckCollSweep // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbd30
	void GMUseCheckCapture(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMUseCheckCapture // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbca0
	void GMUseAILabGM(int64_t Uin, struct FString GMCmd); // Function DFMGameplay.PlayerGMComponent.GMUseAILabGM // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbba0
	void GMUnEquipPerk(); // Function DFMGameplay.PlayerGMComponent.GMUnEquipPerk // (Final|Exec|Native|Public) // @ game+0x63dbb80
	void GMUnEquipLeftWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.GMUnEquipLeftWeapon // (Final|Exec|Native|Public) // @ game+0x63dbb00
	void GMTriggleSOLTimeLineEvent(); // Function DFMGameplay.PlayerGMComponent.GMTriggleSOLTimeLineEvent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dbae0
	void GMTriggleInteractorWhiteDotDistance(bool ShowWhiteDotDistance); // Function DFMGameplay.PlayerGMComponent.GMTriggleInteractorWhiteDotDistance // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dba50
	void GMTriggleBattleFieldPlayerAudio(int32_t InType); // Function DFMGameplay.PlayerGMComponent.GMTriggleBattleFieldPlayerAudio // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db9d0
	void GMTriggerSOLTrain(); // Function DFMGameplay.PlayerGMComponent.GMTriggerSOLTrain // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db9b0
	void GMTriggerHudStateChange(); // Function DFMGameplay.PlayerGMComponent.GMTriggerHudStateChange // (Final|Exec|Native|Public) // @ game+0x63db990
	void GMTriggerBossDied(); // Function DFMGameplay.PlayerGMComponent.GMTriggerBossDied // (Final|Exec|Native|Public) // @ game+0x63db970
	void GMTriggerAShellSpawn(int32_t Delay); // Function DFMGameplay.PlayerGMComponent.GMTriggerAShellSpawn // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db8f0
	void GMTransAILabCommand(int64_t Uin, int32_t Command, float Value); // Function DFMGameplay.PlayerGMComponent.GMTransAILabCommand // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db7f0
	void GMToggleUIBatch(int32_t Visible); // Function DFMGameplay.PlayerGMComponent.GMToggleUIBatch // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db770
	void GMToggleTrainSOL(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMToggleTrainSOL // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db6e0
	void GMToggleSpectateMode(int32_t Visible); // Function DFMGameplay.PlayerGMComponent.GMToggleSpectateMode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db660
	void GMToggleObserverMode(); // Function DFMGameplay.PlayerGMComponent.GMToggleObserverMode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db640
	void GMToggleHUD(int32_t Visible); // Function DFMGameplay.PlayerGMComponent.GMToggleHUD // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db540
	void GMToggleHideMiniMap(int32_t InHide); // Function DFMGameplay.PlayerGMComponent.GMToggleHideMiniMap // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db5c0
	void GMToggleFirePriorityDebugView(bool bShow); // Function DFMGameplay.PlayerGMComponent.GMToggleFirePriorityDebugView // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db4b0
	void GMToggleExit(int32_t ID, bool Enable, float countdown); // Function DFMGameplay.PlayerGMComponent.GMToggleExit // (Final|Exec|Native|Public) // @ game+0x63db3b0
	void GMTimeScale(float Scale); // Function DFMGameplay.PlayerGMComponent.GMTimeScale // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db330
	void GMTestSweepCast(float LocX, float LocY, float LocZ, float Height, float radius); // Function DFMGameplay.PlayerGMComponent.GMTestSweepCast // (Final|Exec|Native|Public) // @ game+0x63db190
	void GMTestAutoMoveToLocation(float LocX, float LocY, float LocZ); // Function DFMGameplay.PlayerGMComponent.GMTestAutoMoveToLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63db080
	void GMTestAISpawnRate(int32_t Count, int32_t TagId); // Function DFMGameplay.PlayerGMComponent.GMTestAISpawnRate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dafc0
	void GMTeelMeLocation(); // Function DFMGameplay.PlayerGMComponent.GMTeelMeLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dafa0
	void GMTeamInfoSetTeammateState(int32_t TeammateState); // Function DFMGameplay.PlayerGMComponent.GMTeamInfoSetTeammateState // (Final|Exec|Native|Public) // @ game+0x63daf20
	void GMTeamInfoSetPlayerGamePlayState(int32_t InPlayerGamePlayState); // Function DFMGameplay.PlayerGMComponent.GMTeamInfoSetPlayerGamePlayState // (Final|Exec|Native|Public) // @ game+0x63daea0
	void GMSwitchWeapon(enum class EAttachPosition pos); // Function DFMGameplay.PlayerGMComponent.GMSwitchWeapon // (Final|Exec|Native|Public) // @ game+0x63dae20
	void GmSwitchToEmptyHand(float DelayTime); // Function DFMGameplay.PlayerGMComponent.GmSwitchToEmptyHand // (Final|Exec|Native|Public) // @ game+0x63dd8c0
	void GMSwitchSkillWeapon(int32_t SkillId); // Function DFMGameplay.PlayerGMComponent.GMSwitchSkillWeapon // (Final|Exec|Native|Public) // @ game+0x63dada0
	void GMSwitchBreakableItemSkeletalMeshLodControl(int32_t IsOpen); // Function DFMGameplay.PlayerGMComponent.GMSwitchBreakableItemSkeletalMeshLodControl // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dad20
	void GMSwitchBreakableItemDestoryTime(int32_t isNeverDestroy); // Function DFMGameplay.PlayerGMComponent.GMSwitchBreakableItemDestoryTime // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63daca0
	void GMSuperSprint(); // Function DFMGameplay.PlayerGMComponent.GMSuperSprint // (Final|Exec|Native|Public) // @ game+0x63dac80
	void GMSummonAILab(int32_t Type, int32_t Diff); // Function DFMGameplay.PlayerGMComponent.GMSummonAILab // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dabc0
	void GMStopGuide(); // Function DFMGameplay.PlayerGMComponent.GMStopGuide // (Final|Exec|Native|Public) // @ game+0x63daba0
	void GMStopExitTriggerAudio(); // Function DFMGameplay.PlayerGMComponent.GMStopExitTriggerAudio // (Final|Exec|Native|Public) // @ game+0x63dab80
	void GMStopCurrentExitCutScene(); // Function DFMGameplay.PlayerGMComponent.GMStopCurrentExitCutScene // (Final|Exec|Native|Public) // @ game+0x63dab60
	void GMStartSpectate(); // Function DFMGameplay.PlayerGMComponent.GMStartSpectate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dab40
	void GMStartGuideInGame(int32_t StageId); // Function DFMGameplay.PlayerGMComponent.GMStartGuideInGame // (Final|Exec|Native|Public) // @ game+0x63daac0
	void GMSpeedUpOccupy(int32_t multipy); // Function DFMGameplay.PlayerGMComponent.GMSpeedUpOccupy // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63daa30
	void GMSpectateNext(); // Function DFMGameplay.PlayerGMComponent.GMSpectateNext // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63daa10
	void GMSpawnVehicle(struct FString VehicleName); // Function DFMGameplay.PlayerGMComponent.GMSpawnVehicle // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da950
	void GMSpawnTotalVehicles(float Dist); // Function DFMGameplay.PlayerGMComponent.GMSpawnTotalVehicles // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da8d0
	void GMSpawnProfileVehicles(float Dist); // Function DFMGameplay.PlayerGMComponent.GMSpawnProfileVehicles // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da850
	void GMSpawnMovieBP(struct FString Path); // Function DFMGameplay.PlayerGMComponent.GMSpawnMovieBP // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da730
	void GMSpawnLimit(int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMSpawnLimit // (Final|Exec|Native|Public) // @ game+0x63da6b0
	void GMSpawnItem(int64_t ItemID, int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMSpawnItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da5f0
	void GMSpawnInLocation(struct FString AiName, float X, float Y, float Z); // Function DFMGameplay.PlayerGMComponent.GMSpawnInLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da460
	void GMSpawnFireArrow(uint64_t BulletId); // Function DFMGameplay.PlayerGMComponent.GMSpawnFireArrow // (Final|Exec|Native|Public) // @ game+0x63da3e0
	void GMSpawnDFMCharacterInLocation(struct FString CharacterID, struct FString BagId, struct FString ChestId, struct FString VestID, struct FString WeaponID1, struct FString WeaponID2, float X, float Y, float Z); // Function DFMGameplay.PlayerGMComponent.GMSpawnDFMCharacterInLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63da000
	void GMSpawnAllSniperDrama(); // Function DFMGameplay.PlayerGMComponent.GMSpawnAllSniperDrama // (Final|Exec|Native|Public) // @ game+0x63d9fe0
	void GMSpawnAI(struct FString botName, struct FString Args, bool TPToStart); // Function DFMGameplay.PlayerGMComponent.GMSpawnAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9e60
	void GMSOLStartMatch(); // Function DFMGameplay.PlayerGMComponent.GMSOLStartMatch // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d55c0
	void GMSkinPlayer(uint64_t WeaponID, uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.GMSkinPlayer // (Final|Exec|Native|Public) // @ game+0x63d9da0
	void GMSkinMysticalGun(uint64_t SkinId, uint64_t MysticalId, uint64_t RandomSeed); // Function DFMGameplay.PlayerGMComponent.GMSkinMysticalGun // (Final|Exec|Native|Public) // @ game+0x63d9ca0
	void GMSkinGun(uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.GMSkinGun // (Final|Exec|Native|Public) // @ game+0x63d9c20
	void GMSkinAppGun(uint64_t SkinApperanceId); // Function DFMGameplay.PlayerGMComponent.GMSkinAppGun // (Final|Exec|Native|Public) // @ game+0x63d9ba0
	void GMSimulateOpenBox(int32_t Times); // Function DFMGameplay.PlayerGMComponent.GMSimulateOpenBox // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9b20
	void GMSimulateDSFrameTimeDefault(); // Function DFMGameplay.PlayerGMComponent.GMSimulateDSFrameTimeDefault // (Final|Exec|Native|Public) // @ game+0x63d9b00
	void GMSimulateDSFrameTime(float AvgMax, float AvgMin, float StunRate, float StunMax, float StunMin); // Function DFMGameplay.PlayerGMComponent.GMSimulateDSFrameTime // (Final|Exec|Native|Public) // @ game+0x63d9960
	void GMShowUIHidePanel(); // Function DFMGameplay.PlayerGMComponent.GMShowUIHidePanel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9940
	void GMShowSOLBroadcastBanner(struct FString Text, float Duration); // Function DFMGameplay.PlayerGMComponent.GMShowSOLBroadcastBanner // (Final|Exec|Native|Public) // @ game+0x63d97a0
	void GMShowSocket(struct FName SocketName); // Function DFMGameplay.PlayerGMComponent.GMShowSocket // (Final|Exec|Native|Public) // @ game+0x63d98c0
	void GMShowSkill(); // Function DFMGameplay.PlayerGMComponent.GMShowSkill // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d98a0
	void GMShowNavExtInfo(float RefreshTime); // Function DFMGameplay.PlayerGMComponent.GMShowNavExtInfo // (Final|Exec|Native|Public) // @ game+0x63d9720
	void GMShowNav(float Range); // Function DFMGameplay.PlayerGMComponent.GMShowNav // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d96a0
	void GmShowKillTip(); // Function DFMGameplay.PlayerGMComponent.GmShowKillTip // (Final|Exec|Native|Public) // @ game+0x63dd8a0
	void GMShowGroupLocation(); // Function DFMGameplay.PlayerGMComponent.GMShowGroupLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9680
	void GMShowFps(); // Function DFMGameplay.PlayerGMComponent.GMShowFps // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9660
	void GMShowFoliage(bool bSneakOpt, bool bEnable); // Function DFMGameplay.PlayerGMComponent.GMShowFoliage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d9590
	void GMShowDeadBoxText(int32_t TextType); // Function DFMGameplay.PlayerGMComponent.GMShowDeadBoxText // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9510
	void GMShowCharacterLightAttachmentAsGroup(); // Function DFMGameplay.PlayerGMComponent.GMShowCharacterLightAttachmentAsGroup // (Final|Exec|Native|Public) // @ game+0x63d94f0
	void GMShowCameraLocDiff(bool bEnable); // Function DFMGameplay.PlayerGMComponent.GMShowCameraLocDiff // (Final|Exec|Native|Public) // @ game+0x63d9460
	void GMSetWorldTimeDilation(float NewTimeDilation); // Function DFMGameplay.PlayerGMComponent.GMSetWorldTimeDilation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d9360
	void GMSetVolumetricViewDistance(float InDistance); // Function DFMGameplay.PlayerGMComponent.GMSetVolumetricViewDistance // (Final|Exec|Native|Public) // @ game+0x63d92e0
	void GMSettlement(char MathOverReason); // Function DFMGameplay.PlayerGMComponent.GMSettlement // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d93e0
	void GMSetSOLTimelineConfig(bool Enable, int32_t Interval); // Function DFMGameplay.PlayerGMComponent.GMSetSOLTimelineConfig // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9190
	void GMSetSOLShellingConfig(bool Enable, int32_t AreaNumLimit, int32_t ShellNumPerZone); // Function DFMGameplay.PlayerGMComponent.GMSetSOLShellingConfig // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9090
	void GMSetSOLParatrooperRealNumLimit(int32_t TotalNum, int32_t NumPerZone); // Function DFMGameplay.PlayerGMComponent.GMSetSOLParatrooperRealNumLimit // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8fd0
	void GMSetSOLParatrooperFakeNumLimit(int32_t TotalNum, int32_t NumPerZone); // Function DFMGameplay.PlayerGMComponent.GMSetSOLParatrooperFakeNumLimit // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8f10
	void GMSetSOLParatrooperEnable(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMSetSOLParatrooperEnable // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8e80
	void GMSetSOLIntroEventState(struct FString EventIdsStr); // Function DFMGameplay.PlayerGMComponent.GMSetSOLIntroEventState // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8dc0
	void GMSetShellingFX(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMSetShellingFX // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d9250
	void GMSetReplicationVolumeEnableGlobal(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMSetReplicationVolumeEnableGlobal // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8d30
	void GMSetReplicationVolumeEnableConnection(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMSetReplicationVolumeEnableConnection // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8ca0
	void GMSetRecycleTime(int32_t InRecycleTime); // Function DFMGameplay.PlayerGMComponent.GMSetRecycleTime // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8c20
	void GMSetPanningRule(int32_t Rule); // Function DFMGameplay.PlayerGMComponent.GMSetPanningRule // (Final|Exec|Native|Public) // @ game+0x63d8ba0
	void GMSetNeedCheckAndRefresh(bool InbNeed); // Function DFMGameplay.PlayerGMComponent.GMSetNeedCheckAndRefresh // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8b10
	void GMSetNearlyThreshold(float Dis); // Function DFMGameplay.PlayerGMComponent.GMSetNearlyThreshold // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8a90
	void GMSetMatchTime(int32_t MatchTime); // Function DFMGameplay.PlayerGMComponent.GMSetMatchTime // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8a10
	void GMSetMapLevel(int32_t MapLevel); // Function DFMGameplay.PlayerGMComponent.GMSetMapLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8990
	void GMSetInteractSystemDSCheck(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMSetInteractSystemDSCheck // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d87f0
	void GMSetInteractOutlineLaziedOpened(bool InbOpened); // Function DFMGameplay.PlayerGMComponent.GMSetInteractOutlineLaziedOpened // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8760
	void GMSetInteractorUseSceneQuery(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMSetInteractorUseSceneQuery // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8900
	void GMSetInteractorSceneQueryRadius(float InRadius); // Function DFMGameplay.PlayerGMComponent.GMSetInteractorSceneQueryRadius // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8880
	void GMSetHRTFs(int32_t HRTFIndex); // Function DFMGameplay.PlayerGMComponent.GMSetHRTFs // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d86e0
	void GMSetGameAIDifficulty(int32_t AILevel); // Function DFMGameplay.PlayerGMComponent.GMSetGameAIDifficulty // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8660
	void GMSetDSOpenCloseDoorSpeedScale(float RotOpen, float RotClose, float SlideOpen, float SlideClose); // Function DFMGameplay.PlayerGMComponent.GMSetDSOpenCloseDoorSpeedScale // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8410
	void GMSetDecipherTime(int32_t InDecipherTime); // Function DFMGameplay.PlayerGMComponent.GMSetDecipherTime // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d85e0
	void GMSetDeadBoxType(int32_t DeadBoxType); // Function DFMGameplay.PlayerGMComponent.GMSetDeadBoxType // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8560
	void GMSetCloseAIHint(bool Value); // Function DFMGameplay.PlayerGMComponent.GMSetCloseAIHint // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8380
	void GMSetBoxMeshType(int32_t MeshType); // Function DFMGameplay.PlayerGMComponent.GMSetBoxMeshType // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d8300
	void GMSetBattleClass(uint32_t BattleClassId, struct TArray<uint32_t>& AbilityIdArr); // Function DFMGameplay.PlayerGMComponent.GMSetBattleClass // (Final|Exec|Native|Public|HasOutParms) // @ game+0x63d81f0
	void GMSetAllAIInFront(); // Function DFMGameplay.PlayerGMComponent.GMSetAllAIInFront // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d81d0
	void GMSetAbilityDebugLogLevel(int32_t NewAbilityDebugLogLevel); // Function DFMGameplay.PlayerGMComponent.GMSetAbilityDebugLogLevel // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d8140
	void GMServerTriggleSOLTimeLineEvent(); // Function DFMGameplay.PlayerGMComponent.GMServerTriggleSOLTimeLineEvent // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35d0030
	void GMServerTriggleBattleFieldPlayerAudio(int32_t InType); // Function DFMGameplay.PlayerGMComponent.GMServerTriggleBattleFieldPlayerAudio // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d80b0
	void GMServerTriggerSOLTrain(); // Function DFMGameplay.PlayerGMComponent.GMServerTriggerSOLTrain // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d8090
	void GMServerTriggerAShellSpawn(int32_t Delay); // Function DFMGameplay.PlayerGMComponent.GMServerTriggerAShellSpawn // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d8000
	void GMServerToggleTrainSOL(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMServerToggleTrainSOL // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7f70
	void GMServerToggleObserverMode(); // Function DFMGameplay.PlayerGMComponent.GMServerToggleObserverMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7f50
	void GMServerTestAISpawnRate(int32_t Count, int32_t TagId); // Function DFMGameplay.PlayerGMComponent.GMServerTestAISpawnRate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7e90
	void GMServerTeelMeLocation(); // Function DFMGameplay.PlayerGMComponent.GMServerTeelMeLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x405fef0
	void GMServerStartSchemeAI(int32_t PlayerSchemeId); // Function DFMGameplay.PlayerGMComponent.GMServerStartSchemeAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7e00
	void GMServerSpawnVehicle(struct FString VehicleName); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnVehicle // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7d30
	void GMServerSpawnTotalVehicles(float Dist); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnTotalVehicles // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7cb0
	void GMServerSpawnProfileVehicles(float Dist); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnProfileVehicles // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7c30
	void GMServerSpawnItem(uint32_t CharacterID, int64_t ItemID, int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7b40
	void GMServerSpawnInLocation(struct FString AiName, struct FVector Location); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnInLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63d7a20
	void GMServerSpawnDFMCharacterInLocation(struct FString CharacterID, struct FString BagId, struct FString ChestId, struct FString VestID, struct FString WeaponID1, struct FString WeaponID2, struct FVector Location); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnDFMCharacterInLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x63d76a0
	void GMServerSpawnBot(struct FString botName, struct FString Args, bool TPToStart); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnBot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7520
	void GMServerSpawnBossSquad(); // Function DFMGameplay.PlayerGMComponent.GMServerSpawnBossSquad // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x36ca4d0
	void GMServerSimulateOpenBox(int32_t Times); // Function DFMGameplay.PlayerGMComponent.GMServerSimulateOpenBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7490
	void GMServerSettlement(char MatchOverReason); // Function DFMGameplay.PlayerGMComponent.GMServerSettlement // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7410
	void GMServerSetStamina(float StaminaValue); // Function DFMGameplay.PlayerGMComponent.GMServerSetStamina // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63d7390
	void GMServerSetSOLTimelineConfig(bool Enable, int32_t Interval); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLTimelineConfig // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d72c0
	void GMServerSetSOLShellingConfig(bool Enable, int32_t AreaNumLimit, int32_t ShellNumPerZone); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLShellingConfig // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d71c0
	void GMServerSetSOLParatrooperRealNumLimit(int32_t TotalNum, int32_t NumPerZone); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLParatrooperRealNumLimit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7100
	void GMServerSetSOLParatrooperFakeNumLimit(int32_t TotalNum, int32_t NumPerZone); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLParatrooperFakeNumLimit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d7040
	void GMServerSetSOLParatrooperEnable(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLParatrooperEnable // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6fb0
	void GMServerSetSOLIntroEventState(struct FString EventIdsStr); // Function DFMGameplay.PlayerGMComponent.GMServerSetSOLIntroEventState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6ee0
	void GMServerSetReplicationVolumeEnableGlobal(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMServerSetReplicationVolumeEnableGlobal // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6e50
	void GMServerSetReplicationVolumeEnableConnection(bool Enable); // Function DFMGameplay.PlayerGMComponent.GMServerSetReplicationVolumeEnableConnection // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6dc0
	void GMServerSetRecycleTime(int32_t InRecycleTime); // Function DFMGameplay.PlayerGMComponent.GMServerSetRecycleTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6d30
	void GMServerSetMatchTime(int32_t MatchTime); // Function DFMGameplay.PlayerGMComponent.GMServerSetMatchTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6ca0
	void GMServerSetMapLevel(int32_t MapLevel); // Function DFMGameplay.PlayerGMComponent.GMServerSetMapLevel // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6c10
	void STATIC_GMServerSetGameAIDifficultyStatic(struct UObject* Context, int32_t AILevel); // Function DFMGameplay.PlayerGMComponent.GMServerSetGameAIDifficultyStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63d6b60
	void GMServerSetGameAIDifficulty(int32_t AILevel); // Function DFMGameplay.PlayerGMComponent.GMServerSetGameAIDifficulty // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6ad0
	void GMServerSetDecipherTime(int32_t InDecipherTime); // Function DFMGameplay.PlayerGMComponent.GMServerSetDecipherTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6a40
	void GMServerSetDeadBoxType(int32_t DeadBoxType); // Function DFMGameplay.PlayerGMComponent.GMServerSetDeadBoxType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d69b0
	void GMServerSetCloseAIHint(bool Value); // Function DFMGameplay.PlayerGMComponent.GMServerSetCloseAIHint // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6920
	void GMServerSetBoxMeshType(int32_t MeshType); // Function DFMGameplay.PlayerGMComponent.GMServerSetBoxMeshType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6890
	void GMServerRestartAISpawners(); // Function DFMGameplay.PlayerGMComponent.GMServerRestartAISpawners // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6870
	void GMServerResetExitTrigger(); // Function DFMGameplay.PlayerGMComponent.GMServerResetExitTrigger // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x174fe70
	void GMServerResetAISpawnTemplate(struct FString TemplateName, int32_t ActivityID); // Function DFMGameplay.PlayerGMComponent.GMServerResetAISpawnTemplate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6760
	void GMServerRemoveQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMServerRemoveQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d66d0
	void GMServerRefreshGenerator(int32_t SpawnID); // Function DFMGameplay.PlayerGMComponent.GMServerRefreshGenerator // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6640
	void GMServerReducePlayerExitEscapeCount(int32_t ReduceEscapeCount); // Function DFMGameplay.PlayerGMComponent.GMServerReducePlayerExitEscapeCount // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4159c90
	void GMServerReducePlayerExitCountDownTime(float ReduceCountDownTime); // Function DFMGameplay.PlayerGMComponent.GMServerReducePlayerExitCountDownTime // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d65c0
	void GMServerPrintWorldActor(); // Function DFMGameplay.PlayerGMComponent.GMServerPrintWorldActor // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbcb8c0
	void GMServerOpenAllDoor(); // Function DFMGameplay.PlayerGMComponent.GMServerOpenAllDoor // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d65a0
	void GMServerMPResetDifficultPool(struct FString StrDifficulty); // Function DFMGameplay.PlayerGMComponent.GMServerMPResetDifficultPool // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d64d0
	void GMServerMPResetDifficultName(struct FString StrDifficulty); // Function DFMGameplay.PlayerGMComponent.GMServerMPResetDifficultName // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6400
	void GMServerMPFulfullAI(int32_t MaxCountPerSide); // Function DFMGameplay.PlayerGMComponent.GMServerMPFulfullAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6370
	void GMServerMPFRemoveAllAI(); // Function DFMGameplay.PlayerGMComponent.GMServerMPFRemoveAllAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6350
	void GMServerKillAI(float diatance); // Function DFMGameplay.PlayerGMComponent.GMServerKillAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d62d0
	void GMServerHackSOLTrain(); // Function DFMGameplay.PlayerGMComponent.GMServerHackSOLTrain // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3664730
	void GMServerGMSetAllAIInFront(); // Function DFMGameplay.PlayerGMComponent.GMServerGMSetAllAIInFront // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35d45c0
	void GMServerGetOverLoadEquipment(int32_t OverLoadType); // Function DFMGameplay.PlayerGMComponent.GMServerGetOverLoadEquipment // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6240
	void GMServerGetAiDifficultyInfo(float Distance); // Function DFMGameplay.PlayerGMComponent.GMServerGetAiDifficultyInfo // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63d61c0
	void GMServerForceSOLMajorEvent(); // Function DFMGameplay.PlayerGMComponent.GMServerForceSOLMajorEvent // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d61a0
	void GMServerForceSOLEvacuationEvent(); // Function DFMGameplay.PlayerGMComponent.GMServerForceSOLEvacuationEvent // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6180
	void GMServerFinishQuest(int64_t QuestID, int64_t QuestObjectId); // Function DFMGameplay.PlayerGMComponent.GMServerFinishQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d60b0
	void GMServerExportPxScene(); // Function DFMGameplay.PlayerGMComponent.GMServerExportPxScene // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xc37770
	void GMServerDestroyCharacter(); // Function DFMGameplay.PlayerGMComponent.GMServerDestroyCharacter // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d6090
	void GMServerDesSingleItemBreak(struct FString ObjectPath, int32_t PartIndex); // Function DFMGameplay.PlayerGMComponent.GMServerDesSingleItemBreak // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5f80
	void GMServerDesRemoveCraterMeshes(struct FName SectorID); // Function DFMGameplay.PlayerGMComponent.GMServerDesRemoveCraterMeshes // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x631d3f0
	void GMServerCommand(struct FString Cmd); // Function DFMGameplay.PlayerGMComponent.GMServerCommand // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d5ec0
	void GMServerCloseVehicleCollision(); // Function DFMGameplay.PlayerGMComponent.GMServerCloseVehicleCollision // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4077970
	void GMServerChangeTODType(int64_t WeatherID); // Function DFMGameplay.PlayerGMComponent.GMServerChangeTODType // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5e30
	void GMServerCancelNewContractQuest(); // Function DFMGameplay.PlayerGMComponent.GMServerCancelNewContractQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35d3010
	void GMServerBreakableRecoveryAll(); // Function DFMGameplay.PlayerGMComponent.GMServerBreakableRecoveryAll // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5e10
	void GMServerBreakableItemSetHugeDamage(bool IsOpen); // Function DFMGameplay.PlayerGMComponent.GMServerBreakableItemSetHugeDamage // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5d80
	void GMServerBreakableBreakAll(); // Function DFMGameplay.PlayerGMComponent.GMServerBreakableBreakAll // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5d60
	void GMServerBPDisableDelay(); // Function DFMGameplay.PlayerGMComponent.GMServerBPDisableDelay // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5bb0
	void GMServerBattleFieldEndMatchCamp(int32_t Camp); // Function DFMGameplay.PlayerGMComponent.GMServerBattleFieldEndMatchCamp // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5cd0
	void GMServerBattleFieldEndMatch(); // Function DFMGameplay.PlayerGMComponent.GMServerBattleFieldEndMatch // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5cb0
	void GMServerBattleFieldCampScoreTrigger(int32_t Camp, int32_t Score); // Function DFMGameplay.PlayerGMComponent.GMServerBattleFieldCampScoreTrigger // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5bf0
	void GMServerBanNearestPlayer(); // Function DFMGameplay.PlayerGMComponent.GMServerBanNearestPlayer // (Final|Exec|Native|Public) // @ game+0x63d5bd0
	void GMServerAiClosestSpeak(int32_t SpeakId); // Function DFMGameplay.PlayerGMComponent.GMServerAiClosestSpeak // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5b20
	void GMServerAiClosestGroupVoice(struct FName Voice); // Function DFMGameplay.PlayerGMComponent.GMServerAiClosestGroupVoice // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3662ca0
	void GMServerAddHelicopterRange(int32_t IconIndex, float Range, bool Active); // Function DFMGameplay.PlayerGMComponent.GMServerAddHelicopterRange // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5a20
	void GMServerAddAI2LocalTeam(int32_t LocalCampID, int32_t LocalTeamID); // Function DFMGameplay.PlayerGMComponent.GMServerAddAI2LocalTeam // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5960
	void GMServerAcceptNewQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMServerAcceptNewQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d58d0
	void GMServerAcceptNewContractQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMServerAcceptNewContractQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5840
	void GMSendEvent_Server(int32_t ModeId, struct FString Tag); // Function DFMGameplay.PlayerGMComponent.GMSendEvent_Server // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d5740
	void GMSendEvent(int32_t ModeId, struct FString Tag); // Function DFMGameplay.PlayerGMComponent.GMSendEvent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d55e0
	void GMRestartAISpawners(); // Function DFMGameplay.PlayerGMComponent.GMRestartAISpawners // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d55a0
	void GMResetPlayerState(); // Function DFMGameplay.PlayerGMComponent.GMResetPlayerState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x364e510
	void GMResetHUD(); // Function DFMGameplay.PlayerGMComponent.GMResetHUD // (Final|Exec|Native|Public) // @ game+0x63d5580
	void GMResetExitTrigger(); // Function DFMGameplay.PlayerGMComponent.GMResetExitTrigger // (Final|Exec|Native|Public) // @ game+0x63d5560
	void GMResetAISpawnTemplate(struct FString TemplateName, int32_t ActivityID); // Function DFMGameplay.PlayerGMComponent.GMResetAISpawnTemplate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d5460
	void GMReset(); // Function DFMGameplay.PlayerGMComponent.GMReset // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x361d940
	void GmRequestWeaponContexts(); // Function DFMGameplay.PlayerGMComponent.GmRequestWeaponContexts // (Final|Exec|Native|Public) // @ game+0x63dd880
	void GMRequestSubtitleSequence(struct FName& SubtitleSeqId, enum class ESubtitleSequenceType SubtitleSeqType); // Function DFMGameplay.PlayerGMComponent.GMRequestSubtitleSequence // (Final|Exec|Native|Public|HasOutParms) // @ game+0x63d5390
	void GMRemoveQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMRemoveQuest // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d5310
	void GMRemoveHudState(char InHudState); // Function DFMGameplay.PlayerGMComponent.GMRemoveHudState // (Final|Exec|Native|Public) // @ game+0x63d5290
	void GMRefreshGenerator(int32_t SpawnID); // Function DFMGameplay.PlayerGMComponent.GMRefreshGenerator // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d5210
	void GMReducePlayerExitEscapeCount(int32_t ReduceEscapeCount); // Function DFMGameplay.PlayerGMComponent.GMReducePlayerExitEscapeCount // (Final|Exec|Native|Public) // @ game+0x63d5190
	void GMReducePlayerExitCountDownTime(float ReduceCountDownTime); // Function DFMGameplay.PlayerGMComponent.GMReducePlayerExitCountDownTime // (Final|Exec|Native|Public) // @ game+0x63d5110
	void GMPseudoSeamlessEntryStart(struct FString MapName, int32_t TeamStartId, int32_t extra); // Function DFMGameplay.PlayerGMComponent.GMPseudoSeamlessEntryStart // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4f80
	void GMPrintWeaponStateHistory(); // Function DFMGameplay.PlayerGMComponent.GMPrintWeaponStateHistory // (Final|Exec|Native|Public) // @ game+0x63d4f60
	void GMPrintInteractOutlineLaziedInfo(); // Function DFMGameplay.PlayerGMComponent.GMPrintInteractOutlineLaziedInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4f40
	void GMPrintEnums(struct FString EnumName); // Function DFMGameplay.PlayerGMComponent.GMPrintEnums // (Final|Exec|Native|Public) // @ game+0x63d4e20
	void GMPlayMontage(struct FString AnimPath, struct FString AnimationPlayTypes); // Function DFMGameplay.PlayerGMComponent.GMPlayMontage // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4ce0
	void GMPlayHitEffect(int32_t EventType); // Function DFMGameplay.PlayerGMComponent.GMPlayHitEffect // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4c60
	void GMPlayCurrentExitCutScene(); // Function DFMGameplay.PlayerGMComponent.GMPlayCurrentExitCutScene // (Final|Exec|Native|Public) // @ game+0x63d4c40
	void GMPlayCameraHitEffect(int64_t FinalBeHitCameraMoveId, float DamageVale, float animTime, float CameraMoveScale); // Function DFMGameplay.PlayerGMComponent.GMPlayCameraHitEffect // (Final|Exec|Native|Public) // @ game+0x63d4af0
	void GMPerspective(bool IsOpen); // Function DFMGameplay.PlayerGMComponent.GMPerspective // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4a60
	void GMPCTestClientBreakableRecoveryAll(); // Function DFMGameplay.PlayerGMComponent.GMPCTestClientBreakableRecoveryAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4a40
	void GMOpenInteractSystemDetailLog(); // Function DFMGameplay.PlayerGMComponent.GMOpenInteractSystemDetailLog // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4a20
	void GMOpenInteractComponentTick(bool InbOpen); // Function DFMGameplay.PlayerGMComponent.GMOpenInteractComponentTick // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4990
	void GMOpenDSInteractSystemDetailLog(); // Function DFMGameplay.PlayerGMComponent.GMOpenDSInteractSystemDetailLog // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4970
	void GMOpenAllDoor(); // Function DFMGameplay.PlayerGMComponent.GMOpenAllDoor // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4950
	void GMOpenAILabDebugPanel(int32_t Mode, int64_t Uin); // Function DFMGameplay.PlayerGMComponent.GMOpenAILabDebugPanel // (Net|Native|Event|Public|NetServer|BlueprintCallable) // @ game+0x63d4880
	void GMOnServerTeamInfoSetPlayerGamePlayState(struct ADFMPlayerState* InPlayerState, int32_t InPlayerGamePlayState); // Function DFMGameplay.PlayerGMComponent.GMOnServerTeamInfoSetPlayerGamePlayState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d47b0
	void GMNotAllowFourFingersConsole(); // Function DFMGameplay.PlayerGMComponent.GMNotAllowFourFingersConsole // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4790
	void GMMPResetDifficultPool(struct FString StrDifficulty); // Function DFMGameplay.PlayerGMComponent.GMMPResetDifficultPool // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4310
	void GMMPResetDifficultName(struct FString StrDifficulty); // Function DFMGameplay.PlayerGMComponent.GMMPResetDifficultName // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4250
	void GMMPRemoveAllAI(); // Function DFMGameplay.PlayerGMComponent.GMMPRemoveAllAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4230
	void GMMPFulfillAI(int32_t MaxCountPerSide); // Function DFMGameplay.PlayerGMComponent.GMMPFulfillAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d41b0
	void GMModifySkillCD(int32_t Index, float Speed); // Function DFMGameplay.PlayerGMComponent.GMModifySkillCD // (Final|Exec|Native|Public) // @ game+0x63d46d0
	void GMModifyAmmoToCurrent(int32_t Val); // Function DFMGameplay.PlayerGMComponent.GMModifyAmmoToCurrent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4650
	void GMModifyAmmoToAll(int32_t Val); // Function DFMGameplay.PlayerGMComponent.GMModifyAmmoToAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d45d0
	void GMMissionRewards(int64_t InventoryId); // Function DFMGameplay.PlayerGMComponent.GMMissionRewards // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4550
	void GMMissionInitServer(); // Function DFMGameplay.PlayerGMComponent.GMMissionInitServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d4530
	void GMMissionInit(); // Function DFMGameplay.PlayerGMComponent.GMMissionInit // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4510
	void GMMiniMapIndicate(int32_t NewType); // Function DFMGameplay.PlayerGMComponent.GMMiniMapIndicate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4490
	void GMMarkerDebug(); // Function DFMGameplay.PlayerGMComponent.GMMarkerDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d4470
	void GMMallocMemory(int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMMallocMemory // (Final|Exec|Native|Public) // @ game+0x63d43f0
	void GMMakeAllIntoAILabAI(); // Function DFMGameplay.PlayerGMComponent.GMMakeAllIntoAILabAI // (Final|Exec|Native|Public) // @ game+0x63d43d0
	void GMLockCamToWeapon2(int32_t bEnable, float Pitch, float Yaw, float Scale); // Function DFMGameplay.PlayerGMComponent.GMLockCamToWeapon2 // (Final|Exec|Native|Public) // @ game+0x63d3fa0
	void GMLockCamToWeapon(int32_t bEnable, bool bLeft); // Function DFMGameplay.PlayerGMComponent.GMLockCamToWeapon // (Final|Exec|Native|Public) // @ game+0x63d40f0
	void GMLocalCloseGlitch(bool bClose); // Function DFMGameplay.PlayerGMComponent.GMLocalCloseGlitch // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3f10
	void GMLocalAcceptMission(int32_t missionid); // Function DFMGameplay.PlayerGMComponent.GMLocalAcceptMission // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3e90
	void GMLoadQuest(int32_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMLoadQuest // (Final|Exec|Native|Public) // @ game+0x63d3e10
	void GMLeftWeaponStartFire(); // Function DFMGameplay.PlayerGMComponent.GMLeftWeaponStartFire // (Final|Exec|Native|Public) // @ game+0x63d3df0
	void GMLeftWeaponEndFire(); // Function DFMGameplay.PlayerGMComponent.GMLeftWeaponEndFire // (Final|Exec|Native|Public) // @ game+0x63d3dd0
	void GMLandingTest(struct FVector2D LeftUp, struct FVector2D RightUp, struct FVector2D LeftDown); // Function DFMGameplay.PlayerGMComponent.GMLandingTest // (Final|Exec|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63d3ce0
	void GMKnowBack(struct FVector LocalPos); // Function DFMGameplay.PlayerGMComponent.GMKnowBack // (Final|Exec|Native|Public|HasDefaults) // @ game+0x63d3c50
	void GMKillMeNoImPendingDeath(); // Function DFMGameplay.PlayerGMComponent.GMKillMeNoImPendingDeath // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x361d900
	void GMKillMe(); // Function DFMGameplay.PlayerGMComponent.GMKillMe // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x361d920
	void GMKillAI(float diatance); // Function DFMGameplay.PlayerGMComponent.GMKillAI // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3bd0
	void GMJPSTrace(float Sx, float Sy, float Sz, float Ex, float Ey, float Ez); // Function DFMGameplay.PlayerGMComponent.GMJPSTrace // (Final|Exec|Native|Public) // @ game+0x63d39f0
	void GMHurtMeBodyPart(int32_t BodyPart, int32_t HurtHealthNum); // Function DFMGameplay.PlayerGMComponent.GMHurtMeBodyPart // (Final|Exec|Native|Public) // @ game+0x63d3930
	void GMHideSocket(struct FName SocketName); // Function DFMGameplay.PlayerGMComponent.GMHideSocket // (Final|Exec|Native|Public) // @ game+0x63d38b0
	void GMHideMySelfFromOthers(bool bHide); // Function DFMGameplay.PlayerGMComponent.GMHideMySelfFromOthers // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3750
	void GMHideMyself(bool bHide, bool bMuteWhenHide); // Function DFMGameplay.PlayerGMComponent.GMHideMyself // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d37e0
	void GMHideMission(); // Function DFMGameplay.PlayerGMComponent.GMHideMission // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3730
	void GMHasEnoughSpaceToAddAmmo(bool bServer, uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.GMHasEnoughSpaceToAddAmmo // (Final|Exec|Native|Public) // @ game+0x63d3670
	void GMHackSOLTrain(); // Function DFMGameplay.PlayerGMComponent.GMHackSOLTrain // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3650
	void GmGunSwayHit(float CameraSwayHitScale, float GunSwayHitScale); // Function DFMGameplay.PlayerGMComponent.GmGunSwayHit // (Final|Exec|Native|Public) // @ game+0x63dd7c0
	void GmGunSway(int32_t GSOperation, float DirX, float DirY); // Function DFMGameplay.PlayerGMComponent.GmGunSway // (Final|Exec|Native|Public) // @ game+0x63dd6c0
	void GMGuideUseFrontEndUI(int32_t UIType, int32_t Param1, int32_t Param2, int32_t Param3); // Function DFMGameplay.PlayerGMComponent.GMGuideUseFrontEndUI // (Final|Exec|Native|Public) // @ game+0x63d3510
	void GMGuideUseFrontEndClickUI(int32_t ClickId, int32_t ClickType); // Function DFMGameplay.PlayerGMComponent.GMGuideUseFrontEndClickUI // (Final|Exec|Native|Public) // @ game+0x63d3450
	void GMGuideStartOneStep(int32_t GuideStepId); // Function DFMGameplay.PlayerGMComponent.GMGuideStartOneStep // (Final|Exec|Native|Public) // @ game+0x63d33d0
	void GMGuideInGameTrigger(int32_t EventId); // Function DFMGameplay.PlayerGMComponent.GMGuideInGameTrigger // (Final|Exec|Native|Public) // @ game+0x63d3350
	void GMGuideCloseFrontEndUI(int32_t UIType, int32_t Param1, int32_t Param2, int32_t Param3); // Function DFMGameplay.PlayerGMComponent.GMGuideCloseFrontEndUI // (Final|Exec|Native|Public) // @ game+0x63d3210
	void GMGuideCloseFrontEndClickUI(); // Function DFMGameplay.PlayerGMComponent.GMGuideCloseFrontEndClickUI // (Final|Exec|Native|Public) // @ game+0x63d31f0
	void GMGotoObjective(int32_t obojectiveid); // Function DFMGameplay.PlayerGMComponent.GMGotoObjective // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3170
	void GMGotoMissionObjective(int32_t missionid, int32_t obojectiveid); // Function DFMGameplay.PlayerGMComponent.GMGotoMissionObjective // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d30b0
	void GMGotoMark(); // Function DFMGameplay.PlayerGMComponent.GMGotoMark // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d3090
	void GMGoto2D(struct FVector2D Location); // Function DFMGameplay.PlayerGMComponent.GMGoto2D // (Final|Exec|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63d2f40
	void GMGoto(struct FVector Location, float Delay); // Function DFMGameplay.PlayerGMComponent.GMGoto // (Final|Exec|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63d2fc0
	void GMGodDamage(bool bEnable); // Function DFMGameplay.PlayerGMComponent.GMGodDamage // (Final|Exec|Native|Public) // @ game+0x63d2eb0
	void GmGiveWeaponFromStr(struct FString str); // Function DFMGameplay.PlayerGMComponent.GmGiveWeaponFromStr // (Final|Exec|Native|Public) // @ game+0x63dd5a0
	void GMGiveWeaponByDesc(struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.PlayerGMComponent.GMGiveWeaponByDesc // (Final|Exec|Native|Public) // @ game+0x63d2e30
	void GMGiveWeapon(uint64_t PresetId, struct TArray<uint64_t> Items); // Function DFMGameplay.PlayerGMComponent.GMGiveWeapon // (Final|Exec|Native|Public) // @ game+0x63d2cd0
	void GMGiveInfinityCarriedAmmoToCurrent(); // Function DFMGameplay.PlayerGMComponent.GMGiveInfinityCarriedAmmoToCurrent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2cb0
	void GMGiveCurrency(float InValue, int64_t FakeQuestId); // Function DFMGameplay.PlayerGMComponent.GMGiveCurrency // (Final|Exec|Native|Public) // @ game+0x63d2be0
	int32_t GMGetSOLTimelineEventID(); // Function DFMGameplay.PlayerGMComponent.GMGetSOLTimelineEventID // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2bb0
	void GMGetOverLoadEquipment(int32_t OverLoadType); // Function DFMGameplay.PlayerGMComponent.GMGetOverLoadEquipment // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2b30
	void GMGetCurrentFirstWeaponItemID(bool bServer); // Function DFMGameplay.PlayerGMComponent.GMGetCurrentFirstWeaponItemID // (Final|Exec|Native|Public) // @ game+0x63d2aa0
	void GMGetAiDifficultyInfo(float Distance); // Function DFMGameplay.PlayerGMComponent.GMGetAiDifficultyInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2a20
	void GMForceTeamDamage(bool bForce); // Function DFMGameplay.PlayerGMComponent.GMForceTeamDamage // (Final|Exec|Native|Public) // @ game+0x63d2990
	void GMForceSOLMajorEvent(); // Function DFMGameplay.PlayerGMComponent.GMForceSOLMajorEvent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2970
	void GMForceSOLEvacuationEvent(); // Function DFMGameplay.PlayerGMComponent.GMForceSOLEvacuationEvent // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2950
	void GMForceFinishMission(int32_t missionid); // Function DFMGameplay.PlayerGMComponent.GMForceFinishMission // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d28d0
	void GMForceCheckGuideItem(bool bForceCheckGuideItem); // Function DFMGameplay.PlayerGMComponent.GMForceCheckGuideItem // (Final|Exec|Native|Public) // @ game+0x63d2840
	void GMFirePriorityNum(int32_t P0Num, int32_t P1Num); // Function DFMGameplay.PlayerGMComponent.GMFirePriorityNum // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2780
	void GMFireForAI(); // Function DFMGameplay.PlayerGMComponent.GMFireForAI // (Final|Exec|Native|Public) // @ game+0x63d2760
	void GMFinishQuest(int64_t QuestID, int64_t QuestObjectId); // Function DFMGameplay.PlayerGMComponent.GMFinishQuest // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d26a0
	void GMFinishCurrentStage(); // Function DFMGameplay.PlayerGMComponent.GMFinishCurrentStage // (Final|Exec|Native|Public) // @ game+0x63d2680
	void GMExplosionBeHitCamera(int32_t ExplosionId); // Function DFMGameplay.PlayerGMComponent.GMExplosionBeHitCamera // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2600
	void GMEquipPerk(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.GMEquipPerk // (Final|Exec|Native|Public) // @ game+0x63d2580
	void GMEquipLeftWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.GMEquipLeftWeapon // (Final|Exec|Native|Public) // @ game+0x63d2500
	void GMEnterRaidWorld(); // Function DFMGameplay.PlayerGMComponent.GMEnterRaidWorld // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d24e0
	void GMEnterOpenWorld(); // Function DFMGameplay.PlayerGMComponent.GMEnterOpenWorld // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d24c0
	void GMEnableMpSolMode(bool RespawnSamePos); // Function DFMGameplay.PlayerGMComponent.GMEnableMpSolMode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2430
	void GMEnableMissionReplay(); // Function DFMGameplay.PlayerGMComponent.GMEnableMissionReplay // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2410
	void GMEnableMission(bool B); // Function DFMGameplay.PlayerGMComponent.GMEnableMission // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d2380
	void GMEnableFriendDamage(bool bEnable); // Function DFMGameplay.PlayerGMComponent.GMEnableFriendDamage // (Final|Exec|Native|Public) // @ game+0x63d22f0
	void GMDumpHudState(); // Function DFMGameplay.PlayerGMComponent.GMDumpHudState // (Final|Exec|Native|Public) // @ game+0x63d22d0
	void GMDSUseClientPosToCheckBlock(bool InbUse); // Function DFMGameplay.PlayerGMComponent.GMDSUseClientPosToCheckBlock // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1c80
	void GMDSBanPlayer(uint64_t PlayerUin); // Function DFMGameplay.PlayerGMComponent.GMDSBanPlayer // (Final|Exec|Native|Public) // @ game+0x63d1c00
	void GMDrawSphere(float X, float Y, float Z, float radius); // Function DFMGameplay.PlayerGMComponent.GMDrawSphere // (Final|Exec|Native|Public) // @ game+0x63d2180
	void GMDetoruTest(float Distance); // Function DFMGameplay.PlayerGMComponent.GMDetoruTest // (Final|Exec|Native|Public) // @ game+0x63d2100
	void GMDetoruFindPath(float ForwardDistance, int32_t Unit); // Function DFMGameplay.PlayerGMComponent.GMDetoruFindPath // (Final|Exec|Native|Public) // @ game+0x63d2030
	void GMDestroyCharacter(); // Function DFMGameplay.PlayerGMComponent.GMDestroyCharacter // (Final|Exec|Native|Public) // @ game+0x63d2010
	void GMDesSingleItemBreak(struct FString ObjectPath, int32_t PartIndex); // Function DFMGameplay.PlayerGMComponent.GMDesSingleItemBreak // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1eb0
	void GMDesRemoveCraterMeshes(struct FName SectorID); // Function DFMGameplay.PlayerGMComponent.GMDesRemoveCraterMeshes // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1e30
	void GMDebugInfo(int32_t ShowType); // Function DFMGameplay.PlayerGMComponent.GMDebugInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1db0
	void GMDebugAILabRot(int32_t Open); // Function DFMGameplay.PlayerGMComponent.GMDebugAILabRot // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1d30
	void GMDamageView(); // Function DFMGameplay.PlayerGMComponent.GMDamageView // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1d10
	void GMCopyWeapon(); // Function DFMGameplay.PlayerGMComponent.GMCopyWeapon // (Final|Exec|Native|Public) // @ game+0x63d1be0
	void GMControlAILab(bool Open, int64_t Uin); // Function DFMGameplay.PlayerGMComponent.GMControlAILab // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1b20
	void GMConsumeCurrency(float ConsumeValue); // Function DFMGameplay.PlayerGMComponent.GMConsumeCurrency // (Final|Exec|Native|Public) // @ game+0x63d1aa0
	void GMCloseVehicleCollision(); // Function DFMGameplay.PlayerGMComponent.GMCloseVehicleCollision // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1a80
	void GMClientReceiveLocation(struct FVector Loc); // Function DFMGameplay.PlayerGMComponent.GMClientReceiveLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63d19f0
	void GMClientDrawNavEnd(int32_t timems); // Function DFMGameplay.PlayerGMComponent.GMClientDrawNavEnd // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63d1960
	void GMClientDrawNavBegin(int32_t timems); // Function DFMGameplay.PlayerGMComponent.GMClientDrawNavBegin // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1d211d0
	void GMClientDrawNav(struct TArray<struct FVector> Verts, struct TArray<int32_t> nverts, struct TArray<struct FVector> centers, struct TArray<int32_t> Regions); // Function DFMGameplay.PlayerGMComponent.GMClientDrawNav // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63d1730
	void GMClientDrawFoliageEnd(int32_t timems); // Function DFMGameplay.PlayerGMComponent.GMClientDrawFoliageEnd // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63d16a0
	void GMClientDrawFoliageBegin(int32_t timems); // Function DFMGameplay.PlayerGMComponent.GMClientDrawFoliageBegin // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63d1610
	void GMClientDrawFoliage(struct TArray<struct FIntVector> Voxels, struct FVector SVOOrigin, float SVOSize); // Function DFMGameplay.PlayerGMComponent.GMClientDrawFoliage // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63d14c0
	void GMClientBreakableRecoveryAll(); // Function DFMGameplay.PlayerGMComponent.GMClientBreakableRecoveryAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d14a0
	void GMClearWeaponHiddenTag(); // Function DFMGameplay.PlayerGMComponent.GMClearWeaponHiddenTag // (Final|Exec|Native|Public) // @ game+0x63d1480
	void GMChanneInfo(int32_t ChannelIndex); // Function DFMGameplay.PlayerGMComponent.GMChanneInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1400
	void GMChangeVehicleSkin(uint64_t SkinId); // Function DFMGameplay.PlayerGMComponent.GMChangeVehicleSkin // (Final|Exec|Native|Public) // @ game+0x63d1380
	void GMChangeTODType(int64_t WeatherID); // Function DFMGameplay.PlayerGMComponent.GMChangeTODType // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1300
	void GMChangeSol2Mp(bool ChangeOrRevert, bool RespawnSamePos); // Function DFMGameplay.PlayerGMComponent.GMChangeSol2Mp // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d1230
	void GMChangeSkillCD(int32_t Index, float Speed); // Function DFMGameplay.PlayerGMComponent.GMChangeSkillCD // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d1160
	void GMChangeMPItem(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.GMChangeMPItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63d10d0
	void GMChangeBreakableItemMatrial(); // Function DFMGameplay.PlayerGMComponent.GMChangeBreakableItemMatrial // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d10b0
	void GMCancelContract(); // Function DFMGameplay.PlayerGMComponent.GMCancelContract // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1090
	void GMBreakthrougShowLodDebug(); // Function DFMGameplay.PlayerGMComponent.GMBreakthrougShowLodDebug // (Final|Exec|Native|Public) // @ game+0x63d1070
	void GMBreakableRecoveryAll(); // Function DFMGameplay.PlayerGMComponent.GMBreakableRecoveryAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d1050
	void GMBreakableItemSetHugeDamage(int32_t IsOpen); // Function DFMGameplay.PlayerGMComponent.GMBreakableItemSetHugeDamage // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0fd0
	void GMBreakableBreakAll(); // Function DFMGameplay.PlayerGMComponent.GMBreakableBreakAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0fb0
	void GMBPDisableDelay(); // Function DFMGameplay.PlayerGMComponent.GMBPDisableDelay // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0e30
	void GMBattleFieldEndMatchCamp(int32_t Camp); // Function DFMGameplay.PlayerGMComponent.GMBattleFieldEndMatchCamp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0f30
	void GMBattleFieldEndMatch(); // Function DFMGameplay.PlayerGMComponent.GMBattleFieldEndMatch // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0f10
	void GMBattleFieldCampScoreTrigger(int32_t Camp, int32_t Score); // Function DFMGameplay.PlayerGMComponent.GMBattleFieldCampScoreTrigger // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0e50
	void GmAutoFire(bool bEnable, int32_t FireTimes); // Function DFMGameplay.PlayerGMComponent.GmAutoFire // (Final|Exec|Native|Public) // @ game+0x63dd4e0
	void GMAttachPendant(uint64_t PendantItemId); // Function DFMGameplay.PlayerGMComponent.GMAttachPendant // (Final|Exec|Native|Public) // @ game+0x63d0db0
	void GMAllowFourFingersConsole(); // Function DFMGameplay.PlayerGMComponent.GMAllowFourFingersConsole // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0d90
	void GMAILabDumpPBItemInfo(int32_t Type); // Function DFMGameplay.PlayerGMComponent.GMAILabDumpPBItemInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d04d0
	void GMAIInfoView(); // Function DFMGameplay.PlayerGMComponent.GMAIInfoView // (Final|Exec|Native|Public) // @ game+0x63d04b0
	void GMAIGiveWeapon(uint64_t WeaponID); // Function DFMGameplay.PlayerGMComponent.GMAIGiveWeapon // (Final|Exec|Native|Public) // @ game+0x63d0430
	void GMAiClosestSpeak(int32_t SpeakId); // Function DFMGameplay.PlayerGMComponent.GMAiClosestSpeak // (Final|Exec|Native|Public) // @ game+0x63d0d10
	void GMAiClosestGroupVoice(struct FName Voice); // Function DFMGameplay.PlayerGMComponent.GMAiClosestGroupVoice // (Final|Exec|Native|Public) // @ game+0x63d0c90
	void GMAddWishItem(struct FName ItemID); // Function DFMGameplay.PlayerGMComponent.GMAddWishItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0c10
	void GMAddVehiclePartInfo(uint64_t PartId); // Function DFMGameplay.PlayerGMComponent.GMAddVehiclePartInfo // (Final|Exec|Native|Public) // @ game+0x63d0b90
	void GMAddTA(); // Function DFMGameplay.PlayerGMComponent.GMAddTA // (Final|Exec|Native|Public) // @ game+0x63d0b70
	void GMAddSlotWeapon(uint64_t PresetId, int32_t Slot); // Function DFMGameplay.PlayerGMComponent.GMAddSlotWeapon // (Final|Exec|Native|Public) // @ game+0x63d0ab0
	void GMAddMerit(float Merit); // Function DFMGameplay.PlayerGMComponent.GMAddMerit // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0a30
	void GMAddHudState(char InHudState); // Function DFMGameplay.PlayerGMComponent.GMAddHudState // (Final|Exec|Native|Public) // @ game+0x63d09b0
	void GMAddHelicopterRange(int32_t IconIndex, float Range, bool Active); // Function DFMGameplay.PlayerGMComponent.GMAddHelicopterRange // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d08b0
	void GMAddAndUseAbilityItem(uint64_t ItemID); // Function DFMGameplay.PlayerGMComponent.GMAddAndUseAbilityItem // (Final|Exec|Native|Public) // @ game+0x63d0830
	void GMAddAmmoToInventoryManager(uint64_t ItemID, int32_t Num); // Function DFMGameplay.PlayerGMComponent.GMAddAmmoToInventoryManager // (Final|Exec|Native|Public) // @ game+0x63d0770
	void GMAddAI2LocalTeam(); // Function DFMGameplay.PlayerGMComponent.GMAddAI2LocalTeam // (Final|Exec|Native|Public) // @ game+0x63d0750
	void GMAcceptNewQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMAcceptNewQuest // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d06d0
	void GMAcceptNewContractQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.GMAcceptNewContractQuest // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0650
	void GMAcceptMission(int32_t missionid); // Function DFMGameplay.PlayerGMComponent.GMAcceptMission // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d05d0
	void GMAcceptActivity(int64_t GoalID); // Function DFMGameplay.PlayerGMComponent.GMAcceptActivity // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0550
	void GM_HurtMe(float InHurtValue, float InImpendingDeathHurtValue); // Function DFMGameplay.PlayerGMComponent.GM_HurtMe // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dcf30
	void GM_AddSpeed(float AddedValue); // Function DFMGameplay.PlayerGMComponent.GM_AddSpeed // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dceb0
	void GM_AddHP(float AddedValue); // Function DFMGameplay.PlayerGMComponent.GM_AddHP // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63dce30
	void GM3PCarryInfo(); // Function DFMGameplay.PlayerGMComponent.GM3PCarryInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0410
	void GiveSelfAbility(); // Function DFMGameplay.PlayerGMComponent.GiveSelfAbility // (Final|Exec|Native|Public) // @ game+0x63dd4c0
	void GiveResetSlot(); // Function DFMGameplay.PlayerGMComponent.GiveResetSlot // (Final|Exec|Native|Public) // @ game+0x63dd4a0
	void GiveItem(uint64_t ItemID, int32_t Num, enum class EAttachPosition AttachPos, int32_t BindType); // Function DFMGameplay.PlayerGMComponent.GiveItem // (Final|Exec|Native|Public) // @ game+0x63dd360
	void GiveExpertSkill(int64_t ExpertId); // Function DFMGameplay.PlayerGMComponent.GiveExpertSkill // (Final|Exec|Native|Public) // @ game+0x63dd2e0
	void GiveD(); // Function DFMGameplay.PlayerGMComponent.GiveD // (Final|Exec|Native|Public) // @ game+0x63dd2c0
	void GiveC(); // Function DFMGameplay.PlayerGMComponent.GiveC // (Final|Exec|Native|Public) // @ game+0x63dd2a0
	void GiveB(); // Function DFMGameplay.PlayerGMComponent.GiveB // (Final|Exec|Native|Public) // @ game+0x63dd280
	void GiveAbilityByType(enum class ESkillLogicType ESkillLogicType); // Function DFMGameplay.PlayerGMComponent.GiveAbilityByType // (Final|Exec|Native|Public) // @ game+0x63dd200
	void GiveAbilityById(int32_t SkillId); // Function DFMGameplay.PlayerGMComponent.GiveAbilityById // (Final|Exec|Native|Public) // @ game+0x63dd180
	void GiveAbilityByExpertID(int64_t ExpertId); // Function DFMGameplay.PlayerGMComponent.GiveAbilityByExpertID // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63dd100
	void GiveAbility(); // Function DFMGameplay.PlayerGMComponent.GiveAbility // (Final|Exec|Native|Public) // @ game+0x63dd0e0
	void GiveA(); // Function DFMGameplay.PlayerGMComponent.GiveA // (Final|Exec|Native|Public) // @ game+0x63dd0c0
	void ForceEnableImpendingDeath(bool Enable); // Function DFMGameplay.PlayerGMComponent.ForceEnableImpendingDeath // (Final|Exec|Native|Public) // @ game+0x63d0380
	void FlushMovePath(); // Function DFMGameplay.PlayerGMComponent.FlushMovePath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0xbd2900
	void EnableVehicleDebug(bool Enable); // Function DFMGameplay.PlayerGMComponent.EnableVehicleDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d02f0
	void EnableSelfSoundVisualization(bool bEnable); // Function DFMGameplay.PlayerGMComponent.EnableSelfSoundVisualization // (Final|Exec|Native|Public) // @ game+0x63d0260
	void EnablePvpAIDebug(int32_t Param); // Function DFMGameplay.PlayerGMComponent.EnablePvpAIDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d01e0
	void EnableAISpeakDebug(bool Enable); // Function DFMGameplay.PlayerGMComponent.EnableAISpeakDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63d0150
	void DumpBuffInfo(); // Function DFMGameplay.PlayerGMComponent.DumpBuffInfo // (Final|Exec|Native|Public) // @ game+0x63d0130
	void DSBanPlayer(uint64_t PlayerUin); // Function DFMGameplay.PlayerGMComponent.DSBanPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x491a110
	void DrawMovePath(struct TArray<struct FVector>& MovePoints); // Function DFMGameplay.PlayerGMComponent.DrawMovePath // (Final|Native|Public|HasOutParms) // @ game+0x63d0060
	void DrawMesh(struct APawn* AICharacter, bool bIsDraw); // Function DFMGameplay.PlayerGMComponent.DrawMesh // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cff90
	void DrawLocation(bool bIsDraw); // Function DFMGameplay.PlayerGMComponent.DrawLocation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x36c9a10
	void DisablePvpAIDebug(); // Function DFMGameplay.PlayerGMComponent.DisablePvpAIDebug // (Exec|Native|Public|BlueprintCallable) // @ game+0x63cff70
	void DisableMoveClientIsBoss(); // Function DFMGameplay.PlayerGMComponent.DisableMoveClientIsBoss // (Final|Exec|Native|Public) // @ game+0x63cff50
	void CloseMonitorAI(); // Function DFMGameplay.PlayerGMComponent.CloseMonitorAI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x63cff30
	void CloseGMPanel(struct FName PaenlName); // Function DFMGameplay.PlayerGMComponent.CloseGMPanel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63cfeb0
	void Clinet2ServerShowCameraLocDiff(bool bEnable); // Function DFMGameplay.PlayerGMComponent.Clinet2ServerShowCameraLocDiff // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63cfe20
	void ClientVCCheck(struct TArray<struct FVector> InCheckResult); // Function DFMGameplay.PlayerGMComponent.ClientVCCheck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cfd50
	void ClientUpdateAIView(struct FString Bag, struct FString DeadBodyBag); // Function DFMGameplay.PlayerGMComponent.ClientUpdateAIView // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cfc00
	void ClientShowTips(struct FString Tips); // Function DFMGameplay.PlayerGMComponent.ClientShowTips // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cfa60
	void ClientShowNavExtInfo(float Duration, struct FString Info, struct FBox TileBox, struct TArray<uint32_t> LinkDirs, struct TArray<struct FVector> LinkTargets); // Function DFMGameplay.PlayerGMComponent.ClientShowNavExtInfo // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cf800
	void ClientReportMapEconomy(struct FMapEconomyReportData Data); // Function DFMGameplay.PlayerGMComponent.ClientReportMapEconomy // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cf4f0
	void ClientPrintToScreen(struct FString Text, struct FColor Color, float Duration); // Function DFMGameplay.PlayerGMComponent.ClientPrintToScreen // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cf3b0
	void ClientMoveAlongPath(struct TArray<struct FVector> PathPoints); // Function DFMGameplay.PlayerGMComponent.ClientMoveAlongPath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cf1e0
	void ClientGMJPSTracePathDraw(struct TArray<struct FVector> Lines); // Function DFMGameplay.PlayerGMComponent.ClientGMJPSTracePathDraw // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cf110
	void ClientGMGoto(struct FVector Location, float Delay); // Function DFMGameplay.PlayerGMComponent.ClientGMGoto // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cf040
	void ClientDrawMovePath(struct TArray<struct FVector> MovePoints); // Function DFMGameplay.PlayerGMComponent.ClientDrawMovePath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63cef70
	void ClientDrawDebugString(struct FVector Location, struct FString Text, struct FColor Color, float LifeTime, float Scale); // Function DFMGameplay.PlayerGMComponent.ClientDrawDebugString // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cedb0
	void ClientDrawDebugSphere(struct FVector Center, float radius, struct FColor Color, float LifeTime); // Function DFMGameplay.PlayerGMComponent.ClientDrawDebugSphere // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cec50
	void ClientDrawDebugBox(struct FVector Center, struct FVector Extent, struct FQuat Rotation, struct FColor Color, bool bPersistentLines, float LifeTime, char DepthPriority, float Thickness); // Function DFMGameplay.PlayerGMComponent.ClientDrawDebugBox // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x63cea20
	void ClientDrawCover(struct TArray<struct FGMCoverDrawInfo> Covers); // Function DFMGameplay.PlayerGMComponent.ClientDrawCover // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x63ce950
	void ClearAllSkill(); // Function DFMGameplay.PlayerGMComponent.ClearAllSkill // (Final|Exec|Native|Public) // @ game+0x63ce930
	void ChangeArmedForceData(int32_t ID); // Function DFMGameplay.PlayerGMComponent.ChangeArmedForceData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1d21140
	void CatalyticReplenish(); // Function DFMGameplay.PlayerGMComponent.CatalyticReplenish // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x367ef00
	void CancelUpdateBTDebugString(); // Function DFMGameplay.PlayerGMComponent.CancelUpdateBTDebugString // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x22b88f0
	void BP_VehicleDebugHUDToggle(bool Enable); // Function DFMGameplay.PlayerGMComponent.BP_VehicleDebugHUDToggle // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_TestS3ArmoredCarAddHP(float AddedHealth); // Function DFMGameplay.PlayerGMComponent.BP_TestS3ArmoredCarAddHP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_SetPlayerVehicleMaxHP(struct AActor* Vehicle, bool bEnable); // Function DFMGameplay.PlayerGMComponent.BP_SetPlayerVehicleMaxHP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerSpawnTestVehicle(struct FName VehicleType, struct FVector postion); // Function DFMGameplay.PlayerGMComponent.BP_ServerSpawnTestVehicle // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerEnablePvpAIDebug(struct ADFMPlayerController* LocalController, int32_t Param); // Function DFMGameplay.PlayerGMComponent.BP_ServerEnablePvpAIDebug // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerDisablePvpAIDebug(struct ADFMPlayerController* LocalController); // Function DFMGameplay.PlayerGMComponent.BP_ServerDisablePvpAIDebug // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_GMWhoIsYourDaddy(int32_t Health); // Function DFMGameplay.PlayerGMComponent.BP_GMWhoIsYourDaddy // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_GMServerAcceptNewContractQuest(int64_t QuestID); // Function DFMGameplay.PlayerGMComponent.BP_GMServerAcceptNewContractQuest // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AutoStraight(bool Enable, int32_t Step); // Function DFMGameplay.PlayerGMComponent.AutoStraight // (Final|Exec|Native|Public) // @ game+0x63ce7c0
	void AILabShowDoorLocAndRot(int32_t Mode); // Function DFMGameplay.PlayerGMComponent.AILabShowDoorLocAndRot // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63ce050
	void AILabProjDebug(bool Enable); // Function DFMGameplay.PlayerGMComponent.AILabProjDebug // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63cdfc0
	void AILabDebugSys(bool Enable); // Function DFMGameplay.PlayerGMComponent.AILabDebugSys // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x63cdf30
	void AddScreenEffect(struct FString EffectName); // Function DFMGameplay.PlayerGMComponent.AddScreenEffect // (Final|Exec|Native|Public) // @ game+0x63ce6a0
	void AddPerkSPEffect(int32_t Index); // Function DFMGameplay.PlayerGMComponent.AddPerkSPEffect // (Final|Exec|Native|Public) // @ game+0x63ce620
	void AddPerk(int32_t Index); // Function DFMGameplay.PlayerGMComponent.AddPerk // (Final|Exec|Native|Public) // @ game+0x63ce5a0
	void AddMultiDynamicEffect(float Distance, float MaxDuration); // Function DFMGameplay.PlayerGMComponent.AddMultiDynamicEffect // (Final|Exec|Native|Public) // @ game+0x63ce4e0
	void AddDynamicEffect(struct FString EffectResourceId, float Distance, float MaxDuration); // Function DFMGameplay.PlayerGMComponent.AddDynamicEffect // (Final|Exec|Native|Public) // @ game+0x63ce2d0
	void AddBuff(uint64_t BuffId, char CharaterPart); // Function DFMGameplay.PlayerGMComponent.AddBuff // (Final|Exec|Native|Public) // @ game+0x63ce210
	void AddAllScreenEffect(int32_t Enable); // Function DFMGameplay.PlayerGMComponent.AddAllScreenEffect // (Final|Exec|Native|Public) // @ game+0x63ce190
	void AddAllDynamicEffect(int32_t Enable, float Duration); // Function DFMGameplay.PlayerGMComponent.AddAllDynamicEffect // (Final|Exec|Native|Public) // @ game+0x63ce0d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerStartComponent
// Size: 0x168 (Inherited: 0x100)
class UPlayerStartComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct TArray<struct FOrientationGroup> TeamStartGroups; // 0x108(0x10)
	struct TMap<int32_t, struct ATeamStart*> AllocatedStarts; // 0x118(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerStartExitSystem
// Size: 0x3d0 (Inherited: 0x378)
class APlayerStartExitSystem : public ALevelSubsystem {
public:

	struct UPlayerStartComponent* PlayerStartComp; // 0x378(0x08)
	char pad_380[0x50]; // 0x380(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayScenesAnimsCallbackProxy
// Size: 0x58 (Inherited: 0x30)
class UPlayScenesAnimsCallbackProxy : public UObject {
public:

	/*struct FMulticastInlineDelegate*/char OnCompleted[0x10]; // 0x30(0x10)
	char pad_40[0x18]; // 0x40(0x18)

	void OnSequenceAnimListPlayEnded(bool bInterrupted); // Function DFMGameplay.PlayScenesAnimsCallbackProxy.OnSequenceAnimListPlayEnded // (Final|Native|Protected) // @ game+0x63e88e0
	void STATIC_CreateProxyObjectForPlayScenesAnims(struct UGPAnimProxyComponent* AnimProxyComponent, struct UScenesAnimates* ScenesAnimateParam, bool bOnlyPreLoad); // Function DFMGameplay.PlayScenesAnimsCallbackProxy.CreateProxyObjectForPlayScenesAnims // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63e80e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlunderPickup
// Size: 0x398 (Inherited: 0x378)
class APlunderPickup : public AActor {
public:

	struct UMeshComponent* FPPMesh; // 0x378(0x08)
	struct UMeshComponent* TPPMesh; // 0x380(0x08)
	struct FName FPPMeshName; // 0x388(0x08)
	struct FName TPPMeshName; // 0x390(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.POIProductActor
// Size: 0x3a0 (Inherited: 0x378)
class APOIProductActor : public AActor {
public:

	struct FText MapPOINameText; // 0x378(0x18)
	enum class EMapLocationPOIProductType ProductType; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	struct FName ItemID; // 0x394(0x08)
	bool bIsEventPOI; // 0x39c(0x01)
	char pad_39D[0x3]; // 0x39d(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.POITextLocComponent
// Size: 0x240 (Inherited: 0x240)
class UPOITextLocComponent : public USceneComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.POITriggerActor
// Size: 0x480 (Inherited: 0x378)
class APOITriggerActor : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	struct UBoxComponent* BoxComponent; // 0x388(0x08)
	float POIHudIntervalSecond; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct FText FirstHudText; // 0x398(0x18)
	struct FText SecondHudText; // 0x3b0(0x18)
	struct FLinearColor HudImageColor; // 0x3c8(0x10)
	struct UGPAudioEventAsset* IntoPOIAudioOne; // 0x3d8(0x08)
	struct UGPAudioEventAsset* OffPOIAudioOne; // 0x3e0(0x08)
	int32_t POIId; // 0x3e8(0x04)
	bool bTriggerEnterHUD; // 0x3ec(0x01)
	bool bTriggerMiniMapScale; // 0x3ed(0x01)
	bool bShowOnMap; // 0x3ee(0x01)
	bool bSimplePOI1InMiniMap; // 0x3ef(0x01)
	struct FText MapPOINameText; // 0x3f0(0x18)
	enum class EMapLocationPOILevelType POILevelType; // 0x408(0x01)
	char pad_409[0x7]; // 0x409(0x07)
	struct TArray<struct FName> RareItemList; // 0x410(0x10)
	enum class EMapLocationType MapLocationType; // 0x420(0x01)
	bool bIsEventPOI; // 0x421(0x01)
	char pad_422[0x6]; // 0x422(0x06)
	struct TArray<struct FVector> EventOffsetArray; // 0x428(0x10)
	struct FText DescText; // 0x438(0x18)
	float MiniMapZoomRadio; // 0x450(0x04)
	float MiniMapZoomTime; // 0x454(0x04)
	struct UPOITextLocComponent* POITextLocComponent; // 0x458(0x08)
	char pad_460[0x20]; // 0x460(0x20)

	void ShowPOIHUD(); // Function DFMGameplay.POITriggerActor.ShowPOIHUD // (Final|Native|Protected) // @ game+0x63e8cc0
	void PlayOffPOIAudio(); // Function DFMGameplay.POITriggerActor.PlayOffPOIAudio // (Final|Native|Protected) // @ game+0x63e8990
	void PlayIntoPOIAudio(); // Function DFMGameplay.POITriggerActor.PlayIntoPOIAudio // (Final|Native|Protected) // @ game+0x63e8970
	void OnPOIHUDShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.POITriggerActor.OnPOIHUDShow // (Final|Native|Protected) // @ game+0x63e87a0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.POITriggerActor.OnOverlapEnd // (Native|Protected) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.POITriggerActor.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x36ce950
	struct FText GetMapPoiName(); // Function DFMGameplay.POITriggerActor.GetMapPoiName // (Final|Native|Public) // @ game+0x63e81f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PortableAmmoBoxComponent
// Size: 0x138 (Inherited: 0x100)
class UPortableAmmoBoxComponent : public UActorComponent {
public:

	struct UInteractorBoxComponent* InterBoxComp; // 0x100(0x08)
	struct UPrimitiveComponent* PrimComp; // 0x108(0x08)
	struct UClass* MovementCompClass; // 0x110(0x08)
	struct TArray<struct FAmmoPathInfo> PathInfoList; // 0x118(0x10)
	uint64_t ItemID; // 0x128(0x08)
	float InitSpeed; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)

	void StartPhysicsSimulate(struct FVector InitDir); // Function DFMGameplay.PortableAmmoBoxComponent.StartPhysicsSimulate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63e8ce0
	void SetPortbleItemId(uint64_t InItemID); // Function DFMGameplay.PortableAmmoBoxComponent.SetPortbleItemId // (Final|Native|Public) // @ game+0x63e8c40
	void OnRep_ItemID(); // Function DFMGameplay.PortableAmmoBoxComponent.OnRep_ItemID // (Final|Native|Protected) // @ game+0x63e88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PracticeRangeAIManager
// Size: 0x3d0 (Inherited: 0x378)
class APracticeRangeAIManager : public AActor {
public:

	struct FRangeTargetInfo RangeTargetInfo; // 0x378(0x1c)
	bool bStartTimeKeeping; // 0x394(0x01)
	char pad_395[0x3]; // 0x395(0x03)
	struct USOLCharacterEquipComponent* EquipComp; // 0x398(0x08)
	struct FVector AISpeed; // 0x3a0(0x0c)
	enum class EAIDirection AIDirection; // 0x3ac(0x01)
	bool AIMoveDirection; // 0x3ad(0x01)
	char pad_3AE[0x22]; // 0x3ae(0x22)

	void SetTimeKeepingState(bool bTimeKeepState); // Function DFMGameplay.PracticeRangeAIManager.SetTimeKeepingState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3653a50
	void SetRangeTargetInfo(struct FRangeTargetInfo RangeTargetInfoCache); // Function DFMGameplay.PracticeRangeAIManager.SetRangeTargetInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63ec130
	bool MoveToLocation(float DeltaTime, struct ADFMCharacter* CHARACTER, struct FVector StartLocation, struct FVector EndLocation); // Function DFMGameplay.PracticeRangeAIManager.MoveToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63eb630
	void GetMovementSpeedConfig(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.PracticeRangeAIManager.GetMovementSpeedConfig // (Final|Native|Public) // @ game+0x63eafe0
	void ApplyParamsToSpawnTestAI(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.PracticeRangeAIManager.ApplyParamsToSpawnTestAI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0xc37860
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PvpAIEqsTestingPawn
// Size: 0x860 (Inherited: 0x830)
class APvpAIEqsTestingPawn : public AEQSTestingPawn {
public:

	struct AActor* MainTargetActor; // 0x830(0x08)
	struct TArray<struct ADFMCharacter*> ThreatCharacters; // 0x838(0x10)
	struct AActor* TargetCapturePoint; // 0x848(0x08)
	struct TArray<struct AGPVehicleBase*> ThreatVehicles; // 0x850(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PVPAISubsystemBase
// Size: 0x800 (Inherited: 0x378)
class APVPAISubsystemBase : public ALevelSubsystem {
public:

	struct TArray<struct UDataTable*> LoadedTables; // 0x378(0x10)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerSpawnTemplate[0x28]; // 0x388(0x28)
	struct FName DefaultAiPlayerSpawnTemplateName; // 0x3b0(0x08)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerDifficultyPool[0x28]; // 0x3b8(0x28)
	struct FName DefaultAttackDifficultyPoolName; // 0x3e0(0x08)
	struct FName DefaultDefendDifficultyPoolName; // 0x3e8(0x08)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerDifficultyConfig[0x28]; // 0x3f0(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char AiBaseDifficultyConfig[0x28]; // 0x418(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerArmedPreset[0x28]; // 0x440(0x28)
	struct TArray<struct FString> GMBotNames; // 0x468(0x10)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerStylePool[0x28]; // 0x478(0x28)
	struct FName DefaultAttackStylePoolName; // 0x4a0(0x08)
	struct FName DefaultDefendStylePoolName; // 0x4a8(0x08)
	/*struct TSoftObjectPtr<UDataTable>*/char AiPlayerStyleConfig[0x28]; // 0x4b0(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char AntiVehicleWillConfig[0x28]; // 0x4d8(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char RescueWillConfig[0x28]; // 0x500(0x28)
	float AddBotIntervalSecs; // 0x528(0x04)
	float MaxAddBotCountPerTick; // 0x52c(0x04)
	float RebornTimeInterval; // 0x530(0x04)
	float RebornUpOffset; // 0x534(0x04)
	float RebornHiddenTime; // 0x538(0x04)
	bool RebornToTeammate; // 0x53c(0x01)
	bool RebornToRebornFlag; // 0x53d(0x01)
	bool RebornToSectorBase; // 0x53e(0x01)
	bool RebornToCampSector; // 0x53f(0x01)
	bool RebornToRandActor; // 0x540(0x01)
	char pad_541[0x3]; // 0x541(0x03)
	float RebornCalcDistDeviation; // 0x544(0x04)
	bool RebornCheckGroudWide; // 0x548(0x01)
	char pad_549[0x3]; // 0x549(0x03)
	float RebornCheckGroudWideDist; // 0x54c(0x04)
	bool RebornCheckCharacterInRadius; // 0x550(0x01)
	char pad_551[0x3]; // 0x551(0x03)
	float RebornCheckCharacterRadius; // 0x554(0x04)
	int32_t RebornCheckCharacterNum; // 0x558(0x04)
	char pad_55C[0x4]; // 0x55c(0x04)
	struct TArray<struct FPvpWeaponAntiVehicleInfo> WeaponAntiVehicles; // 0x560(0x10)
	struct TMap<int32_t, struct FPvpAiAgainstVehicleConfig> AgainstVehiclesConfig; // 0x570(0x50)
	float CampJobBaseWeight; // 0x5c0(0x04)
	float FlankJobBaseWeight; // 0x5c4(0x04)
	float KickBotRemoveTime; // 0x5c8(0x04)
	bool AssignJobTargetOnReborn; // 0x5cc(0x01)
	char pad_5CD[0x3]; // 0x5cd(0x03)
	float ActorBeingMarkerCD; // 0x5d0(0x04)
	float FixedTileZipLineLength; // 0x5d4(0x04)
	float BattleRouteSegmentCostMinScale; // 0x5d8(0x04)
	float BattleRouteSegmentCostMaxScale; // 0x5dc(0x04)
	float PlayerRequestAssistInterval; // 0x5e0(0x04)
	float PlayerRequestAssistDistace; // 0x5e4(0x04)
	bool InFightingStage; // 0x5e8(0x01)
	char pad_5E9[0x3]; // 0x5e9(0x03)
	float VaultSegmentDefaultCostMinScale; // 0x5ec(0x04)
	float VaultSegmentDefaultCostMaxScale; // 0x5f0(0x04)
	float ForbidNavLinkCostScale; // 0x5f4(0x04)
	float UsingLinkOccupyTime; // 0x5f8(0x04)
	float UsingLinkFailDisableTime; // 0x5fc(0x04)
	float VaultAvoidBoxMarkScale; // 0x600(0x04)
	float ExecPathFailCostScale; // 0x604(0x04)
	float ExecPathFailExpireTime; // 0x608(0x04)
	struct FVector ProjectNavExt; // 0x60c(0x0c)
	/*struct TSoftObjectPtr<UDataTable>*/char CampBehavior[0x28]; // 0x618(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char FlankBehavior[0x28]; // 0x640(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char MoveBehavior[0x28]; // 0x668(0x28)
	/*struct TSoftObjectPtr<UDataTable>*/char RetreatBehavior[0x28]; // 0x690(0x28)
	struct ANavExtendAgent* NavExtendAgent; // 0x6b8(0x08)
	struct ARecastNavMesh* RecastNavMesh; // 0x6c0(0x08)
	struct UBattleRouteNav* BattleRouteNav; // 0x6c8(0x08)
	char pad_6D0[0x8]; // 0x6d0(0x08)
	struct TArray<struct ADFMAIPlayerController*> AIControllers; // 0x6d8(0x10)
	char pad_6E8[0xd0]; // 0x6e8(0xd0)
	struct ADrawHelperSystem* Drawer; // 0x7b8(0x08)
	char pad_7C0[0x40]; // 0x7c0(0x40)

	void UnregisterAI(struct ADFMAIPlayerController* Controller); // Function DFMGameplay.PVPAISubsystemBase.UnregisterAI // (Final|Native|Public|BlueprintCallable) // @ game+0x63ec1d0
	void SetDebugPanelEnabled(bool bEnabled); // Function DFMGameplay.PVPAISubsystemBase.SetDebugPanelEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x63ec0b0
	void RegisterAI(struct ADFMAIPlayerController* Controller); // Function DFMGameplay.PVPAISubsystemBase.RegisterAI // (Final|Native|Public|BlueprintCallable) // @ game+0x63ec020
	void OnVehicleDied(struct AActor* Vehicle); // Function DFMGameplay.PVPAISubsystemBase.OnVehicleDied // (Final|Native|Protected) // @ game+0x63ebe70
	void OnPlayerGetOnVehicle(struct AActor* CHARACTER, struct AActor* Vehicle, struct FName Seat); // Function DFMGameplay.PVPAISubsystemBase.OnPlayerGetOnVehicle // (Final|Native|Protected) // @ game+0x63ebcd0
	void OnPlayerGetOffVehicle(struct AActor* CHARACTER, struct AActor* Vehicle); // Function DFMGameplay.PVPAISubsystemBase.OnPlayerGetOffVehicle // (Final|Native|Protected) // @ game+0x63ebc10
	void OnCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.PVPAISubsystemBase.OnCharacterDied // (Native|Public) // @ game+0x63eb7b0
	bool IsWeaponAntiVehicle(int64_t WeaponID); // Function DFMGameplay.PVPAISubsystemBase.IsWeaponAntiVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x63eb5a0
	bool IsPathWithoutBlockedLink(struct FVector From, struct FVector To); // Function DFMGameplay.PVPAISubsystemBase.IsPathWithoutBlockedLink // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63eb4b0
	bool IsLocationPolyNarrowLane(struct FVector Location, struct FVector Extent); // Function DFMGameplay.PVPAISubsystemBase.IsLocationPolyNarrowLane // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63eb3c0
	bool IsLocationInAiAssistBoxMark(struct FVector Location, struct FName Tag); // Function DFMGameplay.PVPAISubsystemBase.IsLocationInAiAssistBoxMark // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63eb2e0
	bool IsDebugEnabled(); // Function DFMGameplay.PVPAISubsystemBase.IsDebugEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63eb2c0
	bool IsBattleRouteEnable(); // Function DFMGameplay.PVPAISubsystemBase.IsBattleRouteEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x63eb2a0
	enum class EPvpWeaponAntiVehicleActionType GetWeaponAntiVehicleTypeByWeapon(struct AWeaponBase* Weapon); // Function DFMGameplay.PVPAISubsystemBase.GetWeaponAntiVehicleTypeByWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x63eb210
	enum class EPvpWeaponAntiVehicleActionType GetWeaponAntiVehicleType(int64_t WeaponID); // Function DFMGameplay.PVPAISubsystemBase.GetWeaponAntiVehicleType // (Final|Native|Public|BlueprintCallable) // @ game+0x63eb180
	struct APVPAISubsystemBase* STATIC_GetPVPAISubsystemBase(struct UObject* ObjectContext); // Function DFMGameplay.PVPAISubsystemBase.GetPVPAISubsystemBase // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63eb060
	struct ADrawHelperSystem* STATIC_GetPvpAIDebugDrawer(struct UObject* ObjectContext); // Function DFMGameplay.PVPAISubsystemBase.GetPvpAIDebugDrawer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63eb0e0
	enum class EDFMGamePlayMode GetGamePlayMode(); // Function DFMGameplay.PVPAISubsystemBase.GetGamePlayMode // (Final|Native|Public|BlueprintCallable) // @ game+0x63eafb0
	struct ADrawHelperSystem* GetDrawer(); // Function DFMGameplay.PVPAISubsystemBase.GetDrawer // (Final|Native|Public|BlueprintCallable) // @ game+0x63eaf90
	void EnableAIDebug(struct ADFMPlayerController* LocalPlayer, int32_t Param); // Function DFMGameplay.PVPAISubsystemBase.EnableAIDebug // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void DisableAIDebug(struct ADFMPlayerController* LocalPlayer); // Function DFMGameplay.PVPAISubsystemBase.DisableAIDebug // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RecastFilter_WithoutAllNavLinks
// Size: 0x50 (Inherited: 0x50)
class URecastFilter_WithoutAllNavLinks : public UNavigationQueryFilter {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.QuestAutoTrackBullet
// Size: 0x7f0 (Inherited: 0x728)
class AQuestAutoTrackBullet : public AWeaponBulletExplosion {
public:

	char pad_728[0x18]; // 0x728(0x18)
	struct AActor* MakerInstigator; // 0x740(0x08)
	struct AActor* FiredWeapon; // 0x748(0x08)
	char pad_750[0x28]; // 0x750(0x28)
	struct UQuestAutoTrackBulletMovementComponent* StingerMissileMovement; // 0x778(0x08)
	struct AActor* HomingTargetActor; // 0x780(0x08)
	bool bSupportedByLaserPointer; // 0x788(0x01)
	char pad_789[0x37]; // 0x789(0x37)
	bool bCheckBulletDetectorIntercept; // 0x7c0(0x01)
	char pad_7C1[0x3]; // 0x7c1(0x03)
	struct FName ExplosionEffectId; // 0x7c4(0x08)
	struct FName ShellTrailEffectID; // 0x7cc(0x08)
	enum class EExplosionType ExplosionType; // 0x7d4(0x01)
	char pad_7D5[0x3]; // 0x7d5(0x03)
	struct UFXResourceContainerComponent* TrailPSC; // 0x7d8(0x08)
	char pad_7E0[0x4]; // 0x7e0(0x04)
	int32_t AttackerValueId; // 0x7e4(0x04)
	char pad_7E8[0x8]; // 0x7e8(0x08)

	void OnRep_WeaponId(); // Function DFMGameplay.QuestAutoTrackBullet.OnRep_WeaponId // (Final|Native|Protected) // @ game+0x17621d0
	void OnRep_HomingTarget(struct AActor* OldHomingTarget); // Function DFMGameplay.QuestAutoTrackBullet.OnRep_HomingTarget // (Final|Native|Protected) // @ game+0x63ebdd0
	void DebugServerTrackDraw(struct FVector WorldPos, struct FRotator Rotator); // Function DFMGameplay.QuestAutoTrackBullet.DebugServerTrackDraw // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x37130b0
	struct USceneComponent* BP_GetTrailEffectSocket(); // Function DFMGameplay.QuestAutoTrackBullet.BP_GetTrailEffectSocket // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.QuestAutoTrackBulletMovementComponent
// Size: 0x600 (Inherited: 0x5c0)
class UQuestAutoTrackBulletMovementComponent : public UGPWeaponProjectileMovementComponent {
public:

	char pad_5C0[0x10]; // 0x5c0(0x10)
	float BulletTime; // 0x5d0(0x04)
	bool bSimpleMove; // 0x5d4(0x01)
	bool bIsSimulated; // 0x5d5(0x01)
	char pad_5D6[0x2]; // 0x5d6(0x02)
	struct FQuestBulletMovementParam MovementParam; // 0x5d8(0x1c)
	char pad_5F4[0x5]; // 0x5f4(0x05)
	bool DebugMode; // 0x5f9(0x01)
	char pad_5FA[0x6]; // 0x5fa(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RagdollTestConfig
// Size: 0x58 (Inherited: 0x40)
class URagdollTestConfig : public UDeveloperSettings {
public:

	struct FSoftObjectPath MapRagdollVolumeInfoTable; // 0x40(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RagdollTestManager
// Size: 0x428 (Inherited: 0x378)
class ARagdollTestManager : public AActor {
public:

	struct TArray<struct FRagdollTestVolumeInfo> RagdollTestVolumeInfos; // 0x378(0x10)
	int32_t CurrVolumeIdx; // 0x388(0x04)
	struct TWeakObjectPtr<struct ADFMCharacter> Player; // 0x38c(0x08)
	char pad_394[0x1c]; // 0x394(0x1c)
	/*struct TSet<struct TWeakObjectPtr<struct ADFMCharacter>>*/char DeadCharacters[0x50]; // 0x3b0(0x50)
	char pad_400[0x8]; // 0x400(0x08)
	struct TArray<struct FString> LogMsgs; // 0x408(0x10)
	char pad_418[0x10]; // 0x418(0x10)

	void OnRagdollErrorRecord(struct UGPRagDollPhysicsComponent* InRagdollComp, struct FString InMsg); // Function DFMGameplay.RagdollTestManager.OnRagdollErrorRecord // (Final|Native|Protected) // @ game+0x63f2030
	void STATIC_GatherVolumeInfo(struct UWorld* InWorld, struct TArray<struct FRagdollTestVolumeInfo>& OutRagdollVolumeInfos); // Function DFMGameplay.RagdollTestManager.GatherVolumeInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x63f1870
	void DoSpawnAI(); // Function DFMGameplay.RagdollTestManager.DoSpawnAI // (Final|Native|Protected) // @ game+0x63f1520
	void DoRagdollTest(); // Function DFMGameplay.RagdollTestManager.DoRagdollTest // (Final|Native|Protected) // @ game+0x63f1500
	void DoKillAI(); // Function DFMGameplay.RagdollTestManager.DoKillAI // (Final|Native|Protected) // @ game+0x63f14e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RagdollTestVolume
// Size: 0x400 (Inherited: 0x3b0)
class ARagdollTestVolume : public AVolume {
public:

	struct FRagdollTestVolumeInfo RagdollTestVolumeInfo; // 0x3b0(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RangeScopeActor
// Size: 0x490 (Inherited: 0x3d8)
class ARangeScopeActor : public APawn {
public:

	struct USkeletalMeshComponent* SkeletalMeshComp; // 0x3d8(0x08)
	struct URangeScopeViewProxyEditor* ScopeViewProxy; // 0x3e0(0x08)
	struct UCameraComponent* CameraComp; // 0x3e8(0x08)
	uint64_t CurScopeItemId; // 0x3f0(0x08)
	bool bIsZooming; // 0x3f8(0x01)
	bool bIsUsingRT; // 0x3f9(0x01)
	char pad_3FA[0x2]; // 0x3fa(0x02)
	float ZoomTime; // 0x3fc(0x04)
	float DefaultFovForWeapon; // 0x400(0x04)
	char pad_404[0xc]; // 0x404(0x0c)
	/*struct TSoftClassPtr<UObject>*/char ScopeCaptureClass[0x28]; // 0x410(0x28)
	struct URangeScopeCameraModifier* CameraModifier; // 0x438(0x08)
	struct ASceneCapture2D* SceneCapture; // 0x440(0x08)
	/*struct FMulticastInlineDelegate*/char OnSwitchRangeScope[0x10]; // 0x448(0x10)
	float BasicFov; // 0x458(0x04)
	float MoveSpeed; // 0x45c(0x04)
	float RotateSpeed; // 0x460(0x04)
	char pad_464[0x2c]; // 0x464(0x2c)

	void UpdateScopConfig(); // Function DFMGameplay.RangeScopeActor.UpdateScopConfig // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2680
	void ToggleZoom(bool bZoomIn); // Function DFMGameplay.RangeScopeActor.ToggleZoom // (Final|Native|Public|BlueprintCallable) // @ game+0x63f25f0
	void ToggleUseRT(bool bUseRT); // Function DFMGameplay.RangeScopeActor.ToggleUseRT // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2560
	void SwitchRangeScopeByName(struct FName ScopeName); // Function DFMGameplay.RangeScopeActor.SwitchRangeScopeByName // (Final|Native|Public|BlueprintCallable) // @ game+0x63f24e0
	void SetWeaponFov(float WeaponFOV); // Function DFMGameplay.RangeScopeActor.SetWeaponFov // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2390
	void SetCrosshairPresetId(int32_t PresetId, bool bIsCrosshair); // Function DFMGameplay.RangeScopeActor.SetCrosshairPresetId // (Final|Native|Public|BlueprintCallable) // @ game+0x63f22d0
	void SetCamOffset(float CamOffset); // Function DFMGameplay.RangeScopeActor.SetCamOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2250
	void ResetCamera(); // Function DFMGameplay.RangeScopeActor.ResetCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x63f2230
	float GetZoomRate(); // Function DFMGameplay.RangeScopeActor.GetZoomRate // (Final|Native|Public|BlueprintCallable) // @ game+0x63f1cf0
	float GetWeaponFov(); // Function DFMGameplay.RangeScopeActor.GetWeaponFov // (Final|Native|Public|BlueprintCallable) // @ game+0x63f1c40
	struct FTransform GetDesiredCameraTrans(); // Function DFMGameplay.RangeScopeActor.GetDesiredCameraTrans // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63f19f0
	float GetCamOffset(); // Function DFMGameplay.RangeScopeActor.GetCamOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x63f19c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RangeScopeViewProxyEditor
// Size: 0x568 (Inherited: 0x550)
class URangeScopeViewProxyEditor : public URangeScopeLensProxy {
public:

	struct ASceneCapture2D* SceneCapture; // 0x550(0x08)
	char pad_558[0x8]; // 0x558(0x08)
	struct UMaterialParameterCollectionInstance* ParamCollec; // 0x560(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RangeScopeCameraModifier
// Size: 0x58 (Inherited: 0x50)
class URangeScopeCameraModifier : public UCameraModifier {
public:

	struct ARangeScopeActor* ScopeActor; // 0x50(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RangeScopeEditorPlayerCameraManager
// Size: 0x40f0 (Inherited: 0x40e8)
class ARangeScopeEditorPlayerCameraManager : public APlayerCameraManager {
public:

	float BasicFov; // 0x40e8(0x04)
	char pad_40EC[0x4]; // 0x40ec(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CrosshairTickmarkManager
// Size: 0x48 (Inherited: 0x38)
class UCrosshairTickmarkManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RangeScopeEditorWidget
// Size: 0x348 (Inherited: 0x298)
class URangeScopeEditorWidget : public UUserWidget {
public:

	struct ARangeScopeActor* ScopeActor; // 0x298(0x08)
	struct TArray<struct FName> ScopeNames; // 0x2a0(0x10)
	struct TMap<int32_t, struct FCrosshairPresetRow> CrosshairTickmarkConfigs; // 0x2b0(0x50)
	struct UHorizontalBox* CrosshairWidgetsParent; // 0x300(0x08)
	struct UHorizontalBox* TickmarkWidgetsParent; // 0x308(0x08)
	struct UClass* CTWidgetClass; // 0x310(0x08)
	struct TArray<struct UCrosshairTickmarkWidget*> CrossHairWidgets; // 0x318(0x10)
	struct TArray<struct UCrosshairTickmarkWidget*> TickmarkWidgets; // 0x328(0x10)
	/*struct FMulticastInlineDelegate*/char OnSwitchScope[0x10]; // 0x338(0x10)

	void SwitchRangeScope(struct FName ScopeName); // Function DFMGameplay.RangeScopeEditorWidget.SwitchRangeScope // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2460
	void OnCTWidgetClicked(int32_t PresetId, bool IsCrosshair); // Function DFMGameplay.RangeScopeEditorWidget.OnCTWidgetClicked // (Final|Native|Public) // @ game+0x63f1e90
	bool IsCrosshair(struct FCrosshairPresetRow& Row); // Function DFMGameplay.RangeScopeEditorWidget.IsCrosshair // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x63f1d40
	void InitCTWidgets(); // Function DFMGameplay.RangeScopeEditorWidget.InitCTWidgets // (Final|Native|Public|BlueprintCallable) // @ game+0x63f1d20
	void BindToRangeScopeActor(struct ARangeScopeActor* InScopeActor); // Function DFMGameplay.RangeScopeEditorWidget.BindToRangeScopeActor // (Final|Native|Public|BlueprintCallable) // @ game+0x63f13c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CrosshairTickmarkWidget
// Size: 0x2c0 (Inherited: 0x298)
class UCrosshairTickmarkWidget : public UUserWidget {
public:

	struct UImage* Image; // 0x298(0x08)
	struct UButton* Button; // 0x2a0(0x08)
	int32_t PresetId; // 0x2a8(0x04)
	bool bIsCrosshair; // 0x2ac(0x01)
	char pad_2AD[0x3]; // 0x2ad(0x03)
	/*struct FMulticastInlineDelegate*/char OnClick[0x10]; // 0x2b0(0x10)

	void UpdateConfig(struct FCrosshairPresetRow& CrosshairConfig); // Function DFMGameplay.CrosshairTickmarkWidget.UpdateConfig // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x7ed88c0
	void SetFocused(bool IsFocused); // Function DFMGameplay.CrosshairTickmarkWidget.SetFocused // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnButtonClick(); // Function DFMGameplay.CrosshairTickmarkWidget.OnButtonClick // (Final|Native|Protected) // @ game+0x63f1e70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RebornActor
// Size: 0x30 (Inherited: 0x30)
class URebornActor : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RecastFilter_AIAvoidMainTarget
// Size: 0x50 (Inherited: 0x50)
class URecastFilter_AIAvoidMainTarget : public UNavigationQueryFilter {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RecastFilter_WorldQuery
// Size: 0x50 (Inherited: 0x50)
class URecastFilter_WorldQuery : public UNavigationQueryFilter {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforceReplenishContext
// Size: 0x50 (Inherited: 0x30)
class UReinforceReplenishContext : public UObject {
public:

	struct TArray<struct AAISpawnChecker*> Checkers; // 0x30(0x10)
	struct TArray<struct AActor*> NewSpawned; // 0x40(0x10)

	struct UReinforceReplenishContext* STATIC_CreateReinforceContext(struct UObject* WorldContextObject); // Function DFMGameplay.ReinforceReplenishContext.CreateReinforceContext // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63f1460
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforcePointComponent
// Size: 0x5d0 (Inherited: 0x560)
class UReinforcePointComponent : public UPrimitiveComponent {
public:

	struct TArray<struct FReinforceAgentVehicleDeparture> DepartureQueueNormal; // 0x560(0x10)
	struct TArray<struct FReinforceAgentVehicleDeparture> DepartureQueueSubs; // 0x570(0x10)
	struct AReinforceSubstitution* Substitution; // 0x580(0x08)
	bool DebugDraw; // 0x588(0x01)
	char pad_589[0x3]; // 0x589(0x03)
	struct FName Tag; // 0x58c(0x08)
	char pad_594[0x4]; // 0x594(0x04)
	struct APrefecture* TargetPrefecture; // 0x598(0x08)
	struct AGPSplinePath* VehiclePath; // 0x5a0(0x08)
	float Speed; // 0x5a8(0x04)
	char pad_5AC[0x4]; // 0x5ac(0x04)
	struct TArray<struct FVector> Keypoints; // 0x5b0(0x10)
	char pad_5C0[0x10]; // 0x5c0(0x10)

	struct TArray<struct FVector> GetWorldCoordKeyPoints(); // Function DFMGameplay.ReinforcePointComponent.GetWorldCoordKeyPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63f1c70
	void ConvertWaypointsToSplinePath(); // Function DFMGameplay.ReinforcePointComponent.ConvertWaypointsToSplinePath // (Final|Native|Public|BlueprintCallable) // @ game+0x63f1440
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforceAgent
// Size: 0x3a8 (Inherited: 0x378)
class AReinforceAgent : public AActor {
public:

	float radius; // 0x378(0x04)
	float ReinforceInterval; // 0x37c(0x04)
	bool StealthReplenish; // 0x380(0x01)
	char pad_381[0x3]; // 0x381(0x03)
	float ReinforceTimer; // 0x384(0x04)
	struct TArray<struct UReinforcePointComponent*> ReinforcePoints; // 0x388(0x10)
	struct TArray<struct FReinforceAgentParatrooperAction> ParatrooperActions; // 0x398(0x10)

	void SpawnVehicleAndAI(struct TArray<struct AAISpawnChecker*>& CheckerList, struct FVector& AssemblePos, struct UReinforcePointComponent* Where); // Function DFMGameplay.ReinforceAgent.SpawnVehicleAndAI // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnSubstitutionAndSend(struct TArray<struct AAISpawnChecker*>& CheckerList, struct FVector& AssemblePos, struct UReinforcePointComponent* Where); // Function DFMGameplay.ReinforceAgent.SpawnSubstitutionAndSend // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnAircraftAndAI(struct TArray<struct AActor*>& DeadActorList, struct FVector& AssemblePos); // Function DFMGameplay.ReinforceAgent.SpawnAircraftAndAI // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void OnPassengerBegin(struct ADFMAICharacter* Passenger, struct FVector& AssemblePos); // Function DFMGameplay.ReinforceAgent.OnPassengerBegin // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void OnParatrooperBegin(struct ADFMAICharacter* Paratrooper, struct ASOLParatrooperAircraft* Aircraft, struct FVector& AssemblePos); // Function DFMGameplay.ReinforceAgent.OnParatrooperBegin // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	bool IsReadyDeparture(); // Function DFMGameplay.ReinforceAgent.IsReadyDeparture // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x35a2c00
	int32_t GetVehicleCapacity(); // Function DFMGameplay.ReinforceAgent.GetVehicleCapacity // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x63f1c10
	void EnqueueVehicleSubstitutionDepartureQ(struct AReinforceSubstitution* substituion, struct UReinforcePointComponent* BelongsTo, struct FVector& pos); // Function DFMGameplay.ReinforceAgent.EnqueueVehicleSubstitutionDepartureQ // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63f1760
	void EnqueueVehicleDepartureQ(struct AAISpawnChecker* Checker, struct UReinforcePointComponent* BelongsTo, struct FVector& pos); // Function DFMGameplay.ReinforceAgent.EnqueueVehicleDepartureQ // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63f1540
	void AddAircraftScheme(struct ASOLParatrooperAircraft* craft, struct ADFMAICharacter* trooper, struct FVector& pos, float T); // Function DFMGameplay.ReinforceAgent.AddAircraftScheme // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x63f1200
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforceForEvent
// Size: 0x3c0 (Inherited: 0x378)
class AReinforceForEvent : public AActor {
public:

	float radius; // 0x378(0x04)
	float ReinforceInterval; // 0x37c(0x04)
	bool StealthReplenish; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct TArray<struct FSubstitutionConfig> SpawnConfig; // 0x388(0x10)
	int32_t SpawnProbility; // 0x398(0x04)
	float SpawnDelay; // 0x39c(0x04)
	char pad_3A0[0x8]; // 0x3a0(0x08)
	struct UReinforcePointComponent* ReinforcePointComponent; // 0x3a8(0x08)
	struct UDramaLocationComponent* DramaLocationComponent; // 0x3b0(0x08)
	float ReinforceTimer; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)

	void SpawnVehicleAndAI(struct TArray<struct AAISpawnChecker*>& CheckerList, struct FVector& AssemblePos, struct UReinforcePointComponent* Where); // Function DFMGameplay.ReinforceForEvent.SpawnVehicleAndAI // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void SpawnAllReinforce(); // Function DFMGameplay.ReinforceForEvent.SpawnAllReinforce // (Final|Native|Public) // @ game+0x63f2410
	bool IsReadyDeparture(); // Function DFMGameplay.ReinforceForEvent.IsReadyDeparture // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x35a2c00
	int32_t GetVehicleCapacity(); // Function DFMGameplay.ReinforceForEvent.GetVehicleCapacity // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x63f1c10
	void EnqueueVehicleDepartureQ(struct AAISpawnChecker* Checker, struct UReinforcePointComponent* BelongsTo, struct FVector& pos); // Function DFMGameplay.ReinforceForEvent.EnqueueVehicleDepartureQ // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63f1650
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforceSubsystem
// Size: 0x88 (Inherited: 0x38)
class UReinforceSubsystem : public UWorldSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)

	void ReinforceSubsystem_OnSOLTimelineStartEventStateChange(enum class ESOLIntroEventState SOLIntroEventState); // Function DFMGameplay.ReinforceSubsystem.ReinforceSubsystem_OnSOLTimelineStartEventStateChange // (Final|Native|Public) // @ game+0x63f21b0
	bool STATIC_GetReinforceShoutByName(struct UObject* WorldContext, struct FName& Name, struct FText& ShoutText, struct UGPAudioEventAsset*& ShoutAudio); // Function DFMGameplay.ReinforceSubsystem.GetReinforceShoutByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x63f1a50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReinforceSubstitution
// Size: 0x3b0 (Inherited: 0x378)
class AReinforceSubstitution : public AActor {
public:

	struct TArray<struct FSubstitutionConfig> Configs; // 0x378(0x10)
	int32_t ThresHold; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct TArray<float> Posibility; // 0x390(0x10)
	struct FName AOIName; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	struct AAISpawnChecker* SpawnSubstituteReinforces(); // Function DFMGameplay.ReinforceSubstitution.SpawnSubstituteReinforces // (Final|Native|Public|BlueprintCallable) // @ game+0x63f2430
	void EmitSubstitionEffect(); // Function DFMGameplay.ReinforceSubstitution.EmitSubstitionEffect // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReloadAmmoHudInterface
// Size: 0x30 (Inherited: 0x30)
class UReloadAmmoHudInterface : public UInterface {
public:


	void ShowRouletteView(); // Function DFMGameplay.ReloadAmmoHudInterface.ShowRouletteView // (Native|Public) // @ game+0xbd3040
	void HideRouletteView(bool bNeedSetPendingAmmo); // Function DFMGameplay.ReloadAmmoHudInterface.HideRouletteView // (Native|Public) // @ game+0x1762a00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ReplicationDispatchComponent
// Size: 0x1b0 (Inherited: 0x100)
class UReplicationDispatchComponent : public UActorComponent {
public:

	struct TMap<struct FName, struct FReplicateVariableInfo> RepVarInfoMap; // 0x100(0x50)
	struct TArray<struct FReplicateBool> BoolDatas; // 0x150(0x10)
	struct TArray<struct FReplicateInt> IntDatas; // 0x160(0x10)
	struct TArray<struct FReplicateFloat> FloatDatas; // 0x170(0x10)
	struct TArray<struct FReplicateEnum> EnumDatas; // 0x180(0x10)
	struct TArray<struct FReplicateName> NameDatas; // 0x190(0x10)
	struct TArray<struct FReplicateObject> ObjectDatas; // 0x1a0(0x10)

	void OnRep_ObjectDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_ObjectDatas // (Final|Native|Protected) // @ game+0x63f81d0
	void OnRep_NameDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_NameDatas // (Final|Native|Protected) // @ game+0x63f81b0
	void OnRep_IntDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_IntDatas // (Final|Native|Protected) // @ game+0x63f8170
	void OnRep_FloatDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_FloatDatas // (Final|Native|Protected) // @ game+0x63f8150
	void OnRep_EnumDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_EnumDatas // (Final|Native|Protected) // @ game+0x63f8130
	void OnRep_BoolDatas(); // Function DFMGameplay.ReplicationDispatchComponent.OnRep_BoolDatas // (Final|Native|Protected) // @ game+0x63f80f0
	void STATIC_MarkReplicateValueChange(struct UObject* WorldContextObject, struct FName VariableName); // Function DFMGameplay.ReplicationDispatchComponent.MarkReplicateValueChange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x63f7f60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RoleLoadComponent
// Size: 0x168 (Inherited: 0x100)
class URoleLoadComponent : public UActorComponent {
public:

	char pad_100[0x1]; // 0x100(0x01)
	enum class ERoleLoadType CurrentRoleLoadType; // 0x101(0x01)
	char pad_102[0x2]; // 0x102(0x02)
	int32_t LoadLevel; // 0x104(0x04)
	char pad_108[0x4]; // 0x108(0x04)
	float MiddleOverLoadThreshold; // 0x10c(0x04)
	char pad_110[0x10]; // 0x110(0x10)
	bool bForbidOverloadBuff; // 0x120(0x01)
	char pad_121[0xf]; // 0x121(0x0f)
	struct UGPAttributeSetOther* AttributeSetOther; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)
	struct UDFMCharacterBuffEntityRoleLoad* CurrentBuffEffect; // 0x140(0x08)
	/*struct FMulticastInlineDelegate*/char OnSuperOverloadValueChange[0x10]; // 0x148(0x10)
	/*struct FMulticastInlineDelegate*/char OnOverloadValueChange[0x10]; // 0x158(0x10)

	void ServerOnClientMatchStart(); // Function DFMGameplay.RoleLoadComponent.ServerOnClientMatchStart // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1e36270
	void OnSpaceMarkedDirty(); // Function DFMGameplay.RoleLoadComponent.OnSpaceMarkedDirty // (Final|Native|Protected) // @ game+0x63f81f0
	void OnRep_LoadLevel(); // Function DFMGameplay.RoleLoadComponent.OnRep_LoadLevel // (Final|Native|Protected) // @ game+0x63f8190
	void OnRep_CurrentRoleLoadType(); // Function DFMGameplay.RoleLoadComponent.OnRep_CurrentRoleLoadType // (Final|Native|Protected) // @ game+0x63f8110
	void OnPossessedBy(); // Function DFMGameplay.RoleLoadComponent.OnPossessedBy // (Native|Protected) // @ game+0x1e377d0
	void OnClientMatchStart(); // Function DFMGameplay.RoleLoadComponent.OnClientMatchStart // (Final|Native|Protected) // @ game+0x63f8050
	void OnCharacterReborn(); // Function DFMGameplay.RoleLoadComponent.OnCharacterReborn // (Final|Native|Protected) // @ game+0x63f8030
	void NotifyServerClientMatchStart(); // Function DFMGameplay.RoleLoadComponent.NotifyServerClientMatchStart // (Final|Native|Protected) // @ game+0x63f8010
	bool GetUsingLoadItem(); // Function DFMGameplay.RoleLoadComponent.GetUsingLoadItem // (Final|Native|Public|Const) // @ game+0x63f7f30
	float GetSuperOverLoadThreshold(); // Function DFMGameplay.RoleLoadComponent.GetSuperOverLoadThreshold // (Final|Native|Public|Const) // @ game+0x63f7f00
	float GetOverLoadThreshold(); // Function DFMGameplay.RoleLoadComponent.GetOverLoadThreshold // (Final|Native|Public|Const) // @ game+0x63f7ed0
	int32_t GetLoadLevel(); // Function DFMGameplay.RoleLoadComponent.GetLoadLevel // (Final|Native|Public|Const) // @ game+0x63f7ea0
	float GetCurrentRoleLoadValue(); // Function DFMGameplay.RoleLoadComponent.GetCurrentRoleLoadValue // (Final|Native|Public|Const) // @ game+0x63f7e70
	float CalculateAllCarryItemsWeight(); // Function DFMGameplay.RoleLoadComponent.CalculateAllCarryItemsWeight // (Final|Native|Public) // @ game+0x63f7e40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotifyState_MotionCorrectionSection
// Size: 0x48 (Inherited: 0x38)
class UAnimNotifyState_MotionCorrectionSection : public UAnimNotifyState {
public:

	enum class EMotionCorrectionTargetKey TargetKey; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName NotifyName; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISceneAnnotationDatabase
// Size: 0x140 (Inherited: 0x38)
class UAISceneAnnotationDatabase : public UWorldSubsystem {
public:

	char pad_38[0xb0]; // 0x38(0xb0)
	/*struct TSet<struct AAISceneAnnotation*>*/char AnnotationSet[0x50]; // 0xe8(0x50)
	char pad_138[0x8]; // 0x138(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SceneSkeleteMeshActor
// Size: 0x410 (Inherited: 0x400)
class ASceneSkeleteMeshActor : public ASkeletalMeshActor {
public:

	char pad_400[0x8]; // 0x400(0x08)
	struct UGeneralSignificanceComponent* SignificanceComponent; // 0x408(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ScreenEffectBenchmark
// Size: 0x430 (Inherited: 0x378)
class AScreenEffectBenchmark : public AActor {
public:

	struct UDataTable* ScreenEffectDataTable; // 0x378(0x08)
	char pad_380[0xb0]; // 0x380(0xb0)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ShellingRedZone
// Size: 0x388 (Inherited: 0x378)
class AShellingRedZone : public AActor {
public:

	struct UBoxComponent* BoxComponent; // 0x378(0x08)
	char pad_380[0x8]; // 0x380(0x08)

	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function DFMGameplay.ShellingRedZone.OnOverlapBegin // (Final|Native|Public) // @ game+0x63fd4c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SignificanceEnableTriggerActor
// Size: 0x398 (Inherited: 0x378)
class ASignificanceEnableTriggerActor : public AActor {
public:

	struct UBoxComponent* BoxComponent; // 0x378(0x08)
	int32_t LimitedCharacterNum; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct TArray<struct ADFMCharacter*> AllCharacterInBox; // 0x388(0x10)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.SignificanceEnableTriggerActor.OnOverlapEnd // (Native|Protected) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.SignificanceEnableTriggerActor.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x36ce950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SignificanceSystem
// Size: 0xe0 (Inherited: 0x60)
class USignificanceSystem : public USignificanceUtility {
public:

	char pad_60[0x80]; // 0x60(0x80)

	void OnSomeActorStopLocalFocus(struct AActor* CHARACTER); // Function DFMGameplay.SignificanceSystem.OnSomeActorStopLocalFocus // (Final|Native|Private) // @ game+0x63fd880
	void OnSomeActorStartLocalFocus(struct AActor* CHARACTER); // Function DFMGameplay.SignificanceSystem.OnSomeActorStartLocalFocus // (Final|Native|Private) // @ game+0x63fd800
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SimulationGridMap
// Size: 0x108 (Inherited: 0x30)
class USimulationGridMap : public UObject {
public:

	char pad_30[0x28]; // 0x30(0x28)
	struct ACharacterSimulationLODSystem* LODSystem; // 0x58(0x08)
	struct TArray<struct UCharacterLODComponent*> LODComponents; // 0x60(0x10)
	struct TArray<struct USimulationLODPerceptionComponent*> PerceptionComponents; // 0x70(0x10)
	struct TArray<struct FSimulationGrid> Grids; // 0x80(0x10)
	char pad_90[0x78]; // 0x90(0x78)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterSimulationLODSystem
// Size: 0x790 (Inherited: 0x378)
class ACharacterSimulationLODSystem : public ALevelSubsystem {
public:

	char pad_378[0x30]; // 0x378(0x30)
	bool bDrawDebug; // 0x3a8(0x01)
	char pad_3A9[0x7]; // 0x3a9(0x07)
	struct TArray<struct FResourcePoolConfig> ResourcePoolConfig; // 0x3b0(0x10)
	char pad_3C0[0x20]; // 0x3c0(0x20)
	bool bEnableUpdateCostFromStat; // 0x3e0(0x01)
	char pad_3E1[0xaf]; // 0x3e1(0xaf)
	struct TMap<struct UClass*, struct FLODSolutionSet> SolutionSetMap; // 0x490(0x50)
	struct TArray<struct UCharacterLODComponent*> PendingRegLODComponent; // 0x4e0(0x10)
	struct TArray<struct USimulationLODPerceptionComponent*> PendingRegPerceptionComponent; // 0x4f0(0x10)
	struct TArray<struct UCharacterLODComponent*> ActiveLODComponents; // 0x500(0x10)
	struct TArray<struct UCharacterLODComponent*> InactiveLODComponents; // 0x510(0x10)
	/*struct TSet<struct UCharacterLODComponent*>*/char CoolingDownLODComponents[0x50]; // 0x520(0x50)
	/*struct TSet<struct UCharacterLODComponent*>*/char IgnoreLODComponents[0x50]; // 0x570(0x50)
	struct TArray<struct FResourcePool> ResourcePools; // 0x5c0(0x10)
	char pad_5D0[0xd0]; // 0x5d0(0xd0)
	struct TMap<struct FStatKey, struct UCharacterLODFeatureLevel*> StatMap; // 0x6a0(0x50)
	char pad_6F0[0x10]; // 0x6f0(0x10)
	struct USimulationGridMap* GridMap; // 0x700(0x08)
	char pad_708[0x88]; // 0x708(0x88)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SimulationLODPerceptionComponent
// Size: 0x108 (Inherited: 0x100)
class USimulationLODPerceptionComponent : public UActorComponent {
public:

	struct AController* perceptionOwner; // 0x100(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLCurrencyInGameComponent
// Size: 0x178 (Inherited: 0x100)
class USOLCurrencyInGameComponent : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	float CurrencyInGame; // 0x110(0x04)
	char pad_114[0x14]; // 0x114(0x14)
	struct TMap<enum class ECurrencyChangeReason, float> ValueOfReasons; // 0x128(0x50)

	void SetCurrency(float Currency); // Function DFMGameplay.SOLCurrencyInGameComponent.SetCurrency // (Final|Native|Public|BlueprintCallable) // @ game+0x63fdd10
	void ServerPlunderFromDeadbody(struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.SOLCurrencyInGameComponent.ServerPlunderFromDeadbody // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x360bad0
	void ServerBuyShopStationItem(struct AInteractor_ShopStation* ShopStation, struct FPlayerPurchaseInfo RequestPurchaseInfo); // Function DFMGameplay.SOLCurrencyInGameComponent.ServerBuyShopStationItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63fdb00
	void ServerAddOrConsumeCurrency(float InValue, bool bAdd, enum class ECurrencyChangeReason reason); // Function DFMGameplay.SOLCurrencyInGameComponent.ServerAddOrConsumeCurrency // (Final|Native|Public|BlueprintCallable) // @ game+0x63fd9f0
	void OnRep_CurrencyInGame(); // Function DFMGameplay.SOLCurrencyInGameComponent.OnRep_CurrencyInGame // (Final|Native|Protected) // @ game+0x63fd6c0
	float GetValueOfReason(enum class ECurrencyChangeReason reason); // Function DFMGameplay.SOLCurrencyInGameComponent.GetValueOfReason // (Final|Native|Public|BlueprintCallable) // @ game+0x63fce70
	struct FInventoryItemInfo GetCurrencyItem(); // Function DFMGameplay.SOLCurrencyInGameComponent.GetCurrencyItem // (Final|Native|Public|BlueprintCallable) // @ game+0x63fcde0
	float GetCurrency(); // Function DFMGameplay.SOLCurrencyInGameComponent.GetCurrency // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb4a0a0
	void GainCurrencyFromQuest(struct USOLQAQuestObjectionItem* QAQuestObjectionItem, float ContractReward); // Function DFMGameplay.SOLCurrencyInGameComponent.GainCurrencyFromQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x63fcd20
	void GainCurrencyFromGM(float Value, int64_t FakeQuestId); // Function DFMGameplay.SOLCurrencyInGameComponent.GainCurrencyFromGM // (Final|Native|Public|BlueprintCallable) // @ game+0x63fcc50
	void ConsumeCurrencyFromGM(float Value); // Function DFMGameplay.SOLCurrencyInGameComponent.ConsumeCurrencyFromGM // (Final|Native|Public|BlueprintCallable) // @ game+0x63fcb00
	void ConsumeCurrencyByExitPoint(float ConsumeValue); // Function DFMGameplay.SOLCurrencyInGameComponent.ConsumeCurrencyByExitPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x63fca80
	void ClientNotifySearchingDeadBodyState(struct AInventoryPickup_DeadBody* Deadbody, bool bStartOrDone); // Function DFMGameplay.SOLCurrencyInGameComponent.ClientNotifySearchingDeadBodyState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x63fc990
	void ClientNotifyBuyResult(bool bSuccess); // Function DFMGameplay.SOLCurrencyInGameComponent.ClientNotifyBuyResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e17f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLDecalActor
// Size: 0x3b8 (Inherited: 0x378)
class ASOLDecalActor : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct FName DecalFXName; // 0x380(0x08)
	struct FName TargetStartSizeParameterName; // 0x388(0x08)
	bool bPreLoadFX; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct UFXResourceContainerComponent* DecalEffectComp; // 0x398(0x08)
	int32_t DecalFXCompHandle; // 0x3a0(0x04)
	struct FName TargetDecalId; // 0x3a4(0x08)
	struct FVector TargetDecalSize; // 0x3ac(0x0c)

	void ShowDecalEffect(bool bShow); // Function DFMGameplay.SOLDecalActor.ShowDecalEffect // (Final|Native|Public) // @ game+0x63fe080
	void SetTargetDecalSize(struct FVector& InDecalSize); // Function DFMGameplay.SOLDecalActor.SetTargetDecalSize // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63fdf20
	void SetTargetDecalId(struct FName& InDecalId); // Function DFMGameplay.SOLDecalActor.SetTargetDecalId // (Final|Native|Public|HasOutParms) // @ game+0x63fde90
	void ClientSetupDecalEffectComp(); // Function DFMGameplay.SOLDecalActor.ClientSetupDecalEffectComp // (Final|Native|Public) // @ game+0x63fca60
	void ClientDeactivateDecalEffect(); // Function DFMGameplay.SOLDecalActor.ClientDeactivateDecalEffect // (Final|Native|Public|Const) // @ game+0x63fc930
	void ClientActivateDecalEffect(); // Function DFMGameplay.SOLDecalActor.ClientActivateDecalEffect // (Final|Native|Public) // @ game+0x63fc910
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLDecalField
// Size: 0x3e0 (Inherited: 0x378)
class ASOLDecalField : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct UClass* SOLDecalActorToSpawn; // 0x380(0x08)
	struct TArray<struct FSOLDecalCombineInfo> SOLDecalCombineInfos; // 0x388(0x10)
	struct TArray<struct FName> TargetSOLDecalName; // 0x398(0x10)
	struct TArray<struct ADFMCharacter*> EnteredCharacters; // 0x3a8(0x10)
	struct TArray<struct ADFMCharacter*> LeavedCharacters; // 0x3b8(0x10)
	struct TArray<struct FSOLDecalCombineActors> SOLDecalCombineActorsArray; // 0x3c8(0x10)
	struct UShapeComponent* DecalVolumeComp; // 0x3d8(0x08)

	struct ASOLDecalActor* SpawnSOLDecalActor(struct FTransform& Trans); // Function DFMGameplay.SOLDecalField.SpawnSOLDecalActor // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x63fe110
	void ShowDecalActor(bool bShow, struct FName& DecalID); // Function DFMGameplay.SOLDecalField.ShowDecalActor // (Final|Native|Public|HasOutParms) // @ game+0x63fdfb0
	void OnRep_LeavedCharacters(); // Function DFMGameplay.SOLDecalField.OnRep_LeavedCharacters // (Final|Native|Private) // @ game+0x63fd700
	void OnRep_EnteredCharacters(); // Function DFMGameplay.SOLDecalField.OnRep_EnteredCharacters // (Final|Native|Private) // @ game+0x63fd6e0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.SOLDecalField.OnOverlapEnd // (Final|Native|Private) // @ game+0x63fd580
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.SOLDecalField.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x63fd2c0
	struct UShapeComponent* GetDecalVolumeComp(); // Function DFMGameplay.SOLDecalField.GetDecalVolumeComp // (Final|Native|Private) // @ game+0x63fce20
	void EnterOrLeaveSOLDecalField(struct ADFMCharacter* DFMCharacter, bool bEnterOrLeave); // Function DFMGameplay.SOLDecalField.EnterOrLeaveSOLDecalField // (Final|Native|Private) // @ game+0x63fcb80
	void ClientGenerateSOLDecalActors(); // Function DFMGameplay.SOLDecalField.ClientGenerateSOLDecalActors // (Final|Native|Public) // @ game+0x63fc970
	void ClientDestroySOLDecalActors(); // Function DFMGameplay.SOLDecalField.ClientDestroySOLDecalActors // (Final|Native|Public) // @ game+0x63fc950
	struct UShapeComponent* BP_GetDecalVolumeComp(); // Function DFMGameplay.SOLDecalField.BP_GetDecalVolumeComp // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventIndicator
// Size: 0x3e0 (Inherited: 0x378)
class ASOLEventIndicator : public AActor {
public:

	struct FSoftObjectPath IconImagePath; // 0x378(0x18)
	struct FText EventName; // 0x390(0x18)
	float BigMapWorldRange; // 0x3a8(0x04)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct FText EventDescription; // 0x3b0(0x18)
	struct FSoftObjectPath DescImagePath; // 0x3c8(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLFakeParatrooperGroup
// Size: 0x3a8 (Inherited: 0x378)
class ASOLFakeParatrooperGroup : public AActor {
public:

	struct USceneComponent* SceneRoot; // 0x378(0x08)
	struct USkeletalMeshComponent* ParatrooperGroupMesh; // 0x380(0x08)
	char pad_388[0x20]; // 0x388(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLFakeParatrooperSpawner
// Size: 0x3e8 (Inherited: 0x378)
class ASOLFakeParatrooperSpawner : public AActor {
public:

	struct USceneComponent* SceneRoot; // 0x378(0x08)
	struct UArrowComponent* AircraftDirectionArrow; // 0x380(0x08)
	struct UArrowComponent* ParatrooperDirectionArrow; // 0x388(0x08)
	struct UClass* AircraftClass; // 0x390(0x08)
	struct UClass* ParatrooperClass; // 0x398(0x08)
	float FlightHeight; // 0x3a0(0x04)
	float FlightDistance; // 0x3a4(0x04)
	float FlightSpeed; // 0x3a8(0x04)
	float StartDropDistance; // 0x3ac(0x04)
	int32_t ParatrooperCount; // 0x3b0(0x04)
	float ParatrooperInterval; // 0x3b4(0x04)
	float ParatrooperSpawnOffset; // 0x3b8(0x04)
	float ParatrooperDistance; // 0x3bc(0x04)
	float ParatrooperDistanceOffset; // 0x3c0(0x04)
	float ParatrooperInAirTime; // 0x3c4(0x04)
	char pad_3C8[0x20]; // 0x3c8(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLParatrooperAircraft
// Size: 0x390 (Inherited: 0x378)
class ASOLParatrooperAircraft : public AActor {
public:

	float Speed; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct FVector Direction; // 0x380(0x0c)
	char pad_38C[0x4]; // 0x38c(0x04)

	void Init(struct FVector InDir, float InSpeed, float LifeSpan); // Function DFMGameplay.SOLParatrooperAircraft.Init // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6402ac0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLPlayerQuestSystem
// Size: 0x420 (Inherited: 0x378)
class ASOLPlayerQuestSystem : public ALevelSubsystem {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct TMap<struct FQuestFullID, struct FQuestObjectiveRow> QuestObjectionCache; // 0x380(0x50)
	struct TMap<struct FQuestFullID, struct FDeliverQuestPerformanceRow> DeliverQuestPerformanceCache; // 0x3d0(0x50)

	void OnHandleClientQuestObjectionUpdate(int64_t UpdateQuestId, int64_t UpdateObjectionId, char ObjState, char ObjType); // Function DFMGameplay.SOLPlayerQuestSystem.OnHandleClientQuestObjectionUpdate // (Final|Native|Public) // @ game+0x6407460
	void OnAsyncLoadObjectionTable(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.SOLPlayerQuestSystem.OnAsyncLoadObjectionTable // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6406d80
	void OnAsyncLoadDeliverObjectionPerformanceTable(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.SOLPlayerQuestSystem.OnAsyncLoadDeliverObjectionPerformanceTable // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x6406ca0
	struct USOLPlayerQuestComponent* GetPlayerQuestComponent(); // Function DFMGameplay.SOLPlayerQuestSystem.GetPlayerQuestComponent // (Final|Native|Public) // @ game+0x6406c20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQuestItemBase
// Size: 0xa8 (Inherited: 0x30)
class USOLQuestItemBase : public UObject {
public:

	struct FString QuestName; // 0x30(0x10)
	int64_t QuestID; // 0x40(0x08)
	int32_t IsContract; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<struct USOLQuestObjectionItemBase*> QuestObjectionArr; // 0x50(0x10)
	char pad_60[0x48]; // 0x60(0x48)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQuestTLog
// Size: 0x160 (Inherited: 0x30)
class USOLQuestTLog : public UObject {
public:

	char pad_30[0xb0]; // 0x30(0xb0)
	/*struct TSet<struct AInteractor_SignalStation*>*/char SignalStationCache[0x50]; // 0xe0(0x50)
	char pad_130[0x30]; // 0x130(0x30)

	void SendTLog(); // Function DFMGameplay.SOLQuestTLog.SendTLog // (Final|Native|Public) // @ game+0x64079b0
	void OnQuestObjectionUpdate(uint64_t InPlayerUin, int64_t QuestID, int64_t QuestObjectionID, char ObjState, bool ShouldShowUpdateUI); // Function DFMGameplay.SOLQuestTLog.OnQuestObjectionUpdate // (Final|Native|Public) // @ game+0x6407820
	void OnControllerPossessPawnCalled(struct APlayerController* Conroller, struct APawn* Pawn); // Function DFMGameplay.SOLQuestTLog.OnControllerPossessPawnCalled // (Final|Native|Public) // @ game+0x6407020
	void OnCharacterDied(struct ACHARACTER* DeadCharactet, struct AActor* KillerActor); // Function DFMGameplay.SOLQuestTLog.OnCharacterDied // (Final|Native|Public) // @ game+0x6406e60
	void InitQuestData(); // Function DFMGameplay.SOLQuestTLog.InitQuestData // (Final|Native|Public) // @ game+0x6406c80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRadarStationElevatorMovementComponent
// Size: 0x140 (Inherited: 0x140)
class USOLRadarStationElevatorMovementComponent : public UMovementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRocket
// Size: 0x3a8 (Inherited: 0x378)
class ASOLRocket : public AActor {
public:

	char pad_378[0x30]; // 0x378(0x30)

	void UpdateSkeletalMeshCompTickStatus(bool bIsCanTick); // Function DFMGameplay.SOLRocket.UpdateSkeletalMeshCompTickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x640b360
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRocketEvacuationEventProxy
// Size: 0x378 (Inherited: 0x378)
class ASOLRocketEvacuationEventProxy : public AActor {
public:


	void UpdateRelevantSkeletalMeshCompTickStatus(bool bIsCanTick); // Function DFMGameplay.SOLRocketEvacuationEventProxy.UpdateRelevantSkeletalMeshCompTickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x640b2d0
	void TriggerWireless(); // Function DFMGameplay.SOLRocketEvacuationEventProxy.TriggerWireless // (Final|Native|Public|BlueprintCallable) // @ game+0x640b200
	void TriggerSmokeDisappear1PExit(); // Function DFMGameplay.SOLRocketEvacuationEventProxy.TriggerSmokeDisappear1PExit // (Final|Native|Public|BlueprintCallable) // @ game+0x640b1e0
	void TriggerSmokeAppear(float Duration, enum class ERocketSmokeType Type); // Function DFMGameplay.SOLRocketEvacuationEventProxy.TriggerSmokeAppear // (Final|Native|Public|BlueprintCallable) // @ game+0x640b120
	void TriggerCanHackPC(); // Function DFMGameplay.SOLRocketEvacuationEventProxy.TriggerCanHackPC // (Final|Native|Public|BlueprintCallable) // @ game+0x640b100
	void TriggerCameraShake(struct FString CollectionName); // Function DFMGameplay.SOLRocketEvacuationEventProxy.TriggerCameraShake // (Final|Native|Public|BlueprintCallable) // @ game+0x640afe0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRocketSystemRadio
// Size: 0x3a8 (Inherited: 0x378)
class ASOLRocketSystemRadio : public AActor {
public:

	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char AudioAssetPath[0x28]; // 0x378(0x28)
	struct UGPAudioEventAsset* AudioAsset; // 0x3a0(0x08)

	void TriggerRocketSystemRadio(); // Function DFMGameplay.SOLRocketSystemRadio.TriggerRocketSystemRadio // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xbd2900
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTeamSystem
// Size: 0x3b8 (Inherited: 0x3b8)
class ASOLTeamSystem : public ATeamSystem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineAABullet
// Size: 0x3a0 (Inherited: 0x378)
class ASOLTimelineAABullet : public AActor {
public:

	float BulletSpeed; // 0x378(0x04)
	struct FName ExplosionEffect; // 0x37c(0x08)
	char pad_384[0x1c]; // 0x384(0x1c)

	void OnExplosionBP(); // Function DFMGameplay.SOLTimelineAABullet.OnExplosionBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimeLineEffectComponent
// Size: 0x108 (Inherited: 0x100)
class USOLTimeLineEffectComponent : public UActorComponent {
public:

	struct UGPAudioEventAsset* AudioEventAsset; // 0x100(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineHackPcFireRocket
// Size: 0x3c0 (Inherited: 0x378)
class ASOLTimelineHackPcFireRocket : public AActor {
public:

	float Play_FireRocket_CutScene_Delay; // 0x378(0x04)
	struct FName FireRocket_CutSceneTag; // 0x37c(0x08)
	enum class ESubtitleSequenceType FireRocket_SubtitleSequenceType; // 0x384(0x01)
	char pad_385[0x3]; // 0x385(0x03)
	struct FName FireRocket_SubtitleId; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)
	bool bDsHasFiredRocket; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	float JumpSecondOffsetTime; // 0x39c(0x04)
	char pad_3A0[0x18]; // 0x3a0(0x18)
	struct AGPSequenceActor* RePlaySequenceActor; // 0x3b8(0x08)

	void PlayFireRocketCutScene(); // Function DFMGameplay.SOLTimelineHackPcFireRocket.PlayFireRocketCutScene // (Final|Native|Private) // @ game+0x640fb50
	void OnRep_bDsHasFiredRocket(); // Function DFMGameplay.SOLTimelineHackPcFireRocket.OnRep_bDsHasFiredRocket // (Final|Native|Private) // @ game+0x640fab0
	void OnInteractItem(uint64_t Uin, struct AActor* Actor, enum class EInteractorType Type, struct FString Params); // Function DFMGameplay.SOLTimelineHackPcFireRocket.OnInteractItem // (Final|Native|Public) // @ game+0x640f800
	void OnEndSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.SOLTimelineHackPcFireRocket.OnEndSequence // (Final|Native|Private) // @ game+0x640f640
	void OnBeginSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.SOLTimelineHackPcFireRocket.OnBeginSequence // (Final|Native|Private) // @ game+0x640f5c0
	void OnBeginRePlaySequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.SOLTimelineHackPcFireRocket.OnBeginRePlaySequence // (Final|Native|Private) // @ game+0x640f540
	void MulticastPlayCutScene(uint64_t FireCharacterUin); // Function DFMGameplay.SOLTimelineHackPcFireRocket.MulticastPlayCutScene // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x61daa40
	void CloseSkeletalMeshTick(); // Function DFMGameplay.SOLTimelineHackPcFireRocket.CloseSkeletalMeshTick // (Final|Native|Private) // @ game+0x640f040
	void ClientReconnectPlayCutScene(); // Function DFMGameplay.SOLTimelineHackPcFireRocket.ClientReconnectPlayCutScene // (Final|Native|Private) // @ game+0x640f020
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineSkinMeshOptActor
// Size: 0x3a8 (Inherited: 0x378)
class ASOLTimelineSkinMeshOptActor : public AActor {
public:

	char pad_378[0x30]; // 0x378(0x30)

	void UpdateSkeletalMeshCompTickStatus(bool bIsCanTick); // Function DFMGameplay.SOLTimelineSkinMeshOptActor.UpdateSkeletalMeshCompTickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x640fee0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventTODConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventTODConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventLevelConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventLevelConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventDynamicRequestLevelConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventDynamicRequestLevelConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLIntroEventConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLIntroEventConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventCourseConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventCourseConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventPOIConfigManager
// Size: 0x48 (Inherited: 0x38)
class USOLEventPOIConfigManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimeLineComponnet
// Size: 0x308 (Inherited: 0x100)
class USOLTimeLineComponnet : public UActorComponent {
public:

	struct FString LevelPrefix; // 0x100(0x10)
	struct FString IntroEventAIConfig; // 0x110(0x10)
	struct FString LDPrefix; // 0x120(0x10)
	struct FString HDPrefix; // 0x130(0x10)
	struct ADFMGameState* GameState; // 0x140(0x08)
	enum class ESOLIntroEventState SOLIntroEventState; // 0x148(0x01)
	char pad_149[0x7]; // 0x149(0x07)
	struct TArray<uint64_t> SOLEventIdArray; // 0x150(0x10)
	struct TArray<enum class ESOLEventState> SOLEventStateArray; // 0x160(0x10)
	struct ASOLTimelineMajorEvent* SelectedMajorEvent; // 0x170(0x08)
	struct ASOLEvacuationEvent* SelectedEvacuationEvent; // 0x178(0x08)
	bool bInit; // 0x180(0x01)
	char pad_181[0x127]; // 0x181(0x127)
	struct TArray<struct FSOLEventActiveInfo> EventActiveInfoList; // 0x2a8(0x10)
	char pad_2B8[0x50]; // 0x2b8(0x50)

	void Terminate(); // Function DFMGameplay.SOLTimeLineComponnet.Terminate // (Final|Native|Public) // @ game+0x640fec0
	void SetSOLIntroEventState(enum class ESOLIntroEventState InIntroEventState, struct TArray<uint64_t>& EventIds); // Function DFMGameplay.SOLTimeLineComponnet.SetSOLIntroEventState // (Final|Native|Public|HasOutParms) // @ game+0x640fbb0
	void SendBeginWirelessInternal(); // Function DFMGameplay.SOLTimeLineComponnet.SendBeginWirelessInternal // (Final|Native|Public) // @ game+0x640fb90
	void SendBeginWireless(); // Function DFMGameplay.SOLTimeLineComponnet.SendBeginWireless // (Final|Native|Public) // @ game+0x640fb70
	void OnTODActorLoad(struct AActor* TODActor); // Function DFMGameplay.SOLTimeLineComponnet.OnTODActorLoad // (Final|Native|Protected) // @ game+0x640fad0
	void OnRep_StartEventEnable(); // Function DFMGameplay.SOLTimeLineComponnet.OnRep_StartEventEnable // (Final|Native|Public) // @ game+0x640fa70
	void OnRep_SOLEventIdArray(); // Function DFMGameplay.SOLTimeLineComponnet.OnRep_SOLEventIdArray // (Final|Native|Public) // @ game+0x640fa10
	void OnRep_SelectedEvacuationEvent(); // Function DFMGameplay.SOLTimeLineComponnet.OnRep_SelectedEvacuationEvent // (Final|Native|Public) // @ game+0x640fa50
	void OnRep_Init(); // Function DFMGameplay.SOLTimeLineComponnet.OnRep_Init // (Final|Native|Public) // @ game+0x640f9f0
	void OnRep_EventActiveInfoList(); // Function DFMGameplay.SOLTimeLineComponnet.OnRep_EventActiveInfoList // (Final|Native|Public) // @ game+0x640f9d0
	void OnGameLoadingEnd(int32_t MapID, enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.SOLTimeLineComponnet.OnGameLoadingEnd // (Final|Native|Protected) // @ game+0x640f740
	void OnGameFlowEnter(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.SOLTimeLineComponnet.OnGameFlowEnter // (Final|Native|Public) // @ game+0x640f6c0
	void Initialize(); // Function DFMGameplay.SOLTimeLineComponnet.Initialize // (Final|Native|Public) // @ game+0x640f460
	void InitGlobalTimeLineActor(); // Function DFMGameplay.SOLTimeLineComponnet.InitGlobalTimeLineActor // (Final|Native|Public) // @ game+0x640f440
	bool IfContainIntroEvent(struct TArray<uint64_t>& EventIds); // Function DFMGameplay.SOLTimeLineComponnet.IfContainIntroEvent // (Final|Native|Public|HasOutParms|Const) // @ game+0x640f360
	void GMOnTriggerTimeEventTimer(); // Function DFMGameplay.SOLTimeLineComponnet.GMOnTriggerTimeEventTimer // (Final|Native|Public) // @ game+0x640f210
	void GMOnTriggerTimeEvent(); // Function DFMGameplay.SOLTimeLineComponnet.GMOnTriggerTimeEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x640f1f0
	void GMForceMajorEvent(); // Function DFMGameplay.SOLTimeLineComponnet.GMForceMajorEvent // (Final|Native|Public) // @ game+0x640f1d0
	void GMForceEvacuationEvent(); // Function DFMGameplay.SOLTimeLineComponnet.GMForceEvacuationEvent // (Final|Native|Public) // @ game+0x640f1b0
	void GMChangeIntroEventState(struct FString EventIdsStr); // Function DFMGameplay.SOLTimeLineComponnet.GMChangeIntroEventState // (Final|Native|Public) // @ game+0x640f0f0
	struct FString GetEventIdsStr(struct TArray<uint64_t>& EventIds); // Function DFMGameplay.SOLTimeLineComponnet.GetEventIdsStr // (Final|Native|Public|HasOutParms|Const) // @ game+0x640f230
	bool EnableSpecificMajorEvent(struct FName EventTag); // Function DFMGameplay.SOLTimeLineComponnet.EnableSpecificMajorEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x640f060
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTrainMarshallingConfig
// Size: 0x38 (Inherited: 0x30)
class USOLTrainMarshallingConfig : public UObject {
public:

	struct FName Tag; // 0x30(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTrainHighValueBoxProxy
// Size: 0x410 (Inherited: 0x378)
class ASOLTrainHighValueBoxProxy : public AActor {
public:

	struct USceneComponent* SceneComponent; // 0x378(0x08)
	bool NeedShowIcon; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct FHighValueBoxInfo HighValueBoxInfo; // 0x388(0x60)
	struct FName HighValueBoxTag; // 0x3e8(0x08)
	float TryLoopShowHighValueBoxTime; // 0x3f0(0x04)
	float MaxTryLoopShowHighValueBoxTime; // 0x3f4(0x04)
	struct UHighValueBoxViewController* HighValueBoxViewController; // 0x3f8(0x08)
	struct AInventoryPickup_OpenBox* HighValueBox; // 0x400(0x08)
	float TryLoopShowHighValueBoxStartTime; // 0x408(0x04)
	char pad_40C[0x4]; // 0x40c(0x04)

	void TryLoopShowHighValueBox(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.TryLoopShowHighValueBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6413fc0
	void ShowIcon(struct FHighValueBoxInfo& InHighValueBoxInfo); // Function DFMGameplay.SOLTrainHighValueBoxProxy.ShowIcon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6413dc0
	bool ShowHighValueBox(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.ShowHighValueBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6413d90
	void ResetTryLoopShowHighValueBoxStartTime(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.ResetTryLoopShowHighValueBoxStartTime // (Final|Native|Public|BlueprintCallable) // @ game+0x6413b40
	void OnLoadedAllControllerClass(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.OnLoadedAllControllerClass // (Final|Native|Public) // @ game+0x6412f60
	void NtfOnSOLTrainHighValueBoxEvacuate(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.NtfOnSOLTrainHighValueBoxEvacuate // (Final|Native|Public|BlueprintCallable) // @ game+0x6412f40
	void HideHighValueBox(); // Function DFMGameplay.SOLTrainHighValueBoxProxy.HideHighValueBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6412ae0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLVoiceOverComponent
// Size: 0x2b0 (Inherited: 0x100)
class USOLVoiceOverComponent : public UActorComponent {
public:

	float EnterOverlapTriggerStopCD; // 0x100(0x04)
	float BeDamagedSubtitleStopCD; // 0x104(0x04)
	struct FString DecalBufferIdStr; // 0x108(0x10)
	bool bIfInSOLDecalField; // 0x118(0x01)
	bool bCanTriggerSubtitleGroup; // 0x119(0x01)
	bool bNeedShowDecal; // 0x11a(0x01)
	char pad_11B[0x1]; // 0x11b(0x01)
	struct FName CurSubtitleGroupId; // 0x11c(0x08)
	enum class EVoiceOverTriggerType CurVoiceOverTriggerType; // 0x124(0x01)
	char pad_125[0x3]; // 0x125(0x03)
	struct TMap<struct FName, int32_t> TargetSubtitleGroupIdxInfo; // 0x128(0x50)
	float LastLeaveTriggerOverlapTime; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct ADFMCharacter* CachedDFMCharacter; // 0x180(0x08)
	/*struct TSet<struct AInteractor_VoiceOver*>*/char EnteredInteractorVoiceOver[0x50]; // 0x188(0x50)
	struct TArray<struct ASOLDecalField*> EnteredSOLDecalFields; // 0x1d8(0x10)
	struct TArray<struct ASOLDecalField*> LeavedSOLDecalFields; // 0x1e8(0x10)
	/*struct TSet<struct FName>*/char VOSubtitleSeqFinishedSet[0x50]; // 0x1f8(0x50)
	/*struct TSet<struct FName>*/char VOSubtitleGroupCloseToFinishedSet[0x50]; // 0x248(0x50)
	char pad_298[0x18]; // 0x298(0x18)

	void StopSubtitleGroup(struct FName SubtitleGroupId); // Function DFMGameplay.SOLVoiceOverComponent.StopSubtitleGroup // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6413ef0
	void ShowDecal(bool bShow, struct FName& DecalID); // Function DFMGameplay.SOLVoiceOverComponent.ShowDecal // (Final|Native|Private|HasOutParms|Const) // @ game+0x6413cc0
	void SetLastLeaveTriggerOverlapTime(); // Function DFMGameplay.SOLVoiceOverComponent.SetLastLeaveTriggerOverlapTime // (Final|Native|Public) // @ game+0x6413ca0
	void SetCanTriggerSubtitleGroup(bool bValue); // Function DFMGameplay.SOLVoiceOverComponent.SetCanTriggerSubtitleGroup // (Final|Native|Public) // @ game+0x6413c10
	void ServerSetSubtitleSeqFinished(struct FName SubtitleSeqId); // Function DFMGameplay.SOLVoiceOverComponent.ServerSetSubtitleSeqFinished // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x63bb450
	void ServerSetSubtitleGroupCloseToFinished(struct FName SubtitleGroupId); // Function DFMGameplay.SOLVoiceOverComponent.ServerSetSubtitleGroupCloseToFinished // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x62c8c60
	void RequestSubtitleGroup(struct FName SubtitleGroupId, enum class ESubtitleSequenceType SubtitleSeqType, enum class EVoiceOverTriggerType VoiceOverTriggerType, struct AActor* SpeakerActor); // Function DFMGameplay.SOLVoiceOverComponent.RequestSubtitleGroup // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6413a00
	void OnTakeDamage(float HPDamage, float ArmorDamage); // Function DFMGameplay.SOLVoiceOverComponent.OnTakeDamage // (Final|Native|Public) // @ game+0x6413690
	void OnSubtitleSeqFinished(int32_t SubtitleIdx, struct FSubtitleSequenceInfo& SubtitleSeqInfo); // Function DFMGameplay.SOLVoiceOverComponent.OnSubtitleSeqFinished // (Final|Native|Private|HasOutParms) // @ game+0x6413490
	void OnSubtitleGroupInteractorKeyPressed(struct FSubtitleGroupInfo& SubtitleGroupInfo, bool bLooping); // Function DFMGameplay.SOLVoiceOverComponent.OnSubtitleGroupInteractorKeyPressed // (Final|Native|Private|HasOutParms) // @ game+0x6413260
	void OnRep_NeedShowDecal(); // Function DFMGameplay.SOLVoiceOverComponent.OnRep_NeedShowDecal // (Final|Native|Private) // @ game+0x6413220
	void OnPlayerRemoveBuffNtf(uint64_t BuffId, struct AActor* Maker, struct AActor* MakerInstigator, struct AActor* BuffOwner); // Function DFMGameplay.SOLVoiceOverComponent.OnPlayerRemoveBuffNtf // (Final|Native|Private) // @ game+0x64130d0
	void OnPlayerAddBuffNtf(uint64_t BuffId, struct AActor* Maker, struct AActor* MakerInstigator, struct AActor* BuffOwner); // Function DFMGameplay.SOLVoiceOverComponent.OnPlayerAddBuffNtf // (Final|Native|Private) // @ game+0x6412f80
	int32_t GetTargetSubtitleGroupIdx(struct FName& InSubtitleGroupId); // Function DFMGameplay.SOLVoiceOverComponent.GetTargetSubtitleGroupIdx // (Final|Native|Public|HasOutParms|Const) // @ game+0x6412a20
	struct ADFMCharacter* GetDFMCharacter(); // Function DFMGameplay.SOLVoiceOverComponent.GetDFMCharacter // (Final|Native|Protected) // @ game+0x64128c0
	void EnterOrLeaveVoiceOverOverlapArea(struct AInteractor_VoiceOver* InteractorVoiceOver, bool bEnterOrLeave); // Function DFMGameplay.SOLVoiceOverComponent.EnterOrLeaveVoiceOverOverlapArea // (Final|Native|Public) // @ game+0x64127f0
	void EnterOrLeaveSOLDecalField(struct ASOLDecalField* SOLDecalField, bool bEnterOrLeave); // Function DFMGameplay.SOLVoiceOverComponent.EnterOrLeaveSOLDecalField // (Final|Native|Public) // @ game+0x6412720
	void ClientSetTargetSubtitleGroupIdxInfo(struct FName& InSubtitleGroupId, int32_t InSubtitleGroupIdx); // Function DFMGameplay.SOLVoiceOverComponent.ClientSetTargetSubtitleGroupIdxInfo // (Final|Native|Public|HasOutParms) // @ game+0x6412630
	void ClientSetCurSubtitleGroupInfo(struct FName& InSubtitleGroupId, enum class EVoiceOverTriggerType InInVoiceOverTriggerType); // Function DFMGameplay.SOLVoiceOverComponent.ClientSetCurSubtitleGroupInfo // (Final|Native|Public|HasOutParms) // @ game+0x6412560
	bool CheckCanTriggerOverlapVO(struct FName& SubtitleGroupId, enum class ESubtitleSequenceType SubtitleSeqType, float& RemainCDTime); // Function DFMGameplay.SOLVoiceOverComponent.CheckCanTriggerOverlapVO // (Final|Native|Public|HasOutParms|Const) // @ game+0x64123b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnBPFunctionLibrary
// Size: 0x30 (Inherited: 0x30)
class USpawnBPFunctionLibrary : public UBlueprintFunctionLibrary {
public:


	struct TArray<struct FAINpcSelector> STATIC_MakeNpcArray_Internal(struct TArray<struct FAINpcSelector>& npcArray); // Function DFMGameplay.SpawnBPFunctionLibrary.MakeNpcArray_Internal // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x6412ce0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnBossSquad
// Size: 0x378 (Inherited: 0x378)
class ASpawnBossSquad : public AActor {
public:


	void SpawnBossSquad(); // Function DFMGameplay.SpawnBossSquad.SpawnBossSquad // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StaticActorWithSpecialEffect
// Size: 0x398 (Inherited: 0x378)
class AStaticActorWithSpecialEffect : public AActor {
public:

	struct UStaticMeshComponent* StaticMeshComp; // 0x378(0x08)
	struct UFXResourceContainerComponent* DefaultEffects; // 0x380(0x08)
	struct FName EffectNameRep; // 0x388(0x08)
	float EffectDistanceRep; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)

	void PlayStaticActorEffectInner(); // Function DFMGameplay.StaticActorWithSpecialEffect.PlayStaticActorEffectInner // (Final|Native|Public) // @ game+0x64138d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnerBPFunctionLibrary
// Size: 0x30 (Inherited: 0x30)
class USpawnerBPFunctionLibrary : public UBlueprintFunctionLibrary {
public:


	struct TArray<struct FAINpcSelector> STATIC_MakeNpcArray_Internal(struct TArray<struct FAINpcSelector>& npcArray); // Function DFMGameplay.SpawnerBPFunctionLibrary.MakeNpcArray_Internal // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x6412e10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.UserDefinedAITemplateDataManager
// Size: 0x40 (Inherited: 0x38)
class UUserDefinedAITemplateDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterSpawnInfo
// Size: 0x30 (Inherited: 0x30)
class UCharacterSpawnInfo : public UInterface {
public:


	struct TArray<struct FSpawnBaseAIInfo> GetSpawnBaseAIList(); // Function DFMGameplay.CharacterSpawnInfo.GetSpawnBaseAIList // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x64174b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnerManager
// Size: 0x4a0 (Inherited: 0x38)
class USpawnerManager : public UWorldSubsystem {
public:

	uint32_t LastCheckStuckTime; // 0x38(0x04)
	uint32_t CheckStuckInterval; // 0x3c(0x04)
	uint32_t MaxDistWithPlayer; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	int32_t AISpawnLimit; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	/*struct TSet<struct APrefecture*>*/char RegisteredPrefecture[0x50]; // 0x50(0x50)
	/*struct TSet<struct AAIAlertBroadcastVolume*>*/char RegisterdAlertVolumes[0x50]; // 0xa0(0x50)
	struct TMap<struct FString, struct TWeakObjectPtr<struct AAISpawnChecker>> RegisteredPointMap; // 0xf0(0x50)
	char pad_140[0xa0]; // 0x140(0xa0)
	struct TArray<struct ADFMAIController*> IdleBots; // 0x1e0(0x10)
	struct TArray<struct ADFMAIController*> Bots; // 0x1f0(0x10)
	struct TMap<int32_t, struct FSpawnerCheckerWeakList> SpawnFlagToChecker; // 0x200(0x50)
	struct TMap<struct FName, struct FDramaAreaWeakList> FlagToDramaArea; // 0x250(0x50)
	struct TMap<struct FName, struct FAIUnitSpawnWeakList> FlagToAIUnitSpawn; // 0x2a0(0x50)
	struct TMap<struct FName, struct FSpawnedCharacterWeakList> SpawnFlagToCharacter; // 0x2f0(0x50)
	struct TMap<struct FName, struct FSpawnedAerialVehicleWeakList> SpawnFlagToAerialVehicle; // 0x340(0x50)
	char pad_390[0x50]; // 0x390(0x50)
	struct UDataTable* DefaultNpcTemplateTable; // 0x3e0(0x08)
	struct UDataTable* DefaultGroupTemplateTable; // 0x3e8(0x08)
	struct TArray<struct ADFMCharacter*> ClientDeadAICharacter; // 0x3f0(0x10)
	char pad_400[0x20]; // 0x400(0x20)
	/*struct FMulticastInlineDelegate*/char OnAIReset[0x10]; // 0x420(0x10)
	char pad_430[0x18]; // 0x430(0x18)
	struct UPlayerMoniter* PlayerMonitor; // 0x448(0x08)
	struct UDataTable* SimulateAITemplate; // 0x450(0x08)
	struct UDataTable* SimulateAIConfig; // 0x458(0x08)
	struct FName NpcName; // 0x460(0x08)
	int32_t LastUpdateTime; // 0x468(0x04)
	int32_t PlayerSchemeId; // 0x46c(0x04)
	struct UClass* BotControllerClass; // 0x470(0x08)
	char pad_478[0x10]; // 0x478(0x10)
	int32_t TotalAINum; // 0x488(0x04)
	int32_t CurrentAINum; // 0x48c(0x04)
	int32_t CurrentTickAINum; // 0x490(0x04)
	int32_t TotalBossNum; // 0x494(0x04)
	int32_t CurrentBossNum; // 0x498(0x04)
	char pad_49C[0x4]; // 0x49c(0x04)

	void STATIC_StopAllSpawnCheckers(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.StopAllSpawnCheckers // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6419550
	void STATIC_StopAllCheckersAndDestorySpawnedActors(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.StopAllCheckersAndDestorySpawnedActors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x64194e0
	struct ADFMCharacter* STATIC_SpawnTestAI(struct UObject* WorldContextObject, struct FName NpcName, struct FVector Location); // Function DFMGameplay.SpawnerManager.SpawnTestAI // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x64193d0
	struct AController* STATIC_SpawnBotEx(struct UObject* WorldContextObject, struct UClass* ControllerClass, struct FVector SpawnLoc, int32_t CampId, int32_t TeamId, struct FString botName); // Function DFMGameplay.SpawnerManager.SpawnBotEx // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x6419190
	struct ADFMCharacter* SpawnAILabBot(struct UObject* WorldContextObject, struct FName NpcName, struct FVector Location, int32_t Style); // Function DFMGameplay.SpawnerManager.SpawnAILabBot // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6419030
	void STATIC_SetSpawnerCheckerPause(struct UObject* WorldContextObject, int32_t Flag, float Duration, int32_t Count); // Function DFMGameplay.SpawnerManager.SetSpawnerCheckerPause // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418f00
	void STATIC_SetPMCBotTemplete(struct UObject* WorldContextObject, struct UDataTable* NpcDataTable, struct UDataTable* GroupDataTable, struct FName botName); // Function DFMGameplay.SpawnerManager.SetPMCBotTemplete // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418dd0
	void STATIC_SetPMCBotNum(struct UObject* WorldContextObject, int32_t MaxNum, float IdleBotPercent, int32_t MinTeamMemberNum, int32_t MaxTeamMemberNum); // Function DFMGameplay.SpawnerManager.SetPMCBotNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418c60
	void STATIC_SetCurrentNpcTemplateTable(struct UObject* WorldContextObject, struct UDataTable* NpcTemplateTable); // Function DFMGameplay.SpawnerManager.SetCurrentNpcTemplateTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418bb0
	void STATIC_SetCurrentAIDifficultyLevel(struct UObject* WorldContextObject, int32_t Difficulty); // Function DFMGameplay.SpawnerManager.SetCurrentAIDifficultyLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418b00
	void STATIC_SetAvaliableSpawnerTokenCount(struct UObject* WorldContextObject, struct FName Key, int32_t Num); // Function DFMGameplay.SpawnerManager.SetAvaliableSpawnerTokenCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418a10
	void STATIC_SendKillEvent(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.SendKillEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418960
	void STATIC_SendFightStateEvent(struct UObject* WorldContextObject, enum class EGPCharacterFightStateType State, struct FName Tag); // Function DFMGameplay.SpawnerManager.SendFightStateEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6418870
	void ResetAI(); // Function DFMGameplay.SpawnerManager.ResetAI // (Final|Native|Public|BlueprintCallable) // @ game+0x6418850
	void ReportStuckInfo(struct ADFMAICharacter* CHARACTER); // Function DFMGameplay.SpawnerManager.ReportStuckInfo // (Final|Native|Public) // @ game+0x64187d0
	int32_t STATIC_RegisterSpawnerToken(struct UObject* WorldContextObject, struct FName Key, int32_t Weight); // Function DFMGameplay.SpawnerManager.RegisterSpawnerToken // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x64186e0
	void STATIC_RandomDifficultyAllItem(struct UObject* WorldContextObject, struct TArray<struct FSpawnBaseAIInfo> AIInfo, int32_t RoomId); // Function DFMGameplay.SpawnerManager.RandomDifficultyAllItem // (Final|Native|Static|Public) // @ game+0x6418490
	void OnSpawnedCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.SpawnerManager.OnSpawnedCharacterDied // (Final|Native|Public) // @ game+0x6418390
	void OnSpawnedCharacterDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.SpawnerManager.OnSpawnedCharacterDestroyed // (Final|Native|Public) // @ game+0x6418210
	void OnSpawnedAerialVehicleDied(struct AAerialVehicle* AerialVehicle); // Function DFMGameplay.SpawnerManager.OnSpawnedAerialVehicleDied // (Final|Native|Public) // @ game+0x6418110
	void OnGlobalAISpawn(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.SpawnerManager.OnGlobalAISpawn // (Final|Native|Public) // @ game+0x6418090
	void OnGlobalAIDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.SpawnerManager.OnGlobalAIDied // (Final|Native|Public) // @ game+0x6417f90
	void OnGlobalAIChangeTickEnabled(bool bEnabled); // Function DFMGameplay.SpawnerManager.OnGlobalAIChangeTickEnabled // (Final|Native|Public) // @ game+0x6417f00
	struct USpawnerManager* STATIC_GetSpawnManager(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.GetSpawnManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417530
	int32_t STATIC_GetSpawnedCharacterNumGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedCharacterNumGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417e40
	struct TArray<struct ACHARACTER*> STATIC_GetSpawnedCharacterGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedCharacterGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417ce0
	struct TArray<struct ADFMAICharacter*> STATIC_GetSpawnedBossGlobal(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.GetSpawnedBossGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417bc0
	int32_t STATIC_GetSpawnedAliveCharacterNumGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedAliveCharacterNumGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417b00
	int32_t STATIC_GetSpawnedAliveAerialVehicleNumGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedAliveAerialVehicleNumGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417a40
	struct TArray<struct AAIController*> STATIC_GetSpawnedAIControllerGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedAIControllerGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x64175b0
	int32_t STATIC_GetSpawnedAerialVehicleNumGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedAerialVehicleNumGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417980
	struct TArray<struct AAerialVehicle*> STATIC_GetSpawnedAerialVehicleGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedAerialVehicleGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417820
	struct TArray<struct AActor*> STATIC_GetSpawnedActorGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetSpawnedActorGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417710
	enum class ESpawnBossRule GetSpawnBossRule(); // Function DFMGameplay.SpawnerManager.GetSpawnBossRule // (Final|Native|Public|BlueprintCallable) // @ game+0x6417500
	struct TArray<struct ADramaArea*> STATIC_GetDramaAreasGlobal(struct UObject* WorldContextObject, struct FName Tag); // Function DFMGameplay.SpawnerManager.GetDramaAreasGlobal // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6417350
	struct UDataTable* STATIC_GetCurrentNpcTemplateTable(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.GetCurrentNpcTemplateTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x64172d0
	int32_t STATIC_GetCurrentAIDifficultyLevel(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.GetCurrentAIDifficultyLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6417250
	struct TArray<struct FSpawnBaseAIInfo> STATIC_GetAllSpawnBaseAIList(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.GetAllSpawnBaseAIList // (Final|Native|Static|Public) // @ game+0x64171b0
	struct FVector STATIC_GetActorLocationTest(struct AActor* Actor); // Function DFMGameplay.SpawnerManager.GetActorLocationTest // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x64170d0
	struct USpawnerManager* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6417050
	struct AAISpawnChecker* STATIC_FindSpawnPointByUniqueKey(struct UObject* WorldContextObject, struct FString Key); // Function DFMGameplay.SpawnerManager.FindSpawnPointByUniqueKey // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6416e70
	struct AAISpawnChecker* STATIC_FindCheckerByUniqueKey(struct UObject* WorldContextObject, struct FString Key); // Function DFMGameplay.SpawnerManager.FindCheckerByUniqueKey // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6416d10
	void STATIC_DestoryAllSpawnedActors(struct UObject* WorldContextObject); // Function DFMGameplay.SpawnerManager.DestoryAllSpawnedActors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6416ca0
	void CheckStuck(); // Function DFMGameplay.SpawnerManager.CheckStuck // (Final|Native|Public) // @ game+0x6416c80
	void STATIC_AddAvaliableSpawnerTokenCount(struct UObject* WorldContextObject, struct FName Key, int32_t Num); // Function DFMGameplay.SpawnerManager.AddAvaliableSpawnerTokenCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6416b90
	bool STATIC_AcquireSpawnerToken(struct UObject* WorldContextObject, struct FName Key, int32_t spawnTokenId); // Function DFMGameplay.SpawnerManager.AcquireSpawnerToken // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6416aa0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerMoniter
// Size: 0xe0 (Inherited: 0x30)
class UPlayerMoniter : public UObject {
public:

	int32_t TotActorNum; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FSimulateAISpawnInfo> SpawnedActorList; // 0x38(0x10)
	struct TMap<struct TWeakObjectPtr<struct ADFMCharacter>, struct FPlayerMoniterInfo> PlayerStates; // 0x48(0x50)
	float MoniterInterval; // 0x98(0x04)
	float FightInterval; // 0x9c(0x04)
	float HurtPercentage; // 0xa0(0x04)
	float radius; // 0xa4(0x04)
	float MinDistanceToPlayer; // 0xa8(0x04)
	float MaxDistanceToPlayer; // 0xac(0x04)
	float DestoryDistance; // 0xb0(0x04)
	float DelayTime; // 0xb4(0x04)
	int32_t MaxPlayerNum; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FName> SimulateAIDistributionOfConfig; // 0xc0(0x10)
	struct TArray<uint64_t> ImportantItems; // 0xd0(0x10)

	void OnSpawnedCharacterDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.PlayerMoniter.OnSpawnedCharacterDied // (Final|Native|Public) // @ game+0x6418290
	void OnSpawnedCharacterDestroyed(struct AActor* SpawnedActor); // Function DFMGameplay.PlayerMoniter.OnSpawnedCharacterDestroyed // (Final|Native|Public) // @ game+0x6418190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.NPCTemplate
// Size: 0x70 (Inherited: 0x38)
class UNPCTemplate : public UEngineSubsystem {
public:

	struct FSoftObjectPath DefaultNpcTemplateTablePath; // 0x38(0x18)
	struct FSoftObjectPath EditorNpcTemplateTablePath; // 0x50(0x18)
	struct UDataTable* DefaultNpcTemplateTable; // 0x68(0x08)

	struct UNPCTemplate* STATIC_Get(struct UObject* WorldContextObject); // Function DFMGameplay.NPCTemplate.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6416fd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GMSpawnAITemplate
// Size: 0x58 (Inherited: 0x40)
class UGMSpawnAITemplate : public UDeveloperSettings {
public:

	struct FSoftObjectPath GMSpawnAITemplatePath; // 0x40(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnerSystem
// Size: 0x3f0 (Inherited: 0x378)
class ASpawnerSystem : public ALevelSubsystem {
public:

	struct UDataTable* DefaultNpcTemplateTable; // 0x378(0x08)
	struct UDataTable* DefaultGroupTemplateTable; // 0x380(0x08)
	struct UDataTable* SimulateAITemplate; // 0x388(0x08)
	struct UDataTable* SimulateAIConfig; // 0x390(0x08)
	struct TMap<struct FName, int32_t> SpawnerTokens; // 0x398(0x50)
	struct USpawnerManager* SpawnerManager; // 0x3e8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SquadTacticEvaluator
// Size: 0x38 (Inherited: 0x30)
class USquadTacticEvaluator : public UObject {
public:

	float MinRandomWaitTime; // 0x30(0x04)
	float MaxRandomWaitTime; // 0x34(0x04)

	enum class ECharacterDuty Eval(struct ADFMAIController* AIController, int32_t MemberCount, struct TMap<enum class ECharacterDuty, int32_t>& Summary); // Function DFMGameplay.SquadTacticEvaluator.Eval // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x641cee0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SquadCommanderComponent
// Size: 0x280 (Inherited: 0x100)
class USquadCommanderComponent : public UActorComponent {
public:

	struct FName SquadTactic; // 0x100(0x08)
	float PushMoveRaidus; // 0x108(0x04)
	bool bOpenAuidoGlobalCD; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct TMap<enum class ECharacterSpeakType, float> TypeCoolDownConfig; // 0x110(0x50)
	struct TMap<enum class ECharacterSpeakType, float> TypeNextCoolDown; // 0x160(0x50)
	char pad_1B0[0x10]; // 0x1b0(0x10)
	/*struct TSet<struct ADFMAIController*>*/char SquadMembers[0x50]; // 0x1c0(0x50)
	struct TArray<struct FSquadTacticItem> SquadTacticCenter; // 0x210(0x10)
	struct USquadTacticEvaluator* Evaluator; // 0x220(0x08)
	struct TMap<enum class ECharacterDuty, int32_t> EvaluatorSummary; // 0x228(0x50)
	int32_t EvaluatorVersion; // 0x278(0x04)
	float AllowFlushSecond; // 0x27c(0x04)

	void SetTeammates_Player(struct TArray<struct ADFMCharacter*> Players); // Function DFMGameplay.SquadCommanderComponent.SetTeammates_Player // (Final|Native|Public|BlueprintCallable) // @ game+0x641ded0
	void SetPushMoveRaidus(float Raidus); // Function DFMGameplay.SquadCommanderComponent.SetPushMoveRaidus // (Final|Native|Public|BlueprintCallable) // @ game+0x641de50
	void STATIC_SaveSquadFormation(struct ADramaArea* Drama, int32_t Formation, struct FName TableName); // Function DFMGameplay.SquadCommanderComponent.SaveSquadFormation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x641dd60
	bool ReturnDuty(struct ADFMAIController* Control); // Function DFMGameplay.SquadCommanderComponent.ReturnDuty // (Final|Native|Public|BlueprintCallable) // @ game+0x641dcd0
	bool RequestDuty(struct ADFMAIController* Control, enum class ECharacterDutyType DutyType); // Function DFMGameplay.SquadCommanderComponent.RequestDuty // (Final|Native|Public|BlueprintCallable) // @ game+0x641dc10
	bool Leave(struct ADFMAIController* member); // Function DFMGameplay.SquadCommanderComponent.Leave // (Final|Native|Public|BlueprintCallable) // @ game+0x641d780
	bool Join(struct ADFMAIController* member); // Function DFMGameplay.SquadCommanderComponent.Join // (Final|Native|Public|BlueprintCallable) // @ game+0x641d6f0
	bool STATIC_IsInTheSameSquad(struct ADFMAIController* controlA, struct ADFMAIController* controlB); // Function DFMGameplay.SquadCommanderComponent.IsInTheSameSquad // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x641d630
	void InitSquadTactic(); // Function DFMGameplay.SquadCommanderComponent.InitSquadTactic // (Final|Native|Public|BlueprintCallable) // @ game+0x641d610
	void GetTeammates_Player(struct TArray<struct ADFMCharacter*>& Players); // Function DFMGameplay.SquadCommanderComponent.GetTeammates_Player // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x641d540
	struct TArray<struct ADFMAIController*> GetSquadMembers(struct FName Tag, bool bContainDead); // Function DFMGameplay.SquadCommanderComponent.GetSquadMembers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x641d3e0
	void STATIC_GetSquadFormation(struct ADramaArea* Drama, int32_t Formation, struct UClass* DramaTemplateBP, struct FName TableName); // Function DFMGameplay.SquadCommanderComponent.GetSquadFormation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x641d2b0
	struct ADFMAIController* GetSquadCommander(); // Function DFMGameplay.SquadCommanderComponent.GetSquadCommander // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x641d280
	enum class ECharacterDutyType STATIC_GetDutyType(enum class ECharacterDuty CharacterDuty); // Function DFMGameplay.SquadCommanderComponent.GetDutyType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x641d200
	bool ChangeCommander(struct ADFMAIController* member); // Function DFMGameplay.SquadCommanderComponent.ChangeCommander // (Final|Native|Public|BlueprintCallable) // @ game+0x641cd90
	bool CanRequestDuty(struct ADFMAIController* Control, struct FSquadTacticItem& SquadTacticItem, enum class ECharacterDutyType DutyType); // Function DFMGameplay.SquadCommanderComponent.CanRequestDuty // (Final|Native|Protected|HasOutParms) // @ game+0x641cbf0
	bool CanJoin(struct ADFMAIController* member); // Function DFMGameplay.SquadCommanderComponent.CanJoin // (Final|Native|Protected) // @ game+0x641cb60
	bool CanChangeDuty(struct ADFMAIController* Control, int32_t MaxPriority, enum class ECharacterDutyType DutyType); // Function DFMGameplay.SquadCommanderComponent.CanChangeDuty // (Final|Native|Protected) // @ game+0x641ca60
	void AssignDuty(struct ADFMAIController* Control, struct ADFMAICharacter* CHARACTER, enum class ECharacterDuty duty); // Function DFMGameplay.SquadCommanderComponent.AssignDuty // (Final|Native|Protected) // @ game+0x641c960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StartSpotAllocateComponent
// Size: 0x180 (Inherited: 0x100)
class UStartSpotAllocateComponent : public UActorComponent {
public:

	struct UClass* AllocatorClass_SOL; // 0x100(0x08)
	struct UClass* AllocatorClass_Discovery; // 0x108(0x08)
	struct UClass* AllocatorClass_Raid; // 0x110(0x08)
	int32_t DefaultAllocatorRandSeed; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct TMap<enum class EDFMGamePlayMode, struct UStartSpotAllocator*> StartSpotAllocs; // 0x120(0x50)
	struct UStartSpotAllocator* DefaultAllocator; // 0x170(0x08)
	char pad_178[0x8]; // 0x178(0x08)

	void NewAllocator(enum class EDFMGamePlayMode GamePlayMode, struct UClass* AllocatorClass); // Function DFMGameplay.StartSpotAllocateComponent.NewAllocator // (Final|Native|Public|BlueprintCallable) // @ game+0x641d810
	struct UStartSpotAllocator* GetAllocator(enum class EDFMGamePlayMode GamePlayMode); // Function DFMGameplay.StartSpotAllocateComponent.GetAllocator // (Final|Native|Public|BlueprintCallable) // @ game+0x641d170
	struct APlayerStart* FindPlayerStart(enum class EDFMGamePlayMode GamePlayMode, struct FStartSpotAllocParams Params); // Function DFMGameplay.StartSpotAllocateComponent.FindPlayerStart // (Final|Native|Public|BlueprintCallable) // @ game+0x641d060
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StatInAreaPlayers
// Size: 0x3b0 (Inherited: 0x378)
class AStatInAreaPlayers : public AActor {
public:

	struct USphereComponent* CollisionSphere; // 0x378(0x08)
	struct TArray<struct ADFMPlayerCharacter*> InVolumePlayerList; // 0x380(0x10)
	char pad_390[0x8]; // 0x390(0x08)
	/*struct FMulticastInlineDelegate*/char StatInAreaPlayersEvent[0x10]; // 0x398(0x10)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.StatInAreaPlayers.OnEndOverlap // (Final|Native|Protected) // @ game+0x641dad0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.StatInAreaPlayers.OnBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x641d8d0
	void EnableStat(bool bEnable, float InStatStepTime); // Function DFMGameplay.StatInAreaPlayers.EnableStat // (Final|Native|Public|BlueprintCallable) // @ game+0x641ce20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StingerMissileBulletInterface
// Size: 0x30 (Inherited: 0x30)
class UStingerMissileBulletInterface : public UInterface {
public:


	struct FVector GetBulletLocation(); // Function DFMGameplay.StingerMissileBulletInterface.GetBulletLocation // (Native|Public|HasDefaults) // @ game+0x1036670
	struct AActor* GetBulletActor(); // Function DFMGameplay.StingerMissileBulletInterface.GetBulletActor // (Native|Public) // @ game+0xaa1400
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StingerMissileTakerInterface
// Size: 0x30 (Inherited: 0x30)
class UStingerMissileTakerInterface : public UInterface {
public:


	void StopFireLocking(); // Function DFMGameplay.StingerMissileTakerInterface.StopFireLocking // (Native|Public) // @ game+0x6422760
	void StartFireLocking(); // Function DFMGameplay.StingerMissileTakerInterface.StartFireLocking // (Native|Public) // @ game+0x6422740
	void SetLaserPointerServerLockingState(int32_t CampId, enum class EStingerMissileLockingState State); // Function DFMGameplay.StingerMissileTakerInterface.SetLaserPointerServerLockingState // (Native|Public) // @ game+0x6422670
	void SetLaserPointerClientPerformState(enum class EStingerMissileLockingState State); // Function DFMGameplay.StingerMissileTakerInterface.SetLaserPointerClientPerformState // (Native|Public) // @ game+0x64225f0
	void SetIsUnderCloaking(bool bNewIsUnderCloaking); // Function DFMGameplay.StingerMissileTakerInterface.SetIsUnderCloaking // (Native|Public) // @ game+0x358d910
	void SetCanLockByStingerMissile(bool can); // Function DFMGameplay.StingerMissileTakerInterface.SetCanLockByStingerMissile // (Native|Public) // @ game+0x174b2d0
	void OnStingerMissleExplose(); // Function DFMGameplay.StingerMissileTakerInterface.OnStingerMissleExplose // (Native|Public) // @ game+0x64225b0
	void OnNotifyLockingStateChanged(/*struct TScriptInterface<IGPWeaponInterface> StingerMissileWeapon, enum class EStingerMissileLockingState OldLockingState, enum class EStingerMissileLockingState NewLockingState, struct TScriptInterface<IStingerMissileBulletInterface> StingerMissile, bool bFromBullet*/); // Function DFMGameplay.StingerMissileTakerInterface.OnNotifyLockingStateChanged // (Native|Public) // @ game+0x64223c0
	void NotifyStopLaserPointerLocking(struct UObject* CasterCharacter); // Function DFMGameplay.StingerMissileTakerInterface.NotifyStopLaserPointerLocking // (Native|Public) // @ game+0x6422250
	void NotifyStartLaserPointerLocking(struct UObject* CasterCharacter, float IncreaseSpeed, float DecreaseSpeed, float PersistentTime); // Function DFMGameplay.StingerMissileTakerInterface.NotifyStartLaserPointerLocking // (Native|Public) // @ game+0x6422110
	bool IsUnderLowHeightState(); // Function DFMGameplay.StingerMissileTakerInterface.IsUnderLowHeightState // (Native|Public) // @ game+0x174e640
	bool IsUnderCloaking(); // Function DFMGameplay.StingerMissileTakerInterface.IsUnderCloaking // (Native|Public) // @ game+0x92e3d0
	bool IsEnermyTarget(struct ACHARACTER* CHARACTER); // Function DFMGameplay.StingerMissileTakerInterface.IsEnermyTarget // (Native|Public) // @ game+0x6422070
	bool IsDamageTarget(struct ACHARACTER* CHARACTER); // Function DFMGameplay.StingerMissileTakerInterface.IsDamageTarget // (Native|Public) // @ game+0x3583290
	enum class EVehicleLockType GetVehicleLockType(); // Function DFMGameplay.StingerMissileTakerInterface.GetVehicleLockType // (Native|Public) // @ game+0x174e240
	struct FVehicleLockParams GetVehicleLockParams(); // Function DFMGameplay.StingerMissileTakerInterface.GetVehicleLockParams // (Native|Public) // @ game+0x6421fb0
	struct FString GetNameForHud(); // Function DFMGameplay.StingerMissileTakerInterface.GetNameForHud // (Native|Public) // @ game+0x6421df0
	struct FVector GetMarkerLocation(); // Function DFMGameplay.StingerMissileTakerInterface.GetMarkerLocation // (Native|Public|HasDefaults) // @ game+0x6421db0
	float GetLockingThreshold(); // Function DFMGameplay.StingerMissileTakerInterface.GetLockingThreshold // (Native|Public) // @ game+0x174ecb0
	enum class EStingerMissileLockingState GetLaserPointerServerLockingState(int32_t CampId); // Function DFMGameplay.StingerMissileTakerInterface.GetLaserPointerServerLockingState // (Native|Public) // @ game+0x6421d10
	float GetLaserPointerLockingValue(int32_t CampId); // Function DFMGameplay.StingerMissileTakerInterface.GetLaserPointerLockingValue // (Native|Public) // @ game+0x6421c70
	enum class EStingerMissileLockingState GetLaserPointerClientPerformState(); // Function DFMGameplay.StingerMissileTakerInterface.GetLaserPointerClientPerformState // (Native|Public) // @ game+0x174f530
	struct FVector GetDetectLocation(); // Function DFMGameplay.StingerMissileTakerInterface.GetDetectLocation // (Native|Public|HasDefaults) // @ game+0x6218850
	bool GetCanLockByStingerMissile(); // Function DFMGameplay.StingerMissileTakerInterface.GetCanLockByStingerMissile // (Native|Public) // @ game+0x1755340
	bool CanLockTarget(struct ACHARACTER* CHARACTER, bool StingerOnlyLockEnermy); // Function DFMGameplay.StingerMissileTakerInterface.CanLockTarget // (Native|Public) // @ game+0x6421680
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SupportProjectileMovementComponent
// Size: 0x5d0 (Inherited: 0x5c0)
class USupportProjectileMovementComponent : public UGPWeaponProjectileMovementComponent {
public:

	struct FName HomingSocketName; // 0x5c0(0x08)
	float LerpDistance; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TeamStart
// Size: 0x4b0 (Inherited: 0x378)
class ATeamStart : public AActor {
public:

	char pad_378[0x10]; // 0x378(0x10)
	/*struct TSet<struct APlayerStart*>*/char PlayerStarts[0x50]; // 0x388(0x50)
	struct TArray<struct APlayerStart*> FixedOrderPlayerStarts; // 0x3d8(0x10)
	bool bIsIndoorStart; // 0x3e8(0x01)
	char pad_3E9[0x7]; // 0x3e9(0x07)
	/*struct TSoftObjectPtr<AEnterMovePath>*/char PlayerEnterMovePath[0x28]; // 0x3f0(0x28)
	struct FPlayerExitConfig ExitConfig; // 0x418(0x58)
	int32_t GroupID; // 0x470(0x04)
	int32_t TeamStartGroupId; // 0x474(0x04)
	int32_t TeamStartOrientation; // 0x478(0x04)
	bool bExpectPlayerHere; // 0x47c(0x01)
	char pad_47D[0x3]; // 0x47d(0x03)
	struct TArray<int32_t> ExcludeTeamStartGroupIds; // 0x480(0x10)
	float RebornFarRange; // 0x490(0x04)
	char pad_494[0x4]; // 0x494(0x04)
	struct TArray<struct APlayerExitBase*> PlayerExits; // 0x498(0x10)
	int32_t TeamId; // 0x4a8(0x04)
	enum class ESOLPlayerMode SolStartMode; // 0x4ac(0x01)
	char pad_4AD[0x3]; // 0x4ad(0x03)

	void OnRep_PlayerExits(); // Function DFMGameplay.TeamStart.OnRep_PlayerExits // (Native|Protected) // @ game+0xbd2900
	struct AEnterMovePath* GetEnterMovePath(); // Function DFMGameplay.TeamStart.GetEnterMovePath // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6421c40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TestDrawText
// Size: 0x130 (Inherited: 0x100)
class UTestDrawText : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct UTextureRenderTarget2D* RenderTarget2D; // 0x108(0x08)
	struct FText DrawText; // 0x110(0x18)
	int32_t FontSize; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)

	void DrawTest(); // Function DFMGameplay.TestDrawText.DrawTest // (Final|Native|Public) // @ game+0x6421750
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TestInteractor
// Size: 0x5b8 (Inherited: 0x378)
class ATestInteractor : public AActor {
public:

	char pad_378[0x200]; // 0x378(0x200)
	enum class EInteractorType InteractorType; // 0x578(0x01)
	char pad_579[0x3]; // 0x579(0x03)
	struct FGameplayTag InteractorTag; // 0x57c(0x08)
	bool CanGlowFlag; // 0x584(0x01)
	char pad_585[0x3]; // 0x585(0x03)
	struct FText InteractName; // 0x588(0x18)
	bool bWantToGlow; // 0x5a0(0x01)
	char pad_5A1[0x3]; // 0x5a1(0x03)
	struct FVector CollsionCheckAddOffset; // 0x5a4(0x0c)
	bool bHideWhiteDot; // 0x5b0(0x01)
	char pad_5B1[0x7]; // 0x5b1(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TestReplicationActor
// Size: 0x398 (Inherited: 0x378)
class ATestReplicationActor : public AActor {
public:

	int32_t I; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct TArray<int32_t> A; // 0x380(0x10)
	float Timeout; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)

	void OnRep_I(); // Function DFMGameplay.TestReplicationActor.OnRep_I // (Final|Native|Private) // @ game+0x6422590
	void OnRep_A(); // Function DFMGameplay.TestReplicationActor.OnRep_A // (Final|Native|Private) // @ game+0x6422570
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TestStingerMissileTaker
// Size: 0x410 (Inherited: 0x3d8)
class ATestStingerMissileTaker : public APawn {
public:

	char pad_3D8[0x10]; // 0x3d8(0x10)
	bool bEditorTick; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	float LockingThreshold; // 0x3ec(0x04)
	bool bUnderCloaking; // 0x3f0(0x01)
	enum class EVehicleLockType LockType; // 0x3f1(0x01)
	char pad_3F2[0x2]; // 0x3f2(0x02)
	struct FName NameForHud; // 0x3f4(0x08)
	enum class EStingerMissileLockingState CurrentLockingState; // 0x3fc(0x01)
	char pad_3FD[0x3]; // 0x3fd(0x03)
	struct ADFMWeapon* LockingWeapon; // 0x400(0x08)
	struct AWeaponBulletStingerMissile* LockingMissile; // 0x408(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ThreatConfigManager
// Size: 0xb8 (Inherited: 0x38)
class UThreatConfigManager : public UWorldSubsystem {
public:

	/*struct TSoftObjectPtr<UDataTable>*/char PresetConfigPath[0x28]; // 0x38(0x28)
	char pad_60[0x58]; // 0x60(0x58)

	void OnLoadedPresetConfig(struct FSoftObjectPath& PresetConfigSP); // Function DFMGameplay.ThreatConfigManager.OnLoadedPresetConfig // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x64222e0
	bool GetThreatConfigByBehaviorType(enum class EGPSpecificBehaviorType BehaviorType, struct FAIThreatConfig& configFound); // Function DFMGameplay.ThreatConfigManager.GetThreatConfigByBehaviorType // (Final|Native|Public|HasOutParms) // @ game+0x6421ea0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DestructibleItemDataManager
// Size: 0xa8 (Inherited: 0x38)
class UDestructibleItemDataManager : public UDataTableSystemManagerBase {
public:

	/*struct TMap<struct UClass*, struct FDestructibleItemDataRowRunTime>*/char ClassToDataMap[0x50]; // 0x38(0x50)
	/*struct TArray<struct FDestructibleItemDataRowRunTime>*/char DataArray[0x10]; // 0x88(0x10)
	char pad_98[0x10]; // 0x98(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BodyPartOffsetTable
// Size: 0x50 (Inherited: 0x38)
class UBodyPartOffsetTable : public UWorldSubsystem {
public:

	char pad_38[0x18]; // 0x38(0x18)

	struct UBodyPartOffsetTable* STATIC_Instance(struct UObject* WorldContext); // Function DFMGameplay.BodyPartOffsetTable.Instance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6421ff0
	bool GetBoneTransform(enum class EAIBodyPartOffsetPoise Pose, enum class EAIBodyPartOffsetLean Lean, struct FName BoneName, struct FTransform& OutTransform); // Function DFMGameplay.BodyPartOffsetTable.GetBoneTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6421a90
	bool GetBodyPartTransform(enum class EAIBodyPartOffsetPoise Pose, enum class EAIBodyPartOffsetLean Lean, enum class ECharacterPart Part, struct FTransform& OutTransform); // Function DFMGameplay.BodyPartOffsetTable.GetBodyPartTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x64218e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VisibilityTestLocation
// Size: 0x570 (Inherited: 0x570)
class UVisibilityTestLocation : public UArrowComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleAirDrop
// Size: 0x578 (Inherited: 0x378)
class AVehicleAirDrop : public AActor {
public:

	struct UVehicleAirDropMovementComponent* MovementComponent; // 0x378(0x08)
	struct USceneComponent* root; // 0x380(0x08)
	struct USceneComponent* VehicleJoint; // 0x388(0x08)
	struct FSoftObjectPath CompletedAnimPath1; // 0x390(0x18)
	struct FSoftObjectPath CompletedSkeletalMeshPath1; // 0x3a8(0x18)
	struct FSoftObjectPath CompletedAnimPath2; // 0x3c0(0x18)
	struct FSoftObjectPath CompletedSkeletalMeshPath2; // 0x3d8(0x18)
	struct FName DecelerateEffectID; // 0x3f0(0x08)
	struct FName StopFlyingEffectID; // 0x3f8(0x08)
	struct FName LandingEffectID; // 0x400(0x08)
	struct FSoftObjectPath StartLoopDropAudioPath; // 0x408(0x18)
	char pad_420[0x8]; // 0x420(0x08)
	struct FSoftObjectPath StopLoopDropAudioPath; // 0x428(0x18)
	struct FSoftObjectPath StartFallAudioPath; // 0x440(0x18)
	struct FSoftObjectPath LandingAudioPath; // 0x458(0x18)
	struct UGPSkeletalMeshComponent* GPSkeletalMeshComponent1; // 0x470(0x08)
	struct UGPSkeletalMeshComponent* GPSkeletalMeshComponent2; // 0x478(0x08)
	struct UGPSkeletalMeshComponent* GPSkeletalJointMeshComponent; // 0x480(0x08)
	struct UStaticMeshComponent* RopeMeshComponent1; // 0x488(0x08)
	struct UStaticMeshComponent* RopeMeshComponent2; // 0x490(0x08)
	struct UStaticMeshComponent* RopeMeshComponent3; // 0x498(0x08)
	struct UStaticMeshComponent* RopeMeshComponent4; // 0x4a0(0x08)
	struct TArray<struct UStaticMeshComponent*> RopeComponents; // 0x4a8(0x10)
	char pad_4B8[0x10]; // 0x4b8(0x10)
	struct UClass* DecalActorType; // 0x4c8(0x08)
	struct UClass* DecalActorType_Mobile; // 0x4d0(0x08)
	float RopeLength; // 0x4d8(0x04)
	char pad_4DC[0x4]; // 0x4dc(0x04)
	struct AGPVehicleBase* AttachedVehicle; // 0x4e0(0x08)
	bool bIsFlying; // 0x4e8(0x01)
	char pad_4E9[0x3]; // 0x4e9(0x03)
	struct FVector TargetPosInServer; // 0x4ec(0x0c)
	char pad_4F8[0x20]; // 0x4f8(0x20)
	struct UAnimationAsset* CompletedAnim1; // 0x518(0x08)
	struct USkeletalMesh* CompletedMesh1; // 0x520(0x08)
	struct UAnimationAsset* CompletedAnim2; // 0x528(0x08)
	struct USkeletalMesh* CompletedMesh2; // 0x530(0x08)
	struct AActor* DecalActor; // 0x538(0x08)
	uint64_t OwnerUin; // 0x540(0x08)
	bool bLanding; // 0x548(0x01)
	char pad_549[0x7]; // 0x549(0x07)
	struct TArray<struct UFXResourceContainerComponent*> DecleareResourceArray; // 0x550(0x10)
	struct UFXResourceContainerComponent* StopFlyingEffect; // 0x560(0x08)
	struct TArray<struct UGPAudioEventAsset*> GPAudioEventAssets; // 0x568(0x10)

	void ServerStop(); // Function DFMGameplay.VehicleAirDrop.ServerStop // (Final|Native|Public|BlueprintCallable) // @ game+0x6426c30
	void ServerPlayTimeOver(); // Function DFMGameplay.VehicleAirDrop.ServerPlayTimeOver // (Final|Native|Protected) // @ game+0x6426c10
	void ServerPlay(int64_t InOwnerUin, struct AGPVehicleBase* Vehicle, struct FVector ServerTargetPos); // Function DFMGameplay.VehicleAirDrop.ServerPlay // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6426b00
	void ServerCheckVehicleLanded(); // Function DFMGameplay.VehicleAirDrop.ServerCheckVehicleLanded // (Final|Native|Protected) // @ game+0x6426ae0
	void OnVehicleDeadNtf(struct AGPVehicleBase* DFMVehicle); // Function DFMGameplay.VehicleAirDrop.OnVehicleDeadNtf // (Final|Native|Protected) // @ game+0x64269d0
	void OnRepIsFlying(); // Function DFMGameplay.VehicleAirDrop.OnRepIsFlying // (Final|Native|Protected) // @ game+0x6426890
	void OnRep_bLanding(); // Function DFMGameplay.VehicleAirDrop.OnRep_bLanding // (Final|Native|Protected) // @ game+0x64269b0
	void OnRep_AttachedVehicle(); // Function DFMGameplay.VehicleAirDrop.OnRep_AttachedVehicle // (Final|Native|Protected) // @ game+0x64268b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleAirDropMovementComponent
// Size: 0x160 (Inherited: 0x140)
class UVehicleAirDropMovementComponent : public UMovementComponent {
public:

	char pad_140[0x20]; // 0x140(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleContactDesTarget
// Size: 0x30 (Inherited: 0x30)
class UVehicleContactDesTarget : public UInterface {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleSignificanceComponent
// Size: 0x230 (Inherited: 0x178)
class UVehicleSignificanceComponent : public USignificanceBase {
public:

	struct TArray<struct FName> ShowOnLocalControlSocketNames; // 0x178(0x10)
	struct TArray<struct FName> ShowOnVisibleSocketNames; // 0x188(0x10)
	char pad_198[0x98]; // 0x198(0x98)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleWeaponDataComponentAnim
// Size: 0x9f0 (Inherited: 0x9f0)
class UVehicleWeaponDataComponentAnim : public UWeaponDataComponentAnim {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleWeaponDataComponentAppearance
// Size: 0xaf0 (Inherited: 0xae8)
class UVehicleWeaponDataComponentAppearance : public UWeaponDataComponentAppearance {
public:

	char pad_AE8[0x8]; // 0xae8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VoiceOverVolumeActor
// Size: 0x388 (Inherited: 0x378)
class AVoiceOverVolumeActor : public AActor {
public:

	struct UShapeComponent* TriggerVolumeComp; // 0x378(0x08)
	struct FName VoiceOverTitleId; // 0x380(0x08)

	void TriggerVoiceOver(struct APlayerController* DFMPlayerController, struct FName& SubtitleSeqId, bool bTrigger); // Function DFMGameplay.VoiceOverVolumeActor.TriggerVoiceOver // (Final|Native|Private|HasOutParms) // @ game+0x6426df0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.VoiceOverVolumeActor.OnOverlapEnd // (Final|Native|Private) // @ game+0x6426750
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.VoiceOverVolumeActor.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x6426550
	struct UShapeComponent* GetTriggerVolumeComp(); // Function DFMGameplay.VoiceOverVolumeActor.GetTriggerVolumeComp // (Final|Native|Private) // @ game+0x64260c0
	struct UShapeComponent* BP_GetTriggerVolumeComp(); // Function DFMGameplay.VoiceOverVolumeActor.BP_GetTriggerVolumeComp // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RCVWayPoint
// Size: 0x390 (Inherited: 0x378)
class ARCVWayPoint : public AActor {
public:

	struct TArray<struct ARCVWayPoint*> AdjascentPoints; // 0x378(0x10)
	int32_t Type; // 0x388(0x04)
	int32_t WaypointID; // 0x38c(0x04)

	void SetSpriteTexture(struct UTexture2D* Texture); // Function DFMGameplay.RCVWayPoint.SetSpriteTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x6426d70
	void OnLevelSelectionChanged(struct UObject* NewSelection); // Function DFMGameplay.RCVWayPoint.OnLevelSelectionChanged // (Final|Native|Public) // @ game+0x64264d0
	void DrawSelectionFlush(struct UObject* NewSelection, bool DoAdjPath, bool DoPathFind); // Function DFMGameplay.RCVWayPoint.DrawSelectionFlush // (Final|Native|Public|BlueprintCallable) // @ game+0x6425a10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFDynamicCoverComponent
// Size: 0x5b0 (Inherited: 0x570)
class UDFDynamicCoverComponent : public UArrowComponent {
public:

	bool bIsHighCover; // 0x570(0x01)
	bool bCanPeekLeft; // 0x571(0x01)
	bool bCanPeekRight; // 0x572(0x01)
	bool bCanPeekUp; // 0x573(0x01)
	float CoverHeight; // 0x574(0x04)
	bool CoverDisabled; // 0x578(0x01)
	char pad_579[0x3]; // 0x579(0x03)
	struct FDFMCoverInfo CoverInfo; // 0x57c(0x28)
	char pad_5A4[0xc]; // 0x5a4(0x0c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RCVWaypointManager
// Size: 0xf8 (Inherited: 0x38)
class URCVWaypointManager : public UWorldSubsystem {
public:

	/*struct TSet<struct ARCVWayPoint*>*/char WayPoints[0x50]; // 0x38(0x50)
	bool WayPointDirty; // 0x88(0x01)
	bool IsEditorWorld; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct TArray<struct FRCVWaypointEdge> WaypointLinkers; // 0x90(0x10)
	struct TArray<int32_t> WaypointAdjLinks; // 0xa0(0x10)
	struct TArray<struct FVector> WaypointLocations; // 0xb0(0x10)
	struct TArray<struct ARCVWayPoint*> WaypointRefs; // 0xc0(0x10)
	struct TArray<struct UDFDynamicCoverComponent*> DynamicCovers; // 0xd0(0x10)
	char pad_E0[0x10]; // 0xe0(0x10)
	uint32_t LastDynamicCoverFrame; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)

	bool IsAnyDynamicCoverOccupied(struct TArray<struct UDFDynamicCoverComponent*>& CheckList); // Function DFMGameplay.RCVWaypointManager.IsAnyDynamicCoverOccupied // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x64261d0
	struct URCVWaypointManager* STATIC_GetRCVWaypointManager(struct UObject* WorldContext); // Function DFMGameplay.RCVWaypointManager.GetRCVWaypointManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x6425f60
	void GetNeighborWaypoints(struct ARCVWayPoint* Curr, struct TArray<struct ARCVWayPoint*>& Result); // Function DFMGameplay.RCVWaypointManager.GetNeighborWaypoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6425e50
	struct ARCVWayPoint* GetNearestWaypointLimit(struct FVector& Loc, struct TArray<struct ARCVWayPoint*>& Selector); // Function DFMGameplay.RCVWaypointManager.GetNearestWaypointLimit // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6425d10
	struct ARCVWayPoint* GetNearestWaypoint(struct FVector& Loc); // Function DFMGameplay.RCVWaypointManager.GetNearestWaypoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6425c70
	float FindPath(struct ARCVWayPoint* Start, struct ARCVWayPoint* End, struct TArray<struct ARCVWayPoint*>& Result); // Function DFMGameplay.RCVWaypointManager.FindPath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6425b20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RCVEQSInstanceBPWrapper
// Size: 0x80 (Inherited: 0x80)
class URCVEQSInstanceBPWrapper : public UGPEnvQueryInstanceBPWrapper {
public:


	struct TArray<struct FEqsRCVWayPointInfo> GetResultAsWaypoints(); // Function DFMGameplay.RCVEQSInstanceBPWrapper.GetResultAsWaypoints // (Final|Native|Private|BlueprintCallable|BlueprintPure) // @ game+0x6425fe0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQSItem_RCVWayPoint
// Size: 0x38 (Inherited: 0x38)
class UEQSItem_RCVWayPoint : public UGPEnvQueryItemType_CommonPoint {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQSGenerator_RCVWaypoint
// Size: 0x100 (Inherited: 0x88)
class UEQSGenerator_RCVWaypoint : public UEnvQueryGenerator_ProjectedPoints {
public:

	struct FAIDataProviderFloatValue CircleRadius; // 0x88(0x38)
	struct FAIDataProviderFloatValue ExcludeCircleRadius; // 0xc0(0x38)
	struct UClass* GenerateAround; // 0xf8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQSTest_RCVPointHasMask
// Size: 0x208 (Inherited: 0x200)
class UEQSTest_RCVPointHasMask : public UEnvQueryTest {
public:

	int32_t IncludeType; // 0x200(0x04)
	int32_t ExcludeType; // 0x204(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQSTest_RCVPointIsNeighbor
// Size: 0x208 (Inherited: 0x200)
class UEQSTest_RCVPointIsNeighbor : public UEnvQueryTest {
public:

	struct UClass* CheckContext; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EQSTest_RCVPointPathFinding
// Size: 0x208 (Inherited: 0x200)
class UEQSTest_RCVPointPathFinding : public UEnvQueryTest {
public:

	struct UClass* CheckContext; // 0x200(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponAlertViewComponent
// Size: 0x1a0 (Inherited: 0x158)
class UWeaponAlertViewComponent : public UGPWeaponViewComponentBase {
public:

	/*struct TScriptInterface<IGPWeaponInterface>*/char WeaponOwner[0x10]; // 0x158(0x10)
	struct AActor* BulletPreviewActor; // 0x168(0x08)
	struct TArray<struct AActor*> tActorsToIgnore; // 0x170(0x10)
	struct TArray<struct UPrimitiveComponent*> tCompsToIgnore; // 0x180(0x10)
	float MaxDistance; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UClass* BulletPreview; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponAttributesCenterComponent
// Size: 0x168 (Inherited: 0x100)
class UWeaponAttributesCenterComponent : public UActorComponent {
public:

	struct UGPASC* ASC; // 0x100(0x08)
	struct TMap<enum class EWeaponBuff, struct UWeaponBuffEntityBase*> WeaponBuffMap; // 0x108(0x50)
	struct TArray<enum class EWeaponBuff> WeaponBuffArray; // 0x158(0x10)

	void RemoveAllBuffs(); // Function DFMGameplay.WeaponAttributesCenterComponent.RemoveAllBuffs // (Final|Native|Public|BlueprintCallable) // @ game+0x6426aa0
	void OnRep_WeaponBuffArray(); // Function DFMGameplay.WeaponAttributesCenterComponent.OnRep_WeaponBuffArray // (Final|Native|Protected) // @ game+0x88f4d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBuffEntityBase
// Size: 0x80 (Inherited: 0x30)
class UWeaponBuffEntityBase : public UObject {
public:

	struct UGPASC* ASC; // 0x30(0x08)
	struct TArray<struct UClass*> GameplayEffectArray; // 0x38(0x10)
	struct TArray<struct FDFMEffectData> GameplayEffectConfigArray; // 0x48(0x10)
	struct TArray<struct FActiveGameplayEffectHandle> Handles; // 0x58(0x10)
	enum class EWeaponBuff WeaponBuff; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct UGPASC* SourceASC; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)

	void RemoveAllGameplayEffects(); // Function DFMGameplay.WeaponBuffEntityBase.RemoveAllGameplayEffects // (Final|Native|Protected) // @ game+0x6426ac0
	void Release(); // Function DFMGameplay.WeaponBuffEntityBase.Release // (Final|Native|Protected) // @ game+0x6426a50
	void AddAllGameplayEffects(); // Function DFMGameplay.WeaponBuffEntityBase.AddAllGameplayEffects // (Final|Native|Protected) // @ game+0x64259d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBulletGuidedRocket
// Size: 0x7c0 (Inherited: 0x6f8)
class AWeaponBulletGuidedRocket : public AWeaponBulletPhysicsSimulate {
public:

	char pad_6F8[0x8]; // 0x6f8(0x08)
	struct UFixedTrackRocketMovementComponent* GuidedRocketMovementComponent; // 0x700(0x08)
	bool bExploded; // 0x708(0x01)
	char pad_709[0x3]; // 0x709(0x03)
	struct FVector GuidedRocketBulletLocation; // 0x70c(0x0c)
	struct FHitResult ExplodedHitResult; // 0x718(0x88)
	char pad_7A0[0x10]; // 0x7a0(0x10)
	float ExplosionDurationSeconds; // 0x7b0(0x04)
	char pad_7B4[0xc]; // 0x7b4(0x0c)

	void SetExploded(bool bIsExploded); // Function DFMGameplay.WeaponBulletGuidedRocket.SetExploded // (Final|Native|Public) // @ game+0x6426ce0
	void OnRep_ExplodedHitResult(); // Function DFMGameplay.WeaponBulletGuidedRocket.OnRep_ExplodedHitResult // (Final|Native|Public) // @ game+0x64268d0
	void OnRep_bExplodedChanged(); // Function DFMGameplay.WeaponBulletGuidedRocket.OnRep_bExplodedChanged // (Final|Native|Public) // @ game+0x6426990
	void InitialRocketMovement(struct FVector BulletSpawnLoc, struct FRotator BulletFireRot); // Function DFMGameplay.WeaponBulletGuidedRocket.InitialRocketMovement // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x64260f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBulletSmoke
// Size: 0x750 (Inherited: 0x740)
class AWeaponBulletSmoke : public AWeaponBulletSmokeSimulate {
public:

	int32_t SmokeUid; // 0x740(0x04)
	char pad_744[0xc]; // 0x744(0x0c)

	void UpdateDynamicCollisionElementList(struct TArray<struct FBox>& Box); // Function DFMGameplay.WeaponBulletSmoke.UpdateDynamicCollisionElementList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6426f90
	void UpdateDynamicCollisionElement(struct FBox Box); // Function DFMGameplay.WeaponBulletSmoke.UpdateDynamicCollisionElement // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6426f00
	void ClearDynmicCollisionElement(); // Function DFMGameplay.WeaponBulletSmoke.ClearDynmicCollisionElement // (Final|Native|Public|BlueprintCallable) // @ game+0x64259f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDataComponentOverHeat
// Size: 0x628 (Inherited: 0x628)
class UWeaponDataComponentOverHeat : public UGPWeaponDataComponentOverHeat {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDataComponentStingerMissile
// Size: 0x628 (Inherited: 0x5f0)
class UWeaponDataComponentStingerMissile : public UGPWeaponDataComponentBase {
public:

	struct FSMTLockInfo CurLockInfo; // 0x5f0(0x20)
	char pad_610[0x18]; // 0x610(0x18)

	void SetupKeepStateParams(); // Function DFMGameplay.WeaponDataComponentStingerMissile.SetupKeepStateParams // (Final|Native|Public) // @ game+0x642cce0
	void ServerNotifyLockingStateChanged(int64_t TargetUin, int64_t BulletId, struct UObject* StingerMissileTaker, enum class EStingerMissileLockingState OldLockingState, enum class EStingerMissileLockingState NewLockingState, struct UObject* StingerMissile, bool bFromBullet); // Function DFMGameplay.WeaponDataComponentStingerMissile.ServerNotifyLockingStateChanged // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x642ca40
	void ServerKeepStateAlive(int64_t TargetUin, int64_t BulletId, struct UObject* StingerMissileTaker, enum class EStingerMissileLockingState LockingState, struct UObject* StingerMissile); // Function DFMGameplay.WeaponDataComponentStingerMissile.ServerKeepStateAlive // (Net|Native|Event|Public|NetServer) // @ game+0x642c8c0
	void KeepStateFaild(); // Function DFMGameplay.WeaponDataComponentStingerMissile.KeepStateFaild // (Final|Native|Public) // @ game+0x642c5a0
	void KeepStateAlive(); // Function DFMGameplay.WeaponDataComponentStingerMissile.KeepStateAlive // (Final|Native|Public) // @ game+0x642c580
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDisplayAttributeFormulaManager
// Size: 0x48 (Inherited: 0x38)
class UWeaponDisplayAttributeFormulaManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x10]; // 0x38(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDisplayAttributeDataManager
// Size: 0x98 (Inherited: 0x38)
class UWeaponDisplayAttributeDataManager : public UDataTableSystemManagerBase {
public:

	char pad_38[0x60]; // 0x38(0x60)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDisplayUtil
// Size: 0x30 (Inherited: 0x30)
class UWeaponDisplayUtil : public UObject {
public:


	struct TArray<struct FVector2D> STATIC_GetWeaponRecoliArray(struct FWeaponDataAttribute& WeaponDataAttr, int32_t Num); // Function DFMGameplay.WeaponDisplayUtil.GetWeaponRecoliArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642c1d0
	struct FWeaponDataBullet STATIC_GetWeaponDataBullet(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.GetWeaponDataBullet // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c0e0
	void STATIC_GetWeaponDataAttrByWeaponDesc(struct FWeaponDataAttribute& OutWeaponDataAttr, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetWeaponDataAttrByWeaponDesc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642bfd0
	struct TArray<struct FDamageAttenConfigItem> STATIC_GetWeaponDamageAtten(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.GetWeaponDamageAtten // (Final|Native|Static|Public|HasOutParms) // @ game+0x642be60
	void STATIC_GetMeleeWeaponDataAttrByWeaponDesc(struct FWeaponMeleeDataAttribute& OutWeaponDataAttr, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetMeleeWeaponDataAttrByWeaponDesc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642bd70
	void STATIC_GetHoldBreathTableByWeaponDesc(struct FHoldBreathConfig& HoldBreath, bool bIsModular, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetHoldBreathTableByWeaponDesc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642b440
	float STATIC_GetHoldBreathTableAttrByWeaponDesc(struct FName AttrName, bool bIsModular, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetHoldBreathTableAttrByWeaponDesc // (Final|Native|Static|Public) // @ game+0x642b340
	struct TArray<enum class EGPWeaponFiringMode> STATIC_GetFireMode(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.GetFireMode // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b1d0
	void STATIC_GetAppearanceTableByWeaponDesc(struct FWeaponDataAppearance& DataAppearance, bool bIsModular, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetAppearanceTableByWeaponDesc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642afa0
	float STATIC_GetAppearanceTableAttrByWeaponDesc(struct FName AttrName, bool bIsModular, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.GetAppearanceTableAttrByWeaponDesc // (Final|Native|Static|Public) // @ game+0x642aea0
	struct TMap<char, char> STATIC_CalcDisplayValuesByWeaponDesc(struct TArray<char> DisplayIds, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.CalcDisplayValuesByWeaponDesc // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x642a970
	struct TMap<char, char> STATIC_CalcDisplayValuesByWeapon(struct TArray<char> DisplayIds, struct AWeaponBase* WeaponBase); // Function DFMGameplay.WeaponDisplayUtil.CalcDisplayValuesByWeapon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x642a7c0
	struct TMap<char, char> STATIC_CalcDisplayValues(struct TArray<char> DisplayIds, struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcDisplayValues // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642a5e0
	struct TMap<struct FName, float> STATIC_CalcDebugAllAttributeDetailValues(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcDebugAllAttributeDetailValues // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642a4d0
	float STATIC_CalcAttributeValueByWeaponDesc(struct FName AttrName, struct UModularWeaponDesc* WeaponDesc); // Function DFMGameplay.WeaponDisplayUtil.CalcAttributeValueByWeaponDesc // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x642a410
	float STATIC_CalcAttributeValue(struct FName AttrName, struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcAttributeValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642a300
	float STATIC_CalcAttributeDetailValue(struct FName AttrName, struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcAttributeDetailValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642a1f0
	struct TMap<struct FName, float> STATIC_CalcAllAttributeValues(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcAllAttributeValues // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x642a0e0
	struct TMap<struct FName, float> STATIC_CalcAllAttributeDetailValues(struct FWeaponDataAttribute& WeaponDataAttr); // Function DFMGameplay.WeaponDisplayUtil.CalcAllAttributeDetailValues // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x6429fd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponAttributeDetailMethods
// Size: 0x30 (Inherited: 0x30)
class UWeaponAttributeDetailMethods : public UObject {
public:


	float STATIC_WaistBaseSpreadReduction(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.WaistBaseSpreadReduction // (Final|Native|Static|Public|HasOutParms) // @ game+0x642cfc0
	float STATIC_VerticalRecoil(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.VerticalRecoil // (Final|Native|Static|Public|HasOutParms) // @ game+0x642cf10
	float STATIC_VehicleDamage(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.VehicleDamage // (Final|Native|Static|Public|HasOutParms) // @ game+0x642ce60
	float STATIC_SuperSprintToFire(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.SuperSprintToFire // (Final|Native|Static|Public|HasOutParms) // @ game+0x642cdb0
	float STATIC_SprintToFire(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.SprintToFire // (Final|Native|Static|Public|HasOutParms) // @ game+0x642cd00
	float STATIC_ReloadTime(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.ReloadTime // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c810
	float STATIC_RecoilReroundScale(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.RecoilReroundScale // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c760
	float STATIC_MuzzleVelocity(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.MuzzleVelocity // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c670
	float STATIC_MaxCarriedAmmo(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.MaxCarriedAmmo // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c5c0
	float STATIC_KeepFireStability(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.KeepFireStability // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c4d0
	float STATIC_KeepFireAccuracy(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.KeepFireAccuracy // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c420
	float STATIC_HorizontalRecoil(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.HorizontalRecoil // (Final|Native|Static|Public|HasOutParms) // @ game+0x642c370
	float STATIC_GetMeleeStandSprintSpeed(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeStandSprintSpeed // (Final|Native|Static|Public|HasOutParms) // @ game+0x642bcc0
	float STATIC_GetMeleeStandRunSpeed(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeStandRunSpeed // (Final|Native|Static|Public|HasOutParms) // @ game+0x642bc10
	float STATIC_GetMeleeDamage(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeDamage // (Final|Native|Static|Public|HasOutParms) // @ game+0x642bb60
	struct TArray<float> STATIC_GetMeleeComboDamages(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeComboDamages // (Final|Native|Static|Public|HasOutParms) // @ game+0x642ba70
	float STATIC_GetMeleeAttackSpeed(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeAttackSpeed // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b9c0
	float STATIC_GetMeleeAttackDistance(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeAttackDistance // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b910
	struct FText STATIC_GetMeleeAtkspeed(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeAtkspeed // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b800
	int32_t STATIC_GetMeleeArmorLevel(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeArmorLevel // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b750
	struct TArray<float> STATIC_GetMeleeArmorDamages(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeArmorDamages // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b660
	float STATIC_GetMeleeArmorDamage(struct FWeaponMeleeDataAttribute& InWeaponMeleeDataAttribute); // Function DFMGameplay.WeaponAttributeDetailMethods.GetMeleeArmorDamage // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b5b0
	float STATIC_GetAttributeDetailByName(struct FName AttributeID, struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.GetAttributeDetailByName // (Final|Native|Static|Public|HasOutParms) // @ game+0x642b0e0
	float STATIC_FireRate(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.FireRate // (Final|Native|Static|Public|HasOutParms) // @ game+0x642adf0
	float STATIC_EffectiveRange(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.EffectiveRange // (Final|Native|Static|Public|HasOutParms) // @ game+0x642ad40
	float STATIC_Damage(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.Damage // (Final|Native|Static|Public|HasOutParms) // @ game+0x642ac90
	float STATIC_ClipAmmo(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.ClipAmmo // (Final|Native|Static|Public|HasOutParms) // @ game+0x642abe0
	float STATIC_ArmorDamage(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.ArmorDamage // (Final|Native|Static|Public|HasOutParms) // @ game+0x6429f20
	float STATIC_AimingTime(struct FWeaponAttributeCalculator& InCalculator); // Function DFMGameplay.WeaponAttributeDetailMethods.AimingTime // (Final|Native|Static|Public|HasOutParms) // @ game+0x6429e70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFireModeGuidedRocket
// Size: 0x4e8 (Inherited: 0x4e8)
class UWeaponFireModeGuidedRocket : public UWeaponFireModePhysicSimulate {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFireModeLaserPointerReciverRPG
// Size: 0x4f0 (Inherited: 0x4e8)
class UWeaponFireModeLaserPointerReciverRPG : public UWeaponFireModeRPGSimulate {
public:

	struct UWeaponFuncComponentLaserPointerReciver* FuncLaserPointerReciver; // 0x4e8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponDataComponentSupportLocker
// Size: 0x190 (Inherited: 0x100)
class UWeaponDataComponentSupportLocker : public UActorComponent {
public:

	enum class ESupportType SupportType; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float AimCircleRadius; // 0x104(0x04)
	float AimCircleFarRadius; // 0x108(0x04)
	float AimLerpDistance; // 0x10c(0x04)
	float AimDistance; // 0x110(0x04)
	float AimStartDistance; // 0x114(0x04)
	float AimStartAngle; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UCurveFloat* HeightAngleCure; // 0x120(0x08)
	bool bDebug; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	struct FName CrossHairHudName; // 0x12c(0x08)
	char pad_134[0x4]; // 0x134(0x04)
	struct UClass* LineActorClass; // 0x138(0x08)
	struct FVector LenthScale; // 0x140(0x0c)
	struct FName SocketName; // 0x14c(0x08)
	char pad_154[0x4]; // 0x154(0x04)
	struct UClass* MarkerClass; // 0x158(0x08)
	bool HideLine; // 0x160(0x01)
	char pad_161[0x3]; // 0x161(0x03)
	float AimInterval; // 0x164(0x04)
	float NormalInterval; // 0x168(0x04)
	struct FName TargetSocketName; // 0x16c(0x08)
	struct FVector TargetSocketOffset; // 0x174(0x0c)
	float SpecialReloadTime; // 0x180(0x04)
	int32_t SpecialReloadShootNum; // 0x184(0x04)
	float UIAnimDelay; // 0x188(0x04)
	float TraceOffset; // 0x18c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentSupportLocker
// Size: 0x1e0 (Inherited: 0x168)
class UWeaponFuncComponentSupportLocker : public UGPWeaponFuncComponentBase {
public:

	bool LocalZooming; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
	bool bAsyncRayTracing; // 0x170(0x01)
	char pad_171[0x7]; // 0x171(0x07)
	struct AActor* LastRayHitActor; // 0x178(0x08)
	struct TArray<struct AActor*> RayHitActors; // 0x180(0x10)
	struct TArray<uint64_t> LastSerchUins; // 0x190(0x10)
	char pad_1A0[0x30]; // 0x1a0(0x30)
	struct AGPCharacter* LockTarget; // 0x1d0(0x08)
	struct UGPSupportWeaponMarkerItem* ItemCache; // 0x1d8(0x08)

	void AsyncRayTrace(); // Function DFMGameplay.WeaponFuncComponentSupportLocker.AsyncRayTrace // (Final|Native|Public) // @ game+0x642f540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentVehicleCrosshair
// Size: 0x268 (Inherited: 0x260)
class UWeaponFuncComponentVehicleCrosshair : public UWeaponFuncComponentCrosshair {
public:

	char pad_260[0x8]; // 0x260(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinAnimNotify_AttachMesh
// Size: 0x48 (Inherited: 0x38)
class UWeaponSkinAnimNotify_AttachMesh : public UAnimNotifyState {
public:

	uint64_t AttachMeshId; // 0x38(0x08)
	struct FName AttackSocket; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinApperanceModifer_KillCounter
// Size: 0x70 (Inherited: 0x40)
class UWeaponSkinApperanceModifer_KillCounter : public UWeaponSkinApperanceModiferBase {
public:

	uint64_t BindItemId; // 0x40(0x08)
	struct FString BindMaterialName; // 0x48(0x10)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x58(0x08)
	struct TArray<struct UMaterialInstanceDynamic*> MaterialInstanceDynamics; // 0x60(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponNameCardWidget
// Size: 0x2a0 (Inherited: 0x298)
class UWeaponNameCardWidget : public UUserWidget {
public:

	struct UTextBlock* NameTxt; // 0x298(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinComponent_InspectKillInfo
// Size: 0x618 (Inherited: 0x5f8)
class UWeaponSkinComponent_InspectKillInfo : public UWeaponSkinComponentBase {
public:

	struct UModularWeaponMeshProxy* MeshProxy; // 0x5f8(0x08)
	struct FString KilledPlayerName; // 0x600(0x10)
	char pad_610[0x8]; // 0x610(0x08)

	void OnRepBeKilledPlayerName(); // Function DFMGameplay.WeaponSkinComponent_InspectKillInfo.OnRepBeKilledPlayerName // (Final|Native|Public) // @ game+0x642fcb0
	void OnKnockDownPlayer(struct FKillInfo& KillInfo); // Function DFMGameplay.WeaponSkinComponent_InspectKillInfo.OnKnockDownPlayer // (Final|Native|Protected|HasOutParms) // @ game+0x642fb50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinKillCounter
// Size: 0x608 (Inherited: 0x5f8)
class UWeaponSkinKillCounter : public UWeaponSkinComponentBase {
public:

	int32_t TotalKillCount; // 0x5f8(0x04)
	char pad_5FC[0x4]; // 0x5fc(0x04)
	struct UModularWeaponMeshProxy* MeshProxy; // 0x600(0x08)

	void OnRep_TotalKillCount(); // Function DFMGameplay.WeaponSkinKillCounter.OnRep_TotalKillCount // (Final|Native|Public) // @ game+0x642fcd0
	void OnKnockDownPlayer(struct FKillInfo& KillInfo); // Function DFMGameplay.WeaponSkinKillCounter.OnKnockDownPlayer // (Final|Native|Public|HasOutParms) // @ game+0x642fc00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinNameCardSystem
// Size: 0x88 (Inherited: 0x38)
class UWeaponSkinNameCardSystem : public UWorldSubsystem {
public:

	char pad_38[0x50]; // 0x38(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponThrowableMotionDetector
// Size: 0xe70 (Inherited: 0xe38)
class AWeaponThrowableMotionDetector : public AWeaponThrowableBulletProjectile {
public:

	uint64_t DetectionRadius; // 0xe38(0x08)
	float DetectionFrequency; // 0xe40(0x04)
	float TotalLifeTime; // 0xe44(0x04)
	float DetectionHeight; // 0xe48(0x04)
	char pad_E4C[0x4]; // 0xe4c(0x04)
	struct TArray<int64_t> LastDetectedEnemies; // 0xe50(0x10)
	char pad_E60[0x10]; // 0xe60(0x10)

	void EndMotionDetection(); // Function DFMGameplay.WeaponThrowableMotionDetector.EndMotionDetection // (Final|Native|Public) // @ game+0x642f750
	void DoMotionDetection(int32_t DetectType); // Function DFMGameplay.WeaponThrowableMotionDetector.DoMotionDetection // (Final|Native|Public) // @ game+0x642f560
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WorldQuerySubsystem
// Size: 0x3e0 (Inherited: 0x378)
class AWorldQuerySubsystem : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct ARecastNavMesh* RecastNavMesh; // 0x380(0x08)
	char pad_388[0x58]; // 0x388(0x58)

	struct AWorldQuerySubsystem* STATIC_GetWorldQuerySubsystem(struct UObject* ObjectContext); // Function DFMGameplay.WorldQuerySubsystem.GetWorldQuerySubsystem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x642f9e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectCueHandler
// Size: 0xe8 (Inherited: 0x30)
class UGPEffectCueHandler : public UObject {
public:

	enum class EGPEffectStaus Status; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct AActor* Owner; // 0x38(0x08)
	struct UMaterialInstanceDynamic* CurrentDMI; // 0x40(0x08)
	struct FString CurrentMI; // 0x48(0x10)
	struct FTimerHandle TickHandle; // 0x58(0x08)
	struct TWeakObjectPtr<struct UDFMBuffEffectsComponent> BuffEffectsComponent; // 0x60(0x08)
	float Timer; // 0x68(0x04)
	bool bTimeControlMaterial; // 0x6c(0x01)
	bool bNeedTick; // 0x6d(0x01)
	char pad_6E[0x2]; // 0x6e(0x02)
	float TickRate; // 0x70(0x04)
	float LifeTime; // 0x74(0x04)
	struct FCharacterBuff BuffData; // 0x78(0x70)

	void UpdatePostEffectVectorParameters(struct FName PostEffectName, struct FName ParameterName, struct FLinearColor Value); // Function DFMGameplay.GPEffectCueHandler.UpdatePostEffectVectorParameters // (Final|Native|Public|HasDefaults) // @ game+0x632d580
	void UpdatePostEffectScalarParameters(struct FName PostEffectName, struct FName ParameterName, float Value); // Function DFMGameplay.GPEffectCueHandler.UpdatePostEffectScalarParameters // (Final|Native|Public) // @ game+0x632d480
	void StopCurrentPostProcess(); // Function DFMGameplay.GPEffectCueHandler.StopCurrentPostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x632d380
	void SetPostEffectActive(struct FName PostEffectName); // Function DFMGameplay.GPEffectCueHandler.SetPostEffectActive // (Final|Native|Public) // @ game+0x632cfc0
	void SetLifeTime(float T); // Function DFMGameplay.GPEffectCueHandler.SetLifeTime // (Final|Native|Public) // @ game+0x632cf40
	void RemovePostEffect(struct FName PostEffectName); // Function DFMGameplay.GPEffectCueHandler.RemovePostEffect // (Final|Native|Public) // @ game+0x632cc30
	void PlayPostProcess(struct FString MatName, bool TimeControl); // Function DFMGameplay.GPEffectCueHandler.PlayPostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x632ca40
	void OnRefreshBuffTime(struct FCharacterBuff& OldBuffInfo, struct FCharacterBuff& NewBuffInfo); // Function DFMGameplay.GPEffectCueHandler.OnRefreshBuffTime // (Native|Public|HasOutParms) // @ game+0x632c890
	void OnRefreshBuffData(struct FCharacterBuff& OldBuffInfo, struct FCharacterBuff& NewBuffInfo); // Function DFMGameplay.GPEffectCueHandler.OnRefreshBuffData // (Native|Public|HasOutParms) // @ game+0x632c700
	void OnHandleBuffEvent(struct FBuffEffectParam EffectParam, enum class EBuffEventType BuffEventType); // Function DFMGameplay.GPEffectCueHandler.OnHandleBuffEvent // (Native|Public) // @ game+0x632c310
	void OnExit(struct AActor* InOwner); // Function DFMGameplay.GPEffectCueHandler.OnExit // (Native|Public) // @ game+0x3649840
	void OnEnter(struct FBuffEffectParam EffectParam); // Function DFMGameplay.GPEffectCueHandler.OnEnter // (Native|Public) // @ game+0x632c170
	void OnAttributeEffectApply(struct FClientAttributeEffectContext EffectContext); // Function DFMGameplay.GPEffectCueHandler.OnAttributeEffectApply // (Native|Public) // @ game+0x632bf10
	void NotifyBuffEventTag(struct FName BuffEventTag); // Function DFMGameplay.GPEffectCueHandler.NotifyBuffEventTag // (Final|Native|Public|BlueprintCallable) // @ game+0x632be90
	bool IsMultPostprocess(); // Function DFMGameplay.GPEffectCueHandler.IsMultPostprocess // (Native|Public) // @ game+0x17616a0
	void InitData(struct UDFMBuffEffectsComponent* InBuffEffectsComponent); // Function DFMGameplay.GPEffectCueHandler.InitData // (Final|Native|Public) // @ game+0x632baa0
	void BP_OnExit(struct AActor* InOwner); // Function DFMGameplay.GPEffectCueHandler.BP_OnExit // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnEnter(struct FBuffEffectParam EffectParam); // Function DFMGameplay.GPEffectCueHandler.BP_OnEnter // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnAttributeEffectApply(struct FClientAttributeEffectContext EffectContext); // Function DFMGameplay.GPEffectCueHandler.BP_OnAttributeEffectApply // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_Eval(float detalTime); // Function DFMGameplay.GPEffectCueHandler.BP_Eval // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityWeaponThrowableBullet
// Size: 0xfa0 (Inherited: 0xe38)
class AAbilityWeaponThrowableBullet : public AWeaponThrowableBulletProjectile {
public:

	int64_t WeaponProjectileId; // 0xe38(0x08)
	int64_t WeaponDamageId; // 0xe40(0x08)
	int64_t WeaponFXId; // 0xe48(0x08)
	int64_t WeaponPreFXId; // 0xe50(0x08)
	float WeaponPreFXTime; // 0xe58(0x04)
	char pad_E5C[0x4]; // 0xe5c(0x04)
	int64_t WeaponAudioId; // 0xe60(0x08)
	int64_t AttackValueId; // 0xe68(0x08)
	int64_t CustomValue; // 0xe70(0x08)
	float GravityScale; // 0xe78(0x04)
	bool bIgnoreOwner; // 0xe7c(0x01)
	bool bShouldBounce; // 0xe7d(0x01)
	char pad_E7E[0x2]; // 0xe7e(0x02)
	float Bounciness; // 0xe80(0x04)
	float Friction; // 0xe84(0x04)
	float BounceVelocityStopLimited; // 0xe88(0x04)
	enum class EWeaponThrowableEffectType AbilityEffectType; // 0xe8c(0x01)
	enum class EWeaponThrowableExplosionType AbilityExplosionType; // 0xe8d(0x01)
	char pad_E8E[0x2]; // 0xe8e(0x02)
	float AbilityExplosionPredictBeginTime; // 0xe90(0x04)
	float AbilityExplosionSeconds; // 0xe94(0x04)
	float AbilityExplosionDurationSeconds; // 0xe98(0x04)
	float DamageDistance; // 0xe9c(0x04)
	float FadeOutTime; // 0xea0(0x04)
	struct FRotator RotationRate; // 0xea4(0x0c)
	float TeamMateDamageRatio; // 0xeb0(0x04)
	int32_t ReportSkillID; // 0xeb4(0x04)
	struct FGPAudioFuturePlayingID CountDownStartEventPlayingID; // 0xeb8(0x08)
	struct UGPAudioEventAsset* CountDownStartEvent; // 0xec0(0x08)
	struct UGPAudioEventAsset* CountDownStopEvent; // 0xec8(0x08)
	struct UGPAudioEventAsset* ExplosionEvent; // 0xed0(0x08)
	struct TArray<struct FAbilityDetectorBuffData> ExplosionBuffIDs; // 0xed8(0x10)
	char pad_EE8[0x8]; // 0xee8(0x08)
	struct UShapeComponent* ExplosionBuffRangeCheckCache; // 0xef0(0x08)
	int32_t SmokeUid; // 0xef8(0x04)
	char pad_EFC[0xc]; // 0xefc(0x0c)
	int32_t KnockbackNum; // 0xf08(0x04)
	bool ApplyKnockBack; // 0xf0c(0x01)
	bool ApplyKnockBackToFriend; // 0xf0d(0x01)
	char pad_F0E[0x2]; // 0xf0e(0x02)
	struct FAbilityKnockbackSettingConfig KnockbackSettingConfig; // 0xf10(0x88)
	bool CheckProjectileSmokeChanged; // 0xf98(0x01)
	bool IsProjectileSmokeChanged; // 0xf99(0x01)
	bool IsCheckFXItem; // 0xf9a(0x01)
	bool IsFadeIgnoreAlpha; // 0xf9b(0x01)
	char pad_F9C[0x4]; // 0xf9c(0x04)

	void UpdateDynamicCollisionElement(struct FBox Box); // Function DFMGameplay.AbilityWeaponThrowableBullet.UpdateDynamicCollisionElement // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61c1ed0
	void UnRegisterProjectileSmokeChanged(); // Function DFMGameplay.AbilityWeaponThrowableBullet.UnRegisterProjectileSmokeChanged // (Final|Native|Protected) // @ game+0x61c1eb0
	void TryGiveExplosionBuff(); // Function DFMGameplay.AbilityWeaponThrowableBullet.TryGiveExplosionBuff // (Native|Public) // @ game+0x36ca530
	void RemoveVisualSmokeBox(); // Function DFMGameplay.AbilityWeaponThrowableBullet.RemoveVisualSmokeBox // (Final|Native|Protected) // @ game+0x61c1c40
	void RegisterProjectileSmokeChanged(); // Function DFMGameplay.AbilityWeaponThrowableBullet.RegisterProjectileSmokeChanged // (Final|Native|Protected) // @ game+0x61c1c20
	void OnExplosionEffectFinished(); // Function DFMGameplay.AbilityWeaponThrowableBullet.OnExplosionEffectFinished // (Final|Native|Protected) // @ game+0x61c1a60
	void OnDelgateFXChanged(struct UObject* Pointer, struct FVector ZeroBaseLoc, float radius); // Function DFMGameplay.AbilityWeaponThrowableBullet.OnDelgateFXChanged // (Final|Native|Protected|HasDefaults) // @ game+0x61c1810
	bool GetIsFadeIgnoreAlpha(); // Function DFMGameplay.AbilityWeaponThrowableBullet.GetIsFadeIgnoreAlpha // (Final|Native|Protected|BlueprintCallable) // @ game+0x61c13a0
	void ClearDynmicCollisionElement(); // Function DFMGameplay.AbilityWeaponThrowableBullet.ClearDynmicCollisionElement // (Final|Native|Public|BlueprintCallable) // @ game+0x61c10d0
	void BP_SetProjectileCharcterOwner(); // Function DFMGameplay.AbilityWeaponThrowableBullet.BP_SetProjectileCharcterOwner // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct FBox BP_GetSmokeBox(); // Function DFMGameplay.AbilityWeaponThrowableBullet.BP_GetSmokeBox // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void ApplayBuff(struct AActor* OtherActor); // Function DFMGameplay.AbilityWeaponThrowableBullet.ApplayBuff // (Native|Public) // @ game+0x61c0e60
	void AddVisualSmokeBox(); // Function DFMGameplay.AbilityWeaponThrowableBullet.AddVisualSmokeBox // (Final|Native|Protected) // @ game+0x61c0e40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacter
// Size: 0x2870 (Inherited: 0x1ad0)
class ADFMCharacter : public AGPCharacter {
public:

	char pad_1AD0[0x20c]; // 0x1ad0(0x20c)
	float IgnoreLodOptimizeDis; // 0x1cdc(0x04)
	struct UCharacterEquipComponent* CharacterEquipComponentCache; // 0x1ce0(0x08)
	struct UDFMHealthDataComponent* DFMHealthDataComponent; // 0x1ce8(0x08)
	struct UDFMBlackboardComponent* DFMBlackboard; // 0x1cf0(0x08)
	struct UDFMComBoardComponent* DFMComboard; // 0x1cf8(0x08)
	struct USignificanceBase* SignificanceComponent; // 0x1d00(0x08)
	struct UDFMOutLineEffectComponent* DFMOutLineEffectComponent; // 0x1d08(0x08)
	struct UDFMAbilityPathTracingComponent* DFMAbilityPathTracingComponent; // 0x1d10(0x08)
	struct UGPKnockbackMoveComponent* GPKnockbackMoveComponent; // 0x1d18(0x08)
	struct UDFMPerkComponent* DFMPerkComponent; // 0x1d20(0x08)
	char pad_1D28[0x10]; // 0x1d28(0x10)
	struct TMap<struct FGPGameplayAttribute, struct FAttributeChangeDetectorFactorList> AttributeDetectorFactorMap; // 0x1d38(0x50)
	/*struct FMulticastInlineDelegate*/char OnTakeWeaponDamageSignature[0x10]; // 0x1d88(0x10)
	/*struct FMulticastInlineDelegate*/char CharacterHurtFightStateChange[0x10]; // 0x1d98(0x10)
	/*struct FMulticastInlineDelegate*/char CharacterFightingStateChange[0x10]; // 0x1da8(0x10)
	bool bOpenAIActive; // 0x1db8(0x01)
	char pad_1DB9[0x3]; // 0x1db9(0x03)
	float NoPlayerDuration; // 0x1dbc(0x04)
	float CheckPlayerRadius; // 0x1dc0(0x04)
	float RayLength; // 0x1dc4(0x04)
	float RayRadius; // 0x1dc8(0x04)
	char pad_1DCC[0x14]; // 0x1dcc(0x14)
	float FaceRotationFocusSpeed; // 0x1de0(0x04)
	char pad_1DE4[0x4]; // 0x1de4(0x04)
	struct UGPSprintComponent* SprintComp; // 0x1de8(0x08)
	struct UDFMCharacterAttributeCenterComponent* DFMAttributesCenter; // 0x1df0(0x08)
	struct UDFMBuffSystemComponent* BuffSystemComponent; // 0x1df8(0x08)
	struct UDFMBuffEffectsComponent* DFMBuffEffectsComp; // 0x1e00(0x08)
	struct UDFMCharacterMovementComponent* DFMMovementComp; // 0x1e08(0x08)
	struct UDFMFSMInstance* DFMFSMInstance; // 0x1e10(0x08)
	struct USphereComponent* WeaponTraceSphere; // 0x1e18(0x08)
	struct UDFMCharacterFashionComponent* CharacterFashionComponent; // 0x1e20(0x08)
	struct FName FashionConfigName; // 0x1e28(0x08)
	struct FName FashionDefaultConfigName; // 0x1e30(0x08)
	uint64_t DefaultHeroID; // 0x1e38(0x08)
	uint64_t DefaultHeroWatchID; // 0x1e40(0x08)
	bool FashionDefaultWithLocalMesh; // 0x1e48(0x01)
	char pad_1E49[0xb]; // 0x1e49(0x0b)
	bool bOwnerIsGod; // 0x1e54(0x01)
	bool bOwnerIsGodDamage; // 0x1e55(0x01)
	char pad_1E56[0x2]; // 0x1e56(0x02)
	struct UMaterialInterface* GodMat; // 0x1e58(0x08)
	struct FName GodHitFeedBack; // 0x1e60(0x08)
	char pad_1E68[0x4]; // 0x1e68(0x04)
	float AddFractureBuffHeight; // 0x1e6c(0x04)
	float AddDoubleFractureBuffHeight; // 0x1e70(0x04)
	float LastHurtTime; // 0x1e74(0x04)
	char pad_1E78[0x8]; // 0x1e78(0x08)
	struct AActor* BackSafeActor; // 0x1e80(0x08)
	float InSectorAnchor; // 0x1e88(0x04)
	char pad_1E8C[0x24]; // 0x1e8c(0x24)
	struct UClass* ActionWithCastTimeClass; // 0x1eb0(0x08)
	struct UDFMActionWithCastTime* ActionWithCastTimeInstance; // 0x1eb8(0x08)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByHealthZero[0x10]; // 0x1ec0(0x10)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByUserCancel[0x10]; // 0x1ed0(0x10)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByMovement[0x10]; // 0x1ee0(0x10)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByWeapon[0x10]; // 0x1ef0(0x10)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByVehicle[0x10]; // 0x1f00(0x10)
	/*struct FMulticastInlineDelegate*/char ActionInterruptedByWeaponEvent[0x10]; // 0x1f10(0x10)
	/*struct FMulticastInlineDelegate*/char OnCharacterAddMeritEvent[0x10]; // 0x1f20(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerRedeployStart[0x10]; // 0x1f30(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerRedeployEnd[0x10]; // 0x1f40(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayerEscaping[0x10]; // 0x1f50(0x10)
	char pad_1F60[0x38]; // 0x1f60(0x38)
	/*struct FMulticastInlineDelegate*/char OnClientNotifyAddBuff[0x10]; // 0x1f98(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientNotifyRemoveBuff[0x10]; // 0x1fa8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBuffRefresh[0x10]; // 0x1fb8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientBuffAccurateRefresh[0x10]; // 0x1fc8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientEffectBuffRefresh[0x10]; // 0x1fd8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientNotifyAddOverloadBuff[0x10]; // 0x1fe8(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientNotifyRemoveOverloadBuff[0x10]; // 0x1ff8(0x10)
	float LastMakeDamageOrHurtTime; // 0x2008(0x04)
	bool bLastIsHurtFightingState; // 0x200c(0x01)
	bool bLastIsFightingState; // 0x200d(0x01)
	char pad_200E[0x2]; // 0x200e(0x02)
	struct UInteractorComponent* InteractorComponent; // 0x2010(0x08)
	struct UDFMHighValueInspectionComponent* HighValueInspectionComponent; // 0x2018(0x08)
	struct UDFMCharacterSequenceBindingComponent* SequenceBinding; // 0x2020(0x08)
	struct UDFMBattleCharacterAppearanceProxyComponent* DFMCharacterAppearanceTPP; // 0x2028(0x08)
	struct UDFMBattleCharacterAppearanceProxyComponent* DFMCharacterAppearanceFPP; // 0x2030(0x08)
	char pad_2038[0x8]; // 0x2038(0x08)
	float LeastHurtHeight; // 0x2040(0x04)
	float LeastFractureHeight; // 0x2044(0x04)
	float LeastDieHeight; // 0x2048(0x04)
	float TriggerLandedStiffHeight; // 0x204c(0x04)
	float CustomTriggerLandedStiffHeight; // 0x2050(0x04)
	float LandedStiffTime1; // 0x2054(0x04)
	float LandedStiffTime2; // 0x2058(0x04)
	float MaxSpeedScalerAtLandedStiff; // 0x205c(0x04)
	struct UCurveFloat* DamageFallHeight; // 0x2060(0x08)
	struct UCurveFloat* DamageHealthFallHeight; // 0x2068(0x08)
	struct UCurveFloat* DamageHealthFallHeightCustom; // 0x2070(0x08)
	struct UCurveFloat* DamageFallHeightCustom; // 0x2078(0x08)
	bool EnableFallingDamage; // 0x2080(0x01)
	char pad_2081[0x3]; // 0x2081(0x03)
	float MaxRescueAngleLimit; // 0x2084(0x04)
	float MaxRescueDistanceLimit; // 0x2088(0x04)
	char pad_208C[0xc]; // 0x208c(0x0c)
	float CachedInteractPointInterval; // 0x2098(0x04)
	char pad_209C[0x24]; // 0x209c(0x24)
	bool bUseHeadLocForFilterCollision; // 0x20c0(0x01)
	char pad_20C1[0x7]; // 0x20c1(0x07)
	float TickRescueCascadeParamInterval; // 0x20c8(0x04)
	struct FGameplayTag RescueTag; // 0x20cc(0x08)
	struct FGameplayTag DefaultInteractTag; // 0x20d4(0x08)
	char pad_20DC[0x4]; // 0x20dc(0x04)
	struct FGameplayTagContainer TagContainer; // 0x20e0(0x20)
	struct TMap<int32_t, struct FRescueCascadeParamInfo> Dis2RescueParamInfo_HD; // 0x2100(0x50)
	struct TMap<int32_t, struct FRescueCascadeParamInfo> Dis2RescueParamInfo_Mobile; // 0x2150(0x50)
	bool CustombActive_HD; // 0x21a0(0x01)
	bool CustombEnable_HD; // 0x21a1(0x01)
	bool CustombNeedHUDFixedPos_HD; // 0x21a2(0x01)
	bool CustombIsTagNumOverTwo_HD; // 0x21a3(0x01)
	bool CustombIsNeedFilterPre_HD; // 0x21a4(0x01)
	bool CustombIsNeedFilter3C_HD; // 0x21a5(0x01)
	bool CustombIsNeedShowWhiteDot_HD; // 0x21a6(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_HD; // 0x21a7(0x01)
	float CustomDetectShowWhiteDotHorizontalAngle_HD; // 0x21a8(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_HD; // 0x21ac(0x04)
	float CustomDetectShowWhiteDotMinRadius_HD; // 0x21b0(0x04)
	float CustomDetectShowWhiteDotMaxRadius_HD; // 0x21b4(0x04)
	bool CustombIsNeedShowOutline_HD; // 0x21b8(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_HD; // 0x21b9(0x01)
	char pad_21BA[0x2]; // 0x21ba(0x02)
	float CustomDetectShowOutlineHorizontalAngle_HD; // 0x21bc(0x04)
	float CustomDetectShowOutlineVerticalAngle_HD; // 0x21c0(0x04)
	float CustomDetectShowOutlineMinRadius_HD; // 0x21c4(0x04)
	float CustomDetectShowOutlineMaxRadius_HD; // 0x21c8(0x04)
	float CustomDetectShowHUDMinRadius_HD; // 0x21cc(0x04)
	float CustomDetectShowHUDMaxRadius_HD; // 0x21d0(0x04)
	struct FName CustomDetectShowHUDBoxCompName_HD; // 0x21d4(0x08)
	char pad_21DC[0x4]; // 0x21dc(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_HD; // 0x21e0(0x08)
	float CustomDetectShowHUDHorizontalAngle_HD; // 0x21e8(0x04)
	float CustomDetectShowHUDVerticalAngle_HD; // 0x21ec(0x04)
	bool CustombIsNeedInteractPointForward_HD; // 0x21f0(0x01)
	bool CustombUseAimedBoxFilterHUDDir_HD; // 0x21f1(0x01)
	bool CustombUseBoxFilterHUDRange_HD; // 0x21f2(0x01)
	bool CustombIsNeedShowToButton_HD; // 0x21f3(0x01)
	bool CustombIsNeedCheckAllowShowWidget_HD; // 0x21f4(0x01)
	bool CustombIsNeedFilterCollision_HD; // 0x21f5(0x01)
	enum class EInteractorHUDType CustomHUDType_HD; // 0x21f6(0x01)
	enum class EInteractorPriority CustomInteractorPriority_HD; // 0x21f7(0x01)
	bool CustombIsNeedGather_HD; // 0x21f8(0x01)
	char pad_21F9[0x7]; // 0x21f9(0x07)
	struct FText CustomButtonTitle_HD; // 0x2200(0x18)
	bool CustombCanJump_HD; // 0x2218(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_HD; // 0x2219(0x01)
	bool CustombNeedIgnoreSelf_HD; // 0x221a(0x01)
	char pad_221B[0x5]; // 0x221b(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_HD; // 0x2220(0x10)
	float CustomCachedCanOverlapInterval_HD; // 0x2230(0x04)
	float CustomCachedAllowShowWidgetInterval_HD; // 0x2234(0x04)
	float CustomCachedFilterCollisionInterval_HD; // 0x2238(0x04)
	float CustomCachedScreenPosInterval_HD; // 0x223c(0x04)
	bool CustombActive_Mobile; // 0x2240(0x01)
	bool CustombEnable_Mobile; // 0x2241(0x01)
	bool CustombIsNeedFilterPre_Mobile; // 0x2242(0x01)
	bool CustombIsNeedFilter3C_Mobile; // 0x2243(0x01)
	bool CustombIsNeedShowWhiteDot_Mobile; // 0x2244(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_Mobile; // 0x2245(0x01)
	char pad_2246[0x2]; // 0x2246(0x02)
	float CustomDetectShowWhiteDotHorizontalAngle_Mobile; // 0x2248(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_Mobile; // 0x224c(0x04)
	float CustomDetectShowWhiteDotMinRadius_Mobile; // 0x2250(0x04)
	float CustomDetectShowWhiteDotMaxRadius_Mobile; // 0x2254(0x04)
	bool CustombIsNeedShowOutline_Mobile; // 0x2258(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_Mobile; // 0x2259(0x01)
	char pad_225A[0x2]; // 0x225a(0x02)
	float CustomDetectShowOutlineHorizontalAngle_Mobile; // 0x225c(0x04)
	float CustomDetectShowOutlineVerticalAngle_Mobile; // 0x2260(0x04)
	float CustomDetectShowOutlineMinRadius_Mobile; // 0x2264(0x04)
	float CustomDetectShowOutlineMaxRadius_Mobile; // 0x2268(0x04)
	float CustomDetectShowHUDMinRadius_Mobile; // 0x226c(0x04)
	float CustomDetectShowHUDMaxRadius_Mobile; // 0x2270(0x04)
	struct FName CustomDetectShowHUDBoxCompName_Mobile; // 0x2274(0x08)
	char pad_227C[0x4]; // 0x227c(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_Mobile; // 0x2280(0x08)
	float CustomDetectShowHUDHorizontalAngle_Mobile; // 0x2288(0x04)
	float CustomDetectShowHUDVerticalAngle_Mobile; // 0x228c(0x04)
	bool CustombIsNeedInteractPointForward_Mobile; // 0x2290(0x01)
	bool CustombUseAimedBoxFilterHUDDir_Mobile; // 0x2291(0x01)
	bool CustombUseBoxFilterHUDRange_Mobile; // 0x2292(0x01)
	bool CustombIsNeedShowToButton_Mobile; // 0x2293(0x01)
	bool CustombIsNeedCheckAllowShowWidget_Mobile; // 0x2294(0x01)
	bool CustombIsNeedFilterCollision_Mobile; // 0x2295(0x01)
	enum class EInteractorHUDType CustomHUDType_Mobile; // 0x2296(0x01)
	enum class EInteractorPriority CustomInteractorPriority_Mobile; // 0x2297(0x01)
	bool CustombIsNeedGather_Mobile; // 0x2298(0x01)
	char pad_2299[0x7]; // 0x2299(0x07)
	/*struct TSoftObjectPtr<UObject>*/char CustomButtonSoftIcon_Mobile[0x28]; // 0x22a0(0x28)
	struct FText CustomButtonTitle_Mobile; // 0x22c8(0x18)
	bool CustombCanJump_Mobile; // 0x22e0(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_Mobile; // 0x22e1(0x01)
	bool CustombNeedIgnoreSelf_Mobile; // 0x22e2(0x01)
	char pad_22E3[0x5]; // 0x22e3(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_Mobile; // 0x22e8(0x10)
	float CustomCachedCanOverlapInterval_Mobile; // 0x22f8(0x04)
	float CustomCachedAllowShowWidgetInterval_Mobile; // 0x22fc(0x04)
	float CustomCachedFilterCollisionInterval_Mobile; // 0x2300(0x04)
	float CustomCachedScreenPosInterval_Mobile; // 0x2304(0x04)
	enum class EInteractorType CustomInteractorType; // 0x2308(0x01)
	char pad_2309[0x3]; // 0x2309(0x03)
	struct FVector CustomInteractPointOffset; // 0x230c(0x0c)
	bool bForceUseActorLocationForInteractPoint; // 0x2318(0x01)
	char pad_2319[0x7]; // 0x2319(0x07)
	struct TArray<struct UMeshComponent*> CachedOutlineMeshComponents; // 0x2320(0x10)
	struct ADFMCharacter* AICharacterForTargetRange; // 0x2330(0x08)
	struct FName GMCommandNPCName; // 0x2338(0x08)
	int32_t DistanceToAI; // 0x2340(0x04)
	char pad_2344[0x4]; // 0x2344(0x04)
	struct AActor* LockOwner; // 0x2348(0x08)
	struct FName NpcName; // 0x2350(0x08)
	struct FName PoolName; // 0x2358(0x08)
	struct FText PoolChosenName; // 0x2360(0x18)
	struct FString PoolChosenName_Buffer; // 0x2378(0x10)
	bool bAssassinatible; // 0x2388(0x01)
	char pad_2389[0x7]; // 0x2389(0x07)
	struct TArray<struct FName> OverrideTags; // 0x2390(0x10)
	struct FName CharacterName; // 0x23a0(0x08)
	struct TMap<uint64_t, uint64_t> WeaponOverrideAnimIDMap; // 0x23a8(0x50)
	struct AAISpawnChecker* SpawnChecker; // 0x23f8(0x08)
	struct AAISpawnPoint* SpawnPoint; // 0x2400(0x08)
	char CurrentMission; // 0x2408(0x01)
	char CurrentGoal; // 0x2409(0x01)
	char pad_240A[0x6]; // 0x240a(0x06)
	struct UAnimMontage* CurrentMotage; // 0x2410(0x08)
	char pad_2418[0x8]; // 0x2418(0x08)
	struct FTransform RescuePointR; // 0x2420(0x30)
	struct FTransform RescuePointL; // 0x2450(0x30)
	struct TArray<struct ACHARACTER*> ObserverList; // 0x2480(0x10)
	enum class EPlayerLootingState LootingState; // 0x2490(0x01)
	bool bItsPerceptible; // 0x2491(0x01)
	bool bSpawnDrugOnDeath; // 0x2492(0x01)
	char pad_2493[0x25]; // 0x2493(0x25)
	bool UseSpecialDropCheckData; // 0x24b8(0x01)
	char pad_24B9[0x3]; // 0x24b9(0x03)
	float SpecialDropCheckRadiu; // 0x24bc(0x04)
	float SpecialDropCheckHigh; // 0x24c0(0x04)
	float DroyBodyCheckRadius; // 0x24c4(0x04)
	struct FVector DropBodylocSucceed; // 0x24c8(0x0c)
	char pad_24D4[0x4]; // 0x24d4(0x04)
	float DropForwardLen; // 0x24d8(0x04)
	float DropPointReduceLen; // 0x24dc(0x04)
	float CheckDroyBodyBoxHeight; // 0x24e0(0x04)
	float CheckDroyBodyBoxForwardHeight; // 0x24e4(0x04)
	float CheckDroyDownLen; // 0x24e8(0x04)
	char pad_24EC[0x4]; // 0x24ec(0x04)
	struct UClass* DeadBodyAmmoBoxClass; // 0x24f0(0x08)
	char pad_24F8[0x30]; // 0x24f8(0x30)
	/*struct FMulticastInlineDelegate*/char OnRepCharacterPOI[0x10]; // 0x2528(0x10)
	bool bInMapPOI; // 0x2538(0x01)
	bool bKillMeshWhenDead; // 0x2539(0x01)
	char pad_253A[0x6]; // 0x253a(0x06)
	struct UActorComponent* DebugLineBatcher; // 0x2540(0x08)
	/*struct FMulticastInlineDelegate*/char OnPickAmmoSucc[0x10]; // 0x2548(0x10)
	/*struct FMulticastInlineDelegate*/char OnLocalCharacterPlayUIAudio[0x10]; // 0x2558(0x10)
	/*struct FMulticastInlineDelegate*/char OnLocalCharacterStopUIAudio[0x10]; // 0x2568(0x10)
	/*struct FMulticastInlineDelegate*/char OnCharacterBeShot[0x10]; // 0x2578(0x10)
	/*struct FMulticastInlineDelegate*/char OnCharacterPlayFx[0x10]; // 0x2588(0x10)
	bool IsUseRebornUI; // 0x2598(0x01)
	bool IsInRedeploy; // 0x2599(0x01)
	bool AllowRedeployHide; // 0x259a(0x01)
	char pad_259B[0x5]; // 0x259b(0x05)
	struct TMap<enum class ECharacterDamagePartsName, struct FCharacterPartDamageRateInfo> CharacterDamagesPartsBoneNameMap; // 0x25a0(0x50)
	struct TMap<enum class ECharacterPart, struct FCharacterPartBoneArray> CharacterPartBoneNameMap; // 0x25f0(0x50)
	float LootingPainRateWhenArmFracture; // 0x2640(0x04)
	float LootingPainRateWhenDoubleArmFracture; // 0x2644(0x04)
	float SprintTriggerBuffPeriod; // 0x2648(0x04)
	float LastFireTime; // 0x264c(0x04)
	struct ADFMAILabDebugInfo* DebugPanel; // 0x2650(0x08)
	bool bArrowNeedRebound; // 0x2658(0x01)
	bool bThrowBlockingRotated; // 0x2659(0x01)
	bool bEnableSuperSprint; // 0x265a(0x01)
	char pad_265B[0xe]; // 0x265b(0x0e)
	bool bCreateHotFixCompoent; // 0x2669(0x01)
	char pad_266A[0x6]; // 0x266a(0x06)
	struct UGPHotFixHelperComponent* GPHotFixHelperComponent; // 0x2670(0x08)
	uint64_t LastBeHitMakerUin; // 0x2678(0x08)
	bool bIgnoreDamage; // 0x2680(0x01)
	char pad_2681[0xf]; // 0x2681(0x0f)
	float PlayHitTemp; // 0x2690(0x04)
	char pad_2694[0x4]; // 0x2694(0x04)
	struct TArray<struct UMaterialInstanceDynamic*> TranslucentDynamicMatArr; // 0x2698(0x10)
	struct TArray<struct UMeshComponent*> MeshComponentArr; // 0x26a8(0x10)
	struct UFXResourceContainerComponent* Fx1PCamera; // 0x26b8(0x08)
	char pad_26C0[0x8]; // 0x26c0(0x08)
	/*struct FMulticastInlineDelegate*/char OnPlayerStateRepTrigger[0x10]; // 0x26c8(0x10)
	char pad_26D8[0x10]; // 0x26d8(0x10)
	struct FPropertyReplicationHandler PropertyReplicationHandler; // 0x26e8(0x10)
	struct FKillInfo CachedKillerKillInfo; // 0x26f8(0x148)
	char pad_2840[0x30]; // 0x2840(0x30)

	void UseStarApp(bool bUse, bool bNeedCloseAnim); // Function DFMGameplay.DFMCharacter.UseStarApp // (Final|Native|Public|BlueprintCallable) // @ game+0x627e770
	void UseAbilityItem(uint64_t ItemID); // Function DFMGameplay.DFMCharacter.UseAbilityItem // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627e6e0
	void UploadSkillDamageData(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMCharacter.UploadSkillDamageData // (Native|Public|HasOutParms) // @ game+0x627e610
	void UpdateAILabDebug(); // Function DFMGameplay.DFMCharacter.UpdateAILabDebug // (Final|Native|Public) // @ game+0x627e5f0
	void UnRegisterDetectAttributeChange(struct FGPGameplayAttribute Attribute, int32_t factorId); // Function DFMGameplay.DFMCharacter.UnRegisterDetectAttributeChange // (Final|Native|Public|BlueprintCallable) // @ game+0x627e360
	bool TargetIsOnLeftOrRight(struct ADFMCharacter* CHARACTER, bool bIsLeft); // Function DFMGameplay.DFMCharacter.TargetIsOnLeftOrRight // (Final|Native|Public|BlueprintCallable) // @ game+0x627e170
	void Suicide(); // Function DFMGameplay.DFMCharacter.Suicide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void StopSound(struct UGPAudioEventAsset* InEvent); // Function DFMGameplay.DFMCharacter.StopSound // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x627e0e0
	void StopLooting(); // Function DFMGameplay.DFMCharacter.StopLooting // (Final|Native|Public) // @ game+0x627e0c0
	void StopAllSound(); // Function DFMGameplay.DFMCharacter.StopAllSound // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x627e0a0
	void ShowSceneDebugInfo(); // Function DFMGameplay.DFMCharacter.ShowSceneDebugInfo // (Final|Native|Public) // @ game+0x627e080
	void ShowDebugInfo(int32_t ShowType); // Function DFMGameplay.DFMCharacter.ShowDebugInfo // (Native|Public|BlueprintCallable) // @ game+0x627dff0
	void SetStarAppMeshMaterial(int32_t MaterialSlotIndex, struct FString MaterialPath); // Function DFMGameplay.DFMCharacter.SetStarAppMeshMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x627de90
	void SetPoolChosenName(struct FText In_PoolChosenName); // Function DFMGameplay.DFMCharacter.SetPoolChosenName // (Final|Native|Public) // @ game+0x627ddb0
	void SetOwnerGodServerOnly(bool bGod); // Function DFMGameplay.DFMCharacter.SetOwnerGodServerOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x627dd20
	void SetOwnerGodDamageServerOnly(bool bGod); // Function DFMGameplay.DFMCharacter.SetOwnerGodDamageServerOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x627dc90
	void SetOwnerGod(bool bGod); // Function DFMGameplay.DFMCharacter.SetOwnerGod // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x627dc00
	void SetIsSneaking(bool bIsSneaking); // Function DFMGameplay.DFMCharacter.SetIsSneaking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627db70
	void SetIsLooting(struct FLootingStateParam LootingStateParam); // Function DFMGameplay.DFMCharacter.SetIsLooting // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627dab0
	void ServerSpawnTestAIForTargetRangeEx(struct FName NpcName, struct FVector Location); // Function DFMGameplay.DFMCharacter.ServerSpawnTestAIForTargetRangeEx // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x627d9d0
	void ServerSpawnTestAIForTargetRange(struct FName NpcName, struct FVector Location); // Function DFMGameplay.DFMCharacter.ServerSpawnTestAIForTargetRange // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x627d900
	void ServerSpawnTestAI(struct FName NpcName); // Function DFMGameplay.DFMCharacter.ServerSpawnTestAI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d870
	void ServerSetThrowBlockingRotated(bool Flag); // Function DFMGameplay.DFMCharacter.ServerSetThrowBlockingRotated // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d7e0
	void ServerSetArrowNeedRebound(bool Flag); // Function DFMGameplay.DFMCharacter.ServerSetArrowNeedRebound // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d750
	void ServerOnKillerInfoCardHide(); // Function DFMGameplay.DFMCharacter.ServerOnKillerInfoCardHide // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d730
	void ServerNotifyStopLaserPointerLocking(struct UObject* Target); // Function DFMGameplay.DFMCharacter.ServerNotifyStopLaserPointerLocking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d6a0
	void ServerNotifyStartLaserPointerLocking(struct UObject* Target, float IncreaseSpeed, float DecreaseSpeed, float PersistentTime); // Function DFMGameplay.DFMCharacter.ServerNotifyStartLaserPointerLocking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d560
	void ServerEndRaiseWatch(); // Function DFMGameplay.DFMCharacter.ServerEndRaiseWatch // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d540
	void ServerCheckDroyBodyPosition(); // Function DFMGameplay.DFMCharacter.ServerCheckDroyBodyPosition // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d520
	void ServerBeginRaiseWatch(); // Function DFMGameplay.DFMCharacter.ServerBeginRaiseWatch // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d500
	void ServerAddEffectBuff(struct ADFMCharacter* Target, bool Add, struct FAbilityDetectorBuffData Data); // Function DFMGameplay.DFMCharacter.ServerAddEffectBuff // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627d260
	void SafeHousePlayGesture(bool bPlay, bool bNeedUpdateAnim); // Function DFMGameplay.DFMCharacter.SafeHousePlayGesture // (Final|Native|Public|BlueprintCallable) // @ game+0x627d190
	void SafeHouseEnterRange(bool bEnter); // Function DFMGameplay.DFMCharacter.SafeHouseEnterRange // (Final|Native|Public|BlueprintCallable) // @ game+0x627d100
	void ResetJumpHighestPosition(struct FVector NewJumpHighestPosition); // Function DFMGameplay.DFMCharacter.ResetJumpHighestPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x627d070
	void RequestSetIsLooting(struct FLootingStateParam LootingStateParam); // Function DFMGameplay.DFMCharacter.RequestSetIsLooting // (Final|Native|Public) // @ game+0x627cfb0
	void Req_ThrowBlockingRotated(); // Function DFMGameplay.DFMCharacter.Req_ThrowBlockingRotated // (Final|Native|Public) // @ game+0x627cf90
	void Req_HideCharacter(); // Function DFMGameplay.DFMCharacter.Req_HideCharacter // (Final|Native|Public) // @ game+0x627cf70
	void Req_ArrowNeedRebound(); // Function DFMGameplay.DFMCharacter.Req_ArrowNeedRebound // (Final|Native|Public) // @ game+0x627cf50
	void Rep_SetGodMode(); // Function DFMGameplay.DFMCharacter.Rep_SetGodMode // (Final|Native|Public) // @ game+0x627cf30
	void Rep_InMapPOI(); // Function DFMGameplay.DFMCharacter.Rep_InMapPOI // (Final|Native|Public) // @ game+0x627cf10
	void RemoveBuffDurationRate(int32_t BuffId); // Function DFMGameplay.DFMCharacter.RemoveBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x627ce90
	void RemoveBuffByGUID(uint64_t BuffGUID); // Function DFMGameplay.DFMCharacter.RemoveBuffByGUID // (Native|Public) // @ game+0x627ce00
	void RemoveBuff(uint32_t& InBuffId, enum class ECharacterPart& InCharacterPart); // Function DFMGameplay.DFMCharacter.RemoveBuff // (Native|Public|HasOutParms) // @ game+0x627cc30
	void ReleaseFocusPlayerLocation(); // Function DFMGameplay.DFMCharacter.ReleaseFocusPlayerLocation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x627cc10
	int32_t RegisterDetectAttributeChange(struct FGPGameplayAttribute Attribute, struct FAttributeChangeFactor& factor); // Function DFMGameplay.DFMCharacter.RegisterDetectAttributeChange // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x627c7c0
	void RandomEquipment(); // Function DFMGameplay.DFMCharacter.RandomEquipment // (Final|Native|Protected) // @ game+0x17621d0
	void PreLoadCharacterResource(); // Function DFMGameplay.DFMCharacter.PreLoadCharacterResource // (Final|Native|Public) // @ game+0x627c7a0
	void PlaySound_SingleClient(struct UGPAudioEventAsset* InEvent, enum class EGPAudioBlueprintType EType); // Function DFMGameplay.DFMCharacter.PlaySound_SingleClient // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x627c6d0
	void PlaySound(struct UGPAudioEventAsset* InEvent, enum class EGPAudioBlueprintType EType); // Function DFMGameplay.DFMCharacter.PlaySound // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x627c600
	void Play1PCameraFx(bool Play, struct FName Name); // Function DFMGameplay.DFMCharacter.Play1PCameraFx // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x627c530
	void OnSuppetWeaponMeshCreate(float AmmoPercent, struct UGPSkeletalMeshComponent* WeaponMesh); // Function DFMGameplay.DFMCharacter.OnSuppetWeaponMeshCreate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void OnSOLCharacterInEscapeState(); // Function DFMGameplay.DFMCharacter.OnSOLCharacterInEscapeState // (Final|Native|Private) // @ game+0x627c510
	void OnRep_PoolChosenName_Buffer(); // Function DFMGameplay.DFMCharacter.OnRep_PoolChosenName_Buffer // (Final|Native|Public) // @ game+0x627c4d0
	void OnRep_OverrideTags(); // Function DFMGameplay.DFMCharacter.OnRep_OverrideTags // (Final|Native|Public) // @ game+0x627c4b0
	void OnRep_NpcName(); // Function DFMGameplay.DFMCharacter.OnRep_NpcName // (Final|Native|Public) // @ game+0x17621d0
	void OnRep_HurtFighting(); // Function DFMGameplay.DFMCharacter.OnRep_HurtFighting // (Final|Native|Public) // @ game+0x627c490
	void OnRep_Fighting(); // Function DFMGameplay.DFMCharacter.OnRep_Fighting // (Final|Native|Public) // @ game+0x627c470
	void OnRep_FashionConfigName(); // Function DFMGameplay.DFMCharacter.OnRep_FashionConfigName // (Final|Native|Public) // @ game+0x627c450
	void OnRep_bKillMeshWhenDead(); // Function DFMGameplay.DFMCharacter.OnRep_bKillMeshWhenDead // (Final|Native|Public) // @ game+0x627c4f0
	void OnProcessTweenEnd(float curValue); // Function DFMGameplay.DFMCharacter.OnProcessTweenEnd // (Final|Native|Public) // @ game+0x627c3d0
	void OnProcessTween(float curValue); // Function DFMGameplay.DFMCharacter.OnProcessTween // (Final|Native|Public) // @ game+0x627c350
	void OnMatchEnd(enum class EMatchOverReason& reason); // Function DFMGameplay.DFMCharacter.OnMatchEnd // (Final|Native|Public|HasOutParms) // @ game+0x627c2c0
	void OnLoadAnimationResource(struct FSoftObjectPath& SoftObjectPath, uint64_t AvatarID, struct FName AnimKey, int32_t Weapon, int32_t Index, int32_t Pose, bool FPP); // Function DFMGameplay.DFMCharacter.OnLoadAnimationResource // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x627c070
	void OnKillerInfoCardShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.DFMCharacter.OnKillerInfoCardShow // (Final|Native|Public) // @ game+0x627bf70
	void OnEquipmentUnequip(struct ACHARACTER* OwnerCharacter, enum class EEquipmentType EquipmentType, bool Result, uint64_t ItemID, uint64_t ItemGid); // Function DFMGameplay.DFMCharacter.OnEquipmentUnequip // (Final|Native|Protected) // @ game+0x627bdd0
	void OnEquipmentMeshReady(enum class EEquipmentType IntType, uint64_t ItemID); // Function DFMGameplay.DFMCharacter.OnEquipmentMeshReady // (Final|Native|Protected) // @ game+0x627bd10
	void OnEquipmentEquip(struct ACHARACTER* OwnerCharacter, enum class EEquipmentType EquipmentType, bool Result, uint64_t ItemID, uint64_t ItemGid); // Function DFMGameplay.DFMCharacter.OnEquipmentEquip // (Final|Native|Protected) // @ game+0x627bb70
	void OnCharacterDeadOrImpendingDeath(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.DFMCharacter.OnCharacterDeadOrImpendingDeath // (Final|Native|Public) // @ game+0x627baf0
	void NotifyLootingState(int64_t CmdGid, enum class EPlayerLootingState InLootingState); // Function DFMGameplay.DFMCharacter.NotifyLootingState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x627ba20
	void NotifyLootingBlock(); // Function DFMGameplay.DFMCharacter.NotifyLootingBlock // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x627ba00
	void NotifyKnockbackSomeone(struct ADFMCharacter* Target, struct FVector WeaponLocation); // Function DFMGameplay.DFMCharacter.NotifyKnockbackSomeone // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x627b920
	void NotifyHealthViewShow(bool bShow); // Function DFMGameplay.DFMCharacter.NotifyHealthViewShow // (Final|Native|Public) // @ game+0x627b890
	void MultiPlayLeftArmAnim(struct FName LeftArmAnimName); // Function DFMGameplay.DFMCharacter.MultiPlayLeftArmAnim // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x627b800
	bool LineOfSightToLocation(struct FVector GoalLocation, bool bCheckFoliage); // Function DFMGameplay.DFMCharacter.LineOfSightToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x627b720
	float LineOfSightToCharacter(struct ACHARACTER* Other, struct FVector& VisiblePoint, bool bCheckFoliage); // Function DFMGameplay.DFMCharacter.LineOfSightToCharacter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x627b600
	void KnockbackSomeone(struct ADFMCharacter* Target, struct FVector WeaponLocation); // Function DFMGameplay.DFMCharacter.KnockbackSomeone // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x627b520
	void KeyToggleTelescope(); // Function DFMGameplay.DFMCharacter.KeyToggleTelescope // (Final|Native|Public|BlueprintCallable) // @ game+0x627b500
	bool IsRescueOnTheLeft(struct AActor* Target); // Function DFMGameplay.DFMCharacter.IsRescueOnTheLeft // (Native|Public|BlueprintCallable) // @ game+0x627b460
	bool IsInFracture(); // Function DFMGameplay.DFMCharacter.IsInFracture // (Native|Public|BlueprintCallable) // @ game+0x627b430
	bool IsInChangeClip(); // Function DFMGameplay.DFMCharacter.IsInChangeClip // (Final|Native|Public|BlueprintCallable) // @ game+0x627b400
	void InterruptActionByWeaponEvent(char Event); // Function DFMGameplay.DFMCharacter.InterruptActionByWeaponEvent // (Final|Native|Public) // @ game+0x627b380
	void InterruptActionByWeapon(); // Function DFMGameplay.DFMCharacter.InterruptActionByWeapon // (Final|Native|Public) // @ game+0x627b360
	void InterruptActionByVehicle(); // Function DFMGameplay.DFMCharacter.InterruptActionByVehicle // (Final|Native|Public) // @ game+0x627b340
	void InterruptActionByUserCancel(); // Function DFMGameplay.DFMCharacter.InterruptActionByUserCancel // (Final|Native|Public) // @ game+0x627b320
	void InterruptActionByMovement(); // Function DFMGameplay.DFMCharacter.InterruptActionByMovement // (Final|Native|Public) // @ game+0x627b300
	void InterruptActionByHealthZero(); // Function DFMGameplay.DFMCharacter.InterruptActionByHealthZero // (Final|Native|Public) // @ game+0x627b2e0
	void InteractPickupAmmo(struct AActor* Interactor, struct AWeaponBase* TargetWeapon); // Function DFMGameplay.DFMCharacter.InteractPickupAmmo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627b210
	void GodModeTimerServerOnly(float Duration); // Function DFMGameplay.DFMCharacter.GodModeTimerServerOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x627afe0
	void GodModeTimer(float Duration); // Function DFMGameplay.DFMCharacter.GodModeTimer // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x627af60
	void GMSpawnTestAIEx(); // Function DFMGameplay.DFMCharacter.GMSpawnTestAIEx // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x627a890
	void GMSpawnTestAI(); // Function DFMGameplay.DFMCharacter.GMSpawnTestAI // (Final|Native|Public|BlueprintCallable) // @ game+0x627a870
	void GMServerSetCurrentArmdedForce(enum class EInGameBattleClassType ArmdedForce); // Function DFMGameplay.DFMCharacter.GMServerSetCurrentArmdedForce // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x627a7f0
	void GMServerRagdollTest(); // Function DFMGameplay.DFMCharacter.GMServerRagdollTest // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x627a7d0
	void GMGodServerOnly(); // Function DFMGameplay.DFMCharacter.GMGodServerOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x627a7b0
	void GMGod(); // Function DFMGameplay.DFMCharacter.GMGod // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x627a790
	float GetReadyWeaponRate(); // Function DFMGameplay.DFMCharacter.GetReadyWeaponRate // (Native|Public|BlueprintCallable) // @ game+0x627af20
	struct FString GetPoolChosenName(); // Function DFMGameplay.DFMCharacter.GetPoolChosenName // (Final|Native|Public) // @ game+0x627aea0
	struct USceneComponent* GetHitEffectParentComp(); // Function DFMGameplay.DFMCharacter.GetHitEffectParentComp // (Final|Native|Public) // @ game+0x627ae80
	struct TArray<struct UClass*> GetDamageGamePlayEffect(bool IsTeammate); // Function DFMGameplay.DFMCharacter.GetDamageGamePlayEffect // (Native|Public) // @ game+0x627ad50
	struct TArray<struct FCharacterBuff> GetCharacterVisbleBuffs(); // Function DFMGameplay.DFMCharacter.GetCharacterVisbleBuffs // (Final|Native|Public) // @ game+0x627ad10
	struct TArray<struct FCharacterBuff> GetCharacterBuffArray(); // Function DFMGameplay.DFMCharacter.GetCharacterBuffArray // (Final|Native|Public) // @ game+0x627acd0
	float GetBuffDurationRate(int32_t BuffId); // Function DFMGameplay.DFMCharacter.GetBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x627a9c0
	enum class EInGameBattleClassType GetBattleClass(); // Function DFMGameplay.DFMCharacter.GetBattleClass // (Final|Native|Public|BlueprintCallable) // @ game+0x627a990
	struct TArray<struct AWeaponBase*> GetAllWeapons(); // Function DFMGameplay.DFMCharacter.GetAllWeapons // (Final|Native|Public) // @ game+0x627a8b0
	void ExecuteHighValueItemInspection(bool bEnter, struct FName& ItemID); // Function DFMGameplay.DFMCharacter.ExecuteHighValueItemInspection // (Final|Native|Public|HasOutParms) // @ game+0x627a6c0
	void EndRaiseWatch(); // Function DFMGameplay.DFMCharacter.EndRaiseWatch // (Final|Native|Public|BlueprintCallable) // @ game+0x627a6a0
	void DrawAILabDebugText(struct AHUD* HUD, struct UCanvas* Canvas); // Function DFMGameplay.DFMCharacter.DrawAILabDebugText // (Final|Native|Public) // @ game+0x627a5e0
	void DoKnockBackFallingDamage(struct FHitResult& Hit, float FalllingHeight, int32_t AttackValueId); // Function DFMGameplay.DFMCharacter.DoKnockBackFallingDamage // (Final|Native|Public|HasOutParms) // @ game+0x627a480
	void DoFallingDamage(struct FHitResult& Hit, float FalllingHeight); // Function DFMGameplay.DFMCharacter.DoFallingDamage // (Final|Native|Public|HasOutParms) // @ game+0x627a350
	void CreateFPPProxyIfNotExist(); // Function DFMGameplay.DFMCharacter.CreateFPPProxyIfNotExist // (Final|Native|Public) // @ game+0x627a330
	void ClientShowCommonTip(struct FText InText); // Function DFMGameplay.DFMCharacter.ClientShowCommonTip // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x627a090
	void ClientSetFppSprintAnimPlayingRate(float FPPSprintAnimRate); // Function DFMGameplay.DFMCharacter.ClientSetFppSprintAnimPlayingRate // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x627a010
	void ClientReceiveAbilityTracingPathData(struct TArray<struct FAbilityTracingPathData>& ServerTracingPaths, struct TArray<struct FAbilityTracingPathData>& ServerKnifeTracingPaths, float SkillStartTime, bool bIsRefreshPath); // Function DFMGameplay.DFMCharacter.ClientReceiveAbilityTracingPathData // (Final|Native|Public|HasOutParms) // @ game+0x6279da0
	void ClientPlayMediaVideo(struct APlayerExitBase* PlayerExit, struct FString MediaVideoName); // Function DFMGameplay.DFMCharacter.ClientPlayMediaVideo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6279c90
	void ClientPlayLeftArmAnim(struct FName LeftArmAnimName); // Function DFMGameplay.DFMCharacter.ClientPlayLeftArmAnim // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6279c00
	void ClientPlayHit(struct FHitResult HitResult, struct ADFMCharacter* SourceActor, enum class EHitEventType HitEventType, float HitCD); // Function DFMGameplay.DFMCharacter.ClientPlayHit // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6279a30
	void ClientPlayCutScene(struct APlayerExitBase* PlayerExit); // Function DFMGameplay.DFMCharacter.ClientPlayCutScene // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62799a0
	void ClientPickupAmmoSucc(int32_t AmmoNum, struct FText Tips); // Function DFMGameplay.DFMCharacter.ClientPickupAmmoSucc // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62798a0
	void ClientOnPlayerDiedShowKillerInfoCard(struct FKillInfo KillInfo); // Function DFMGameplay.DFMCharacter.ClientOnPlayerDiedShowKillerInfoCard // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62797f0
	void ClientLocalCharacterStopUIAudio(struct FName AudioName); // Function DFMGameplay.DFMCharacter.ClientLocalCharacterStopUIAudio // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6279760
	void ClientLocalCharacterPlayUIAudio(struct FName AudioName); // Function DFMGameplay.DFMCharacter.ClientLocalCharacterPlayUIAudio // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62796d0
	void ClientLimitDroyBody(bool bLimit); // Function DFMGameplay.DFMCharacter.ClientLimitDroyBody // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x6279640
	void ClientGMShowAILabDebugPanel(uint64_t Uin, struct FString AILabDebugStr, bool ChangeVisible); // Function DFMGameplay.DFMCharacter.ClientGMShowAILabDebugPanel // (Net|Native|Event|Public|NetClient) // @ game+0x62794f0
	void ClientFocusPlayerLocation(struct FVector InAbsoluteLocation); // Function DFMGameplay.DFMCharacter.ClientFocusPlayerLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x6279470
	void ClientEndAbilityTracingPathData(); // Function DFMGameplay.DFMCharacter.ClientEndAbilityTracingPathData // (Final|Native|Public) // @ game+0x6279450
	void ClientApplyHitMark(struct ADFMCharacter* DFMCharacter); // Function DFMGameplay.DFMCharacter.ClientApplyHitMark // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62793c0
	struct TArray<enum class ECharacterPart> CheckShootVisibilityIgnoreOtherAI(struct ADFMCharacter* otherCharacter); // Function DFMGameplay.DFMCharacter.CheckShootVisibilityIgnoreOtherAI // (Final|Native|Public|BlueprintCallable) // @ game+0x62792a0
	bool CheckDroyBodyPosition(struct FTransform ActorTransform, float ForwardLen); // Function DFMGameplay.DFMCharacter.CheckDroyBodyPosition // (Final|Native|Public|HasDefaults) // @ game+0x6279170
	void ChangeScenesDebugInfo(char Mission, char Goal, struct UAnimMontage* Motage); // Function DFMGameplay.DFMCharacter.ChangeScenesDebugInfo // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x6279070
	struct FString ByteEScenesInteractiveActorTag(char AIcurrentGoal); // Function DFMGameplay.DFMCharacter.ByteEScenesInteractiveActorTag // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString ByteEScenesActorType(char AIcurrentMission); // Function DFMGameplay.DFMCharacter.ByteEScenesActorType // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BreakThrouthSupportScore(enum class EScoreName ScoreName); // Function DFMGameplay.DFMCharacter.BreakThrouthSupportScore // (Final|Native|Public|BlueprintCallable) // @ game+0x6278ff0
	int64_t BP_GetUin(); // Function DFMGameplay.DFMCharacter.BP_GetUin // (Final|Native|Public|BlueprintCallable) // @ game+0x35c60c0
	bool bInHurtFightingState(); // Function DFMGameplay.DFMCharacter.bInHurtFightingState // (Native|Public) // @ game+0x627e870
	bool bInFightingState(); // Function DFMGameplay.DFMCharacter.bInFightingState // (Native|Public) // @ game+0x627e840
	void BeginRaiseWatch(); // Function DFMGameplay.DFMCharacter.BeginRaiseWatch // (Final|Native|Public|BlueprintCallable) // @ game+0x6278fd0
	void ApplyFallingDamage(struct FHitResult& Hit, float FalllingHeight, int32_t AttackValueId); // Function DFMGameplay.DFMCharacter.ApplyFallingDamage // (Final|Native|Private|HasOutParms) // @ game+0x6278e70
	void ApplyDamageEffects(struct FDamageResultInfo& DamageResult, struct AActor* MakerActor, struct AActor* MakerInstigator); // Function DFMGameplay.DFMCharacter.ApplyDamageEffects // (Native|Protected|HasOutParms) // @ game+0x6278d20
	void AddTag(struct FName Tag); // Function DFMGameplay.DFMCharacter.AddTag // (Native|Public|BlueprintCallable) // @ game+0x6278c90
	uint64_t AddBuffWithParam(uint32_t InBuffId, struct FAddBuffParam& InBuffParam); // Function DFMGameplay.DFMCharacter.AddBuffWithParam // (Native|Public|HasOutParms) // @ game+0x6278b60
	void AddBuffDurationRate(int32_t BuffId, float Rate); // Function DFMGameplay.DFMCharacter.AddBuffDurationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x6278aa0
	uint64_t AddBuff(uint32_t InBuffId, enum class ECharacterPart InCharacterPart, struct AActor* SourceActor, struct AActor* MakerInstigator, int32_t SkillId); // Function DFMGameplay.DFMCharacter.AddBuff // (Native|Public) // @ game+0x6278750
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBulletStingerMissile
// Size: 0x808 (Inherited: 0x728)
class AWeaponBulletStingerMissile : public AWeaponBulletExplosion {
public:

	char pad_728[0x10]; // 0x728(0x10)
	bool bUseBulletState; // 0x738(0x01)
	char pad_739[0x3]; // 0x739(0x03)
	int32_t ThreatId; // 0x73c(0x04)
	char pad_740[0x30]; // 0x740(0x30)
	struct UStingerMissileProjectileMovementComponent* StingerMissileMovement; // 0x770(0x08)
	struct UFXResourceContainerComponent* FxComponent; // 0x778(0x08)
	char pad_780[0x8]; // 0x780(0x08)
	struct TArray<struct UFXResourceContainerComponent*> ImpactFXComps; // 0x788(0x10)
	char pad_798[0x10]; // 0x798(0x10)
	struct AActor* HomingTargetActor; // 0x7a8(0x08)
	bool bSupportedByLaserPointer; // 0x7b0(0x01)
	char pad_7B1[0x7]; // 0x7b1(0x07)
	uint64_t WeaponID; // 0x7b8(0x08)
	/*struct TScriptInterface<IStingerMissileTakerInterface>*/char StingerMissileTaker[0x10]; // 0x7c0(0x10)
	char pad_7D0[0x19]; // 0x7d0(0x19)
	bool bEngineFired; // 0x7e9(0x01)
	char pad_7EA[0x1c]; // 0x7ea(0x1c)
	bool bCheckBulletDetectorIntercept; // 0x806(0x01)
	char pad_807[0x1]; // 0x807(0x01)

	void SetDeviateTargetLoc(struct FVector TargetLoc); // Function DFMGameplay.WeaponBulletStingerMissile.SetDeviateTargetLoc // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x6426c50
	void OnRep_WeaponId(); // Function DFMGameplay.WeaponBulletStingerMissile.OnRep_WeaponId // (Final|Native|Protected) // @ game+0x6426970
	void OnRep_HomingTarget(struct AActor* OldHomingTarget); // Function DFMGameplay.WeaponBulletStingerMissile.OnRep_HomingTarget // (Final|Native|Protected) // @ game+0x64268f0
	void BP_OnEngineFired(); // Function DFMGameplay.WeaponBulletStingerMissile.BP_OnEngineFired // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentTargetAcquiredBase
// Size: 0x248 (Inherited: 0x168)
class UWeaponFuncComponentTargetAcquiredBase : public UGPWeaponFuncComponentBase {
public:

	char pad_168[0xb8]; // 0x168(0xb8)
	struct TArray<int32_t> FliterReasons; // 0x220(0x10)
	struct TArray<int32_t> SelectReasons; // 0x230(0x10)
	char pad_240[0x8]; // 0x240(0x08)

	bool STATIC_ShouldActorIgnoreDamageTrace(struct AActor* Actor); // Function DFMGameplay.WeaponFuncComponentTargetAcquiredBase.ShouldActorIgnoreDamageTrace // (Final|Native|Static|Public) // @ game+0x642ffa0
	struct UWeaponFuncComponentTargetAcquiredBase* STATIC_GetWeaponFuncComponentTargetAcquiredBase(struct UObject* WorldContext); // Function DFMGameplay.WeaponFuncComponentTargetAcquiredBase.GetWeaponFuncComponentTargetAcquiredBase // (Final|Native|Static|Public) // @ game+0x642f930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeapon
// Size: 0x10d0 (Inherited: 0x1010)
class ADFMWeapon : public AWeaponBase {
public:

	struct AGPPlayerState* DataPlayerState; // 0x1010(0x08)
	struct UFXResourceContainerComponent* PreFireEffects; // 0x1018(0x08)
	bool bIsPVEWeapon; // 0x1020(0x01)
	bool bRefreshAmmoEventWhenZoom; // 0x1021(0x01)
	bool bEnableFireVoice; // 0x1022(0x01)
	char pad_1023[0x5]; // 0x1023(0x05)
	struct FString FireVoiceString; // 0x1028(0x10)
	bool bAllowThirdPersonMeshTick; // 0x1038(0x01)
	char pad_1039[0x3]; // 0x1039(0x03)
	struct FLinearColor AmmoColorFirst; // 0x103c(0x10)
	struct FLinearColor AmmoColorSecond; // 0x104c(0x10)
	struct FLinearColor AmmoColorThird; // 0x105c(0x10)
	bool StingerOnlyLockEnermy; // 0x106c(0x01)
	char pad_106D[0xb]; // 0x106d(0x0b)
	struct TMap<enum class EGPWeaponInnerEvent, struct FWeaponBuffData> WeaponBuffIDs; // 0x1078(0x50)
	struct UDFMGameTss* GameTss; // 0x10c8(0x08)

	void SettMaxCarrieAmmoNum(int32_t Num); // Function DFMGameplay.DFMWeapon.SettMaxCarrieAmmoNum // (Native|Public) // @ game+0x61f4ff0
	void SetMaxClipAmmoNum(int32_t Num); // Function DFMGameplay.DFMWeapon.SetMaxClipAmmoNum // (Native|Public) // @ game+0x364f320
	void SetMaxCarriedAmmoCount(int32_t Count); // Function DFMGameplay.DFMWeapon.SetMaxCarriedAmmoCount // (Final|Native|Public) // @ game+0x6306ef0
	void SetCurAmmoNum(int32_t Num); // Function DFMGameplay.DFMWeapon.SetCurAmmoNum // (Native|Public) // @ game+0x6306de0
	void SetCurAmmoCount(int32_t Count); // Function DFMGameplay.DFMWeapon.SetCurAmmoCount // (Final|Native|Public) // @ game+0x6306d60
	void SetConsumeAmmoType(enum class EWeaponConsumeAmmoType ConsumeAmmoType); // Function DFMGameplay.DFMWeapon.SetConsumeAmmoType // (Native|Public) // @ game+0x6306ce0
	void SetClipMaxAmmoCount(int32_t Count); // Function DFMGameplay.DFMWeapon.SetClipMaxAmmoCount // (Final|Native|Public) // @ game+0x6306c60
	void SetCarriedAmmoCount(int32_t Count); // Function DFMGameplay.DFMWeapon.SetCarriedAmmoCount // (Final|Native|Public) // @ game+0x6306be0
	void SetCarrieAmmoNum(int32_t Num); // Function DFMGameplay.DFMWeapon.SetCarrieAmmoNum // (Native|Public) // @ game+0x6306b50
	void ServerUpdateWeaponAdapterDynamic(int64_t AdpaterGid, struct FModularWeaponPartNodeAttr& NodeAttr); // Function DFMGameplay.DFMWeapon.ServerUpdateWeaponAdapterDynamic // (Native|Public|HasOutParms) // @ game+0x63069f0
	void ServerReloadWeapon(); // Function DFMGameplay.DFMWeapon.ServerReloadWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63069d0
	void ServerCompOnBulletOverlap(struct UActorComponent* Component, struct AGPWeaponBulletBase* InBullet, struct FHitResult InOverlapResult); // Function DFMGameplay.DFMWeapon.ServerCompOnBulletOverlap // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6306840
	void ServerActorOnBulletOverlap(struct AActor* Actor, struct AGPWeaponBulletBase* InBullet, struct FHitResult InOverlapResult); // Function DFMGameplay.DFMWeapon.ServerActorOnBulletOverlap // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63066b0
	void OnPostFirePlayWantVolice(); // Function DFMGameplay.DFMWeapon.OnPostFirePlayWantVolice // (Final|Native|Public) // @ game+0x6306160
	void OnDoSwitchMask(); // Function DFMGameplay.DFMWeapon.OnDoSwitchMask // (Native|Public) // @ game+0x128b730
	void OnAmmoCountChange(float cur, float carry); // Function DFMGameplay.DFMWeapon.OnAmmoCountChange // (Native|Public) // @ game+0x6305b80
	bool IsRequireLockingTarget(); // Function DFMGameplay.DFMWeapon.IsRequireLockingTarget // (Native|Public) // @ game+0x6305b40
	bool HasLockedTarget(); // Function DFMGameplay.DFMWeapon.HasLockedTarget // (Native|Public) // @ game+0x6305b00
	uint32_t GetMaxCarriedAmmoNum(); // Function DFMGameplay.DFMWeapon.GetMaxCarriedAmmoNum // (Native|Public) // @ game+0x6305aa0
	uint32_t GetMaxCarriedAmmoCount(); // Function DFMGameplay.DFMWeapon.GetMaxCarriedAmmoCount // (Final|Native|Public) // @ game+0x6305a70
	uint32_t GetCurAmmoNum(); // Function DFMGameplay.DFMWeapon.GetCurAmmoNum // (Native|Public) // @ game+0x6305790
	uint32_t GetCurAmmoCount(); // Function DFMGameplay.DFMWeapon.GetCurAmmoCount // (Final|Native|Public) // @ game+0x6305760
	uint32_t GetClipAmmoNum(); // Function DFMGameplay.DFMWeapon.GetClipAmmoNum // (Native|Public) // @ game+0x6305730
	uint32_t GetClipAmmoCount(); // Function DFMGameplay.DFMWeapon.GetClipAmmoCount // (Final|Native|Public) // @ game+0x6305700
	float GetChangeClipTime(); // Function DFMGameplay.DFMWeapon.GetChangeClipTime // (Final|Native|Public) // @ game+0x63056b0
	uint32_t GetCarriedAmmoCount(); // Function DFMGameplay.DFMWeapon.GetCarriedAmmoCount // (Final|Native|Public) // @ game+0x6305680
	uint32_t GetCarrieAmmoNum(); // Function DFMGameplay.DFMWeapon.GetCarrieAmmoNum // (Native|Public) // @ game+0x364df50
	bool CanChangeClip(); // Function DFMGameplay.DFMWeapon.CanChangeClip // (Final|Native|Public) // @ game+0x6305490
	void BP_OnAmmoCountChange(float WeaponAmmoCount, float CarryWeaponAmmoCount); // Function DFMGameplay.DFMWeapon.BP_OnAmmoCountChange // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	uint64_t BP_GetWeaponGuid(); // Function DFMGameplay.DFMWeapon.BP_GetWeaponGuid // (Final|Native|Public) // @ game+0x6305460
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSMAction
// Size: 0x110 (Inherited: 0xf0)
class UDFMFSMAction : public UGPFSMAction {
public:

	struct ADFMCharacter* DFMOwner; // 0xf0(0x08)
	struct UDFMFSMInstance* DFMFSMOwner; // 0xf8(0x08)
	struct UDFMBlackboardComponent* DFMBlackboard; // 0x100(0x08)
	struct UDFMFSMSkillEntityComponent* DFMSkillFSMStateMachineComponent; // 0x108(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapIconViewController
// Size: 0x290 (Inherited: 0x30)
class UMapIconViewController : public UObject {
public:

	char pad_30[0x3b]; // 0x30(0x3b)
	bool bLocalPlayerMarked; // 0x6b(0x01)
	int32_t LastMarkedTeammateIndex; // 0x6c(0x04)
	int32_t CurrentMarkedTeammateIndex; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct TArray<int32_t> MarkedTeammateInderIndexArr; // 0x78(0x10)
	char pad_88[0x8]; // 0x88(0x08)
	struct FDFMMapIconData MapIconData; // 0x90(0x38)
	char pad_C8[0x3c]; // 0xc8(0x3c)
	struct FFloatRange MiniMapVisibleScaleRange; // 0x104(0x10)
	enum class ESlateVisibility MiniMapDefaultVisibility; // 0x114(0x01)
	enum class ESlateVisibility BigMapDefaultVisibility; // 0x115(0x01)
	char pad_116[0x2]; // 0x116(0x02)
	bool bNeedLeapLoc; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct TArray<struct FMapIconMovePathData> IconMovePath; // 0x120(0x10)
	int32_t IconMovePathIndex; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct FTimerHandle PosLeapHandle; // 0x138(0x08)
	char pad_140[0x28]; // 0x140(0x28)
	bool bIsVisible; // 0x168(0x01)
	char pad_169[0xf]; // 0x169(0x0f)
	float IconScaleInBigMap; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	float IconScaleInMiniMap; // 0x180(0x04)
	char pad_184[0x4c]; // 0x184(0x4c)
	struct UMapInfoSystem* MapInfoSystem; // 0x1d0(0x08)
	char pad_1D8[0xb0]; // 0x1d8(0xb0)
	struct AGPMarkerManager* MarkerMng; // 0x288(0x08)

	bool UnregisterFromMarkerCoordinator(); // Function DFMGameplay.MapIconViewController.UnregisterFromMarkerCoordinator // (Native|Public) // @ game+0x63913d0
	void SetIconVisibleInMiniMap(bool bInVisible, bool bForceRefresh); // Function DFMGameplay.MapIconViewController.SetIconVisibleInMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x6391300
	void SetIconVisibleInBigMap(bool bInVisible, bool bForceRefresh); // Function DFMGameplay.MapIconViewController.SetIconVisibleInBigMap // (Final|Native|Public|BlueprintCallable) // @ game+0x6391230
	void SetIconVisible(bool bInVisible, bool bForceRefresh); // Function DFMGameplay.MapIconViewController.SetIconVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x6391160
	void SetIconTracked(bool IsTracked); // Function DFMGameplay.MapIconViewController.SetIconTracked // (Native|Public|BlueprintCallable) // @ game+0x63910d0
	void SetIconSelected(bool IsSelected); // Function DFMGameplay.MapIconViewController.SetIconSelected // (Native|Public|BlueprintCallable) // @ game+0x6391040
	void SetExtraSync(bool InExtraSync); // Function DFMGameplay.MapIconViewController.SetExtraSync // (Final|Native|Public) // @ game+0x6390fb0
	bool SeamlessEntryTgLog(); // Function DFMGameplay.MapIconViewController.SeamlessEntryTgLog // (Native|Public) // @ game+0x6390f80
	void OnPlayerMarkMapIconForExtraSync(); // Function DFMGameplay.MapIconViewController.OnPlayerMarkMapIconForExtraSync // (Native|Public) // @ game+0x4095650
	void OnPlayerMarkMapIcon(uint64_t PlayerId, struct FDFMMapSignInfo& MapSignInfo); // Function DFMGameplay.MapIconViewController.OnPlayerMarkMapIcon // (Native|Public|HasOutParms) // @ game+0x6390e70
	void NtfPlayerQuestMarkerObjectiveIDChanged(int64_t objectiveId); // Function DFMGameplay.MapIconViewController.NtfPlayerQuestMarkerObjectiveIDChanged // (Final|Native|Public) // @ game+0x6390df0
	bool IsExtraSync(); // Function DFMGameplay.MapIconViewController.IsExtraSync // (Final|Native|Public|Const) // @ game+0x6390d10
	struct FText GetTitleText(); // Function DFMGameplay.MapIconViewController.GetTitleText // (Native|Public) // @ game+0x6390c70
	struct FName GetName(); // Function DFMGameplay.MapIconViewController.GetName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x6390c30
	enum class EMapSignType GetMapSignType(); // Function DFMGameplay.MapIconViewController.GetMapSignType // (Native|Public|BlueprintCallable) // @ game+0x17616a0
	bool GetIsVisibleFromMarkerCoordinator(); // Function DFMGameplay.MapIconViewController.GetIsVisibleFromMarkerCoordinator // (Native|Public) // @ game+0x6390b60
	bool GetIconSelected(); // Function DFMGameplay.MapIconViewController.GetIconSelected // (Native|Public|BlueprintCallable) // @ game+0xaa7630
	float GetIconRotateAngle(); // Function DFMGameplay.MapIconViewController.GetIconRotateAngle // (Native|Public|BlueprintCallable) // @ game+0x6390b20
	struct FVector GetIconLocation(struct FIntVector& OriginLocation); // Function DFMGameplay.MapIconViewController.GetIconLocation // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6390a70
	bool GetIconIsTracking(); // Function DFMGameplay.MapIconViewController.GetIconIsTracking // (Native|Public|BlueprintCallable) // @ game+0x895290
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractExecutor
// Size: 0xd0 (Inherited: 0x30)
class UInteractExecutor : public UObject {
public:

	struct FText DefaultTitle; // 0x30(0x18)
	bool bUseDefaultTitle; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	/*struct TSoftObjectPtr<UObject>*/char DefaultSoftIcon[0x28]; // 0x50(0x28)
	bool bFirstInteract; // 0x78(0x01)
	char pad_79[0x1f]; // 0x79(0x1f)
	bool bCanShowDetail; // 0x98(0x01)
	bool bUseActionName; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
	struct FText ActionName; // 0xa0(0x18)
	char pad_B8[0x18]; // 0xb8(0x18)

	void LocalShowLackPropsTip(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.LocalShowLackPropsTip // (Native|Event|Public|BlueprintEvent) // @ game+0x633c440
	void LocalShowDetail(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.LocalShowDetail // (Native|Event|Public|BlueprintEvent) // @ game+0x633c370
	void LocalExecute(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.LocalExecute // (Native|Event|Public|BlueprintEvent) // @ game+0x633c270
	void LocalDelayExecute(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.LocalDelayExecute // (Native|Event|Public|BlueprintEvent) // @ game+0x633c170
	bool IsAllowShowWidget(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.IsAllowShowWidget // (Native|Event|Public|BlueprintEvent) // @ game+0x633c060
	bool IsAllowShowQuality(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.IsAllowShowQuality // (Native|Event|Public|BlueprintEvent) // @ game+0x633bf90
	bool IsAllowShowDetail(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.IsAllowShowDetail // (Native|Event|Public|BlueprintEvent) // @ game+0x633bec0
	bool IsAllowOperator(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.IsAllowOperator // (Native|Event|Public|BlueprintEvent) // @ game+0x633bdb0
	bool IsAllowLocalDelay(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.IsAllowLocalDelay // (Native|Event|Public|BlueprintEvent) // @ game+0x633bca0
	struct FLinearColor GetTitleColor(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.GetTitleColor // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x633b9c0
	struct FText GetTitle(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.GetTitle // (Native|Event|Public|BlueprintEvent) // @ game+0x633b840
	void GetSoftIcon(struct ACHARACTER* OperatorCharacter, struct FPotentialInteractorInfo& InteractorInfo); // Function DFMGameplay.InteractExecutor.GetSoftIcon // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x633b6a0
	int32_t GetQualityLevel(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.GetQualityLevel // (Native|Event|Public|BlueprintEvent) // @ game+0x633b5d0
	enum class EOperateFailedType GetOperateFailedReason(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.GetOperateFailedReason // (Final|Native|Public) // @ game+0x633b510
	struct FText GetActionName(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InTag); // Function DFMGameplay.InteractExecutor.GetActionName // (Native|Event|Public|BlueprintEvent) // @ game+0x633b2b0
	struct FItemID GetAcquireItemID(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractExecutor.GetAcquireItemID // (Native|Event|Public|BlueprintEvent) // @ game+0x633b1d0
	void Execute(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FInteractingContext InInteractingContext); // Function DFMGameplay.InteractExecutor.Execute // (Native|Event|Public|BlueprintEvent) // @ game+0x633b070
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Action
// Size: 0x70 (Inherited: 0x30)
class UAction : public UObject {
public:

	enum class EActionState State; // 0x30(0x01)
	char pad_31[0x3f]; // 0x31(0x3f)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AerialVehicleController
// Size: 0x4c0 (Inherited: 0x480)
class AAerialVehicleController : public AAIController {
public:

	struct UAIEventComponent* AIEventComponent; // 0x480(0x08)
	struct FAIEventQueueHandle GroupAI; // 0x488(0x08)
	struct AAIGroup* OwnerGroup; // 0x490(0x08)
	struct TArray<struct UAICommandEvent*> GroupAICommands; // 0x498(0x10)
	struct ADFMCharacter* OwnerCharacter; // 0x4a8(0x08)
	struct ADFMCharacter* TargetCharacter; // 0x4b0(0x08)
	float LocationWeights; // 0x4b8(0x04)
	char pad_4BC[0x4]; // 0x4bc(0x04)

	void SendEventToGroupAI(struct UAIEvent* Event); // Function DFMGameplay.AerialVehicleController.SendEventToGroupAI // (Final|Native|Public|BlueprintCallable) // @ game+0x61c60c0
	struct UAICommandEvent* GetGroupAICommand(); // Function DFMGameplay.AerialVehicleController.GetGroupAICommand // (Final|Native|Public|BlueprintCallable) // @ game+0x61c5bb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICharacterSignificanceComponentBase
// Size: 0x1a8 (Inherited: 0x178)
class UAICharacterSignificanceComponentBase : public USignificanceBase {
public:

	char pad_178[0x30]; // 0x178(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TriggerZone
// Size: 0x3f8 (Inherited: 0x378)
class ATriggerZone : public AActor {
public:

	/*struct FMulticastInlineDelegate*/char OnActorBeginOverlapZone[0x10]; // 0x378(0x10)
	/*struct FMulticastInlineDelegate*/char OnActorEndOverlapZone[0x10]; // 0x388(0x10)
	struct TArray<struct UPrimitiveComponent*> Triggers; // 0x398(0x10)
	/*struct TSet<struct AActor*>*/char actors[0x50]; // 0x3a8(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaArea
// Size: 0x4d8 (Inherited: 0x378)
class ADramaArea : public AGPSpawnerBase {
public:

	enum class EPatrolType PatrolType; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct TArray<struct FMovePathPointExData> PathPointExData; // 0x380(0x10)
	struct TArray<struct FVector> PathPointData; // 0x390(0x10)
	struct FName NpcNameOverride; // 0x3a0(0x08)
	struct TArray<struct FDramaAISpawnInfo> NpcNamesOverride; // 0x3a8(0x10)
	bool bIsEnable; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)
	struct TArray<struct FRaidDramaInfo> Difficulties; // 0x3c0(0x10)
	bool bGoodLocationCheck; // 0x3d0(0x01)
	bool bUseMultiGroupLocationCheck; // 0x3d1(0x01)
	bool bIsHelicopterSpawn; // 0x3d2(0x01)
	char pad_3D3[0x1]; // 0x3d3(0x01)
	float LastInteractTime; // 0x3d4(0x04)
	enum class EAIDramaState DramaState; // 0x3d8(0x01)
	bool EnableActingBind; // 0x3d9(0x01)
	char pad_3DA[0x6]; // 0x3da(0x06)
	float DramaInteractCD; // 0x3e0(0x04)
	char pad_3E4[0x4]; // 0x3e4(0x04)
	struct AAIController* ActingAIController; // 0x3e8(0x08)
	bool bAllowedReplenish; // 0x3f0(0x01)
	char pad_3F1[0x7]; // 0x3f1(0x07)
	struct TArray<struct UDramaLocationComponent*> DramaLocations; // 0x3f8(0x10)
	struct TArray<struct UDramaAISpawnComponent*> DramaAISpawners; // 0x408(0x10)
	enum class EAIDramaPriority Priority; // 0x418(0x01)
	char pad_419[0x7]; // 0x419(0x07)
	/*struct TSoftObjectPtr<UBehaviorTree>*/char LinkedBTAsset[0x28]; // 0x420(0x28)
	struct AAISpawnChecker* LinkedAISpawner; // 0x448(0x08)
	struct TMap<struct FName, struct UAnimMontage*> LinkedMontage; // 0x450(0x50)
	struct TArray<struct AActor*> LinkedAIs; // 0x4a0(0x10)
	bool bRandomPosSpawn; // 0x4b0(0x01)
	bool DramaFinishedDespawn; // 0x4b1(0x01)
	char pad_4B2[0x6]; // 0x4b2(0x06)
	struct FString AILayoutName; // 0x4b8(0x10)
	struct TArray<struct UAIJob*> TaskCenter; // 0x4c8(0x10)

	void Unbind(); // Function DFMGameplay.DramaArea.Unbind // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0xbcb8c0
	struct AAIController* TryFindOneAIInteract(); // Function DFMGameplay.DramaArea.TryFindOneAIInteract // (Native|Public|BlueprintCallable) // @ game+0x63101e0
	void SpawnLinkedDramaAI(int32_t Difficulty); // Function DFMGameplay.DramaArea.SpawnLinkedDramaAI // (Final|Native|Public|BlueprintCallable) // @ game+0x630ffd0
	void SpawnAI(); // Function DFMGameplay.DramaArea.SpawnAI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xbd2900
	void SetCheckerRespawnPosibility(float Percentage); // Function DFMGameplay.DramaArea.SetCheckerRespawnPosibility // (Final|Native|Public|BlueprintCallable) // @ game+0x630fcc0
	bool RegisterTask(struct UAIJob* AIJob); // Function DFMGameplay.DramaArea.RegisterTask // (Final|Native|Public|BlueprintCallable) // @ game+0x630fc30
	void RefreshPathPoints(); // Function DFMGameplay.DramaArea.RefreshPathPoints // (Native|Public|BlueprintCallable) // @ game+0xbcb8a0
	struct FString OutputSpawnPercentage(); // Function DFMGameplay.DramaArea.OutputSpawnPercentage // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnSpawnLinkedDramaAIFinished(); // Function DFMGameplay.DramaArea.OnSpawnLinkedDramaAIFinished // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnSpawnEvent(struct AAISpawnChecker* Checker, struct AActor* SpawnedActor, int32_t SpawnIndex); // Function DFMGameplay.DramaArea.OnSpawnEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x630f4f0
	void OnSpawnedAIDied(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DramaArea.OnSpawnedAIDied // (Final|Native|Public) // @ game+0x630f670
	void OnSpawnedAIDestroyed(struct AActor* DestroyedActor); // Function DFMGameplay.DramaArea.OnSpawnedAIDestroyed // (Final|Native|Public) // @ game+0x630f5f0
	void OnBindAIController(struct AAIController* AIController); // Function DFMGameplay.DramaArea.OnBindAIController // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	bool IsAllAISpawnSuc(); // Function DFMGameplay.DramaArea.IsAllAISpawnSuc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x630f3b0
	bool InvertPathPoint(); // Function DFMGameplay.DramaArea.InvertPathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x630f380
	struct UAnimMontage* GetLinkedMontage(struct FName Key); // Function DFMGameplay.DramaArea.GetLinkedMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x630f080
	struct FRotator GetLinkedDramaRotation(struct FString Key); // Function DFMGameplay.DramaArea.GetLinkedDramaRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x630ef40
	struct FVector GetLinkedDramaLocation(struct FString Key); // Function DFMGameplay.DramaArea.GetLinkedDramaLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x630ee00
	void GetJobsByType(struct TArray<struct UAIJob*>& JobList, enum class EAIJobType JobType); // Function DFMGameplay.DramaArea.GetJobsByType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x630ece0
	float EvaluateAIScore(struct AAIController* AIController); // Function DFMGameplay.DramaArea.EvaluateAIScore // (Native|Event|Public|BlueprintEvent) // @ game+0x630ebd0
	void CustomBPEvent(int32_t OptCode); // Function DFMGameplay.DramaArea.CustomBPEvent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void CheckNavPointAndConnectivity(struct FVector Extent); // Function DFMGameplay.DramaArea.CheckNavPointAndConnectivity // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x630eb40
	void BP_ResetDrama(); // Function DFMGameplay.DramaArea.BP_ResetDrama // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	bool BindAIController(struct AAIController* AIController); // Function DFMGameplay.DramaArea.BindAIController // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x378b4e0
	void AutoPlayDrama(); // Function DFMGameplay.DramaArea.AutoPlayDrama // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Kinematic
// Size: 0x30 (Inherited: 0x30)
class UKinematic : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SteeringBase
// Size: 0x48 (Inherited: 0x30)
class USteeringBase : public UObject {
public:

	struct UKinematic* PawnKinematic; // 0x30(0x08)
	int32_t Priority; // 0x38(0x04)
	float Weight; // 0x3c(0x04)
	char pad_40[0x8]; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerController
// Size: 0xb98 (Inherited: 0xa50)
class ADFMPlayerController : public AGPPlayerController {
public:

	struct APlayerStart* PlayerStartSpot; // 0xa50(0x08)
	struct UBasePlayerSettlementComponent* PlayerSettlementComponent; // 0xa58(0x08)
	struct UDFMPlayerDataCenterComponent* PlayerDataCenterComponent; // 0xa60(0x08)
	struct UGPPlayerMissionComponent* PlayerMissionComponent; // 0xa68(0x08)
	struct UActorComponent* PlayerReplayComponent; // 0xa70(0x08)
	struct UPlayerGMComponent* PlayerGMComponent; // 0xa78(0x08)
	struct UGMWeaponComponent* GMWeaponComponent; // 0xa80(0x08)
	struct UDFMPlayerActivityComponent* DFMPlayerActivityComponent; // 0xa88(0x08)
	struct UDFMInGameUpgradeComponent* DFMInGameUpgradeComponent; // 0xa90(0x08)
	struct UDFMTGPAInfoComponent* DFMTGPAInfoComponent; // 0xa98(0x08)
	char pad_AA0[0x8]; // 0xaa0(0x08)
	struct TArray<struct FC2SAceEnemyInfoArray> CacheC2SAceEnemyInfoPackages; // 0xaa8(0x10)
	char pad_AB8[0x10]; // 0xab8(0x10)
	struct TArray<struct FC2SAceEnemyInfoPackage> ServerCacheEnemyInfoPackages; // 0xac8(0x10)
	char pad_AD8[0x50]; // 0xad8(0x50)
	struct TArray<struct UClass*> RuleInvalidCharacterComponentArray; // 0xb28(0x10)
	struct UClass* ReplayClass; // 0xb38(0x08)
	struct UDFMBattleSpectateModeLogicComponent* DFMBattleSpectateModeLogic; // 0xb40(0x08)
	struct UMotionActionReplicateComponent* MotionActionReplicator; // 0xb48(0x08)
	int32_t OnPossessTickNum; // 0xb50(0x04)
	char pad_B54[0x4]; // 0xb54(0x04)
	struct USOLPlayerQuestComponent* SOLPlayerQuestComponent; // 0xb58(0x08)
	struct ADFMHudDataReplicator* HudDataReplicator; // 0xb60(0x08)
	char pad_B68[0x8]; // 0xb68(0x08)
	struct UClass* AbilityTestActorBPClass; // 0xb70(0x08)
	struct TArray<uint64_t> PickupDeadBodyUinArr; // 0xb78(0x10)
	char pad_B88[0x10]; // 0xb88(0x10)

	void SyncClientMissionObjective(struct FPlayerMissionInfo PlayerMissionInfo); // Function DFMGameplay.DFMPlayerController.SyncClientMissionObjective // (Net|Native|Event|Public|NetClient) // @ game+0x62e2740
	void SetVechileLocation(struct FVector pos); // Function DFMGameplay.DFMPlayerController.SetVechileLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x62e26b0
	void SetInputManager(struct UGPInputManager* NewManager); // Function DFMGameplay.DFMPlayerController.SetInputManager // (Final|Native|Public|BlueprintCallable) // @ game+0x62e2630
	void SetCharacterFSMRealStart(bool RealStart); // Function DFMGameplay.DFMPlayerController.SetCharacterFSMRealStart // (Final|Native|Public) // @ game+0x62e25a0
	void ServerVoteCancelContract(int32_t TeamId, int32_t TeamInnerIndex, enum class EVoteStatus VoteStatus); // Function DFMGameplay.DFMPlayerController.ServerVoteCancelContract // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62e24a0
	void ServerUpdateLoadProgress(float Progress); // Function DFMGameplay.DFMPlayerController.ServerUpdateLoadProgress // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e2420
	void ServerStopSubtitleGroup(struct FName SubtitleGroupId); // Function DFMGameplay.DFMPlayerController.ServerStopSubtitleGroup // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x62e2390
	void ServerSkipSubtitleSequence(struct FName SubtitleSeqId); // Function DFMGameplay.DFMPlayerController.ServerSkipSubtitleSequence // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x62e2300
	void ServerSetEscapeState(int32_t State); // Function DFMGameplay.DFMPlayerController.ServerSetEscapeState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e2270
	void ServerRequestSubtitleSequence(struct FName SubtitleSeqId, enum class ESubtitleSequenceType SubtitleSeqType, struct AActor* SpeakerActor); // Function DFMGameplay.DFMPlayerController.ServerRequestSubtitleSequence // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x62e2170
	void ServerRequestSubtitleGroup(struct FName SubtitleGroupId, enum class ESubtitleSequenceType SubtitleSeqType, struct AActor* SpeakerActor, int32_t SubtitleGroupIdx); // Function DFMGameplay.DFMPlayerController.ServerRequestSubtitleGroup // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x62e2030
	void ServerRequestDisplayHintOnClient(struct FString HintStr, float Timespan); // Function DFMGameplay.DFMPlayerController.ServerRequestDisplayHintOnClient // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e1f20
	void ServerPrePutInBlueprintWeapon(struct AInteractor_DecipherDevice* DecipherDevice); // Function DFMGameplay.DFMPlayerController.ServerPrePutInBlueprintWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1e90
	void ServerPreInteractBlueprintWeapon(struct AInteractor_DecipherDevice* DecipherDevice, int32_t Type); // Function DFMGameplay.DFMPlayerController.ServerPreInteractBlueprintWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1dc0
	void ServerPostLogin(); // Function DFMGameplay.DFMPlayerController.ServerPostLogin // (Final|Native|Public) // @ game+0x62e1da0
	void ServerPickupDeadBody(struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.DFMPlayerController.ServerPickupDeadBody // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1d10
	void ServerPickupBlueprintWeapon(struct AInteractor_DecipherDevice* DecipherDevice); // Function DFMGameplay.DFMPlayerController.ServerPickupBlueprintWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1c80
	void ServerOpenPickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.ServerOpenPickupBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1bf0
	void ServerNotifySeamlessFinish(); // Function DFMGameplay.DFMPlayerController.ServerNotifySeamlessFinish // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35c6fd0
	void ServerNotifyLoadingFinish(); // Function DFMGameplay.DFMPlayerController.ServerNotifyLoadingFinish // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1bd0
	void ServerNoticeObservable(bool observable, struct ACHARACTER* GoalCharacter); // Function DFMGameplay.DFMPlayerController.ServerNoticeObservable // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e1b00
	void ServerNeedRescue(int32_t InNeedShowRescueNum); // Function DFMGameplay.DFMPlayerController.ServerNeedRescue // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1a70
	void ServerModifyCurrentBeAimedPlayerUin(bool bIsAdd, uint64_t Uin); // Function DFMGameplay.DFMPlayerController.ServerModifyCurrentBeAimedPlayerUin // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e19a0
	void ServerLootDonePickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.ServerLootDonePickupBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1910
	void ServerLootDeadBody(struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.DFMPlayerController.ServerLootDeadBody // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1880
	void ServerGoto(struct FVector Location); // Function DFMGameplay.DFMPlayerController.ServerGoto // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x62e1760
	void ServerDoAbilityTestSpawn(); // Function DFMGameplay.DFMPlayerController.ServerDoAbilityTestSpawn // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1740
	void ServerDecipherBlueprintWeapon(struct AInteractor_DecipherDevice* DecipherDevice); // Function DFMGameplay.DFMPlayerController.ServerDecipherBlueprintWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e16b0
	void ServerClosePickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.ServerClosePickupBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1620
	void ServerCancelSearchPickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.ServerCancelSearchPickupBox // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1590
	void ServerBreakClosestBreakableItems(int32_t Num); // Function DFMGameplay.DFMPlayerController.ServerBreakClosestBreakableItems // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1500
	void ServerAcceptNewContractQuest(int32_t TeamId, int64_t QuestID); // Function DFMGameplay.DFMPlayerController.ServerAcceptNewContractQuest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e1430
	void RemoveCharacterComponents(); // Function DFMGameplay.DFMPlayerController.RemoveCharacterComponents // (Final|Native|Public) // @ game+0x62e1410
	void RecordRealLoginPlayer(); // Function DFMGameplay.DFMPlayerController.RecordRealLoginPlayer // (Final|Native|Public) // @ game+0x62e13f0
	void PlayerFetchMission(); // Function DFMGameplay.DFMPlayerController.PlayerFetchMission // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e13d0
	void OnRep_RuleInvalidCharacterComponentArray(); // Function DFMGameplay.DFMPlayerController.OnRep_RuleInvalidCharacterComponentArray // (Final|Native|Public) // @ game+0x62e0e00
	void OnRep_PlayerStartSpot(); // Function DFMGameplay.DFMPlayerController.OnRep_PlayerStartSpot // (Final|Native|Public) // @ game+0x62e0de0
	void OnRep_OnPossessTickNum(); // Function DFMGameplay.DFMPlayerController.OnRep_OnPossessTickNum // (Final|Native|Public) // @ game+0x62e0dc0
	void OnRep_HudDataReplicator(); // Function DFMGameplay.DFMPlayerController.OnRep_HudDataReplicator // (Native|Public) // @ game+0x62e0da0
	void OnLoadingPercentage(int32_t Percentage); // Function DFMGameplay.DFMPlayerController.OnLoadingPercentage // (Final|Native|Public) // @ game+0x62e0d20
	void OnClientSwitchSelectTieWeapon(struct ACHARACTER* OperatorCharacter, struct ADFMTieBreaker* InTieBreaker, struct ADFMSceneWeapon* SelectWeapon); // Function DFMGameplay.DFMPlayerController.OnClientSwitchSelectTieWeapon // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e0af0
	bool LineOfSightToLocation(struct FVector GoalLocation, bool bCheckFoliage); // Function DFMGameplay.DFMPlayerController.LineOfSightToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x62e0a10
	float LineOfSightToCharacter(struct ACHARACTER* Other, struct FVector& VisiblePoint, bool bCheckFoliage); // Function DFMGameplay.DFMPlayerController.LineOfSightToCharacter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x62e08f0
	void InternalPostLogin(); // Function DFMGameplay.DFMPlayerController.InternalPostLogin // (Final|Native|Public) // @ game+0x62e08d0
	void Goto(struct FVector Location, float Delay); // Function DFMGameplay.DFMPlayerController.Goto // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62e0800
	void GetPlayerView(struct FVector& Location, struct FRotator& Rotation); // Function DFMGameplay.DFMPlayerController.GetPlayerView // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62e06a0
	int32_t GetCamp(); // Function DFMGameplay.DFMPlayerController.GetCamp // (Final|Native|Public|BlueprintCallable) // @ game+0x62e0670
	void FullReplicateItemArray(struct AActor* LootObj, struct TArray<struct FInventoryItemInfo> ItemArray, struct FLootBoxRepData BoxRepData); // Function DFMGameplay.DFMPlayerController.FullReplicateItemArray // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e04f0
	void ExecTeleport(struct FVector& AbsolutePosition); // Function DFMGameplay.DFMPlayerController.ExecTeleport // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62e0460
	void EnableGamepadInput(bool bEnable); // Function DFMGameplay.DFMPlayerController.EnableGamepadInput // (Final|Exec|Native|Public) // @ game+0x62e03b0
	void DoAbilityTestSpawn(); // Function DFMGameplay.DFMPlayerController.DoAbilityTestSpawn // (Final|Native|Public) // @ game+0x88f4d0
	void DispatchServerMsg(struct FGameBrocastMsg BrocastMsg); // Function DFMGameplay.DFMPlayerController.DispatchServerMsg // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62e02a0
	void DiffReplicateItemArrayWithSpace(struct AActor* LootObj, struct TArray<struct FItemDiffRepData> DiffRepData, struct FLootBoxRepData BoxRepData); // Function DFMGameplay.DFMPlayerController.DiffReplicateItemArrayWithSpace // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62e0120
	void DiffReplicateItemArray(struct AActor* LootObj, struct TArray<struct FItemDiffRepData> DiffRepData); // Function DFMGameplay.DFMPlayerController.DiffReplicateItemArray // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62dfff0
	void DeletePanels(struct FName UIDataTableType); // Function DFMGameplay.DFMPlayerController.DeletePanels // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62dff60
	void CreatePanels(struct FName UIDataTableType, struct FString RuleOnlyLuaHudTableName, struct FString RuleOnlyLuaBaseHudTableName); // Function DFMGameplay.DFMPlayerController.CreatePanels // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62dfde0
	void ClientUpdateQuestOnServer(int64_t QuestID, int64_t QuestObjectionID, int32_t Value); // Function DFMGameplay.DFMPlayerController.ClientUpdateQuestOnServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62dfce0
	void ClientSendW2S(float ClientTime, struct TArray<struct FC2SAceEnemyInfoArray> E); // Function DFMGameplay.DFMPlayerController.ClientSendW2S // (Net|Native|Event|Protected|NetServer) // @ game+0x62dfb90
	void ClientRemovePriorityWidget(int32_t Handler); // Function DFMGameplay.DFMPlayerController.ClientRemovePriorityWidget // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62dfb00
	void ClientRecycleBlueprintWeapon(struct AInteractor_DecipherDevice* DecipherDevice); // Function DFMGameplay.DFMPlayerController.ClientRecycleBlueprintWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62dfa70
	void ClientReceiveAbilityTracingPathData(struct ACHARACTER* Target, struct TArray<struct FAbilityTracingPathData> ServerTracingPaths, struct TArray<struct FAbilityTracingPathData> ServerKnifeTracingPaths, float SkillStartTime, bool bIsRefreshPath); // Function DFMGameplay.DFMPlayerController.ClientReceiveAbilityTracingPathData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62df7f0
	void ClientPostLogin(); // Function DFMGameplay.DFMPlayerController.ClientPostLogin // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62df7d0
	void ClientOpenDeadBody(struct AInventoryPickup_DeadBody* Deadbody); // Function DFMGameplay.DFMPlayerController.ClientOpenDeadBody // (Final|Native|Public) // @ game+0x62df750
	void ClientGoto(struct FVector Location, float Delay); // Function DFMGameplay.DFMPlayerController.ClientGoto // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x62df680
	void ClientEndAbilityTracingPathData(struct ACHARACTER* Target); // Function DFMGameplay.DFMPlayerController.ClientEndAbilityTracingPathData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62df5f0
	void ClientDrawPoints(struct TArray<struct FVector> Points, struct FColor Color, bool bPersistentLines); // Function DFMGameplay.DFMPlayerController.ClientDrawPoints // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x62df4b0
	void ClientDrawDebugLine(struct FVector LineStart, struct FVector LineEnd, struct FColor Color, bool bPersistentLines, float LifeTime); // Function DFMGameplay.DFMPlayerController.ClientDrawDebugLine // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x62df320
	void ClientBroadcastMsg(struct TArray<struct FGameBrocastMsg> BrocastMsg); // Function DFMGameplay.DFMPlayerController.ClientBroadcastMsg // (Net|Native|Event|Public|NetClient) // @ game+0x62df140
	void ClientAddPriorityWidget(int32_t WidgetIdentity, struct UClass* WidgetClass, int32_t PriorityNum, float Time, bool unique, enum class ESlateVisibility Visible); // Function DFMGameplay.DFMPlayerController.ClientAddPriorityWidget // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62def90
	void AttemptOpenPickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.AttemptOpenPickupBox // (Final|Native|Public) // @ game+0x62def10
	void AttemptClosePickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.AttemptClosePickupBox // (Final|Native|Public) // @ game+0x62dee90
	void AttemptCancelSearchPickupBox(struct AInventoryPickup_OpenBox* Box); // Function DFMGameplay.DFMPlayerController.AttemptCancelSearchPickupBox // (Final|Native|Public) // @ game+0x62dee10
	void AddCharacterComponents(); // Function DFMGameplay.DFMPlayerController.AddCharacterComponents // (Final|Native|Public) // @ game+0x62dea10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIController
// Size: 0xf90 (Inherited: 0x4d8)
class ADFMAIController : public AGPAIController {
public:

	char pad_4D8[0x28]; // 0x4d8(0x28)
	struct ADFMCharacter* DFMCharacter; // 0x500(0x08)
	struct ADFMAICharacter* DFMAICharacter; // 0x508(0x08)
	/*struct FMulticastInlineDelegate*/char OnDeath[0x10]; // 0x510(0x10)
	struct FName RankIcon; // 0x520(0x08)
	float MovementWalkableAngleForAI; // 0x528(0x04)
	bool bDebugMovement; // 0x52c(0x01)
	char pad_52D[0x3]; // 0x52d(0x03)
	float RotationSpeed; // 0x530(0x04)
	char pad_534[0x4]; // 0x534(0x04)
	struct TArray<struct FAICharacterMoveSpeed> MoveSpeed; // 0x538(0x10)
	float VehicleEyeHeight; // 0x548(0x04)
	float LastMovementRequestTime; // 0x54c(0x04)
	struct FVector LastMovementGoalLocation; // 0x550(0x0c)
	bool LastMovementIsLocation; // 0x55c(0x01)
	char pad_55D[0x3]; // 0x55d(0x03)
	struct FName MainTargetBBKey; // 0x560(0x08)
	char pad_568[0x10]; // 0x568(0x10)
	struct UActionScheduleComponent* ActionScheduleComp; // 0x578(0x08)
	struct UGPAIBehaviorTreeComponent* GPAIBehaviorTreeComponent; // 0x580(0x08)
	bool ShouldRecheckBT; // 0x588(0x01)
	char pad_589[0x7]; // 0x589(0x07)
	struct UDFMAIThreatRecordComponent* AIThreadRecordComp; // 0x590(0x08)
	struct UAIAdvancedPerceptionComponent* AIAdvancedPerceptionComp; // 0x598(0x08)
	struct UDFMAIDiffcultyComponent* AIDiffcultyComp; // 0x5a0(0x08)
	struct UDFMAIFightTargetManagementComponent* FightTargetManagement; // 0x5a8(0x08)
	struct UGrenadeDetectComponent* GrenadeDetectComp; // 0x5b0(0x08)
	struct UBehaviorTree* RunningMainTree; // 0x5b8(0x08)
	struct FAICurrentBehavior Behaviors; // 0x5c0(0x40)
	enum class ECharacterPart FocusingBodyPart; // 0x600(0x01)
	char pad_601[0x3]; // 0x601(0x03)
	struct TWeakObjectPtr<struct ACHARACTER> CurrentAssassinator; // 0x604(0x08)
	bool bUseBlindShoot; // 0x60c(0x01)
	char pad_60D[0x7]; // 0x60d(0x07)
	struct FVector BlindShootLocation; // 0x614(0x0c)
	struct FVector ShootEyeOffset; // 0x620(0x0c)
	char pad_62C[0xc]; // 0x62c(0x0c)
	struct TMap<struct FName, struct FDFMAIShootPoseConfig> ShootPoseConfigs; // 0x638(0x50)
	char pad_688[0xc]; // 0x688(0x0c)
	struct FVector DefaultShootOffset; // 0x694(0x0c)
	struct TArray<struct FAIDistanceHitPartProbability> ForceHitParts; // 0x6a0(0x10)
	float BeHitDamageScaleOverride; // 0x6b0(0x04)
	bool IsInBattle; // 0x6b4(0x01)
	char pad_6B5[0x3]; // 0x6b5(0x03)
	float ShootingSpread; // 0x6b8(0x04)
	char pad_6BC[0xc]; // 0x6bc(0x0c)
	float AimAccumIncPerSecond; // 0x6c8(0x04)
	float AimAccumDecPerSecond; // 0x6cc(0x04)
	char pad_6D0[0x14]; // 0x6d0(0x14)
	enum class EGroupAIActions GroupAIAction; // 0x6e4(0x01)
	enum class EDrawDebugTrace LineOfSightDrawDebugType; // 0x6e5(0x01)
	char pad_6E6[0x52]; // 0x6e6(0x52)
	bool GroupDebugOpen; // 0x738(0x01)
	char pad_739[0x7]; // 0x739(0x07)
	struct TMap<enum class EGroupDebugInfo, struct FString> GroupDebugInfoMap; // 0x740(0x50)
	struct USquadCommanderComponent* SquadCommanderComp; // 0x790(0x08)
	bool SquadOwner; // 0x798(0x01)
	bool bChangePrefecture; // 0x799(0x01)
	char pad_79A[0x6]; // 0x79a(0x06)
	struct UAIEventComponent* AIEventComponent; // 0x7a0(0x08)
	float LocationWeights; // 0x7a8(0x04)
	struct FAIEventQueueHandle GroupAI; // 0x7ac(0x08)
	char pad_7B4[0x4]; // 0x7b4(0x04)
	struct AAIGroup* OwnerGroup; // 0x7b8(0x08)
	float ImpendingDeathHealth; // 0x7c0(0x04)
	char pad_7C4[0x4]; // 0x7c4(0x04)
	struct TArray<struct UAICommandEvent*> GroupAICommands; // 0x7c8(0x10)
	int32_t CurrentPresetMoveIndex; // 0x7d8(0x04)
	int32_t PendingMoveToPresetMoveIndex; // 0x7dc(0x04)
	struct TArray<struct FString> MovePathGroupList; // 0x7e0(0x10)
	struct TArray<struct AAIPresetMovePathPoint*> MovePathPointList; // 0x7f0(0x10)
	float WeaponBaseDistance; // 0x800(0x04)
	bool bInSkillOverrideDamage; // 0x804(0x01)
	char pad_805[0x3]; // 0x805(0x03)
	float AIDamageGlobalScaler; // 0x808(0x04)
	char pad_80C[0x4]; // 0x80c(0x04)
	struct FAIWeaponDataAttackerValue AIAttacker; // 0x810(0x128)
	struct FAIQuestCommandInfo QuestCommand; // 0x938(0x02)
	bool EnableCallHelp; // 0x93a(0x01)
	char pad_93B[0xd]; // 0x93b(0x0d)
	struct UAIAnalysisComponent* AIAnalysisComp; // 0x948(0x08)
	char pad_950[0x60]; // 0x950(0x60)
	struct ADramaArea* RelatedDramaArea; // 0x9b0(0x08)
	struct ADramaArea* InitialRelatedDramaArea; // 0x9b8(0x08)
	struct UBehaviorTree* StandaloneDramaBTAsset; // 0x9c0(0x08)
	bool bDramaBehaviorNeedRestart; // 0x9c8(0x01)
	char pad_9C9[0x7]; // 0x9c9(0x07)
	struct TMap<struct FName, struct UAnimMontage*> StandaloneDramaMontages; // 0x9d0(0x50)
	struct TWeakObjectPtr<struct ADFMCharacter> MainFightTarget; // 0xa20(0x08)
	float DistanceToMainFightTarget; // 0xa28(0x04)
	int32_t NearlyPlayerNum; // 0xa2c(0x04)
	struct AAIMovePath* MajorMovePath; // 0xa30(0x08)
	int32_t PathInx; // 0xa38(0x04)
	char pad_A3C[0x4]; // 0xa3c(0x04)
	struct TArray<int32_t> UsePathInx; // 0xa40(0x10)
	bool bIsUnderShelling; // 0xa50(0x01)
	char pad_A51[0x7]; // 0xa51(0x07)
	struct ADramaArea* LastDramaArea; // 0xa58(0x08)
	float LastDramaPlayTime; // 0xa60(0x04)
	char pad_A64[0x2c]; // 0xa64(0x2c)
	struct APrefecture* Prefecture; // 0xa90(0x08)
	struct AActor* ProtectedActor; // 0xa98(0x08)
	float ProtectedRadius; // 0xaa0(0x04)
	char pad_AA4[0x4]; // 0xaa4(0x04)
	struct FString AILayoutName; // 0xaa8(0x10)
	char pad_AB8[0x18]; // 0xab8(0x18)
	struct TArray<struct FVector> CurrentMovePoints; // 0xad0(0x10)
	struct FString FightReason; // 0xae0(0x10)
	struct AActor* HistoryActor; // 0xaf0(0x08)
	struct FVector Historyloc; // 0xaf8(0x0c)
	bool bShieldHistoryLoc; // 0xb04(0x01)
	enum class EGPCharacterFightStateType Intro_FightState; // 0xb05(0x01)
	bool Intro_UpdateThreat; // 0xb06(0x01)
	char pad_B07[0x1]; // 0xb07(0x01)
	struct FDutyInfo CurrentDuty; // 0xb08(0x58)
	float SquadBestFightDist; // 0xb60(0x04)
	bool bUseMockPath; // 0xb64(0x01)
	char pad_B65[0x3]; // 0xb65(0x03)
	struct TArray<struct FVector> RelativeMockPath; // 0xb68(0x10)
	char pad_B78[0x8]; // 0xb78(0x08)
	struct FDFMCoverContext AICoverContext; // 0xb80(0x1b0)
	struct FDFMCoverContext NewCoverContextCache; // 0xd30(0x1b0)
	float SpotTurnTriggerCdSec; // 0xee0(0x04)
	float SpotTurnTriggerDelaySec; // 0xee4(0x04)
	float SpotTurnTriggerThreshold; // 0xee8(0x04)
	char pad_EEC[0x44]; // 0xeec(0x44)
	bool bModifyShootDirection; // 0xf30(0x01)
	bool bUseSupressShoot; // 0xf31(0x01)
	char pad_F32[0x2]; // 0xf32(0x02)
	float SupressDistModifyRate; // 0xf34(0x04)
	float SpecMoveRadius; // 0xf38(0x04)
	bool bInitDefaultBehaviorTree; // 0xf3c(0x01)
	bool bInitBehaviorTrees; // 0xf3d(0x01)
	char pad_F3E[0x2]; // 0xf3e(0x02)
	int32_t TotalLoadBTNum; // 0xf40(0x04)
	int32_t FinishLoadBTNum; // 0xf44(0x04)
	char pad_F48[0x10]; // 0xf48(0x10)
	/*struct FMulticastInlineDelegate*/char IntoFight[0x10]; // 0xf58(0x10)
	/*struct FMulticastInlineDelegate*/char LeaveFight[0x10]; // 0xf68(0x10)
	float InFightTime; // 0xf78(0x04)
	bool bReport; // 0xf7c(0x01)
	char pad_F7D[0x3]; // 0xf7d(0x03)
	struct TArray<struct FAngleRange> AngleRanges; // 0xf80(0x10)

	void UnSprint(); // Function DFMGameplay.DFMAIController.UnSprint // (Native|Public|BlueprintCallable) // @ game+0x62402b0
	void UnProne(); // Function DFMGameplay.DFMAIController.UnProne // (Native|Public|BlueprintCallable) // @ game+0x40843a0
	void UnHalfSquatWalk(); // Function DFMGameplay.DFMAIController.UnHalfSquatWalk // (Native|Public|BlueprintCallable) // @ game+0x6240290
	void UnCrouch(); // Function DFMGameplay.DFMAIController.UnCrouch // (Native|Public|BlueprintCallable) // @ game+0x6240270
	void UnBindDramaAndRestore(); // Function DFMGameplay.DFMAIController.UnBindDramaAndRestore // (Final|Native|Public|BlueprintCallable) // @ game+0x6240250
	void UnBindDrama(); // Function DFMGameplay.DFMAIController.UnBindDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x6240230
	void StopCurrentAnimRootMotion(); // Function DFMGameplay.DFMAIController.StopCurrentAnimRootMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x6240210
	void StartQuestCommand(enum class EAIQuestCommand Command); // Function DFMGameplay.DFMAIController.StartQuestCommand // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x6240190
	void Sprint(); // Function DFMGameplay.DFMAIController.Sprint // (Native|Public|BlueprintCallable) // @ game+0x6240170
	void SetupRandomMovePathPoint(); // Function DFMGameplay.DFMAIController.SetupRandomMovePathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6240150
	void SetToNextPendingMovePathPoint(); // Function DFMGameplay.DFMAIController.SetToNextPendingMovePathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6240130
	void SetToNextMovePathPoint(); // Function DFMGameplay.DFMAIController.SetToNextMovePathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6240110
	void SetSpawnerExtended(struct FString Key, struct UObject* Ptr); // Function DFMGameplay.DFMAIController.SetSpawnerExtended // (Final|Native|Public|BlueprintCallable) // @ game+0x6240010
	void SetShootBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetShootBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623ff90
	void SetProtectActor(struct AActor* Actor, float radius); // Function DFMGameplay.DFMAIController.SetProtectActor // (Final|Native|Public|BlueprintCallable) // @ game+0x623fed0
	void SetLeisureBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetLeisureBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623fe50
	void SetLeaveFightBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetLeaveFightBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623fdd0
	void SetFightBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetFightBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623fd50
	void SetDyingBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetDyingBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623fcd0
	bool SetDifficulty_Runtime(struct UDataTable* DifficultyTable, struct FName Difficulty); // Function DFMGameplay.DFMAIController.SetDifficulty_Runtime // (Final|Native|Public|BlueprintCallable) // @ game+0x623fc10
	void SetDifficulty(struct FAICharacterDifficulty Difficulty, bool bDynamicChange); // Function DFMGameplay.DFMAIController.SetDifficulty // (Native|Public|BlueprintCallable) // @ game+0x623faf0
	void SetDefaultBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetDefaultBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623fa70
	bool SetCurrWeaponFullAmmo(); // Function DFMGameplay.DFMAIController.SetCurrWeaponFullAmmo // (Native|Public|BlueprintCallable) // @ game+0x623fa40
	void SetAlertBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetAlertBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623f9c0
	void SetAIShootPoseConfig(struct FName& ConfigName); // Function DFMGameplay.DFMAIController.SetAIShootPoseConfig // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x623f8b0
	void SetAICharacterRankIcon(struct FName& Icon); // Function DFMGameplay.DFMAIController.SetAICharacterRankIcon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x623f820
	void SetAICharacterName(struct FText& Name); // Function DFMGameplay.DFMAIController.SetAICharacterName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x623f750
	void SetAbilityReactBehavior(struct UBehaviorTree* BT); // Function DFMGameplay.DFMAIController.SetAbilityReactBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x623f940
	void SendEventToGroupAI(struct UAIEvent* Event); // Function DFMGameplay.DFMAIController.SendEventToGroupAI // (Final|Native|Public|BlueprintCallable) // @ game+0x623f6d0
	void RandomFocusingOffset(); // Function DFMGameplay.DFMAIController.RandomFocusingOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x623f6b0
	void QuestCommandFinish(); // Function DFMGameplay.DFMAIController.QuestCommandFinish // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x623f690
	void Prone(); // Function DFMGameplay.DFMAIController.Prone // (Native|Public|BlueprintCallable) // @ game+0x367ef00
	bool PredictCanShootTargetFromLocation(struct ACHARACTER* TargetCharacter, struct FVector ShootLocation); // Function DFMGameplay.DFMAIController.PredictCanShootTargetFromLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x623f5b0
	void PlayMontageEx(struct UAnimMontage* Anim, struct FGameplayTagContainer& EndStateTags, struct UClass* MotionActionClass, struct FName CustomStateName, bool bAtomic); // Function DFMGameplay.DFMAIController.PlayMontageEx // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x623f3a0
	void PlayMontage(struct UAnimMontage* Anim); // Function DFMGameplay.DFMAIController.PlayMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x623f1e0
	void PlayAnimation(struct UAnimMontage* Anim, enum class EAnimationPlayType AnimPlayType); // Function DFMGameplay.DFMAIController.PlayAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x623f120
	void OnTargetPerceptionUpdated(struct AActor* Actor, struct FAIStimulus Stimulus); // Function DFMGameplay.DFMAIController.OnTargetPerceptionUpdated // (Final|Native|Public) // @ game+0x623efa0
	void OnStuck(struct ADFMAIController* Controller, float StuckSeconds); // Function DFMGameplay.DFMAIController.OnStuck // (Native|Event|Public|BlueprintEvent) // @ game+0x623eed0
	void OnLeaveFight(struct FVector SelfLocation, struct FVector enemyLocation, struct ADFMCharacter* Enemy); // Function DFMGameplay.DFMAIController.OnLeaveFight // (Final|Native|Public|HasDefaults) // @ game+0x623ec20
	void OnIntoFight(struct FVector SelfLocation, struct FVector enemyLocation, struct ADFMCharacter* Enemy); // Function DFMGameplay.DFMAIController.OnIntoFight // (Final|Native|Public|HasDefaults) // @ game+0x623ea40
	void OnConsecutiveFired(); // Function DFMGameplay.DFMAIController.OnConsecutiveFired // (Final|Native|Public) // @ game+0x623e9a0
	void OnClearHelpAction(); // Function DFMGameplay.DFMAIController.OnClearHelpAction // (Final|Native|Public|BlueprintCallable) // @ game+0x623e980
	void OnCharacterDied(struct AGPCharacterBase* deadCharacter, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.DFMAIController.OnCharacterDied // (Final|Native|Public|BlueprintCallable) // @ game+0x623e880
	void OnCharacterAirHit(struct APawn* SourcePawn, struct FHitResult& HitReslut); // Function DFMGameplay.DFMAIController.OnCharacterAirHit // (Final|Native|Public|HasOutParms) // @ game+0x623e760
	void OnCallHelpAction(struct UAIInteractorComponent* InterComponent); // Function DFMGameplay.DFMAIController.OnCallHelpAction // (Final|Native|Public|BlueprintCallable) // @ game+0x623e6e0
	void OnBehaviorTreeStart(); // Function DFMGameplay.DFMAIController.OnBehaviorTreeStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void NotifyTakeHit(struct AController* InstigatedBy, int32_t Damage, struct FVector Momentum, struct FDamageEvent& DamageEvent); // Function DFMGameplay.DFMAIController.NotifyTakeHit // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x623e460
	void NotifyShellingAttackEnd(); // Function DFMGameplay.DFMAIController.NotifyShellingAttackEnd // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void NotifyShellingAttackBegin(); // Function DFMGameplay.DFMAIController.NotifyShellingAttackBegin // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void NotifyCausedHit(struct APawn* HitPawn, int32_t Damage); // Function DFMGameplay.DFMAIController.NotifyCausedHit // (Native|Event|Public|BlueprintEvent) // @ game+0x623e390
	void NotifyAssassinatedDone(struct ACHARACTER* Assassinator); // Function DFMGameplay.DFMAIController.NotifyAssassinatedDone // (Final|Native|Public|BlueprintCallable) // @ game+0x623e310
	bool LineOfSightToLocation(struct FVector GoalLocation, bool bCheckFoliage); // Function DFMGameplay.DFMAIController.LineOfSightToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623e230
	float LineOfSightToCharacterOptimize(struct ACHARACTER* Other, struct FVector ViewPoint, struct FVector& VisiblePoint, bool bCheckFoliage); // Function DFMGameplay.DFMAIController.LineOfSightToCharacterOptimize // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623e0b0
	float LineOfSightToCharacter(struct ACHARACTER* Other, struct FVector& VisiblePoint, bool bCheckFoliage, bool bAllowAttaching); // Function DFMGameplay.DFMAIController.LineOfSightToCharacter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623df30
	bool LineOfSightToActor2(struct AActor* Target, bool bCheckFoliage); // Function DFMGameplay.DFMAIController.LineOfSightToActor2 // (Final|Native|Public|BlueprintCallable) // @ game+0x623ddb0
	bool LineOfSightToActor(struct AActor* Target, bool bCheckFoliage); // Function DFMGameplay.DFMAIController.LineOfSightToActor // (Final|Native|Public|BlueprintCallable) // @ game+0x623de70
	bool IsFinishDestinationMove(); // Function DFMGameplay.DFMAIController.IsFinishDestinationMove // (Final|Native|Public) // @ game+0x623dd80
	bool IsExcutingQuestCommand(enum class EAIQuestCommand Command); // Function DFMGameplay.DFMAIController.IsExcutingQuestCommand // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x623dcf0
	bool IsExcutingAnyQuestCommand(); // Function DFMGameplay.DFMAIController.IsExcutingAnyQuestCommand // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x623dcc0
	bool IsCurrentLocationOutOfNavMeshAndCanCorrect(struct FVector& CorrectLocation, float InSec, float CorrectDist, struct FVector ProjExt); // Function DFMGameplay.DFMAIController.IsCurrentLocationOutOfNavMeshAndCanCorrect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x623db30
	bool IsCharacterBeingAssassinated(); // Function DFMGameplay.DFMAIController.IsCharacterBeingAssassinated // (Final|Native|Public) // @ game+0x623db00
	bool InitSOLAIDifficultyData(); // Function DFMGameplay.DFMAIController.InitSOLAIDifficultyData // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void HalfSquatWalk(); // Function DFMGameplay.DFMAIController.HalfSquatWalk // (Native|Public|BlueprintCallable) // @ game+0x3689780
	enum class ECharacterPart GetTargetBodyPartShootVisibility(struct ACHARACTER* otherCharacter, bool bDebug); // Function DFMGameplay.DFMAIController.GetTargetBodyPartShootVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x623d9f0
	struct ADFMAIController* GetSquadCommander(); // Function DFMGameplay.DFMAIController.GetSquadCommander // (Final|Native|Public|BlueprintCallable) // @ game+0x623d9c0
	struct UObject* GetSpawnerExtended(struct FString Key); // Function DFMGameplay.DFMAIController.GetSpawnerExtended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d8f0
	struct UBehaviorTree* GetShootBehavior(); // Function DFMGameplay.DFMAIController.GetShootBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d8d0
	bool GetScoutPoint(struct FVector& Point); // Function DFMGameplay.DFMAIController.GetScoutPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x623d830
	struct APawn* GetRandomPlayer(); // Function DFMGameplay.DFMAIController.GetRandomPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x623d7d0
	bool GetRandomFocus(struct USceneComponent* SceneComp, float Angle, struct FVector& OutFocusLoc); // Function DFMGameplay.DFMAIController.GetRandomFocus // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d6c0
	int32_t STATIC_GetPlayerSchemeId(struct UObject* WorldContextObject); // Function DFMGameplay.DFMAIController.GetPlayerSchemeId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x623d640
	struct TArray<struct APawn*> GetPlayerInMachineGunRange(float InDistance); // Function DFMGameplay.DFMAIController.GetPlayerInMachineGunRange // (Final|Native|Public|BlueprintCallable) // @ game+0x623d510
	struct UMotionPlanPathFollowingComponent* GetMotionPlanComponent(); // Function DFMGameplay.DFMAIController.GetMotionPlanComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x623d4e0
	struct UBehaviorTree* GetLeisureBehavior(); // Function DFMGameplay.DFMAIController.GetLeisureBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d4c0
	struct UBehaviorTree* GetLeaveFightBehavior(); // Function DFMGameplay.DFMAIController.GetLeaveFightBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d4a0
	struct UAIScenesInteractiveComponent* GetInteractorInUse(); // Function DFMGameplay.DFMAIController.GetInteractorInUse // (Final|Native|Public|BlueprintCallable) // @ game+0x623d470
	struct FVector GetHistoryLoc(); // Function DFMGameplay.DFMAIController.GetHistoryLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d440
	struct AActor* GetHistoryActor(); // Function DFMGameplay.DFMAIController.GetHistoryActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d420
	struct UAICommandEvent* GetGroupAICommand(); // Function DFMGameplay.DFMAIController.GetGroupAICommand // (Final|Native|Public|BlueprintCallable) // @ game+0x623d3f0
	bool GetFinalDestination(struct FVector& Location); // Function DFMGameplay.DFMAIController.GetFinalDestination // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x623d350
	struct UBehaviorTree* GetFightBehavior(); // Function DFMGameplay.DFMAIController.GetFightBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d330
	struct UBehaviorTree* GetDyingBehavior(); // Function DFMGameplay.DFMAIController.GetDyingBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d310
	struct UAnimMontage* GetDramaMontage(struct FName Key); // Function DFMGameplay.DFMAIController.GetDramaMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x623d280
	bool GetDestinationLocation(struct FVector& Dest, bool bChooseNextPoint); // Function DFMGameplay.DFMAIController.GetDestinationLocation // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x623d1a0
	struct UBehaviorTree* GetDefaultBehavior(); // Function DFMGameplay.DFMAIController.GetDefaultBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623d180
	struct AAIPresetMovePathPoint* GetCurrentPresetMovePathPoint(); // Function DFMGameplay.DFMAIController.GetCurrentPresetMovePathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x623d150
	struct APawn* GetClosestPlayer(); // Function DFMGameplay.DFMAIController.GetClosestPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x623d120
	struct TArray<struct FInteractiveInfo> GetAvailableInteractor(struct AAIScenesActor* SceneActor); // Function DFMGameplay.DFMAIController.GetAvailableInteractor // (Final|Native|Public|BlueprintCallable) // @ game+0x623cf60
	float GetAlertToFightTime(); // Function DFMGameplay.DFMAIController.GetAlertToFightTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623cf10
	struct UBehaviorTree* GetAlertBehavior(); // Function DFMGameplay.DFMAIController.GetAlertBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623cef0
	struct FName GetAICharacterRankIcon(); // Function DFMGameplay.DFMAIController.GetAICharacterRankIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623ce90
	struct UBehaviorTree* GetAbilityReactBehavior(); // Function DFMGameplay.DFMAIController.GetAbilityReactBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623ced0
	bool FocusRandomBodyPartCanShoot(); // Function DFMGameplay.DFMAIController.FocusRandomBodyPartCanShoot // (Final|Native|Public|BlueprintCallable) // @ game+0x623ce60
	float FindSightToCharacterByCache(struct ACHARACTER* TestCharacter, bool bCheckFoliage, struct FVector& VisiblePoint, float InSeconds); // Function DFMGameplay.DFMAIController.FindSightToCharacterByCache // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x623cce0
	struct AActor* FindLootPointNearby(); // Function DFMGameplay.DFMAIController.FindLootPointNearby // (Final|Native|Public|BlueprintCallable) // @ game+0x623ccb0
	bool FindCharacterTag(enum class EAICharacterTag CharacterTag); // Function DFMGameplay.DFMAIController.FindCharacterTag // (Final|Native|Public|BlueprintCallable) // @ game+0x623cc20
	void ExitBeingAssassinated(struct ACHARACTER* Assassinator); // Function DFMGameplay.DFMAIController.ExitBeingAssassinated // (Final|Native|Public|BlueprintCallable) // @ game+0x623cba0
	void EnterBeingAssassinated(struct ACHARACTER* Assassinator); // Function DFMGameplay.DFMAIController.EnterBeingAssassinated // (Final|Native|Public|BlueprintCallable) // @ game+0x623cb20
	void Crouch(); // Function DFMGameplay.DFMAIController.Crouch // (Native|Public|BlueprintCallable) // @ game+0x4084fc0
	bool CheckTargetBodyPartShootVisibilityFast(struct ACHARACTER* otherCharacter, enum class EAIBodyPartOffsetPoise Pose, bool bRevert, bool bDebug); // Function DFMGameplay.DFMAIController.CheckTargetBodyPartShootVisibilityFast // (Final|Native|Public|BlueprintCallable) // @ game+0x623c9c0
	struct TArray<enum class ECharacterPart> CheckTargetBodyPartShootVisibility(struct ACHARACTER* otherCharacter, bool bDebug); // Function DFMGameplay.DFMAIController.CheckTargetBodyPartShootVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x623c8b0
	bool CanMoveToLocation(struct APawn* SrcPawn, struct FVector Location, struct FVector Extent, bool bEnableProject); // Function DFMGameplay.DFMAIController.CanMoveToLocation // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x623c730
	bool CanBeAssassinated(); // Function DFMGameplay.DFMAIController.CanBeAssassinated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623c700
	bool CallCombatSupport(enum class ECombatSupportType SupportType, struct UClass* PawnClass, struct UClass* ControlClass, struct UBehaviorTree* DefaultBehaviourTree); // Function DFMGameplay.DFMAIController.CallCombatSupport // (Final|Native|Public|BlueprintCallable) // @ game+0x623c5b0
	void BindDrama(struct ADramaArea* DramaArea); // Function DFMGameplay.DFMAIController.BindDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x623c530
	void STATIC_AttractEnemy(struct UObject* Ctx, struct ACHARACTER* Attractor, struct FVector FocusLocation); // Function DFMGameplay.DFMAIController.AttractEnemy // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x623c430
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterLODFeatureLevel
// Size: 0x148 (Inherited: 0x30)
class UCharacterLODFeatureLevel : public UObject {
public:

	char pad_30[0x10]; // 0x30(0x10)
	struct TArray<struct UClass*> DependencyFeatureClasses; // 0x40(0x10)
	struct TArray<struct UClass*> AssignFeatureClasses; // 0x50(0x10)
	struct TArray<struct UCharacterLODFeature*> DependencyFeatures; // 0x60(0x10)
	struct TArray<struct UCharacterLODFeature*> AssignFeatures; // 0x70(0x10)
	struct UCharacterLODFeature* ParentFeature; // 0x80(0x08)
	char pad_88[0x4]; // 0x88(0x04)
	float UnrealisticState; // 0x8c(0x04)
	float FundamentalDiscontinuity; // 0x90(0x04)
	float UnrealisticLongTermBehavior; // 0x94(0x04)
	float CPU; // 0x98(0x04)
	float Memory; // 0x9c(0x04)
	float ReplicateCount; // 0xa0(0x04)
	float CPUPerformanceIndex; // 0xa4(0x04)
	char pad_A8[0x50]; // 0xa8(0x50)
	/*struct TSet<struct UObject*>*/char StatContextObjects[0x50]; // 0xf8(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterLODFeature
// Size: 0x90 (Inherited: 0x30)
class UCharacterLODFeature : public UObject {
public:

	struct TArray<struct UClass*> FeatureLevelClasses; // 0x30(0x10)
	struct TArray<struct FFeatureLevelTransitionClass> DisableTransClasses; // 0x40(0x10)
	bool bUseStatCPUCost; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	enum class EStatName StatName; // 0x54(0x04)
	struct TArray<struct UCharacterLODFeatureLevel*> FeatureLevels; // 0x58(0x10)
	struct TArray<struct FFeatureLevelTransition> DisableLevelTrans; // 0x68(0x10)
	char pad_78[0x18]; // 0x78(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EditorMarkSceneComponent
// Size: 0x240 (Inherited: 0x240)
class UEditorMarkSceneComponent : public USceneComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupPatrolJob
// Size: 0xd8 (Inherited: 0x58)
class UAIGroupPatrolJob : public UAIJob {
public:

	struct TArray<struct FGPatrolWPConfig> WayPoints; // 0x58(0x10)
	float AveRadius; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct TArray<struct FGPContext> RoleGPContexts; // 0x70(0x10)
	struct TArray<struct UFormationLocation*> Formations; // 0x80(0x10)
	float ForwardingHeadYaw; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct ADramaArea* DramaArea; // 0x98(0x08)
	int32_t MaxPatrolNum; // 0xa0(0x04)
	float CoolDownTime; // 0xa4(0x04)
	float PathWidth; // 0xa8(0x04)
	int32_t DramaAreaSearchRadius; // 0xac(0x04)
	struct FAnimMontageList AnimMotageArray; // 0xb0(0x10)
	float AnimCoolDown; // 0xc0(0x04)
	float AnimPlayTime; // 0xc4(0x04)
	float LastPlayTime; // 0xc8(0x04)
	enum class EPatrolType PatrolType; // 0xcc(0x01)
	char pad_CD[0xb]; // 0xcd(0x0b)

	bool WaitForStep(struct AAIController* AIController); // Function DFMGameplay.AIGroupPatrolJob.WaitForStep // (Native|Public|BlueprintCallable) // @ game+0x61d3680
	void ShuffleWaypoints(); // Function DFMGameplay.AIGroupPatrolJob.ShuffleWaypoints // (Final|Native|Public|BlueprintCallable) // @ game+0x61d3660
	void SetLastPlayTime(float Time); // Function DFMGameplay.AIGroupPatrolJob.SetLastPlayTime // (Final|Native|Public|BlueprintCallable) // @ game+0x61d35e0
	void OnMemberDied(struct AGPCharacterBase* InCharacter, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.AIGroupPatrolJob.OnMemberDied // (Native|Public) // @ game+0x61d34e0
	bool IsPatrolCaptain(struct AAIController* Controller); // Function DFMGameplay.AIGroupPatrolJob.IsPatrolCaptain // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d3440
	bool IsNeedJump(struct AAIController* AIController, float ZDelta); // Function DFMGameplay.AIGroupPatrolJob.IsNeedJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d3380
	int32_t GetRealIndex(int32_t inx); // Function DFMGameplay.AIGroupPatrolJob.GetRealIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d3110
	bool GetNextPos(struct AAIController* AIController, struct FVector& OutPos); // Function DFMGameplay.AIGroupPatrolJob.GetNextPos // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d3030
	bool GetNextPointConfig(struct AAIController* AIController, struct FVector& Destination, struct FVector& Adjusted, struct FVector& KP, float& StayTime, enum class EGroupPatrolPose& Pose, struct FVector& dir); // Function DFMGameplay.AIGroupPatrolJob.GetNextPointConfig // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d2dd0
	int32_t GetMemberOrder(struct AAIController* Controller); // Function DFMGameplay.AIGroupPatrolJob.GetMemberOrder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d2b80
	struct UAnimMontage* GetMemberAnimByOrder(struct AAIController* Controller); // Function DFMGameplay.AIGroupPatrolJob.GetMemberAnimByOrder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d2af0
	float GetDestDist(struct AAIController* Controller, float& Coef, float& CaptainDestDist); // Function DFMGameplay.AIGroupPatrolJob.GetDestDist // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x61d1ef0
	struct FVector GetAssemblePosition(struct AAIController* Controller); // Function DFMGameplay.AIGroupPatrolJob.GetAssemblePosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61d1ba0
	struct UAIGroupPatrolJob* STATIC_CreateGroupPatrolJob(struct ADramaArea* Area, struct FAnimMontageList AnimMotageList, float AnimCoolDown, float AnimPlayTime); // Function DFMGameplay.AIGroupPatrolJob.CreateGroupPatrolJob // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d13f0
	int32_t CommitReady(struct AAIController* Controller); // Function DFMGameplay.AIGroupPatrolJob.CommitReady // (Native|Public|BlueprintCallable) // @ game+0x61d1210
	bool AllowPlayGroupAnim(); // Function DFMGameplay.AIGroupPatrolJob.AllowPlayGroupAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x61d11e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropGenerator
// Size: 0x3a8 (Inherited: 0x378)
class AAirDropGenerator : public AActor {
public:

	int32_t AirDropID; // 0x378(0x04)
	int32_t TimeStart; // 0x37c(0x04)
	int32_t TimeEnd; // 0x380(0x04)
	uint32_t SpawnWeight; // 0x384(0x04)
	float SpawnHeight; // 0x388(0x04)
	enum class ESubtitleSequenceType SubtitleSequenceType; // 0x38c(0x01)
	char pad_38D[0x3]; // 0x38d(0x03)
	struct FName AirDop_SubtitleId; // 0x390(0x08)
	struct UBoxComponent* NavMeshComponent; // 0x398(0x08)
	char pad_3A0[0x8]; // 0x3a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISense_SightDFM
// Size: 0x160 (Inherited: 0x160)
class UAISense_SightDFM : public UAISense_SightEx {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AmmoBoxComponent
// Size: 0x188 (Inherited: 0x100)
class UAmmoBoxComponent : public UActorComponent {
public:

	bool bInfinite; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	int32_t Capacity; // 0x104(0x04)
	enum class EWeaponAddAmmoType AddAmmoType; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float AddAmmoValue; // 0x10c(0x04)
	uint16_t AddAmmoQuantityForBattleFieldPropSkillCD; // 0x110(0x02)
	uint16_t AddAmmoQuantityForArmdedForceItem2; // 0x112(0x02)
	char pad_114[0x4]; // 0x114(0x04)
	struct TArray<char> Blacklist; // 0x118(0x10)
	bool bMainWeapon; // 0x128(0x01)
	bool bAbilityWeapon; // 0x129(0x01)
	char pad_12A[0x2]; // 0x12a(0x02)
	uint32_t AddBuffId; // 0x12c(0x04)
	char pad_130[0x50]; // 0x130(0x50)
	int32_t CurCapacity; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)

	void OnRep_CurCapacity(int32_t OldCapacity); // Function DFMGameplay.AmmoBoxComponent.OnRep_CurCapacity // (Native|Protected) // @ game+0x36404f0
	void GetWeaponList(struct AGPCharacterBase* GPCharBase); // Function DFMGameplay.AmmoBoxComponent.GetWeaponList // (Final|Native|Protected) // @ game+0x405a7e0
	int32_t AddAmmoToTargetWeapon(/*struct TScriptInterface<IWeaponInterface> IWeapon, enum class EAddAmmoFailReason& FailReason, bool bSimulate*/); // Function DFMGameplay.AmmoBoxComponent.AddAmmoToTargetWeapon // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61e64e0
	int32_t AddAmmoToAll(struct AGPCharacterBase* GPCharBase, enum class EAddAmmoFailReason& FailReason, bool bSimulate); // Function DFMGameplay.AmmoBoxComponent.AddAmmoToAll // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61e63d0
	int32_t AddAmmo(struct AGPCharacterBase* CHARACTER, enum class EAddAmmoFailReason& FailReason, bool bSimulate); // Function DFMGameplay.AmmoBoxComponent.AddAmmo // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61e62b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_ShootOneBullet
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_ShootOneBullet : public UAnimNotify {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDamageCaculatorBase
// Size: 0x30 (Inherited: 0x30)
class UArmorDamageCaculatorBase : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDurabilityHandler
// Size: 0x30 (Inherited: 0x30)
class UArmorDurabilityHandler : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BasePlayerSettlementComponent
// Size: 0x1d8 (Inherited: 0x100)
class UBasePlayerSettlementComponent : public UActorComponent {
public:

	struct ADFMPlayerState* DFMPlayerState; // 0x100(0x08)
	int32_t Sec_EndType; // 0x108(0x04)
	int32_t Sec_KillCount; // 0x10c(0x04)
	int32_t Sec_AssistsCount; // 0x110(0x04)
	float Sec_TotalHPDamage; // 0x114(0x04)
	struct FString Sec_KillingFlow; // 0x118(0x10)
	int32_t Sec_KillBot; // 0x128(0x04)
	int32_t Sec_KillPlayer; // 0x12c(0x04)
	int32_t Sec_Suicide; // 0x130(0x04)
	int32_t Sec_KillTeammate; // 0x134(0x04)
	int32_t Sec_DeathCount; // 0x138(0x04)
	int32_t Sec_KillDownPlayer; // 0x13c(0x04)
	int32_t Ds_HasBlueBox; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	int64_t Ds_CarryoutAIPrice; // 0x148(0x08)
	int64_t Ds_CarryoutAILabPrice; // 0x150(0x08)
	int64_t Ds_CarryoutBossPrice; // 0x158(0x08)
	int64_t Ds_CarryoutContainPrice; // 0x160(0x08)
	int64_t Ds_CarryoutLootPrice; // 0x168(0x08)
	int64_t Ds_CarryoutEnemyPrice; // 0x170(0x08)
	int64_t Ds_CarryoutSelfPrice; // 0x178(0x08)
	int64_t Ds_CarryoutSelfPriceFinal; // 0x180(0x08)
	int64_t Ds_ProfitPrice; // 0x188(0x08)
	int64_t Ds_CarryinPriceFinal; // 0x190(0x08)
	int64_t Ds_FinalPrice; // 0x198(0x08)
	int64_t Ds_CarryInPriceNOKeyChain; // 0x1a0(0x08)
	int64_t Ds_CarryoutSafeBoxPrice; // 0x1a8(0x08)
	int64_t Ds_KeyChainCarryInPrice; // 0x1b0(0x08)
	int64_t Ds_KeyChainCarryOutPrice; // 0x1b8(0x08)
	int32_t Ds_CarryoutGridNum; // 0x1c0(0x04)
	int32_t Ds_LootTotalNum; // 0x1c4(0x04)
	bool Ds_OffLine; // 0x1c8(0x01)
	enum class EPlayerDeathType Ds_PlayerDeathType; // 0x1c9(0x01)
	char pad_1CA[0x2]; // 0x1ca(0x02)
	int32_t Ds_ArmedForceId; // 0x1cc(0x04)
	char pad_1D0[0x8]; // 0x1d0(0x08)

	void ServerSendSkillLogInfo(); // Function DFMGameplay.BasePlayerSettlementComponent.ServerSendSkillLogInfo // (Final|Native|Public) // @ game+0x61ec2e0
	void ServerQuitGameInternal(enum class EMatchOverReason QuitReason); // Function DFMGameplay.BasePlayerSettlementComponent.ServerQuitGameInternal // (Native|Protected) // @ game+0x36778b0
	void ServerQuitGame(enum class EMatchOverReason QuitReason); // Function DFMGameplay.BasePlayerSettlementComponent.ServerQuitGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x61ec260
	void SendMobileMoveInputData(struct FString InDataStr1, struct FString InDataStr2); // Function DFMGameplay.BasePlayerSettlementComponent.SendMobileMoveInputData // (Final|Native|Public) // @ game+0x61ec120
	void SendMobileFireInputData(struct FString InDataStr); // Function DFMGameplay.BasePlayerSettlementComponent.SendMobileFireInputData // (Final|Native|Public) // @ game+0x61ec060
	void SendGeneralData2(); // Function DFMGameplay.BasePlayerSettlementComponent.SendGeneralData2 // (Final|Native|Public|Const) // @ game+0x61ec020
	void SendGeneralData(); // Function DFMGameplay.BasePlayerSettlementComponent.SendGeneralData // (Final|Native|Public|Const) // @ game+0x61ec040
	void SendDsData_Breakthrough(enum class EMatchOverReason QuitReason); // Function DFMGameplay.BasePlayerSettlementComponent.SendDsData_Breakthrough // (Native|Public|Const) // @ game+0x61ebfa0
	void SendDsData(); // Function DFMGameplay.BasePlayerSettlementComponent.SendDsData // (Final|Native|Public|Const) // @ game+0x61ebf80
	void OnClientPlayerMatchOver(enum class EMatchOverReason& MatchOverReason); // Function DFMGameplay.BasePlayerSettlementComponent.OnClientPlayerMatchOver // (Final|Native|Public|HasOutParms) // @ game+0x61eb990
	void NtfDSSendLogoutToServer(); // Function DFMGameplay.BasePlayerSettlementComponent.NtfDSSendLogoutToServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e36270
	void NotifyServerPlayerBan(int64_t PlayerId, int8_t reason, struct FString custom_reson); // Function DFMGameplay.BasePlayerSettlementComponent.NotifyServerPlayerBan // (Final|Native|Public) // @ game+0x61eb850
	void NotifyServerClientQuitMatch(); // Function DFMGameplay.BasePlayerSettlementComponent.NotifyServerClientQuitMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x61eb830
	void DoClientQuitGame(); // Function DFMGameplay.BasePlayerSettlementComponent.DoClientQuitGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35a3800
	void BroastCastPlayerBan(int64_t PlayerId, int8_t reason, struct FString custom_reson); // Function DFMGameplay.BasePlayerSettlementComponent.BroastCastPlayerBan // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x61eb260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemBase
// Size: 0x5a8 (Inherited: 0x3d8)
class ABreakableItemBase : public APawn {
public:

	char pad_3D8[0x68]; // 0x3d8(0x68)
	bool IsSkeletalMeshKeepRelativeTransform; // 0x440(0x01)
	bool IsParticleEffectKeepRelativeTransform; // 0x441(0x01)
	char pad_442[0x6]; // 0x442(0x06)
	struct TArray<struct FBreakableItemWithIndex> RelatedBreakingItemWithIndexArray; // 0x448(0x10)
	/*struct TArray<struct TSoftObjectPtr<ABreakableItemBase>>*/char RelatedBreakingItemArray[0x10]; // 0x458(0x10)
	/*struct TArray<struct TSoftObjectPtr<AActor>>*/char RelatedDestoryAcotr[0x10]; // 0x468(0x10)
	enum class EBreakableItemState InitialBreakState; // 0x478(0x01)
	bool bBlockVehicles; // 0x479(0x01)
	bool bNavBoxInitialCanEverEffect; // 0x47a(0x01)
	bool bNavBoxBrokenCanEverEffect; // 0x47b(0x01)
	bool bEnableRuntimeISMRenderProxy; // 0x47c(0x01)
	char pad_47D[0x3]; // 0x47d(0x03)
	float OverrideRuntimeISMBoundSize; // 0x480(0x04)
	bool bKeepISMProxySameSubLevel; // 0x484(0x01)
	bool bGenerateComponentGUID; // 0x485(0x01)
	char pad_486[0x2]; // 0x486(0x02)
	/*struct UDestructibleItemDamagePrest**/char DamagePreset[0x8]; // 0x488(0x08)
	/*struct UDestructibleItemPhxPreset**/char PhysicsPreset[0x8]; // 0x490(0x08)
	bool bIgnoreDamageOnPrematch; // 0x498(0x01)
	enum class EExplosionType ExplosionEffect; // 0x499(0x01)
	char pad_49A[0x6]; // 0x49a(0x06)
	/*struct TArray<struct TSoftObjectPtr<UGPAudioEventAsset>>*/char OnBreakAudioArray[0x10]; // 0x4a0(0x10)
	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char OnHitAudio[0x28]; // 0x4b0(0x28)
	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char LoopStartAudio[0x28]; // 0x4d8(0x28)
	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char LoopEndAudio[0x28]; // 0x500(0x28)
	bool bEnablePhysics; // 0x528(0x01)
	char pad_529[0xf]; // 0x529(0x0f)
	struct TArray<struct UBoxComponent*> NavBoxComponents; // 0x538(0x10)
	char pad_548[0x1]; // 0x548(0x01)
	enum class EBreakableItemState BreakState; // 0x549(0x01)
	char pad_54A[0x5e]; // 0x54a(0x5e)

	void RestoreBreakable(); // Function DFMGameplay.BreakableItemBase.RestoreBreakable // (Final|Native|Public|BlueprintCallable) // @ game+0x61f5ea0
	void RelatedBreaking(struct AActor* MakerInstigator); // Function DFMGameplay.BreakableItemBase.RelatedBreaking // (Final|Native|Public) // @ game+0x61f5e20
	void PlayExplosionEffect(); // Function DFMGameplay.BreakableItemBase.PlayExplosionEffect // (Final|Native|Public) // @ game+0x61f5ce0
	void MultiPlayDestructibleEffect(int32_t PartIndex); // Function DFMGameplay.BreakableItemBase.MultiPlayDestructibleEffect // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x61f4ff0
	bool IsBreakableSupportRestore(); // Function DFMGameplay.BreakableItemBase.IsBreakableSupportRestore // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61f4fc0
	enum class EBreakableItemState GetBreakableState(); // Function DFMGameplay.BreakableItemBase.GetBreakableState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x61f4b90
	void BreakSelfAtIndex(struct AActor* MakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemBase.BreakSelfAtIndex // (Native|Public) // @ game+0x61f4aa0
	void BreakSelf(struct AActor* MakerInstigator); // Function DFMGameplay.BreakableItemBase.BreakSelf // (Native|Public|BlueprintCallable) // @ game+0x61f4a10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BuffMonitorBase
// Size: 0x38 (Inherited: 0x30)
class UBuffMonitorBase : public UObject {
public:

	struct UDFMBuffSystemComponent* BuffSystemComponent; // 0x30(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecuteOperatorComponent
// Size: 0x1a8 (Inherited: 0x100)
class UInteractorExecuteOperatorComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	struct FGameplayTagContainer TriggerTags; // 0x108(0x20)
	struct FGameplayTagContainer InterruptTags; // 0x128(0x20)
	struct FGameplayTag DelayStartInteractTag; // 0x148(0x08)
	struct TArray<struct UInteractorExecuteOperatorCondition*> MustConditions; // 0x150(0x10)
	struct TArray<struct UInteractorExecuteOperatorCondition*> OneMoreConditions; // 0x160(0x10)
	struct FGameplayTag CachedOperateTag; // 0x170(0x08)
	struct FGameplayTag CachedOriginTag; // 0x178(0x08)
	struct ACHARACTER* CachedPawn; // 0x180(0x08)
	float ServerDelayInteractTime; // 0x188(0x04)
	float ClientDelayInteractTime; // 0x18c(0x04)
	bool bIsExecuting; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)
	struct FTimerHandle StartInteractionTimerHandle; // 0x198(0x08)
	struct FTimerHandle EndInteractionTimerHandle; // 0x1a0(0x08)

	void ServerStartInteraction(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorComponent.ServerStartInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x360b770
	void ServerEndInteraction(struct ACHARACTER* OperatorCharacter, enum class EEndInteractionType EndReason); // Function DFMGameplay.InteractorExecuteOperatorComponent.ServerEndInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x63578a0
	void ProcessOperatorInterrupt(struct FGameplayTag OperateTag, struct FGameplayTag OriginTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorComponent.ProcessOperatorInterrupt // (Native|Public|BlueprintCallable) // @ game+0x63576b0
	void OnParentActorOwnerChange(struct AActor* ParentActorOwner); // Function DFMGameplay.InteractorExecuteOperatorComponent.OnParentActorOwnerChange // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x36f8350
	float GetInteractorDuration(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorComponent.GetInteractorDuration // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6356690
	float GetDelayInteractionTime(struct FGameplayTag OperateTag, struct FGameplayTag OriginTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorComponent.GetDelayInteractionTime // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x63564c0
	struct FGameplayTagContainer GetCurrentActiveTags(); // Function DFMGameplay.InteractorExecuteOperatorComponent.GetCurrentActiveTags // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x6356400
	void ClientStartSimulateInteraction(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorExecuteOperatorComponent.ClientStartSimulateInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x360bad0
	void ClientEndSimulateInteraction(struct ACHARACTER* OperatorCharacter, enum class EEndInteractionType EndReason); // Function DFMGameplay.InteractorExecuteOperatorComponent.ClientEndSimulateInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x63560c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterEquipComponent
// Size: 0x408 (Inherited: 0x100)
class UCharacterEquipComponent : public UActorComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnArmorHPChangedSignature[0x10]; // 0x100(0x10)
	struct UDataTable* AIOverridePartHitChecker; // 0x110(0x08)
	char pad_118[0xc8]; // 0x118(0xc8)
	struct TArray<struct FEquipmentInfo> EquipmentInfoArray; // 0x1e0(0x10)
	struct TArray<struct FArmorInfo> EquipedArmorInfoArray; // 0x1f0(0x10)
	struct TMap<enum class EEquipmentType, uint64_t> EquipmentItemMap; // 0x200(0x50)
	struct ADFMCharacter* OwnerCharacter; // 0x250(0x08)
	struct TArray<uint32_t> HeadPartEquipmentsAdpationCompare; // 0x258(0x10)
	struct TArray<uint32_t> EquipmentTopHeadPrioritys; // 0x268(0x10)
	struct TArray<uint32_t> EquipmentFacePrioritys; // 0x278(0x10)
	struct TArray<uint32_t> EquipmentEarPrioritys; // 0x288(0x10)
	struct TArray<uint32_t> EquipmentEyePrioritys; // 0x298(0x10)
	char pad_2A8[0xa8]; // 0x2a8(0xa8)
	struct UEquipComponentManager* CharacterEquipManager; // 0x350(0x08)
	char pad_358[0x10]; // 0x358(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientEquipChanged[0x10]; // 0x368(0x10)
	char pad_378[0x10]; // 0x378(0x10)
	/*struct FMulticastInlineDelegate*/char OnArmorTakeDamageDelegate[0x10]; // 0x388(0x10)
	char pad_398[0x10]; // 0x398(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerNotifyAddEquip[0x10]; // 0x3a8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerNotifyRemoveEquip[0x10]; // 0x3b8(0x10)
	char pad_3C8[0x10]; // 0x3c8(0x10)
	struct FHelmetMaskDamageInfo MaskDamageInfo; // 0x3d8(0x30)

	void UnequipResult(bool Result, enum class EEquipmentType Type, uint64_t ItemID, uint64_t ItemGid); // Function DFMGameplay.CharacterEquipComponent.UnequipResult // (Final|Native|Protected) // @ game+0x6208480
	void ShowSeamless(); // Function DFMGameplay.CharacterEquipComponent.ShowSeamless // (Final|Native|Public) // @ game+0x6208460
	void SetEquipApperance(uint64_t ItemID, enum class EEquipmentType Type, bool bShow); // Function DFMGameplay.CharacterEquipComponent.SetEquipApperance // (Final|Native|Public) // @ game+0x62082b0
	void ServerUnequip(enum class EEquipmentType Type); // Function DFMGameplay.CharacterEquipComponent.ServerUnequip // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x61ec260
	void ServerEquipByItemID(enum class EEquipmentType Type, uint64_t ItemID); // Function DFMGameplay.CharacterEquipComponent.ServerEquipByItemID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62081e0
	void ServerEquip(enum class EEquipmentType Type, struct FEquipmentInfo ItemInfo); // Function DFMGameplay.CharacterEquipComponent.ServerEquip // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62080d0
	void OnServerRemoveEquip(enum class EEquipmentType Type); // Function DFMGameplay.CharacterEquipComponent.OnServerRemoveEquip // (Native|Protected) // @ game+0x6208050
	void OnServerAddEquip(enum class EEquipmentType Type, struct FEquipmentInfo& ItemInfo); // Function DFMGameplay.CharacterEquipComponent.OnServerAddEquip // (Native|Protected|HasOutParms) // @ game+0x6207f60
	void OnRep_MaskDamageInfo(); // Function DFMGameplay.CharacterEquipComponent.OnRep_MaskDamageInfo // (Final|Native|Public) // @ game+0x6207f40
	void OnRep_EquipmentIDArray(); // Function DFMGameplay.CharacterEquipComponent.OnRep_EquipmentIDArray // (Final|Native|Public) // @ game+0x6207f00
	void OnRep_EquipedArmorInfoArray(); // Function DFMGameplay.CharacterEquipComponent.OnRep_EquipedArmorInfoArray // (Final|Native|Public) // @ game+0x6207ee0
	struct TMap<enum class EEquipmentType, uint64_t> GetEquipmentMap(); // Function DFMGameplay.CharacterEquipComponent.GetEquipmentMap // (Final|Native|Public) // @ game+0x6207dd0
	uint64_t GetEquipmentItemIdByType(enum class EEquipmentType InEquipmentItemType); // Function DFMGameplay.CharacterEquipComponent.GetEquipmentItemIdByType // (Final|Native|Public) // @ game+0x6207d40
	struct FEquipmentInfo GetEquipmentInfoByType(enum class EEquipmentType Type); // Function DFMGameplay.CharacterEquipComponent.GetEquipmentInfoByType // (Final|Native|Public|BlueprintCallable) // @ game+0x6207c80
	struct TArray<struct FEquipmentInfo> GetEquipmentInfoArray(); // Function DFMGameplay.CharacterEquipComponent.GetEquipmentInfoArray // (Final|Native|Public) // @ game+0x6207bd0
	struct TArray<struct FArmorInfo> GetEquipedArmorInfoArray(); // Function DFMGameplay.CharacterEquipComponent.GetEquipedArmorInfoArray // (Final|Native|Public) // @ game+0x6207b20
	struct FArmorInfo GetArmorInfoByType(enum class EEquipmentType Type); // Function DFMGameplay.CharacterEquipComponent.GetArmorInfoByType // (Final|Native|Public|BlueprintCallable) // @ game+0x62079d0
	struct UCharacterEquipComponent* STATIC_Get(struct AActor* Owner); // Function DFMGameplay.CharacterEquipComponent.Get // (Final|Native|Static|Public) // @ game+0x62078d0
	void EquipResult(bool Result, enum class EEquipmentType Type, uint64_t ItemID, uint64_t ItemGid); // Function DFMGameplay.CharacterEquipComponent.EquipResult // (Final|Native|Protected) // @ game+0x6207660
	bool DoServerUnequip(enum class EEquipmentType Type); // Function DFMGameplay.CharacterEquipComponent.DoServerUnequip // (Final|Native|Public) // @ game+0x62075d0
	bool DoServerEquip(enum class EEquipmentType Type, struct FEquipmentInfo ItemInfo); // Function DFMGameplay.CharacterEquipComponent.DoServerEquip // (Final|Native|Public) // @ game+0x62074c0
	void DoClearAllEquipments(); // Function DFMGameplay.CharacterEquipComponent.DoClearAllEquipments // (Final|Native|Public) // @ game+0x62074a0
	void ClientFaceMaskBeHit(float BulletBaseDamage, struct FVector DamageMakerLocalLocation); // Function DFMGameplay.CharacterEquipComponent.ClientFaceMaskBeHit // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient|BlueprintCallable) // @ game+0x62073d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterFashionComponent
// Size: 0x400 (Inherited: 0x108)
class UCharacterFashionComponent : public UGPNetworkActorComponent {
public:

	struct AGPCharacter* GPCharacter; // 0x108(0x08)
	struct UDataTable* CharacterAvatarTable; // 0x110(0x08)
	struct TArray<struct FCharacterAvatarDataRow> AllCharacterAvatarTableRow; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)
	struct FCharacterAvatarDataRow CurFashionInfo; // 0x130(0x2c0)
	struct FName DefaultCharacterAvatarID; // 0x3f0(0x08)
	char pad_3F8[0x8]; // 0x3f8(0x08)

	void SetFashionInfoByRowname(struct FName& RowName); // Function DFMGameplay.CharacterFashionComponent.SetFashionInfoByRowname // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62083c0
	void OnPossessedBy(); // Function DFMGameplay.CharacterFashionComponent.OnPossessedBy // (Native|Public) // @ game+0x22790c0
	struct FCharacterAvatarDataRow GetCurFashionInfo(); // Function DFMGameplay.CharacterFashionComponent.GetCurFashionInfo // (Final|Native|Public) // @ game+0x6207aa0
	struct UCharacterFashionComponent* STATIC_Get(struct AActor* Owner); // Function DFMGameplay.CharacterFashionComponent.Get // (Final|Native|Static|Public) // @ game+0x6207950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFScenceWeaponPawn
// Size: 0x4d0 (Inherited: 0x3d8)
class ADFScenceWeaponPawn : public APawn {
public:

	char pad_3D8[0x30]; // 0x3d8(0x30)
	struct USkeletalMeshComponent* WeaponDisplayMesh; // 0x408(0x08)
	struct USceneComponent* root; // 0x410(0x08)
	struct ADFMSceneWeapon* SceneWeapon; // 0x418(0x08)
	int32_t CurCampID; // 0x420(0x04)
	int32_t CurTeamId; // 0x424(0x04)
	bool bIsUsing; // 0x428(0x01)
	char pad_429[0x3]; // 0x429(0x03)
	float AIYawLimit; // 0x42c(0x04)
	struct AGPCharacterBase* CharacterOwner; // 0x430(0x08)
	uint64_t WeaponRecId; // 0x438(0x08)
	uint32_t FixedWeaponId; // 0x440(0x04)
	bool bUseWeaponPreset; // 0x444(0x01)
	char pad_445[0x3]; // 0x445(0x03)
	uint64_t WeaponPresetId; // 0x448(0x08)
	struct FName SpineBoneName; // 0x450(0x08)
	struct FName LeftHandIKSocketName; // 0x458(0x08)
	struct FName RightHandIKSocketName; // 0x460(0x08)
	enum class ESceneWeaponType SceneWeaponType; // 0x468(0x01)
	char pad_469[0x7]; // 0x469(0x07)
	struct UGPModularWeaponDesc* CacheWeaponDesc; // 0x470(0x08)
	struct UGPModularWeaponDesc* CacheClientWeaponDesc; // 0x478(0x08)
	char pad_480[0x8]; // 0x480(0x08)
	struct TArray<struct FVector> ExtendedDropOffLocations; // 0x488(0x10)
	char pad_498[0x20]; // 0x498(0x20)
	struct FVector RelWeaponLoc; // 0x4b8(0x0c)
	struct FRotator RelWeaponRot; // 0x4c4(0x0c)

	void UpdateWeaponHudInfo(); // Function DFMGameplay.DFScenceWeaponPawn.UpdateWeaponHudInfo // (Native|Public) // @ game+0x361d920
	void SpawnAndUseSceneWeapon(struct AGPCharacterBase* InCharacterOwner); // Function DFMGameplay.DFScenceWeaponPawn.SpawnAndUseSceneWeapon // (Native|Public|BlueprintCallable) // @ game+0x406aed0
	void SetSceneWeapon(struct ADFMSceneWeapon* InSceneWeapon); // Function DFMGameplay.DFScenceWeaponPawn.SetSceneWeapon // (Native|Public) // @ game+0x630bd10
	void SetIgnoreAllCollision(); // Function DFMGameplay.DFScenceWeaponPawn.SetIgnoreAllCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x630bbf0
	void RemoveSceneWeapon(struct ADFMSceneWeapon* InSceneWeapon); // Function DFMGameplay.DFScenceWeaponPawn.RemoveSceneWeapon // (Native|Public) // @ game+0x630b8b0
	void OnUsingStateChanged(); // Function DFMGameplay.DFScenceWeaponPawn.OnUsingStateChanged // (Final|Native|Public) // @ game+0x630b890
	void OnDelaySetMeshNotTick(); // Function DFMGameplay.DFScenceWeaponPawn.OnDelaySetMeshNotTick // (Final|Native|Public) // @ game+0x630b5b0
	bool IsUsing(); // Function DFMGameplay.DFScenceWeaponPawn.IsUsing // (Final|Native|Public|BlueprintCallable) // @ game+0x630b450
	bool IsCanInteractable(); // Function DFMGameplay.DFScenceWeaponPawn.IsCanInteractable // (Native|Public) // @ game+0x630b420
	void HandleSceneWeaponDeattach(struct AGPCharacterBase* InCharacterOwner); // Function DFMGameplay.DFScenceWeaponPawn.HandleSceneWeaponDeattach // (Native|Public) // @ game+0x630b370
	void HandleSceneWeaponAttachment(struct AGPCharacterBase* InCharacterOwner); // Function DFMGameplay.DFScenceWeaponPawn.HandleSceneWeaponAttachment // (Native|Public) // @ game+0x61f4a10
	struct FVector GetPlayerStandRelativeLocation(); // Function DFMGameplay.DFScenceWeaponPawn.GetPlayerStandRelativeLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x630b330
	struct FVector GetPlayerGetOffLocation(); // Function DFMGameplay.DFScenceWeaponPawn.GetPlayerGetOffLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x630b2f0
	void BP_SetSceneWeapon(struct ADFMSceneWeapon* InSceneWeapon); // Function DFMGameplay.DFScenceWeaponPawn.BP_SetSceneWeapon // (Native|Event|Public|BlueprintEvent) // @ game+0x630af30
	void BP_HandleSceneWeaponDeattach(); // Function DFMGameplay.DFScenceWeaponPawn.BP_HandleSceneWeaponDeattach // (Native|Event|Public|BlueprintEvent) // @ game+0x406cac0
	void BP_HandleSceneWeaponAttachment(); // Function DFMGameplay.DFScenceWeaponPawn.BP_HandleSceneWeaponAttachment // (Native|Event|Public|BlueprintEvent) // @ game+0x406a7e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInputManager
// Size: 0x660 (Inherited: 0x630)
class UDFMInputManager : public UGPInputManager {
public:

	bool bRouletteBasePressed; // 0x630(0x01)
	char pad_631[0x7]; // 0x631(0x07)
	struct ADFMGameState* DFMGameState; // 0x638(0x08)
	char pad_640[0x20]; // 0x640(0x20)

	void UpdateGameStateOnClientSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.DFMInputManager.UpdateGameStateOnClientSeamlessTravelEnd // (Final|Native|Private) // @ game+0x62d0210
	void SwitchRouletteInputState(bool bActivateRoulette); // Function DFMGameplay.DFMInputManager.SwitchRouletteInputState // (Native|Public) // @ game+0x62d0180
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BaseKeySettingManager
// Size: 0x1c8 (Inherited: 0x38)
class UBaseKeySettingManager : public UGameInstanceSubsystem {
public:

	/*struct FMulticastInlineDelegate*/char NotifyKeyMappingChanged[0x10]; // 0x38(0x10)
	/*struct FMulticastInlineDelegate*/char NotifyKeyMappingsFullUpdated[0x10]; // 0x48(0x10)
	/*struct FDelegate*/char NotifyInputManagerChangeFunctionMode[0x10]; // 0x58(0x10)
	bool bSettingTablesInitialized; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UInputSettings* InputSettings; // 0x70(0x08)
	struct TArray<struct FKeyMappingsDataTableRow> DefaultKMSettingRows; // 0x78(0x10)
	struct TArray<struct FKeyMappingsDataTableRow> CurKMSettingRows; // 0x88(0x10)
	struct TArray<struct FKeyMappingsDataTableRow> DefaultGamepadSettingRows; // 0x98(0x10)
	struct TArray<struct FKeyMappingsDataTableRow> CurGamepadSettingRows; // 0xa8(0x10)
	int32_t InputDeviceType_KM; // 0xb8(0x04)
	int32_t InputDeviceType_Gamepad; // 0xbc(0x04)
	int32_t UsingInputDeviceType; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TMap<uint64_t, struct FString> KMSettingDiffJsonStrHeroMap; // 0xc8(0x50)
	uint64_t CurHeroId; // 0x118(0x08)
	int32_t DevelopVersion; // 0x120(0x04)
	int32_t SavedVersion; // 0x124(0x04)
	struct TMap<struct FName, struct FKeyMappingsDataTableRow> KMSettingRowsDiffMap; // 0x128(0x50)
	struct TMap<struct FName, struct FKeyMappingsDataTableRow> GamepadSettingRowsDiffMap; // 0x178(0x50)

	void UpdateKeyMappingsDiffMap(); // Function DFMGameplay.BaseKeySettingManager.UpdateKeyMappingsDiffMap // (Final|Native|Private) // @ game+0x622bd60
	bool UpdateKeyMappingDiffRow(struct FName ActionOrAxisName); // Function DFMGameplay.BaseKeySettingManager.UpdateKeyMappingDiffRow // (Final|Native|Protected) // @ game+0x622bcd0
	void SwitchToDefaultKeyMapping(bool bUseDefault); // Function DFMGameplay.BaseKeySettingManager.SwitchToDefaultKeyMapping // (Final|Native|Public) // @ game+0x622bc40
	bool ShouldFunctionTriggered(/*struct FName ActionAxisName, struct APlayerController* InPlayerController, struct TSet<struct FKey> InKeySet*/); // Function DFMGameplay.BaseKeySettingManager.ShouldFunctionTriggered // (Final|Native|Public) // @ game+0x622baa0
	struct FString SettingRows2DiffJsonStr(struct TArray<struct FKeyMappingsDataTableRow>& InSettingRows); // Function DFMGameplay.BaseKeySettingManager.SettingRows2DiffJsonStr // (Final|Native|Protected|HasOutParms) // @ game+0x622b8f0
	bool SetFunctionProtected(struct FName ActionAxisName, bool InbProtected); // Function DFMGameplay.BaseKeySettingManager.SetFunctionProtected // (Final|Native|Public) // @ game+0x622b830
	bool SetFunctionMappingByRow_KeyboardMouse(struct FKeyMappingsDataTableRow NewRow, bool bCheckConflict); // Function DFMGameplay.BaseKeySettingManager.SetFunctionMappingByRow_KeyboardMouse // (Final|Native|Public) // @ game+0x622b6d0
	bool SetFunctionMappingByRow_Inner(struct FKeyMappingsDataTableRow NewRow, int32_t InputDeviceType, bool bCheckConflict, bool bCallFromApply, bool bCallFromLoadDiff); // Function DFMGameplay.BaseKeySettingManager.SetFunctionMappingByRow_Inner // (Final|Native|Protected) // @ game+0x622b4a0
	bool SetFunctionMappingByRow_Gamepad(struct FKeyMappingsDataTableRow NewRow); // Function DFMGameplay.BaseKeySettingManager.SetFunctionMappingByRow_Gamepad // (Final|Native|Public) // @ game+0x622b390
	struct FString SerializeCustomKeySetting(); // Function DFMGameplay.BaseKeySettingManager.SerializeCustomKeySetting // (Final|Native|Public) // @ game+0x622b310
	void SaveKeySetting(); // Function DFMGameplay.BaseKeySettingManager.SaveKeySetting // (Final|Native|Public) // @ game+0x622b2f0
	void SaveKeyMappings(); // Function DFMGameplay.BaseKeySettingManager.SaveKeyMappings // (Final|Native|Protected) // @ game+0x622b2d0
	void ResetKeySetting(struct TArray<int32_t> KeyFunctionTypeList); // Function DFMGameplay.BaseKeySettingManager.ResetKeySetting // (Final|Native|Public) // @ game+0x622b1b0
	void RemoveAxisKeyMapping(struct FInputAxisKeyMapping AxisMapping, bool bForceRebuildKeymaps); // Function DFMGameplay.BaseKeySettingManager.RemoveAxisKeyMapping // (Final|Native|Protected) // @ game+0x622b010
	void RemoveActionKeyMapping(struct FInputActionKeyMapping ActionMapping, bool bForceRebuildKeymaps); // Function DFMGameplay.BaseKeySettingManager.RemoveActionKeyMapping // (Final|Native|Protected) // @ game+0x622ae70
	bool RefreshDiffMapByHeroId(uint64_t InNewHeroId, bool bUpdateSaved, bool bApplyKeySettings); // Function DFMGameplay.BaseKeySettingManager.RefreshDiffMapByHeroId // (Final|Native|Private) // @ game+0x622abb0
	void ReceiveCustomKeySetting(struct FString Value); // Function DFMGameplay.BaseKeySettingManager.ReceiveCustomKeySetting // (Final|Native|Public) // @ game+0x622aa90
	void RebuildKeyMappings(); // Function DFMGameplay.BaseKeySettingManager.RebuildKeyMappings // (Final|Native|Protected) // @ game+0x622aa70
	void PreprocRows(); // Function DFMGameplay.BaseKeySettingManager.PreprocRows // (Native|Public) // @ game+0xaa2210
	void OnLeaveGameFlowStage(enum class EGameFlowStageType LeaveGameFlowStage); // Function DFMGameplay.BaseKeySettingManager.OnLeaveGameFlowStage // (Final|Native|Protected) // @ game+0x622a6a0
	void LoadKeyMappingsDiffMap(); // Function DFMGameplay.BaseKeySettingManager.LoadKeyMappingsDiffMap // (Final|Native|Private) // @ game+0x622a410
	bool IsTwoRowsPairedWrappedAction(struct FKeyMappingsDataTableRow Row1, struct FKeyMappingsDataTableRow Row2); // Function DFMGameplay.BaseKeySettingManager.IsTwoRowsPairedWrappedAction // (Final|Native|Public) // @ game+0x622a230
	bool IsGamepadKeySettingEnable(); // Function DFMGameplay.BaseKeySettingManager.IsGamepadKeySettingEnable // (Final|Native|Public) // @ game+0x622a200
	bool IsEnableFunctionBind(struct FKeyMappingsDataTableRow Row); // Function DFMGameplay.BaseKeySettingManager.IsEnableFunctionBind // (Final|Native|Public) // @ game+0x622a0f0
	void InitializeKeyInput(); // Function DFMGameplay.BaseKeySettingManager.InitializeKeyInput // (Native|Public) // @ game+0x924260
	void InitializeFunctionMode(); // Function DFMGameplay.BaseKeySettingManager.InitializeFunctionMode // (Final|Native|Public) // @ game+0x622a0d0
	void InitDefaultSettingTable(); // Function DFMGameplay.BaseKeySettingManager.InitDefaultSettingTable // (Native|Protected) // @ game+0x895980
	void InitCurSettingTable(); // Function DFMGameplay.BaseKeySettingManager.InitCurSettingTable // (Final|Native|Protected) // @ game+0x622a0b0
	bool HasKeyMappingDiff(struct FName ActionName); // Function DFMGameplay.BaseKeySettingManager.HasKeyMappingDiff // (Final|Native|Public) // @ game+0x622a020
	struct TArray<struct FKey> STATIC_GetValidKeysFromSettingRow(struct FKeyMappingsDataTableRow SettingRow, int32_t KeySN); // Function DFMGameplay.BaseKeySettingManager.GetValidKeysFromSettingRow // (Final|Native|Static|Protected) // @ game+0x6229df0
	struct TArray<struct FKeyMappingsDataTableRow> GetRowsByKey(struct TArray<bool> HasModifiedKeys, struct FKey Key); // Function DFMGameplay.BaseKeySettingManager.GetRowsByKey // (Final|Native|Public) // @ game+0x6229ba0
	struct TArray<struct FKeyMappingsDataTableRow> GetRowsByAnyConcernKey(struct FKey Key); // Function DFMGameplay.BaseKeySettingManager.GetRowsByAnyConcernKey // (Final|Native|Public) // @ game+0x6229a90
	struct FKeyMappingsDataTableRow GetRowByActionOrAxisName(struct FName ActionOrAxisName, float AxisScale, bool bGetBinded); // Function DFMGameplay.BaseKeySettingManager.GetRowByActionOrAxisName // (Final|Native|Public) // @ game+0x6229690
	struct FText GetPossibleGamepadKeyName(struct FName ActionAxisName); // Function DFMGameplay.BaseKeySettingManager.GetPossibleGamepadKeyName // (Final|Native|Public) // @ game+0x62295b0
	struct FKeyMappingsDataTableRow GetImportantFunctionRowByKey(struct FKey Key, struct TArray<bool> ModifierKeys); // Function DFMGameplay.BaseKeySettingManager.GetImportantFunctionRowByKey // (Final|Native|Public) // @ game+0x6228bc0
	struct TArray<struct FKeyMappingsDataTableRow> GetDefaultSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetDefaultSettingTable // (Final|Native|Public) // @ game+0x6228b70
	struct TArray<struct FKeyMappingsDataTableRow> GetDefaultKMSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetDefaultKMSettingTable // (Final|Native|Public) // @ game+0x6228b20
	struct TArray<struct FKeyMappingsDataTableRow> GetDefaultGamepadSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetDefaultGamepadSettingTable // (Final|Native|Public) // @ game+0x6228ad0
	struct TArray<struct FKeyMappingsDataTableRow> GetCurSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetCurSettingTable // (Final|Native|Public) // @ game+0x6228a80
	struct TArray<struct FKeyMappingsDataTableRow> GetCurKMSettingTableFilterFunctionType(int32_t KeyFunctionType); // Function DFMGameplay.BaseKeySettingManager.GetCurKMSettingTableFilterFunctionType // (Final|Native|Public) // @ game+0x62289d0
	struct TArray<struct FKeyMappingsDataTableRow> GetCurKMSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetCurKMSettingTable // (Final|Native|Public) // @ game+0x6228980
	struct TArray<struct FKeyMappingsDataTableRow> GetCurGamepadSettingTable(); // Function DFMGameplay.BaseKeySettingManager.GetCurGamepadSettingTable // (Final|Native|Public) // @ game+0x6228930
	struct TArray<struct FKeyMappingsDataTableRow> GetConflictFunctionRow(struct FKeyMappingsDataTableRow NewRow, int32_t& ConflictRowKeySN); // Function DFMGameplay.BaseKeySettingManager.GetConflictFunctionRow // (Final|Native|Public|HasOutParms) // @ game+0x62287b0
	struct TArray<struct FKeyMappingsDataTableRow> GetBinderRowsByActionOrAxisName(struct FName ActionOrAxisName, enum class EKeyFunctionBindType KeyFunctionBindType); // Function DFMGameplay.BaseKeySettingManager.GetBinderRowsByActionOrAxisName // (Final|Native|Public) // @ game+0x62286d0
	void GetAxisNames(struct TArray<struct FName>& AxisNames); // Function DFMGameplay.BaseKeySettingManager.GetAxisNames // (Final|Native|Protected|HasOutParms) // @ game+0x6228600
	struct TArray<struct FInputAxisKeyMapping> GetAxisKeyMappingByAxisName(struct FName InAxisName, float Scale, int32_t InputDeviceType); // Function DFMGameplay.BaseKeySettingManager.GetAxisKeyMappingByAxisName // (Final|Native|Protected) // @ game+0x62284d0
	void GetActionNames(struct TArray<struct FName>& ActionNames); // Function DFMGameplay.BaseKeySettingManager.GetActionNames // (Final|Native|Protected|HasOutParms) // @ game+0x6228400
	struct TArray<struct FInputActionKeyMapping> GetActionKeyMappingByActionName(struct FName InActionName, int32_t InputDeviceType); // Function DFMGameplay.BaseKeySettingManager.GetActionKeyMappingByActionName // (Final|Native|Protected) // @ game+0x6228320
	void EnableGamepadKeySetting(bool bEnable); // Function DFMGameplay.BaseKeySettingManager.EnableGamepadKeySetting // (Final|Native|Public) // @ game+0x6228090
	struct TArray<struct FKeyMappingsDataTableRow> DiffJsonStr2SettingRows(struct FString InJsonDiffStr); // Function DFMGameplay.BaseKeySettingManager.DiffJsonStr2SettingRows // (Final|Native|Protected) // @ game+0x6227f40
	void ClearKeyMappingsDiffMap(); // Function DFMGameplay.BaseKeySettingManager.ClearKeyMappingsDiffMap // (Final|Native|Private) // @ game+0x6227f20
	void ClearKeyMappings(); // Function DFMGameplay.BaseKeySettingManager.ClearKeyMappings // (Final|Native|Protected) // @ game+0x6227f00
	struct TArray<struct FInputAxisKeyMapping> ClearAxisKeyMappingsByAxisName(struct FName AxisName, float Scale, int32_t InputDeviceType); // Function DFMGameplay.BaseKeySettingManager.ClearAxisKeyMappingsByAxisName // (Final|Native|Protected) // @ game+0x6227dd0
	struct TArray<struct FInputActionKeyMapping> ClearActionKeyMappingsByActionName(struct FName ActionName, int32_t InputDeviceType); // Function DFMGameplay.BaseKeySettingManager.ClearActionKeyMappingsByActionName // (Final|Native|Protected) // @ game+0x6227cf0
	bool ChangeFunctionMode(struct FName ActionAxisName, enum class EKeyActionLogic TargetFunctionMode, struct FString ExtraParam); // Function DFMGameplay.BaseKeySettingManager.ChangeFunctionMode // (Native|Public) // @ game+0x6227aa0
	void ApplyKeySetting(struct TArray<struct FKeyMappingsDataTableRow> SettingTable); // Function DFMGameplay.BaseKeySettingManager.ApplyKeySetting // (Native|Protected) // @ game+0x62278d0
	void ApplyFunctionMode(struct TArray<struct FKeyMappingsDataTableRow> SettingTable, struct FString ExtraParam); // Function DFMGameplay.BaseKeySettingManager.ApplyFunctionMode // (Final|Native|Protected) // @ game+0x6227660
	void AddAxisKeyMapping(struct FName AxisName, struct FKey Key, float Scale, bool bForceRebuildKeymaps); // Function DFMGameplay.BaseKeySettingManager.AddAxisKeyMapping // (Final|Native|Protected) // @ game+0x62274d0
	void AddActionKeyMapping(struct FName ActionName, struct TArray<bool> HasModifiedKeys, struct FKey Key, bool bForceRebuildKeymaps); // Function DFMGameplay.BaseKeySettingManager.AddActionKeyMapping // (Final|Native|Protected) // @ game+0x62272b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableComponentBase
// Size: 0x5e0 (Inherited: 0x100)
class UDFInteractableComponentBase : public UActorComponent {
public:

	struct FGameplayTagContainer InteractableTags; // 0x100(0x20)
	enum class EInteractorType InteractableType; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	struct FVector InteractPointOffset; // 0x124(0x0c)
	float DSCheckPlayerInRangeScale; // 0x130(0x04)
	bool bUseDSCheckPlayerState; // 0x134(0x01)
	bool bUseDSCheckCurrentCanOperate; // 0x135(0x01)
	bool bUseClientCheckCurrentCanOperate; // 0x136(0x01)
	bool bUseDSCheckPlayerInRange; // 0x137(0x01)
	bool bUseDSCheckPlayerPassFilterCollision; // 0x138(0x01)
	enum class EInteractorBlockCheckType BlockCheckType; // 0x139(0x01)
	char pad_13A[0x6]; // 0x13a(0x06)
	struct FText InteractableCompName; // 0x140(0x18)
	struct TMap<struct FGameplayTag, struct FInteractableCompAcquireForbidInfo> Tag2AcquireForbidInfo; // 0x158(0x50)
	struct TMap<struct FGameplayTag, struct FInteractableCompConditionInfo> Tag2ConditionInfo; // 0x1a8(0x50)
	struct FName InteractableCompProxyName; // 0x1f8(0x08)
	struct UDFInteractableCompProxy* InteractableCompProxy; // 0x200(0x08)
	char pad_208[0x8]; // 0x208(0x08)
	struct AActor* CachedOwner; // 0x210(0x08)
	struct TArray<struct AActor*> CachedOwnerAllChildActors; // 0x218(0x10)
	char pad_228[0x8]; // 0x228(0x08)
	struct USceneComponent* CachedInteractPointComp; // 0x230(0x08)
	struct FName InteractPointName; // 0x238(0x08)
	struct TArray<struct UBoxComponent*> CachedAimedBoxComponents; // 0x240(0x10)
	struct TArray<struct UMeshComponent*> CachedAimedMeshComponents; // 0x250(0x10)
	bool bActive_HD; // 0x260(0x01)
	bool bEnable_HD; // 0x261(0x01)
	bool bIsNeedHUDFixedPos_HD; // 0x262(0x01)
	bool bIsNeedCheckAllowShowWidget_HD; // 0x263(0x01)
	bool bIsNeedFilterCollision_HD; // 0x264(0x01)
	bool bIsTagNumOverTwo_HD; // 0x265(0x01)
	enum class EInteractorPriority InteractorPriority_HD; // 0x266(0x01)
	bool bIsNeedFilterPre_HD; // 0x267(0x01)
	bool bIsNeedFilter3C_HD; // 0x268(0x01)
	bool bIsNeedShowWhiteDot_HD; // 0x269(0x01)
	bool bUseAimedBoxFilterWhiteDotDir_HD; // 0x26a(0x01)
	char pad_26B[0x1]; // 0x26b(0x01)
	float DetectShowWhiteDotHorizontalAngle_HD; // 0x26c(0x04)
	float DetectShowWhiteDotVerticalAngle_HD; // 0x270(0x04)
	float DetectShowWhiteDotMinRadius_HD; // 0x274(0x04)
	float DetectShowWhiteDotMaxRadius_HD; // 0x278(0x04)
	bool bIsNeedShowOutline_HD; // 0x27c(0x01)
	bool bUseAimedBoxFilterOutlineDir_HD; // 0x27d(0x01)
	char pad_27E[0x2]; // 0x27e(0x02)
	float DetectShowOutlineHorizontalAngle_HD; // 0x280(0x04)
	float DetectShowOutlineVerticalAngle_HD; // 0x284(0x04)
	float DetectShowOutlineMinRadius_HD; // 0x288(0x04)
	float DetectShowOutlineMaxRadius_HD; // 0x28c(0x04)
	float DetectShowHUDMinRadius_HD; // 0x290(0x04)
	float DetectShowHUDMaxRadius_HD; // 0x294(0x04)
	struct FName DetectShowHUDBoxCompName_HD; // 0x298(0x08)
	float DetectShowHUDHorizontalAngle_HD; // 0x2a0(0x04)
	float DetectShowHUDVerticalAngle_HD; // 0x2a4(0x04)
	bool bIsNeedInteractPointForward_HD; // 0x2a8(0x01)
	bool bUseAimedBoxFilterHUDDir_HD; // 0x2a9(0x01)
	bool bUseBoxFilterHUDRange_HD; // 0x2aa(0x01)
	bool bUseBoxOverlapForFilterHUDRange_HD; // 0x2ab(0x01)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TArray<struct FName> DetectAimedBoxCompNames_HD; // 0x2b0(0x10)
	struct TArray<struct FName> DetectAimedMeshCompNames_HD; // 0x2c0(0x10)
	bool bIsNeedGather_HD; // 0x2d0(0x01)
	enum class EInteractorHUDType HUDType_HD; // 0x2d1(0x01)
	bool bIsNeedShowToButton_HD; // 0x2d2(0x01)
	char pad_2D3[0x5]; // 0x2d3(0x05)
	struct TMap<struct FGameplayTag, struct FText> CustomButtonTitleMap_HD; // 0x2d8(0x50)
	bool bCanJump_HD; // 0x328(0x01)
	bool bIgnoreCollisionWhenPassShowHUD_HD; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct TArray<enum class EFSMForbidReason> Whitelist_HD; // 0x330(0x10)
	struct UBoxComponent* CachedDetectShowHUDBox_HD; // 0x340(0x08)
	char pad_348[0x1c]; // 0x348(0x1c)
	float CachedFilterCollisionInterval_HD; // 0x364(0x04)
	char pad_368[0x10]; // 0x368(0x10)
	float CachedScreenPosInterval_HD; // 0x378(0x04)
	char pad_37C[0x14]; // 0x37c(0x14)
	bool bActive_Mobile; // 0x390(0x01)
	bool bEnable_Mobile; // 0x391(0x01)
	bool bIsNeedCheckAllowShowWidget_Mobile; // 0x392(0x01)
	bool bIsNeedFilterCollision_Mobile; // 0x393(0x01)
	enum class EInteractorPriority InteractorPriority_Mobile; // 0x394(0x01)
	bool bIsNeedFilterPre_Mobile; // 0x395(0x01)
	bool bIsNeedFilter3C_Mobile; // 0x396(0x01)
	bool bIsNeedShowWhiteDot_Mobile; // 0x397(0x01)
	bool bUseAimedBoxFilterWhiteDotDir_Mobile; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	float DetectShowWhiteDotHorizontalAngle_Mobile; // 0x39c(0x04)
	float DetectShowWhiteDotVerticalAngle_Mobile; // 0x3a0(0x04)
	float DetectShowWhiteDotMinRadius_Mobile; // 0x3a4(0x04)
	float DetectShowWhiteDotMaxRadius_Mobile; // 0x3a8(0x04)
	bool bIsNeedShowOutline_Mobile; // 0x3ac(0x01)
	bool bUseAimedBoxFilterOutlineDir_Mobile; // 0x3ad(0x01)
	char pad_3AE[0x2]; // 0x3ae(0x02)
	float DetectShowOutlineHorizontalAngle_Mobile; // 0x3b0(0x04)
	float DetectShowOutlineVerticalAngle_Mobile; // 0x3b4(0x04)
	float DetectShowOutlineMinRadius_Mobile; // 0x3b8(0x04)
	float DetectShowOutlineMaxRadius_Mobile; // 0x3bc(0x04)
	float DetectShowHUDMinRadius_Mobile; // 0x3c0(0x04)
	float DetectShowHUDMaxRadius_Mobile; // 0x3c4(0x04)
	struct FName DetectShowHUDBoxCompName_Mobile; // 0x3c8(0x08)
	float DetectShowHUDHorizontalAngle_Mobile; // 0x3d0(0x04)
	float DetectShowHUDVerticalAngle_Mobile; // 0x3d4(0x04)
	bool bIsNeedInteractPointForward_Mobile; // 0x3d8(0x01)
	bool bUseAimedBoxFilterHUDDir_Mobile; // 0x3d9(0x01)
	bool bUseBoxFilterHUDRange_Mobile; // 0x3da(0x01)
	bool bUseBoxOverlapForFilterHUDRange_Mobile; // 0x3db(0x01)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct TArray<struct FName> DetectAimedBoxCompNames_Mobile; // 0x3e0(0x10)
	struct TArray<struct FName> DetectAimedMeshCompNames_Mobile; // 0x3f0(0x10)
	bool bIsNeedGather_Mobile; // 0x400(0x01)
	enum class EInteractorHUDType HUDType_Mobile; // 0x401(0x01)
	bool bIsNeedShowToButton_Mobile; // 0x402(0x01)
	char pad_403[0x5]; // 0x403(0x05)
	/*struct TMap<struct FGameplayTag, struct TSoftObjectPtr<UObject>>*/char CustomButtonSoftIconMap_Mobile[0x50]; // 0x408(0x50)
	struct TMap<struct FGameplayTag, struct FText> CustomButtonTitleMap_Mobile; // 0x458(0x50)
	bool bCanJump_Mobile; // 0x4a8(0x01)
	bool bIgnoreCollisionWhenPassShowHUD_Mobile; // 0x4a9(0x01)
	char pad_4AA[0x6]; // 0x4aa(0x06)
	struct TArray<enum class EFSMForbidReason> Whitelist_Mobile; // 0x4b0(0x10)
	struct UBoxComponent* CachedDetectShowHUDBox_Mobile; // 0x4c0(0x08)
	char pad_4C8[0x1c]; // 0x4c8(0x1c)
	float CachedFilterCollisionInterval_Mobile; // 0x4e4(0x04)
	char pad_4E8[0x10]; // 0x4e8(0x10)
	float CachedScreenPosInterval_Mobile; // 0x4f8(0x04)
	char pad_4FC[0x1c]; // 0x4fc(0x1c)
	struct TMap<struct FGameplayTag, struct UInteractorOptProcessComponent*> Tag2OptProcessMap; // 0x518(0x50)
	struct TMap<struct FGameplayTag, struct FName> Tag2OptProcessNameMap; // 0x568(0x50)
	struct TArray<struct UInteractorOptProcessComponent*> OptProcessComponents; // 0x5b8(0x10)
	struct TArray<struct UInteractorOptExecuteComponent*> OptExecuteComponents; // 0x5c8(0x10)
	char pad_5D8[0x8]; // 0x5d8(0x08)

	void OnDetectValidSystem(); // Function DFMGameplay.DFInteractableComponentBase.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x622e150
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableCompProxy
// Size: 0x128 (Inherited: 0x100)
class UDFInteractableCompProxy : public UActorComponent {
public:

	struct ACHARACTER* CachedCharacter; // 0x100(0x08)
	struct AActor* CachedInteractableCompOwner; // 0x108(0x08)
	struct UDFInteractableComponentBase* CachedInteractableComp; // 0x110(0x08)
	struct FGameplayTag CachedTag; // 0x118(0x08)
	struct AActor* CachedOwner; // 0x120(0x08)

	bool ServerCheck(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.ServerCheck // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622e520
	void OnServerExecute(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.OnServerExecute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622e330
	void OnLocalExecute(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.OnLocalExecute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622e1f0
	bool IsShowableTag(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.IsShowableTag // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622dfd0
	bool IsEnable_Mobile(struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.IsEnable_Mobile // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622dde0
	bool IsEnable_HD(struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.IsEnable_HD // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622dd10
	bool IsCanInteract(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.IsCanInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622dbc0
	struct FGameplayTagContainer GetAllActiveTags(struct ACHARACTER* InOperatorCharacter, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.GetAllActiveTags // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622d920
	bool ClientCheck(struct ACHARACTER* InOperatorCharacter, struct FGameplayTag InTag, struct AActor* InInteractableCompOwner, struct UDFInteractableComponentBase* InInteractableComp); // Function DFMGameplay.DFInteractableCompProxy.ClientCheck // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x622d6f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterMovementComponent
// Size: 0x1180 (Inherited: 0xf80)
class UDFMCharacterMovementComponent : public UGPCharacterMovementComponent {
public:

	char pad_F80[0x10]; // 0xf80(0x10)
	struct ADFMCharacter* DFMCharacterOwner; // 0xf90(0x08)
	char pad_F98[0xa0]; // 0xf98(0xa0)
	struct FVector LastStartFallingPosition; // 0x1038(0x0c)
	char pad_1044[0xcc]; // 0x1044(0xcc)
	struct UCurveFloat* BrakingDistanceMatchingCurveF; // 0x1110(0x08)
	char pad_1118[0x8]; // 0x1118(0x08)
	struct UCharacterStaggerComponent* StaggerComponent; // 0x1120(0x08)
	struct UDFMPlayerDataAnalysisComponent* PlayerDataAnalysisComponent; // 0x1128(0x08)
	float InteractMoveApplyPawnPulse; // 0x1130(0x04)
	float InteractMoveeration; // 0x1134(0x04)
	char pad_1138[0x48]; // 0x1138(0x48)

	void OnRecordStateChange(enum class EFSMCharacterState CharacterState); // Function DFMGameplay.DFMCharacterMovementComponent.OnRecordStateChange // (Final|Native|Protected) // @ game+0x6285e90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_SimpleDecoratorBase
// Size: 0x70 (Inherited: 0x70)
class UDFMAIDecorator_SimpleDecoratorBase : public UBTDecorator {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDiffcultyComponent
// Size: 0x7e8 (Inherited: 0x100)
class UDFMAIDiffcultyComponent : public UActorComponent {
public:

	struct TArray<struct FWeaponDistHitCurveScale> WeaponDistHitScales; // 0x100(0x10)
	bool bUseFakeRandom; // 0x110(0x01)
	char pad_111[0xf]; // 0x111(0x0f)
	struct FAICharacterDifficulty DifficultyConf; // 0x120(0x488)
	struct FAISenseDifficulty SenseConf; // 0x5a8(0xc8)
	char pad_670[0x10]; // 0x670(0x10)
	struct FAIHitPart HitPartConf; // 0x680(0x28)
	char pad_6A8[0x68]; // 0x6a8(0x68)
	struct UDataTable* AITraceTemplateConf; // 0x710(0x08)
	char pad_718[0x18]; // 0x718(0x18)
	struct ADFMCharacter* CacheCharacter; // 0x730(0x08)
	char pad_738[0x35]; // 0x738(0x35)
	bool bDelayedDistributionOfEquip; // 0x76d(0x01)
	char pad_76E[0x2]; // 0x76e(0x02)
	uint64_t DistributionOfEquipFrame; // 0x770(0x08)
	struct FSpawnBaseAIInfo CurrentAIInfo; // 0x778(0x30)
	bool bInitEquipItem; // 0x7a8(0x01)
	char pad_7A9[0x7]; // 0x7a9(0x07)
	struct FTimerHandle DalayDeliveryHandle; // 0x7b0(0x08)
	/*struct TScriptInterface<IWeaponInterface>*/char NewWeapon[0x10]; // 0x7b8(0x10)
	char pad_7C8[0x20]; // 0x7c8(0x20)

	void SetGameDiffculty(int32_t AILevel); // Function DFMGameplay.DFMAIDiffcultyComponent.SetGameDiffculty // (Final|Native|Public|BlueprintCallable) // @ game+0x6244d40
	void SetForceHitRateOverride(bool useForceHitRate, float forceHitrate); // Function DFMGameplay.DFMAIDiffcultyComponent.SetForceHitRateOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x6244c80
	void SetAIThrowSmokeBombCooldown(); // Function DFMGameplay.DFMAIDiffcultyComponent.SetAIThrowSmokeBombCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x6244c60
	void SetAIThrowGrenadeCooldown(); // Function DFMGameplay.DFMAIDiffcultyComponent.SetAIThrowGrenadeCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x6244c40
	void SetAIThrowFlashBangCooldown(); // Function DFMGameplay.DFMAIDiffcultyComponent.SetAIThrowFlashBangCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x6244c20
	void STATIC_RandomDifficultyItem(struct UObject* WorldContextObject, struct FSpawnBaseAIInfo& AIInfo, int32_t RoomId); // Function DFMGameplay.DFMAIDiffcultyComponent.RandomDifficultyItem // (Final|Native|Static|Public|HasOutParms) // @ game+0x6244950
	void OnAIMakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMAIDiffcultyComponent.OnAIMakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x62447e0
	void GiveDifficultyItem(struct FSpawnBaseAIInfo& AIInfo); // Function DFMGameplay.DFMAIDiffcultyComponent.GiveDifficultyItem // (Final|Native|Public|HasOutParms) // @ game+0x6244640
	struct TArray<struct FAISightTraceTemplate> GetTargetTemplate(struct ADFMCharacter* OtherChar); // Function DFMGameplay.DFMAIDiffcultyComponent.GetTargetTemplate // (Final|Native|Public|Const) // @ game+0x62443f0
	float GetSupFireBroadcastTime(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetSupFireBroadcastTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62443c0
	bool GetSideRushingProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetSideRushingProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62442e0
	struct FSpawnAIRandomInfo STATIC_GetRandomSeed(struct UObject* WorldContextObject, struct FSpawnBaseAIInfo& AIInfo, int32_t RoomId); // Function DFMGameplay.DFMAIDiffcultyComponent.GetRandomSeed // (Final|Native|Static|Public|HasOutParms) // @ game+0x6244130
	bool GetMeleeAttackProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetMeleeAttackProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243bd0
	float GetInitFightShootingProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetInitFightShootingProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243ad0
	float GetInitFightShootDirectionAngle(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetInitFightShootDirectionAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243aa0
	float GetInitFightExposedArea(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetInitFightExposedArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243a70
	float GetFightBroadcastTime(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetFightBroadcastTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243860
	bool GetCoverSlidingProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCoverSlidingProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62432b0
	bool GetCoverShootingProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCoverShootingProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243280
	bool GetCoverRollingProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCoverRollingProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243250
	bool GetCoverEnteringProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCoverEnteringProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243220
	float GetCover_PeekWeight(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCover_PeekWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243360
	float GetCover_LyingBlindFireWeight(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCover_LyingBlindFireWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243340
	float GetCover_LeanFireWeight(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCover_LeanFireWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243320
	float GetCover_FullExposePWeight(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCover_FullExposePWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243300
	float GetCover_BlindFireWeight(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetCover_BlindFireWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62432e0
	float GetAlertToFightTime(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetAlertToFightTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62431f0
	float GetAlertToFightAccumulator(struct ACHARACTER* Target); // Function DFMGameplay.DFMAIDiffcultyComponent.GetAlertToFightAccumulator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243150
	bool GetAIThrowSmokeBombProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetAIThrowSmokeBombProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243080
	bool GetAIThrowGrenadeProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetAIThrowGrenadeProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243050
	bool GetAIThrowFlashBangProbability(); // Function DFMGameplay.DFMAIDiffcultyComponent.GetAIThrowFlashBangProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6243020
	void DynmiaChangeAIVisionCone(); // Function DFMGameplay.DFMAIDiffcultyComponent.DynmiaChangeAIVisionCone // (Final|Native|Public|BlueprintCallable) // @ game+0x6242ea0
	void DynamicChangeDiffculty(float Score); // Function DFMGameplay.DFMAIDiffcultyComponent.DynamicChangeDiffculty // (Final|Native|Public|BlueprintCallable) // @ game+0x6242e20
	void ChangeTargetWeapon(); // Function DFMGameplay.DFMAIDiffcultyComponent.ChangeTargetWeapon // (Final|Native|Public) // @ game+0x6242b00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIFlameChainComponent
// Size: 0x180 (Inherited: 0x100)
class UDFMAIFlameChainComponent : public UActorComponent {
public:

	char pad_100[0x18]; // 0x100(0x18)
	struct USkeletalMeshComponent* FlameChainMain; // 0x118(0x08)
	struct UFXResourceContainerComponent* FlameChainTailFX; // 0x120(0x08)
	char pad_128[0x4]; // 0x128(0x04)
	struct FName FlameChainHeadFXResourceId; // 0x12c(0x08)
	struct FName FlameChainTailFXResourceId; // 0x134(0x08)
	float FlameChainLengthDelta; // 0x13c(0x04)
	float FlameChainFadeOutDelta; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct UClass* DamageGE; // 0x148(0x08)
	float FlameChainLength; // 0x150(0x04)
	bool bIsFiringFlame; // 0x154(0x01)
	char pad_155[0xb]; // 0x155(0x0b)
	/*struct FMulticastInlineDelegate*/char OnStartFiringFlame[0x10]; // 0x160(0x10)
	/*struct FMulticastInlineDelegate*/char OnStopFiringFlame[0x10]; // 0x170(0x10)

	void StopFiringFlame(); // Function DFMGameplay.DFMAIFlameChainComponent.StopFiringFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x62489e0
	void SetupFlameChainComponents(struct USkeletalMeshComponent* ChainMain); // Function DFMGameplay.DFMAIFlameChainComponent.SetupFlameChainComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x6248890
	void OnRep_IsFiringFlame(); // Function DFMGameplay.DFMAIFlameChainComponent.OnRep_IsFiringFlame // (Final|Native|Private) // @ game+0x6248540
	bool FiringFlame(); // Function DFMGameplay.DFMAIFlameChainComponent.FiringFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x6247680
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIInteractActionBase
// Size: 0x58 (Inherited: 0x30)
class UDFMAIInteractActionBase : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)
	struct ADFMAICharacter* OwnerChara; // 0x38(0x08)
	char pad_40[0x10]; // 0x40(0x10)
	bool bMoveFlying; // 0x50(0x01)
	bool bSmoothCorrection; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)

	void StartingInteraction(float DeltaTime); // Function DFMGameplay.DFMAIInteractActionBase.StartingInteraction // (Native|Event|Protected|BlueprintEvent) // @ game+0x624ce60
	void PreStartInteraction(float DeltaTime); // Function DFMGameplay.DFMAIInteractActionBase.PreStartInteraction // (Native|Event|Protected|BlueprintEvent) // @ game+0x624c650
	void Interacting(float DeltaTime); // Function DFMGameplay.DFMAIInteractActionBase.Interacting // (Native|Event|Protected|BlueprintEvent) // @ game+0xaa2310
	void FinishInteractAction(bool bSucceed); // Function DFMGameplay.DFMAIInteractActionBase.FinishInteractAction // (Native|Event|Public|BlueprintEvent) // @ game+0x624b450
	void EndingInteraction(float DeltaTime); // Function DFMGameplay.DFMAIInteractActionBase.EndingInteraction // (Native|Event|Protected|BlueprintEvent) // @ game+0x624b3d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIPathFollowComponent
// Size: 0x3ac (Inherited: 0x2e8)
class UDFMAIPathFollowComponent : public UCrowdFollowingComponent {
public:

	char pad_2E8[0x20]; // 0x2e8(0x20)
	bool bIsOpenStuckDetection; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	float StuckToleranceSeconds; // 0x30c(0x04)
	float StuckToleranceDistance; // 0x310(0x04)
	char pad_314[0x24]; // 0x314(0x24)
	bool bDecelerationArriveGoal; // 0x338(0x01)
	char pad_339[0x3]; // 0x339(0x03)
	float SlowRadius; // 0x33c(0x04)
	bool bDrawDebug; // 0x340(0x01)
	char pad_341[0x47]; // 0x341(0x47)
	struct ADFMAIController* AIController; // 0x388(0x08)
	struct UDFMAICharacterMovementComponent* AIMovementComponent; // 0x390(0x08)
	struct UMotionAction* CurrentMotionAction; // 0x398(0x08)
	char pad_3A0[0xc]; // 0x3a0(0x0c)

	int32_t STATIC_GlobalCalcCoverSegmentAround(struct UObject* WorldContext, struct ADFMAIController* AIController, struct FVector& CurrentLocation, struct FVector& enemyLocation, struct AActor* EnemyActor, float coverDist, float coverLength, int32_t coverMask, bool enableDebugDraw, struct TArray<struct FAICoverSegmentResult>& Result); // Function DFMGameplay.DFMAIPathFollowComponent.GlobalCalcCoverSegmentAround // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62515f0
	float GetPathPointDistance(struct FVector& cornerLocation); // Function DFMGameplay.DFMAIPathFollowComponent.GetPathPointDistance // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6251190
	bool GetNextCornerInCurrentPath(float maxAllowAngle, struct FVector& cornerLocation, float& cornerSegmentLength, float& remainPathLength); // Function DFMGameplay.DFMAIPathFollowComponent.GetNextCornerInCurrentPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6250fd0
	bool STATIC_FindAllCoverSegment(struct UWorld* World, struct FVector& CurrentLocation, float coverDist, float coverLength, struct TArray<struct FVector>& WallEdges); // Function DFMGameplay.DFMAIPathFollowComponent.FindAllCoverSegment // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6250290
	bool CalcSlipCoverSegmentAround(struct FVector& CurrentLocation, struct FVector& enemyLocation, struct AActor* EnemyActor, float coverDist, float coverLength, float entryLength, float entryAngle, struct UClass* FilterClass, bool enableDebugDraw, struct FVector& CoverLocation, struct FVector& coverEntry, struct FVector& CoverDirection); // Function DFMGameplay.DFMAIPathFollowComponent.CalcSlipCoverSegmentAround // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x624fb60
	struct FVector CalcPathfindingResult(struct FVector& StartLocation, struct FVector& EndLocation, float minAlpha, float maxAlpha, bool absLength, bool NotClingPlayer, float MinLimitDist, float MaxLimitDist, struct UClass* FilterClass); // Function DFMGameplay.DFMAIPathFollowComponent.CalcPathfindingResult // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x624f890
	float CalcPathfindingLength(struct FVector& StartLocation, struct FVector& EndLocation, struct UClass* FilterClass, struct FVector& finalLocation); // Function DFMGameplay.DFMAIPathFollowComponent.CalcPathfindingLength // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x624f700
	bool CalcCurrentLocationCover(struct FVector& CurrentLocation, struct FVector& enemyLocation, struct AActor* EnemyActor, float coverDist, float shootDist, struct FVector& wallLocation, bool& faceDirection); // Function DFMGameplay.DFMAIPathFollowComponent.CalcCurrentLocationCover // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x624f4b0
	int32_t CalcCoverSegmentAround(struct FVector& CurrentLocation, struct FVector& enemyLocation, struct AActor* EnemyActor, float coverDist, float coverLength, int32_t coverMask, bool enableDebugDraw, struct TArray<struct FAICoverSegmentResult>& Result); // Function DFMGameplay.DFMAIPathFollowComponent.CalcCoverSegmentAround // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x624f1f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIThreatRecordComponent
// Size: 0x570 (Inherited: 0x208)
class UDFMAIThreatRecordComponent : public UAIThreatRecordComponent {
public:

	struct TMap<struct TWeakObjectPtr<struct ACHARACTER>, struct FAIThreatCharacterDetailRecord> ThreatDetailRecordMap; // 0x208(0x50)
	char pad_258[0x2b8]; // 0x258(0x2b8)
	struct TArray<struct FAIThreatDetailInfo> ThreatDetailConfig; // 0x510(0x10)
	float VisibleRemoveTime; // 0x520(0x04)
	float SpecialGunSoundDistance; // 0x524(0x04)
	float SpecialGunSoundDelay; // 0x528(0x04)
	float TargetCloseByNearest; // 0x52c(0x04)
	float TargetCloseByFarrest; // 0x530(0x04)
	float TargetCloseByCooldown; // 0x534(0x04)
	float TargetFiringThreatValue; // 0x538(0x04)
	float TargetFiringCooldown; // 0x53c(0x04)
	float GlobalVisibleProctectTime; // 0x540(0x04)
	float CharacterVisibleProtectTime; // 0x544(0x04)
	char pad_548[0x28]; // 0x548(0x28)

	void UpdateThreatAlertLocation(struct ACHARACTER* CHARACTER, float TimeRange, float protectRange); // Function DFMGameplay.DFMAIThreatRecordComponent.UpdateThreatAlertLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x62696a0
	void UpdateHistoryLocationRightNow(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.UpdateHistoryLocationRightNow // (Final|Native|Public|BlueprintCallable) // @ game+0x6269620
	void UpdateHistoryLocationCondition(struct ACHARACTER* CHARACTER, float selfDistance, float botDistance); // Function DFMGameplay.DFMAIThreatRecordComponent.UpdateHistoryLocationCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x6269520
	void SetVisionAlertTarget(struct ACHARACTER* CHARACTER, bool DoFight); // Function DFMGameplay.DFMAIThreatRecordComponent.SetVisionAlertTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x6269450
	void SetVisionAlertEnable(bool IsEnable); // Function DFMGameplay.DFMAIThreatRecordComponent.SetVisionAlertEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x35d74c0
	void SetSenseFilterScaler(int64_t ExpertId, enum class EAIThreatDetailName Name, float scaler); // Function DFMGameplay.DFMAIThreatRecordComponent.SetSenseFilterScaler // (Final|Native|Public|BlueprintCallable) // @ game+0x6269350
	void SetIgnoreThreate(bool bIsIgnore); // Function DFMGameplay.DFMAIThreatRecordComponent.SetIgnoreThreate // (Final|Native|Public|BlueprintCallable) // @ game+0x62692c0
	void RegisterFakeThreat(struct ACHARACTER* CHARACTER, enum class EAIThreatDetailName Name); // Function DFMGameplay.DFMAIThreatRecordComponent.RegisterFakeThreat // (Final|Native|Public|BlueprintCallable) // @ game+0x6269200
	void ReceiveTimedHighestThreatWithinPrefecture(float Duration, float radius, struct TArray<enum class EAIThreatDetailName> InterestThreat); // Function DFMGameplay.DFMAIThreatRecordComponent.ReceiveTimedHighestThreatWithinPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x6269070
	void ReceiveStimulus(enum class EAIThreatDetailName Stimulus, struct ACHARACTER* threatRelatedCharacter, float overrideBaseValue); // Function DFMGameplay.DFMAIThreatRecordComponent.ReceiveStimulus // (Native|Public|BlueprintCallable) // @ game+0x6268f70
	int32_t QueryVisionConeIndex(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryVisionConeIndex // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6268ec0
	bool QueryThreatEvent(enum class EAIThreatEvent threatEvent, float Time, struct ACHARACTER*& CHARACTER, struct ACHARACTER*& Context); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryThreatEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6268d40
	float QueryTargetVisionVisibleRate(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryTargetVisionVisibleRate // (Final|Native|Public|BlueprintCallable) // @ game+0x6268ca0
	int32_t QueryTargetVisionConeIndex(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryTargetVisionConeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x6268c10
	bool QueryTargetFiring(struct ACHARACTER* CHARACTER, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryTargetFiring // (Final|Native|Public|BlueprintCallable) // @ game+0x6268b50
	float QuerySumupDamage(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.QuerySumupDamage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6268aa0
	bool QueryPlayerInView(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryPlayerInView // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62689f0
	struct FVector QueryHistoryThreatLocationEx(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryHistoryThreatLocationEx // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6268930
	struct FVector QueryHistoryThreatLocationDefault(struct ACHARACTER* CHARACTER, bool UseBlockCheck); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryHistoryThreatLocationDefault // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6268850
	struct FVector QueryHistoryThreatLocation(struct FAIThreatCharacterQueryDetail& QueryResult, bool UseBlockCheck, bool UpdateMainCache); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryHistoryThreatLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62686e0
	float QueryFirstThreatTimeByName(struct FAIThreatCharacterQueryDetail& QueryResult, enum class EAIThreatDetailName Name); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryFirstThreatTimeByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62685e0
	float QueryFirstThreatTimeByFlag(struct FAIThreatCharacterQueryDetail& QueryResult, enum class EAIThreatFlagName Flag); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryFirstThreatTimeByFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62684e0
	bool QueryCharacterVisibleByTime(struct ACHARACTER* CHARACTER, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryCharacterVisibleByTime // (Final|Native|Public|BlueprintCallable) // @ game+0x6268420
	bool QueryCharacterVisible(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryCharacterVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x6268390
	bool QueryAlertVisionByCharacter(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.QueryAlertVisionByCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x6268300
	void PopupFightState(struct ACHARACTER* CHARACTER, float Time, float Distance); // Function DFMGameplay.DFMAIThreatRecordComponent.PopupFightState // (Final|Native|Public|BlueprintCallable) // @ game+0x6268200
	void PopupAlertState(struct ACHARACTER* CHARACTER, bool FightStatus); // Function DFMGameplay.DFMAIThreatRecordComponent.PopupAlertState // (Final|Native|Public|BlueprintCallable) // @ game+0x6268130
	bool STATIC_PlayerAndAIThreatenRelationships(struct AAIController* AIController, struct ACHARACTER* Player, struct FCollectThreatsIntoCombat& EnterTheBattleData); // Function DFMGameplay.DFMAIThreatRecordComponent.PlayerAndAIThreatenRelationships // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x6268020
	void OnPlayerDied(struct AController* InPlayer); // Function DFMGameplay.DFMAIThreatRecordComponent.OnPlayerDied // (Final|Native|Protected) // @ game+0x6267fa0
	bool IsThreatFlagExist(enum class EAIThreatFlagName Flag, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsThreatFlagExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267ed0
	bool IsThreatExist(int32_t ThreatTypeBits, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsThreatExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267e10
	bool IsThreatEventExist(int32_t ThreatEventBits, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsThreatEventExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267d50
	bool IsThreatDetailExist(enum class EAIThreatDetailName detail, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsThreatDetailExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267c80
	bool IsReceivedBoardcast(float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsReceivedBoardcast // (Final|Native|Public|BlueprintCallable) // @ game+0x6267bf0
	bool IsOnlyThreatFlagExist(enum class EAIThreatFlagName Flag, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsOnlyThreatFlagExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267b20
	bool IsCharacterThreatExist(struct ACHARACTER* CHARACTER, enum class EAIThreatFlagName Flag, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsCharacterThreatExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267a20
	bool IsCharacterThreatDetailExist(struct ACHARACTER* CHARACTER, enum class EAIThreatDetailName detail, float Time); // Function DFMGameplay.DFMAIThreatRecordComponent.IsCharacterThreatDetailExist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267920
	struct FVector GetThrowableProjectileLocation(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.GetThrowableProjectileLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6267860
	struct FAIThreatDetailInfo GetThreatConfigByName(enum class EAIThreatDetailName Name); // Function DFMGameplay.DFMAIThreatRecordComponent.GetThreatConfigByName // (Final|Native|Public|BlueprintCallable) // @ game+0x6267790
	float GetThreatByName(struct FAIThreatCharacterQueryDetail& QueryResult, enum class EAIThreatDetailName Name); // Function DFMGameplay.DFMAIThreatRecordComponent.GetThreatByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6267690
	float GetThreatByFlag(struct FAIThreatCharacterQueryDetail& QueryResult, enum class EAIThreatFlagName Flag); // Function DFMGameplay.DFMAIThreatRecordComponent.GetThreatByFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6267590
	struct FAISpecialSenseQueue GetSpecialGunRecord(); // Function DFMGameplay.DFMAIThreatRecordComponent.GetSpecialGunRecord // (Final|Native|Public|BlueprintCallable) // @ game+0x6267550
	struct FAIThreatCharacterQueryDetail GetRecordOrder(bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x6267460
	struct FAIThreatCharacterQueryDetail GetRecordNew(bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordNew // (Final|Native|Public|BlueprintCallable) // @ game+0x6267370
	struct FAIThreatCharacterQueryDetail GetRecordByNamesOrder_Dist(struct TArray<enum class EAIThreatDetailName> Names, float dist2d, bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordByNamesOrder_Dist // (Final|Native|Public|BlueprintCallable) // @ game+0x6267180
	struct FAIThreatCharacterQueryDetail GetRecordByNameOrder(enum class EAIThreatDetailName Name, bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordByNameOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x6267040
	struct FAIThreatCharacterQueryDetail GetRecordByFlagOrder(enum class EAIThreatFlagName Flag, bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordByFlagOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x6266f00
	struct FAIThreatCharacterQueryDetail GetRecordByCharacterAndNameOrder(enum class EAIThreatDetailName Name, struct ACHARACTER* InCharacter, bool includeDeadCharacter, bool IncludeImpendingDeath); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordByCharacterAndNameOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x6266d80
	struct FAIThreatCharacterQueryDetail GetRecordByCharacter(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.GetRecordByCharacter // (Final|RequiredAPI|Native|Public|BlueprintCallable) // @ game+0x6266cd0
	struct FVector GetLastVisibleLocation(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.GetLastVisibleLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6266c10
	struct FVector GetLastThreatLocation(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.GetLastThreatLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6266b50
	struct FVector GetBulletImpactLocation(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.GetBulletImpactLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6266a90
	struct FVector GetAttractionLocation(struct FAIThreatCharacterQueryDetail& QueryResult); // Function DFMGameplay.DFMAIThreatRecordComponent.GetAttractionLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62669d0
	int32_t GetArrayNoFilter(struct TArray<struct ACHARACTER*>& Result, bool includeDeadCharacter, bool includeImpendingDeadCharacter, bool CheckAcceptable); // Function DFMGameplay.DFMAIThreatRecordComponent.GetArrayNoFilter // (Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6266800
	int32_t GetArrayByName(enum class EAIThreatDetailName Name, struct TArray<struct ACHARACTER*>& Result, bool includeDeadCharacter); // Function DFMGameplay.DFMAIThreatRecordComponent.GetArrayByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62666a0
	int32_t GetArrayByFlag(enum class EAIThreatFlagName Flag, struct TArray<struct ACHARACTER*>& Result, bool includeDeadCharacter); // Function DFMGameplay.DFMAIThreatRecordComponent.GetArrayByFlag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6266540
	void ForceUpdateTargets(bool AllowDead); // Function DFMGameplay.DFMAIThreatRecordComponent.ForceUpdateTargets // (Final|Native|Public|BlueprintCallable) // @ game+0x62664b0
	void ClearPopupFightStateList(); // Function DFMGameplay.DFMAIThreatRecordComponent.ClearPopupFightStateList // (Final|Native|Public|BlueprintCallable) // @ game+0x6266490
	void ClearAllThreatInfo(); // Function DFMGameplay.DFMAIThreatRecordComponent.ClearAllThreatInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x6266470
	void BoardcastThreatToSquadMember(); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatToSquadMember // (Final|Native|Public|BlueprintCallable) // @ game+0x6266450
	void BoardcastThreatRecordByTime(float Time, float radius, bool GroupOnly); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatRecordByTime // (Final|Native|Public|BlueprintCallable) // @ game+0x6266340
	void BoardcastThreatRecordByName(enum class EAIThreatDetailName Name, float radius, float Time, bool GroupOnly); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatRecordByName // (Final|Native|Public|BlueprintCallable) // @ game+0x62661f0
	void BoardcastThreatRecordByFlag(enum class EAIThreatFlagName Flag, float radius, float Time, bool GroupOnly); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatRecordByFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x62660a0
	void BoardcastThreatRecordByDifferentGroup(float Time, float radius); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatRecordByDifferentGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x6265fe0
	void BoardcastThreatRecordByCharacter(struct ACHARACTER* CHARACTER, float radius, bool GroupOnly); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatRecordByCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x6265ed0
	void BoardcastThreatEventByPrefecture(enum class EAIThreatEvent threatEvent, struct ACHARACTER* CHARACTER, float Delay); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatEventByPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x6265dd0
	void BoardcastThreatEventByAlertVolume(enum class EAIThreatEvent threatEvent, struct ACHARACTER* CHARACTER, float Delay); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatEventByAlertVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x6265cd0
	void BoardcastThreatEvent(enum class EAIThreatEvent threatEvent, struct ACHARACTER* CHARACTER, float radius, bool GroupOnly, bool VisibleOnly, bool SelfRecv, float Delay); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x6265ac0
	void BoardcastThreatByPrefecture(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMAIThreatRecordComponent.BoardcastThreatByPrefecture // (Final|Native|Public|BlueprintCallable) // @ game+0x6265a40
	bool STATIC_AddThreatRecord(struct AAIController* AIController, struct ACHARACTER* Player, enum class EAIThreatDetailName DetailName); // Function DFMGameplay.DFMAIThreatRecordComponent.AddThreatRecord // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6265950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PathMotionActionBase
// Size: 0x1a8 (Inherited: 0x30)
class UPathMotionActionBase : public UObject {
public:

	enum class EActionState State; // 0x30(0x01)
	char pad_31[0x57]; // 0x31(0x57)
	struct FMotionActionExecuteParam Param; // 0x88(0xf0)
	char pad_178[0x30]; // 0x178(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFireModeStingerMissile
// Size: 0x500 (Inherited: 0x4e8)
class UWeaponFireModeStingerMissile : public UWeaponFireModePhysicSimulate {
public:

	struct UWeaponFuncComponentStingerMissile* FuncStingerMissile; // 0x4e8(0x08)
	struct TWeakObjectPtr<struct AActor> AssignedHomingTarget; // 0x4f0(0x08)
	struct UWeaponFuncComponentLaserPointerReciver* FuncReciver; // 0x4f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_AdvancedMoveTo
// Size: 0x158 (Inherited: 0x78)
class UDFMAITask_AdvancedMoveTo : public UBTTaskNode {
public:

	struct FBlackboardKeySelector TargetLocationBBKey; // 0x78(0x28)
	struct FBlackboardKeySelector TargetFacePointBBKey; // 0xa0(0x28)
	struct FBlackboardKeySelector TargetDirection; // 0xc8(0x28)
	struct FGameplayTagContainer TargetMotionState; // 0xf0(0x20)
	bool bStopMovementOnFinish; // 0x110(0x01)
	bool bFocusTargetAtEnd; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)
	struct FBlackboardKeySelector MotionPlanTargetDir; // 0x118(0x28)
	float PathFindingQueryGoalTolerance; // 0x140(0x04)
	float AcceptableRadius; // 0x144(0x04)
	struct UClass* FilterClass; // 0x148(0x08)
	float ObservedBlackboardValueTolerance; // 0x150(0x04)
	char bObserveBlackboardValue : 1; // 0x154(0x01)
	char bAllowStrafe : 1; // 0x154(0x01)
	char bAllowPartialPath : 1; // 0x154(0x01)
	char bTrackMovingGoal : 1; // 0x154(0x01)
	char bProjectGoalLocation : 1; // 0x154(0x01)
	char bReachTestIncludesAgentRadius : 1; // 0x154(0x01)
	char bReachTestIncludesGoalRadius : 1; // 0x154(0x01)
	char bStopOnOverlap : 1; // 0x154(0x01)
	char bStopOnOverlapNeedsUpdate : 1; // 0x155(0x01)
	char pad_155_1 : 7; // 0x155(0x01)
	char pad_156[0x2]; // 0x156(0x02)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_BossThrowGrenade
// Size: 0xc8 (Inherited: 0x78)
class UDFMAITask_BossThrowGrenade : public UBTTaskNode {
public:

	struct FBlackboardKeySelector TargetBBkey; // 0x78(0x28)
	float TargetDistanceScale; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	uint64_t GrenadeWeaponId; // 0xa8(0x08)
	float AcceptableYawAngle; // 0xb0(0x04)
	float AcceptablePitchAngle; // 0xb4(0x04)
	bool bIgnoreCollisionInReachableCheck; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	int32_t MaxGrenadeNumLimit; // 0xbc(0x04)
	float TossYawAngle; // 0xc0(0x04)
	float TossPitchAngle; // 0xc4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ChangeFightState
// Size: 0xa8 (Inherited: 0x78)
class UDFMAITask_ChangeFightState : public UBTTaskNode {
public:

	enum class EChangeFightStateMode ChangeFightStateMode; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FBlackboardKeySelector TargetBBkey; // 0x80(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlaySpecialActing
// Size: 0x108 (Inherited: 0x78)
class UDFMAITask_PlaySpecialActing : public UBTTaskNode {
public:

	enum class ESpecialActingMontageType MontageType; // 0x78(0x01)
	bool bShouldNodeWaitMontageFinish; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
	struct FBlackboardKeySelector TargetLocationBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector PreTargetYawBBKey; // 0xa8(0x28)
	struct FBlackboardKeySelector PostTargetYawBBKey; // 0xd0(0x28)
	enum class EMotionCorrectionTargetKey LocationCorrectionKey; // 0xf8(0x01)
	enum class EMotionCorrectionTargetKey PreYawCorrectionKey; // 0xf9(0x01)
	enum class EMotionCorrectionTargetKey PostYawCorrectionKey; // 0xfa(0x01)
	bool bIsLoopMontage; // 0xfb(0x01)
	float LoopingTime; // 0xfc(0x04)
	enum class ESpecialActingMontageType EndLoopMontage; // 0x100(0x01)
	bool bAtomic; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ReportSuspects
// Size: 0xd0 (Inherited: 0x80)
class UDFMAITask_ReportSuspects : public UGPBTTaskBase {
public:

	struct FBlackboardKeySelector SuspectLocationBBKey; // 0x80(0x28)
	struct FBlackboardKeySelector SuspectActorBBKey; // 0xa8(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RequestToMotionStateBase
// Size: 0xb0 (Inherited: 0xb0)
class UDFMAITask_RequestToMotionStateBase : public UBTTask_BlueprintBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_Skill
// Size: 0xa8 (Inherited: 0x78)
class UDFMAITask_Skill : public UBTTaskNode {
public:

	struct FBlackboardKeySelector TargetActorBBKey; // 0x78(0x28)
	bool bFirstTraceTargetLocation; // 0xa0(0x01)
	bool bFirstFaceTarget; // 0xa1(0x01)
	bool bFirstKeepAnimDisplacement; // 0xa2(0x01)
	bool bSecondTraceTargetLocation; // 0xa3(0x01)
	bool bSecondFaceTarget; // 0xa4(0x01)
	bool bSecondKeepAnimDisplacement; // 0xa5(0x01)
	bool bIsVisible; // 0xa6(0x01)
	char pad_A7[0x1]; // 0xa7(0x01)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterAppearanceProxyComponent
// Size: 0x5a0 (Inherited: 0x100)
class UDFMCharacterAppearanceProxyComponent : public UActorComponent {
public:

	char pad_100[0xc0]; // 0x100(0xc0)
	struct FName AvatarID; // 0x1c0(0x08)
	struct FName LoadedAvatarId; // 0x1c8(0x08)
	struct FName AvatarWatchId; // 0x1d0(0x08)
	struct TArray<struct FName> AllMeshes; // 0x1d8(0x10)
	/*struct TSet<struct FName>*/char LoadFailMeshes[0x50]; // 0x1e8(0x50)
	struct TMap<struct FName, struct UObject*> BufferedObjects; // 0x238(0x50)
	struct TMap<struct FName, struct UClass*> BufferedClasses; // 0x288(0x50)
	struct TMap<uint32_t, struct URuntimeSkeletalMesh*> RuntimeSkeletalMeshes; // 0x2d8(0x50)
	struct TMap<struct FName, struct FSoftObjectPath> BufferedObjectsPaths; // 0x328(0x50)
	struct TMap<struct FName, struct TWeakObjectPtr<struct UMeshComponent>> LoadedMeshes; // 0x378(0x50)
	char pad_3C8[0x1d8]; // 0x3c8(0x1d8)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffClientEffectBase
// Size: 0x60 (Inherited: 0x30)
class UDFMBuffClientEffectBase : public UObject {
public:

	uint32_t BuffId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct AActor* OwnerCharacter; // 0x38(0x08)
	uint64_t SourceActorUin; // 0x40(0x08)
	struct TArray<struct FCharacterBuff> BuffDatas; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityBase
// Size: 0x198 (Inherited: 0x30)
class UDFMCharacterBuffEntityBase : public UObject {
public:

	bool bIsStatePaused; // 0x30(0x01)
	char pad_31[0x5f]; // 0x31(0x5f)
	int32_t SkillId; // 0x90(0x04)
	struct FName BuffType; // 0x94(0x08)
	enum class ECharacterBuffDebuffType DebuffType; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float BuffStartTime; // 0xa0(0x04)
	float BuffEndTime; // 0xa4(0x04)
	uint32_t BuffId; // 0xa8(0x04)
	bool IsDisplay; // 0xac(0x01)
	char pad_AD[0x3]; // 0xad(0x03)
	enum class EBuffApplyAttributeType BuffApplyAttributeType; // 0xb0(0x04)
	enum class ECharacterPart BuffPart; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct AActor* MakerActor; // 0xb8(0x08)
	struct AActor* MakerInstigator; // 0xc0(0x08)
	char pad_C8[0x20]; // 0xc8(0x20)
	uint64_t Guid; // 0xe8(0x08)
	float DurationRate; // 0xf0(0x04)
	bool bHadApplyAttribute; // 0xf4(0x01)
	bool bValid; // 0xf5(0x01)
	bool bSetPauseByCode; // 0xf6(0x01)
	bool bSetPauseByDead; // 0xf7(0x01)
	uint32_t BuffSeqSeed; // 0xf8(0x04)
	float HurPauseTime; // 0xfc(0x04)
	int32_t CustomNum; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct FTimerHandle HurPauseHandler; // 0x108(0x08)
	struct TMap<struct FGPGameplayAttribute, struct FAddAttributeArrayHandle> AttributeUpdateListenerMaps; // 0x110(0x50)
	char pad_160[0x10]; // 0x160(0x10)
	bool isRestraineValid; // 0x170(0x01)
	char pad_171[0xf]; // 0x171(0x0f)
	struct AActor* Owner; // 0x180(0x08)
	bool ReplicateApplyAttribute; // 0x188(0x01)
	char pad_189[0xf]; // 0x189(0x0f)

	void ResumeTimeHurt(); // Function DFMGameplay.DFMCharacterBuffEntityBase.ResumeTimeHurt // (Final|Native|Protected) // @ game+0x6281fd0
	void PauseByHurt(); // Function DFMGameplay.DFMCharacterBuffEntityBase.PauseByHurt // (Final|Native|Protected) // @ game+0x6281de0
	void OnTriggerBuffAction(enum class EBuffActionTriggerType TriggerType); // Function DFMGameplay.DFMCharacterBuffEntityBase.OnTriggerBuffAction // (Final|Native|Protected) // @ game+0x6281d60
	void OnPostApplyAttriubteEffect(); // Function DFMGameplay.DFMCharacterBuffEntityBase.OnPostApplyAttriubteEffect // (Native|Public) // @ game+0xaa2020
	void OnPeriodBasicBuffProcess(int32_t BasicBuffIndex); // Function DFMGameplay.DFMCharacterBuffEntityBase.OnPeriodBasicBuffProcess // (Final|Native|Protected) // @ game+0x62819a0
	void OnListeningAttributeValueChange(struct FOnGPAttributeChangeData& OnGPAttributeChangeData); // Function DFMGameplay.DFMCharacterBuffEntityBase.OnListeningAttributeValueChange // (Final|Native|Public|HasOutParms) // @ game+0x62816e0
	void OnBuffTimeOut(); // Function DFMGameplay.DFMCharacterBuffEntityBase.OnBuffTimeOut // (Final|Native|Protected) // @ game+0x6281600
	void NotifyAttributeEffectToClient(struct FGPAttributeEffect& AttributeEffect); // Function DFMGameplay.DFMCharacterBuffEntityBase.NotifyAttributeEffectToClient // (Final|Native|Protected|HasOutParms) // @ game+0x6280fc0
	float GetRemainSeconds(); // Function DFMGameplay.DFMCharacterBuffEntityBase.GetRemainSeconds // (Final|Native|Public) // @ game+0x6280e50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDeathMarkerItem
// Size: 0x5b0 (Inherited: 0x5a0)
class UDFMDeathMarkerItem : public UGPDeathMarkerItem {
public:

	char pad_5A0[0x10]; // 0x5a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorBase
// Size: 0xb20 (Inherited: 0x3c0)
class AInteractorBase : public AGPInteractorBase {
public:

	char pad_3C0[0x278]; // 0x3c0(0x278)
	struct FGameplayTag InteractorTag; // 0x638(0x08)
	struct TArray<struct ACHARACTER*> InteractCandidatorArray; // 0x640(0x10)
	float DetectRatio; // 0x650(0x04)
	bool bIsUseInteractPointForCalcDis; // 0x654(0x01)
	bool bIsClimbLadder; // 0x655(0x01)
	char pad_656[0x2]; // 0x656(0x02)
	struct UInteractorOperatorProcessComponent* InteractorOperatorProcessComponent; // 0x658(0x08)
	bool bCanBeMarkedByPlayerSOL; // 0x660(0x01)
	bool bCanBeMarkedByPlayerMP; // 0x661(0x01)
	enum class EMarkingItemType MarkingItemType; // 0x662(0x01)
	bool bNeedMarkerSOL; // 0x663(0x01)
	bool bNeedMarkerMP; // 0x664(0x01)
	enum class EInteractorMarkerType InteractorMarkerType; // 0x665(0x01)
	bool bCalculateAngleUseZ; // 0x666(0x01)
	bool bAlwaysDisableAutoDormant; // 0x667(0x01)
	struct FGameplayTagContainer InteractableTags; // 0x668(0x20)
	struct FGameplayTagContainer InteractableTags_HD; // 0x688(0x20)
	struct FText InteractorName; // 0x6a8(0x18)
	bool bOptSkeletalMeshComps; // 0x6c0(0x01)
	char pad_6C1[0x3]; // 0x6c1(0x03)
	float InteracterToCharacterDistanceToleranceSquare; // 0x6c4(0x04)
	bool bHideWhiteDot; // 0x6c8(0x01)
	bool bIsHiddenInteractor; // 0x6c9(0x01)
	char pad_6CA[0x2]; // 0x6ca(0x02)
	float SoundVisualizeDistance; // 0x6cc(0x04)
	bool bNeedCheckInteractCompStaticActorDirty; // 0x6d0(0x01)
	char pad_6D1[0x7]; // 0x6d1(0x07)
	struct TArray<struct FName> AllowPlayerOverlapTags; // 0x6d8(0x10)
	bool CanInteractOverlap; // 0x6e8(0x01)
	char pad_6E9[0x3]; // 0x6e9(0x03)
	int32_t BindInteract_MissionID; // 0x6ec(0x04)
	int32_t BindInteract_ObjectiveID; // 0x6f0(0x04)
	char pad_6F4[0x4]; // 0x6f4(0x04)
	struct TArray<int32_t> BindInteract_RaidLevels; // 0x6f8(0x10)
	bool bAllowMulticastExecuteInteractorOnClient; // 0x708(0x01)
	bool CachedCheckCollision; // 0x709(0x01)
	char pad_70A[0x6]; // 0x70a(0x06)
	struct UMeshComponent* GlowMeshComponent; // 0x710(0x08)
	struct UMaterialInstanceDynamic* GlowMaterialInst; // 0x718(0x08)
	struct FInteractorGlowParameters GlowParameters; // 0x720(0x10)
	bool bIsGlowing; // 0x730(0x01)
	char pad_731[0x3]; // 0x731(0x03)
	int32_t CurQuality; // 0x734(0x04)
	float SmallTriangleDistance; // 0x738(0x04)
	bool CustombActive_HD; // 0x73c(0x01)
	bool CustombEnable_HD; // 0x73d(0x01)
	bool CustombShowInteractHUD_HD; // 0x73e(0x01)
	bool CustombNeedHUDFixedPos_HD; // 0x73f(0x01)
	bool CustombIsTagNumOverTwo_HD; // 0x740(0x01)
	bool CustombIsNeedFilterPre_HD; // 0x741(0x01)
	bool CustombIsNeedFilter3C_HD; // 0x742(0x01)
	bool CustombIsNeedShowWhiteDot_HD; // 0x743(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_HD; // 0x744(0x01)
	char pad_745[0x3]; // 0x745(0x03)
	float CustomDetectShowWhiteDotHorizontalAngle_HD; // 0x748(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_HD; // 0x74c(0x04)
	float CustomDetectShowWhiteDotMinRadius_HD; // 0x750(0x04)
	float CustomDetectShowWhiteDotMaxRadius_HD; // 0x754(0x04)
	bool CustombIsNeedShowOutline_HD; // 0x758(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_HD; // 0x759(0x01)
	char pad_75A[0x2]; // 0x75a(0x02)
	float CustomDetectShowOutlineHorizontalAngle_HD; // 0x75c(0x04)
	float CustomDetectShowOutlineVerticalAngle_HD; // 0x760(0x04)
	float CustomDetectShowOutlineMinRadius_HD; // 0x764(0x04)
	float CustomDetectShowOutlineMaxRadius_HD; // 0x768(0x04)
	float CustomDetectShowHUDMinRadius_HD; // 0x76c(0x04)
	float CustomDetectShowHUDMaxRadius_HD; // 0x770(0x04)
	struct FName CustomDetectShowHUDBoxCompName_HD; // 0x774(0x08)
	char pad_77C[0x4]; // 0x77c(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_HD; // 0x780(0x08)
	float CustomDetectShowHUDHorizontalAngle_HD; // 0x788(0x04)
	float CustomDetectShowHUDVerticalAngle_HD; // 0x78c(0x04)
	bool CustombIsNeedInteractPointForward_HD; // 0x790(0x01)
	bool CustombUseAimedBoxFilterHUDDir_HD; // 0x791(0x01)
	bool CustombUseBoxFilterHUDRange_HD; // 0x792(0x01)
	bool CustombUseBoxOverlapForFilterHUDRange_HD; // 0x793(0x01)
	char pad_794[0x4]; // 0x794(0x04)
	struct TArray<struct UBoxComponent*> CustomCachedAimedBoxComponents; // 0x798(0x10)
	struct TArray<struct UMeshComponent*> CustomCachedAimedMeshComponents; // 0x7a8(0x10)
	bool CustombIsNeedShowToButton_HD; // 0x7b8(0x01)
	bool CustombIsNeedCheckAllowShowWidget_HD; // 0x7b9(0x01)
	bool CustombIsNeedFilterCollision_HD; // 0x7ba(0x01)
	enum class EInteractorHUDType CustomHUDType_HD; // 0x7bb(0x01)
	enum class EInteractorPriority CustomInteractorPriority_HD; // 0x7bc(0x01)
	bool CustombIsNeedGather_HD; // 0x7bd(0x01)
	char pad_7BE[0x2]; // 0x7be(0x02)
	struct FText CustomButtonTitle_HD; // 0x7c0(0x18)
	bool CustombCanJump_HD; // 0x7d8(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_HD; // 0x7d9(0x01)
	bool CustombNeedIgnoreSelf_HD; // 0x7da(0x01)
	char pad_7DB[0x5]; // 0x7db(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_HD; // 0x7e0(0x10)
	float CustomCachedCanOverlapInterval_HD; // 0x7f0(0x04)
	float CustomCachedAllowShowWidgetInterval_HD; // 0x7f4(0x04)
	float CustomCachedFilterCollisionInterval_HD; // 0x7f8(0x04)
	float CustomCachedScreenPosInterval_HD; // 0x7fc(0x04)
	bool CustombActive_Mobile; // 0x800(0x01)
	bool CustombEnable_Mobile; // 0x801(0x01)
	bool CustombIsNeedFilterPre_Mobile; // 0x802(0x01)
	bool CustombIsNeedFilter3C_Mobile; // 0x803(0x01)
	bool CustombIsNeedShowWhiteDot_Mobile; // 0x804(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_Mobile; // 0x805(0x01)
	char pad_806[0x2]; // 0x806(0x02)
	float CustomDetectShowWhiteDotHorizontalAngle_Mobile; // 0x808(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_Mobile; // 0x80c(0x04)
	float CustomDetectShowWhiteDotMinRadius_Mobile; // 0x810(0x04)
	float CustomDetectShowWhiteDotMaxRadius_Mobile; // 0x814(0x04)
	bool CustombIsNeedShowOutline_Mobile; // 0x818(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_Mobile; // 0x819(0x01)
	char pad_81A[0x2]; // 0x81a(0x02)
	float CustomDetectShowOutlineHorizontalAngle_Mobile; // 0x81c(0x04)
	float CustomDetectShowOutlineVerticalAngle_Mobile; // 0x820(0x04)
	float CustomDetectShowOutlineMinRadius_Mobile; // 0x824(0x04)
	float CustomDetectShowOutlineMaxRadius_Mobile; // 0x828(0x04)
	float CustomDetectShowHUDMinRadius_Mobile; // 0x82c(0x04)
	float CustomDetectShowHUDMaxRadius_Mobile; // 0x830(0x04)
	struct FName CustomDetectShowHUDBoxCompName_Mobile; // 0x834(0x08)
	char pad_83C[0x4]; // 0x83c(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_Mobile; // 0x840(0x08)
	float CustomDetectShowHUDHorizontalAngle_Mobile; // 0x848(0x04)
	float CustomDetectShowHUDVerticalAngle_Mobile; // 0x84c(0x04)
	bool CustombIsNeedInteractPointForward_Mobile; // 0x850(0x01)
	bool CustombUseAimedBoxFilterHUDDir_Mobile; // 0x851(0x01)
	bool CustombUseBoxFilterHUDRange_Mobile; // 0x852(0x01)
	bool CustombUseBoxOverlapForFilterHUDRange_Mobile; // 0x853(0x01)
	bool CustombIsNeedShowToButton_Mobile; // 0x854(0x01)
	bool CustombIsNeedCheckAllowShowWidget_Mobile; // 0x855(0x01)
	bool CustombIsNeedFilterCollision_Mobile; // 0x856(0x01)
	enum class EInteractorHUDType CustomHUDType_Mobile; // 0x857(0x01)
	enum class EInteractorPriority CustomInteractorPriority_Mobile; // 0x858(0x01)
	bool CustombIsNeedGather_Mobile; // 0x859(0x01)
	char pad_85A[0x6]; // 0x85a(0x06)
	/*struct TSoftObjectPtr<UObject>*/char CustomButtonSoftIcon_Mobile[0x28]; // 0x860(0x28)
	struct FText CustomButtonTitle_Mobile; // 0x888(0x18)
	bool CustombCanJump_Mobile; // 0x8a0(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_Mobile; // 0x8a1(0x01)
	bool CustombNeedIgnoreSelf_Mobile; // 0x8a2(0x01)
	char pad_8A3[0x5]; // 0x8a3(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_Mobile; // 0x8a8(0x10)
	float CustomCachedCanOverlapInterval_Mobile; // 0x8b8(0x04)
	float CustomCachedAllowShowWidgetInterval_Mobile; // 0x8bc(0x04)
	float CustomCachedFilterCollisionInterval_Mobile; // 0x8c0(0x04)
	float CustomCachedScreenPosInterval_Mobile; // 0x8c4(0x04)
	struct FGameplayTagContainer DelayTagContainer; // 0x8c8(0x20)
	struct TMap<struct FGameplayTag, float> Tag2DelayTime; // 0x8e8(0x50)
	struct TMap<struct FGameplayTag, struct FText> Tag2DelayDesc; // 0x938(0x50)
	struct ACHARACTER* CachedDelayCharacter; // 0x988(0x08)
	char pad_990[0x8]; // 0x990(0x08)
	enum class EInteractorType CustomInteractorType; // 0x998(0x01)
	char pad_999[0x3]; // 0x999(0x03)
	struct FVector CustomInteractPointOffset; // 0x99c(0x0c)
	float CustomDSCheckPlayerInRangeScale; // 0x9a8(0x04)
	bool CustombUseDSCheckPlayerState; // 0x9ac(0x01)
	bool CustombUseDSCheckCurrentCanOperate; // 0x9ad(0x01)
	bool CustombUseClientCheckCurrentCanOperate; // 0x9ae(0x01)
	bool CustombUseDSCheckPlayerInRange; // 0x9af(0x01)
	bool CustombUseDSCheckPlayerPassFilterCollision; // 0x9b0(0x01)
	bool CustombUseDSCheckInteractorCanOverlap; // 0x9b1(0x01)
	enum class EInteractorBlockCheckType CustomBlockCheckType; // 0x9b2(0x01)
	bool CustombUseForwardAndCheckHitFirstly; // 0x9b3(0x01)
	bool CustombUseTrustClientWhenHitInteractor; // 0x9b4(0x01)
	bool CustombUseDSCheckNearly; // 0x9b5(0x01)
	char pad_9B6[0x2]; // 0x9b6(0x02)
	float CustomNearlyThresholdScale; // 0x9b8(0x04)
	bool CustombDSUseClientPosToCheckBlock; // 0x9bc(0x01)
	bool CustombReFilterHitResult; // 0x9bd(0x01)
	char pad_9BE[0x2]; // 0x9be(0x02)
	int32_t CustomReFilterHitResultIndex; // 0x9c0(0x04)
	bool bRegToAdditionalInteractorArray; // 0x9c4(0x01)
	char pad_9C5[0x3]; // 0x9c5(0x03)
	struct UInteractorOptInterruptComponent* CachedInterruptComponent; // 0x9c8(0x08)
	bool bIgnoreCheckCollisionByDS; // 0x9d0(0x01)
	char pad_9D1[0x7]; // 0x9d1(0x07)
	struct TArray<struct AActor*> CachedChildActors; // 0x9d8(0x10)
	struct TArray<struct UMeshComponent*> CachedOutlineMeshComponents; // 0x9e8(0x10)
	int32_t CustomEconomyAnalysisID; // 0x9f8(0x04)
	char pad_9FC[0x4]; // 0x9fc(0x04)
	struct TArray<struct UMeshComponent*> CachedDynamicShadowMeshComponents; // 0xa00(0x10)
	struct FHighValueBoxInfo HighValueBoxInfo; // 0xa10(0x60)
	struct TArray<int32_t> FallbackArray; // 0xa70(0x10)
	bool bSpatialDynamic; // 0xa80(0x01)
	char pad_A81[0x7]; // 0xa81(0x07)
	struct TArray<uint64_t> OpeningUIPlayerUinArray; // 0xa88(0x10)
	char pad_A98[0x8]; // 0xa98(0x08)
	struct UGPAudioEventAsset* OpeningUILoopAudio; // 0xaa0(0x08)
	struct UGPAudioEventAsset* OpeningUILoopStopAudio; // 0xaa8(0x08)
	bool bUseOpeningUIAudio; // 0xab0(0x01)
	bool bUseOpeningUIForbidButton; // 0xab1(0x01)
	char pad_AB2[0x2]; // 0xab2(0x02)
	struct FName SecondTypeName; // 0xab4(0x08)
	char pad_ABC[0x3c]; // 0xabc(0x3c)
	bool bIsEditorSelectable; // 0xaf8(0x01)
	char pad_AF9[0x7]; // 0xaf9(0x07)
	struct UInteractSystem* InteractSystem; // 0xb00(0x08)
	struct AContainerSpawnPoint* ContainerSpawnPoint; // 0xb08(0x08)
	struct AAirDropInteractorGenerator* AirDropGenerator; // 0xb10(0x08)
	char pad_B18[0x8]; // 0xb18(0x08)

	void UpdateSkeletalMeshCompTickStatus(bool bIsCanTick); // Function DFMGameplay.InteractorBase.UpdateSkeletalMeshCompTickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x63529a0
	void SetDetectShowHUDBoxCompName(struct FName& InName); // Function DFMGameplay.InteractorBase.SetDetectShowHUDBoxCompName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6352850
	void SetCanInteractOverlap(bool InCanInteractOverlap); // Function DFMGameplay.InteractorBase.SetCanInteractOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x63527c0
	void ServerDoInteractEvent(); // Function DFMGameplay.InteractorBase.ServerDoInteractEvent // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0xbd2900
	void SendDoInteract(struct AGPCharacter* InGPCharacter, struct AActor* InInteractor, enum class EInteractorType InInteractorType, struct FString InParams); // Function DFMGameplay.InteractorBase.SendDoInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x63525f0
	void OnReset(); // Function DFMGameplay.InteractorBase.OnReset // (Native|Protected|BlueprintCallable) // @ game+0xc37770
	void OnRep_OpeningUIPlayerUinArray(); // Function DFMGameplay.InteractorBase.OnRep_OpeningUIPlayerUinArray // (Final|Native|Protected) // @ game+0x63525d0
	void OnRep_FallbackArray(struct TArray<int32_t> PreArray); // Function DFMGameplay.InteractorBase.OnRep_FallbackArray // (Final|Native|Public) // @ game+0x63524b0
	void OnRep_CanInteractOverlap(bool old); // Function DFMGameplay.InteractorBase.OnRep_CanInteractOverlap // (Final|Native|Public) // @ game+0x3662de0
	void OnNetMultiReset(); // Function DFMGameplay.InteractorBase.OnNetMultiReset // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0xbcc1a0
	void OnNetMultiExecuteInteractor(struct FGameplayTag TriggerTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorBase.OnNetMultiExecuteInteractor // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63523e0
	void OnMeshLoadComplete(); // Function DFMGameplay.InteractorBase.OnMeshLoadComplete // (Final|Native|Public) // @ game+0x63523c0
	void OnExecuteInteractor(struct FGameplayTag TriggerTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorBase.OnExecuteInteractor // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void OnDetectValidSystem(); // Function DFMGameplay.InteractorBase.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x63523a0
	void OnDelayTHEnd_Mobile(); // Function DFMGameplay.InteractorBase.OnDelayTHEnd_Mobile // (Final|Native|Public) // @ game+0x6352380
	void OnCompleteRaidLevel(int32_t Level); // Function DFMGameplay.InteractorBase.OnCompleteRaidLevel // (Final|Native|Public) // @ game+0x6352300
	void OnCommonBarCountingEnd(int32_t InIndex); // Function DFMGameplay.InteractorBase.OnCommonBarCountingEnd // (Final|Native|Public) // @ game+0x6352280
	void OnCommonBarCloseBtnClick(int32_t InIndex); // Function DFMGameplay.InteractorBase.OnCommonBarCloseBtnClick // (Final|Native|Public) // @ game+0x6352200
	void OnCloseSkeletalMeshTick(); // Function DFMGameplay.InteractorBase.OnCloseSkeletalMeshTick // (Final|Native|Public) // @ game+0x63521e0
	void NextFrameCloseSkeletalMeshTick(); // Function DFMGameplay.InteractorBase.NextFrameCloseSkeletalMeshTick // (Final|Native|Public) // @ game+0x63521c0
	void MissionBindInteractChange(uint64_t Mission, uint64_t objectiveId); // Function DFMGameplay.InteractorBase.MissionBindInteractChange // (Final|Native|Public) // @ game+0x6352100
	struct FString GetUniqueName(); // Function DFMGameplay.InteractorBase.GetUniqueName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetSmallAreaCustomName(); // Function DFMGameplay.InteractorBase.GetSmallAreaCustomName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FName GetSecondTypeName(); // Function DFMGameplay.InteractorBase.GetSecondTypeName // (Final|Native|Public|BlueprintCallable) // @ game+0x63520e0
	struct FString GetMapName(); // Function DFMGameplay.InteractorBase.GetMapName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	int32_t GetLastConsumeItemTimes(); // Function DFMGameplay.InteractorBase.GetLastConsumeItemTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x6352020
	struct FName GetLastConsumeItemIDName(); // Function DFMGameplay.InteractorBase.GetLastConsumeItemIDName // (Final|Native|Public|BlueprintCallable) // @ game+0x6352000
	int32_t GetLastConsumeItemCount(); // Function DFMGameplay.InteractorBase.GetLastConsumeItemCount // (Final|Native|Public|BlueprintCallable) // @ game+0x6351fe0
	struct TArray<struct ACHARACTER*> GetInteractCandidatorArray(); // Function DFMGameplay.InteractorBase.GetInteractCandidatorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x6351ea0
	struct UMeshComponent* GetGlowMeshComponent(); // Function DFMGameplay.InteractorBase.GetGlowMeshComponent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetBigAreaName(); // Function DFMGameplay.InteractorBase.GetBigAreaName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void EventOnReset(); // Function DFMGameplay.InteractorBase.EventOnReset // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void ClientDoInteractEvent(struct FString StrParam); // Function DFMGameplay.InteractorBase.ClientDoInteractEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x6351d80
	void ClearInteractCandidatorArray(); // Function DFMGameplay.InteractorBase.ClearInteractCandidatorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x6351d30
	bool CheckLastInteractConsumeItem(); // Function DFMGameplay.InteractorBase.CheckLastInteractConsumeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6351d10
	void CallDoInteractEvent(struct FString Params); // Function DFMGameplay.InteractorBase.CallDoInteractEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x6351bf0
	void BP_StopOpeningUIAudio(); // Function DFMGameplay.InteractorBase.BP_StopOpeningUIAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpeningUIAudio(struct AGPCharacter* InGPCharacter); // Function DFMGameplay.InteractorBase.BP_PlayOpeningUIAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UMeshComponent*> BP_GetOutlineMeshComponents(); // Function DFMGameplay.InteractorBase.BP_GetOutlineMeshComponents // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	enum class EInteractorType BP_GetInteractorType(); // Function DFMGameplay.InteractorBase.BP_GetInteractorType // (Final|Native|Public|BlueprintCallable) // @ game+0x6351bb0
	struct FGameplayTagContainer BP_GetInteractorOperatorTags(struct ACHARACTER* OperatorCharacter, struct FGameplayTagContainer InTriggerTags); // Function DFMGameplay.InteractorBase.BP_GetInteractorOperatorTags // (Native|Event|Public|BlueprintEvent) // @ game+0x63519c0
	struct TArray<struct UMeshComponent*> BP_GetDynamicShadowMeshComponents(); // Function DFMGameplay.InteractorBase.BP_GetDynamicShadowMeshComponents // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UMeshComponent*> BP_GetAimedMeshComponents(); // Function DFMGameplay.InteractorBase.BP_GetAimedMeshComponents // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UBoxComponent*> BP_GetAimedBoxComponents(); // Function DFMGameplay.InteractorBase.BP_GetAimedBoxComponents // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AddInteractCandidatorArray(struct TArray<struct ACHARACTER*> CandidatorArray); // Function DFMGameplay.InteractorBase.AddInteractCandidatorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x63517e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEquipmentItemBase
// Size: 0x68 (Inherited: 0x30)
class UDFMEquipmentItemBase : public UObject {
public:

	char pad_30[0x30]; // 0x30(0x30)
	struct ADFMCharacter* OwnerCharacter; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFriendMarkerItem
// Size: 0x5d0 (Inherited: 0x560)
class UDFMFriendMarkerItem : public UGPFriendMarkerItem {
public:

	char pad_560[0x40]; // 0x560(0x40)
	bool bLocationIntervalOpen; // 0x5a0(0x01)
	char pad_5A1[0x3]; // 0x5a1(0x03)
	float LocationInterval; // 0x5a4(0x04)
	char pad_5A8[0x18]; // 0x5a8(0x18)
	bool bNeedLerp; // 0x5c0(0x01)
	char pad_5C1[0x3]; // 0x5c1(0x03)
	float LerpAlpha; // 0x5c4(0x04)
	float LerpDistance; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSMInstance
// Size: 0x728 (Inherited: 0x718)
class UDFMFSMInstance : public UGPFSMInstance {
public:

	struct ADFMCharacter* DFMCharacter; // 0x718(0x08)
	struct UDFMBlackboardComponent* DFMBlackboard; // 0x720(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameMode
// Size: 0x7c0 (Inherited: 0x5f8)
class ADFMGameMode : public AGPGameMode {
public:

	/*struct FMulticastInlineDelegate*/char OnPlayerDied[0x10]; // 0x5f8(0x10)
	/*struct FMulticastInlineDelegate*/char OnTeamDied[0x10]; // 0x608(0x10)
	int32_t GameModeEnable; // 0x618(0x04)
	bool EnableDSDefaultRecordReplayWholeGameFeature; // 0x61c(0x01)
	char DSDefaultRecordReplayWholeGameOverride; // 0x61d(0x01)
	bool EnableDSDefaultRecordMemoryReplayForKillcamFeature; // 0x61e(0x01)
	char DSDefaultRecordMemoryReplayForKillcamOverride; // 0x61f(0x01)
	float DSRecordMemoryReplayForKillcamMaxTime; // 0x620(0x04)
	char pad_624[0x4]; // 0x624(0x04)
	struct ADFMGameState* DFMGameState; // 0x628(0x08)
	struct UDFMDSLogic* DFMDSLogic; // 0x630(0x08)
	float AssistDamageThreshold; // 0x638(0x04)
	char pad_63C[0x4]; // 0x63c(0x04)
	struct TMap<int64_t, struct TWeakObjectPtr<struct AController>> ControllerMap; // 0x640(0x50)
	struct UStartSpotAllocateComponent* StartSpotAllocComponent; // 0x690(0x08)
	char pad_698[0x8]; // 0x698(0x08)
	struct TArray<struct AInventoryPickup_Container*> AllPickupBoxList; // 0x6a0(0x10)
	struct TMap<uint64_t, struct AController*> OfflinePlayers; // 0x6b0(0x50)
	struct UDataTable* BotAIDataTable; // 0x700(0x08)
	struct FGlobalAIDifficultyFactor GlobalAIDifficulty; // 0x708(0x14)
	char pad_71C[0x4]; // 0x71c(0x04)
	struct UClass* PuckupMgrClass; // 0x720(0x08)
	struct UClass* PlayerSettlementComponentClass; // 0x728(0x08)
	struct UClass* DFMSettlementComponentClass; // 0x730(0x08)
	struct UClass* PlayerMissionComponentClass; // 0x738(0x08)
	struct UClass* GMComponentClass; // 0x740(0x08)
	bool UseDFMComposition; // 0x748(0x01)
	bool bMatchHasEnded; // 0x749(0x01)
	char pad_74A[0x76]; // 0x74a(0x76)

	void RebornAllPlayer(bool ResetAlivePlayerPosition); // Function DFMGameplay.DFMGameMode.RebornAllPlayer // (Native|Public|BlueprintCallable) // @ game+0x62b4360
	void OnAILabDebugModeUnregisterActor(struct AActor* NewActor); // Function DFMGameplay.DFMGameMode.OnAILabDebugModeUnregisterActor // (Final|Native|Public) // @ game+0x62b4040
	void OnAILabDebugModeRegisterActor(struct AActor* NewActor); // Function DFMGameplay.DFMGameMode.OnAILabDebugModeRegisterActor // (Final|Native|Public) // @ game+0x62b3fc0
	void InitOfflineCharacter(uint64_t PlayerId); // Function DFMGameplay.DFMGameMode.InitOfflineCharacter // (Native|Protected) // @ game+0x35d5110
	void InitNewAI(struct AAIController* NewAIController); // Function DFMGameplay.DFMGameMode.InitNewAI // (Native|Public) // @ game+0x62b3eb0
	struct UStartSpotAllocateComponent* GetStartSpotAllocComponent(); // Function DFMGameplay.DFMGameMode.GetStartSpotAllocComponent // (Native|Public|BlueprintCallable) // @ game+0x62b3e80
	struct AController* GetControllerFromUin(int64_t PlayerUin); // Function DFMGameplay.DFMGameMode.GetControllerFromUin // (Native|Public|BlueprintCallable) // @ game+0x62b3c80
	void EditorTimerOnDSBeginMatchReq(); // Function DFMGameplay.DFMGameMode.EditorTimerOnDSBeginMatchReq // (Final|Native|Public) // @ game+0x62b3b60
	void DoShowScoreInfo(enum class EScoreName Index, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.DFMGameMode.DoShowScoreInfo // (Native|Public|BlueprintCallable) // @ game+0x62b3a90
	void ClientReadyToPlayNotify(uint64_t PlayerId); // Function DFMGameplay.DFMGameMode.ClientReadyToPlayNotify // (Native|Public) // @ game+0x62b35e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMGameState
// Size: 0xa38 (Inherited: 0x500)
class ADFMGameState : public AGPGameState {
public:

	float MatchStartTime; // 0x500(0x04)
	int32_t MaxMatchDuration; // 0x504(0x04)
	int32_t ScavConnectJumpTime; // 0x508(0x04)
	char pad_50C[0x4]; // 0x50c(0x04)
	struct FMatchInfo MatchInfo; // 0x510(0xd0)
	bool DsBeginMatchReqReceived; // 0x5e0(0x01)
	enum class EDFMGamePlayMode DFMGamePlayerMode; // 0x5e1(0x01)
	enum class EDFMGamePlaySubMode DFMGamePlayerSubMode; // 0x5e2(0x01)
	enum class EGameDifficultLevel DifficultLevel; // 0x5e3(0x01)
	char pad_5E4[0x4]; // 0x5e4(0x04)
	struct FMapConfig MapConfig; // 0x5e8(0x90)
	char pad_678[0xac]; // 0x678(0xac)
	float FirstLoadTime; // 0x724(0x04)
	float KillStreakTime; // 0x728(0x04)
	char pad_72C[0x4]; // 0x72c(0x04)
	uint64_t DSRoomId; // 0x730(0x08)
	struct UDFMSettlementComponent* SettlementComponent; // 0x738(0x08)
	struct UInteractSystem* InteractSystemComponent; // 0x740(0x08)
	struct UMapInfoSystem* MapInfoSystemComponent; // 0x748(0x08)
	struct UDFMWeaponDataAnalysisComponent* WeaponDataAnalysisComponent; // 0x750(0x08)
	int32_t MaxTLogPkgPerFrame; // 0x758(0x04)
	int32_t MaxSecTLogPkgPerFrame; // 0x75c(0x04)
	int32_t MaxTLogPkgSize; // 0x760(0x04)
	int32_t MinWaittingTLogNumThreshold; // 0x764(0x04)
	float MaxTLogWaitFrameCount; // 0x768(0x04)
	int32_t DefaultTLogWaitSendNum; // 0x76c(0x04)
	int32_t DefaultTLogTotalSendNum; // 0x770(0x04)
	int32_t DefaultClientTLogWaitSendNum; // 0x774(0x04)
	int32_t DefaultClientTLogTotalSendNum; // 0x778(0x04)
	char pad_77C[0x4]; // 0x77c(0x04)
	struct TArray<struct FGemGameSettings> GemSettings; // 0x780(0x10)
	struct TArray<struct FAISpawnError> SpawnErrorList; // 0x790(0x10)
	struct TMap<uint32_t, int32_t> SpawnErrorMap; // 0x7a0(0x50)
	bool bOpenSpawnErrorSync; // 0x7f0(0x01)
	char pad_7F1[0x7]; // 0x7f1(0x07)
	struct UGPGameStateMissionComponent* GSMissionComponent; // 0x7f8(0x08)
	struct UGPMissionComponent* MissionComponent; // 0x800(0x08)
	struct UGPAbilityGameStateComponent* GSAbilityComponent; // 0x808(0x08)
	struct UGPDeformableGameStateComponent* DeformableGameStateComponent; // 0x810(0x08)
	struct UDFMAbilityLockerComponent* AbilityLockerComponent; // 0x818(0x08)
	struct UDFMBroadcastComponent* BroadcastComponent; // 0x820(0x08)
	struct UDFMGameDataCenterComponent* GameDataCenterComponent; // 0x828(0x08)
	struct UDFMScoreStatisticsComponent* ScoreStaticsComponent; // 0x830(0x08)
	char pad_838[0xf8]; // 0x838(0xf8)
	struct FAILabCharacterDebugInfoBunch AILabCharacterDebugInfoBunch; // 0x930(0x10)
	/*struct TSet<struct FName>*/char AILabIconViewCache[0x50]; // 0x940(0x50)
	struct TArray<struct AGPCharacterBase*> AILabCharacters; // 0x990(0x10)
	int32_t bEnableAILabDebug; // 0x9a0(0x04)
	int32_t bEnableAIDebug; // 0x9a4(0x04)
	char pad_9A8[0x8]; // 0x9a8(0x08)
	/*struct TSet<struct FName>*/char LocationIconViewCache[0x50]; // 0x9b0(0x50)
	struct TArray<struct FVector> AllDebugLocationInfoArray; // 0xa00(0x10)
	struct TArray<struct FName> DRLGroupIDs; // 0xa10(0x10)
	char pad_A20[0x8]; // 0xa20(0x08)
	struct TArray<struct AActor*> IgnoreMoveCollisionCharacterList; // 0xa28(0x10)

	void UpdatePlayerStatsRescue(uint64_t PlayerUin, int32_t dRescue); // Function DFMGameplay.DFMGameState.UpdatePlayerStatsRescue // (Native|Public) // @ game+0x62c5880
	void UpdatePlayerStatsDmg(uint64_t PlayerUin, float dDamage); // Function DFMGameplay.DFMGameState.UpdatePlayerStatsDmg // (Native|Public) // @ game+0x62c57b0
	void UpdatePlayerStatsBattleLevel(uint64_t PlayerUin, int32_t dBattleLevel); // Function DFMGameplay.DFMGameState.UpdatePlayerStatsBattleLevel // (Native|Public) // @ game+0x62c56e0
	void UpdatePlayerStats(uint64_t PlayerUin, int32_t dKill, int32_t dDeath, int32_t dAssit, int32_t dCapNum, int32_t DSCore); // Function DFMGameplay.DFMGameState.UpdatePlayerStats // (Native|Public) // @ game+0x62c5530
	void SetDifficultLevel(enum class EGameDifficultLevel NewDiffLv); // Function DFMGameplay.DFMGameState.SetDifficultLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x62c54b0
	void SetDFMGamePlayerMode(enum class EDFMGamePlayMode GamePlayerMode); // Function DFMGameplay.DFMGameState.SetDFMGamePlayerMode // (Final|Native|Public|BlueprintCallable) // @ game+0x62c5430
	void ServerOnPlayerLoginChanged(int32_t Type, struct ADFMPlayerState* PS); // Function DFMGameplay.DFMGameState.ServerOnPlayerLoginChanged // (Native|Public) // @ game+0x62c5360
	void SaveResOpenState(struct AActor* Actor, bool OpenState); // Function DFMGameplay.DFMGameState.SaveResOpenState // (Native|Public) // @ game+0x62c5290
	void RemoveDRLGroupIDs(struct FName DRLGroupID); // Function DFMGameplay.DFMGameState.RemoveDRLGroupIDs // (Final|Native|Public|BlueprintCallable) // @ game+0x62c5210
	void OnServerPlayerBan(int64_t InPlayerUin, int32_t reason, struct FString custom_reson); // Function DFMGameplay.DFMGameState.OnServerPlayerBan // (Native|Public) // @ game+0x62c4de0
	void OnServerGameEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMGameState.OnServerGameEnd // (Native|Public) // @ game+0x62c4d10
	void OnRep_MatchInfo(); // Function DFMGameplay.DFMGameState.OnRep_MatchInfo // (Native|Protected) // @ game+0x3578940
	void OnRep_DRLGroupIDs(struct TArray<struct FName> OldDRLGroupIDs); // Function DFMGameplay.DFMGameState.OnRep_DRLGroupIDs // (Final|Native|Protected) // @ game+0x62c4bf0
	void OnRep_DFMGamePlayerMode(); // Function DFMGameplay.DFMGameState.OnRep_DFMGamePlayerMode // (Final|Native|Protected) // @ game+0x62c4bd0
	void OnRep_AllDebugLocationInfoArray(); // Function DFMGameplay.DFMGameState.OnRep_AllDebugLocationInfoArray // (Final|Native|Public) // @ game+0x62c4bb0
	void OnRep_AILabCharacterDebugInfoBunch(); // Function DFMGameplay.DFMGameState.OnRep_AILabCharacterDebugInfoBunch // (Final|Native|Public) // @ game+0x62c4b90
	void OnPVPAIPreKick(struct ACHARACTER* KickedAICharacter); // Function DFMGameplay.DFMGameState.OnPVPAIPreKick // (Native|Public) // @ game+0x62c4b00
	void InitResOpenState(struct AActor* Actor); // Function DFMGameplay.DFMGameState.InitResOpenState // (Native|Public) // @ game+0x62c47a0
	void GPT_SetDifficultLevel(struct UGPTGameStateDifficultLevel* InDifficultLevel); // Function DFMGameplay.DFMGameState.GPT_SetDifficultLevel // (Final|Native|Public) // @ game+0x62c4170
	struct TArray<struct FPlayerStatItem> GetPlayerStatsByCamp(int32_t Camp, int32_t maxLen); // Function DFMGameplay.DFMGameState.GetPlayerStatsByCamp // (Native|Public) // @ game+0x62c4610
	struct FString GetLeftTimeStr(); // Function DFMGameplay.DFMGameState.GetLeftTimeStr // (Final|Native|Public|BlueprintCallable) // @ game+0x62c4590
	enum class EGameDifficultLevel GetDifficultLevel(); // Function DFMGameplay.DFMGameState.GetDifficultLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x62c4540
	enum class EDFMGamePlayMode GetDFMGamePlayMode(); // Function DFMGameplay.DFMGameState.GetDFMGamePlayMode // (Final|Native|Protected) // @ game+0x62c4510
	int32_t GetCurStageInt(); // Function DFMGameplay.DFMGameState.GetCurStageInt // (Native|Public) // @ game+0x62c44e0
	bool GetBattleFieldModeConfig(struct FBattleFieldModeConfig& OutBattleFieldModeConfig); // Function DFMGameplay.DFMGameState.GetBattleFieldModeConfig // (Native|Public|HasOutParms) // @ game+0x62c4270
	void AddDRLGroupIDs(struct FName DRLGroupID); // Function DFMGameplay.DFMGameState.AddDRLGroupIDs // (Final|Native|Public|BlueprintCallable) // @ game+0x62c40d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHealthDataComponent
// Size: 0x890 (Inherited: 0x608)
class UDFMHealthDataComponent : public UGPHealthDataComponent {
public:

	float LastDamageTimeSecond; // 0x608(0x04)
	char pad_60C[0x4]; // 0x60c(0x04)
	struct TArray<struct FAbilityDetectorBuffData> RescueBuffIDs; // 0x610(0x10)
	struct TArray<struct FAbilityDetectorBuffData> RescueTargetBuffIDs; // 0x620(0x10)
	float RescueBuffDelay; // 0x630(0x04)
	char pad_634[0x4]; // 0x634(0x04)
	struct FTimerHandle RescueBuffDelayHandler; // 0x638(0x08)
	float TLogCollectInterval; // 0x640(0x04)
	float TLogSendInterval; // 0x644(0x04)
	uint32_t ImpendingDeathBuffID; // 0x648(0x04)
	uint32_t SecondImpendingDeathBuffID; // 0x64c(0x04)
	uint32_t ThirdImpendingDeathBuffID; // 0x650(0x04)
	uint32_t CurImpendingDeathBuffID; // 0x654(0x04)
	uint32_t ImpendingDeathSpeedUpBuffID; // 0x658(0x04)
	uint32_t StopImpendingDeathBuffID; // 0x65c(0x04)
	struct TArray<uint32_t> EnterImpendingDeathRemoveBuffIDList; // 0x660(0x10)
	struct TArray<uint32_t> RebornFromImpendingDeathRemoveBuffIDList; // 0x670(0x10)
	struct TArray<uint32_t> EnterImpendingDeathAddOperateIDList; // 0x680(0x10)
	struct TArray<uint32_t> RebornFromImpendingDeathAddBuffIDList; // 0x690(0x10)
	char pad_6A0[0x10]; // 0x6a0(0x10)
	/*struct TSoftClassPtr<UObject>*/char CarryBodySoftClass[0x28]; // 0x6b0(0x28)
	struct AInventoryPickup_DeadBody* CarryBodyBox; // 0x6d8(0x08)
	bool bAllowSpawnBox; // 0x6e0(0x01)
	bool bCreateSettlementInfo; // 0x6e1(0x01)
	char pad_6E2[0x6]; // 0x6e2(0x06)
	/*struct TSoftObjectPtr<USkeletalMesh>*/char RescueItemMeshPath[0x28]; // 0x6e8(0x28)
	/*struct TSoftObjectPtr<USkeletalMesh>*/char RescueScoMeshPath[0x28]; // 0x710(0x28)
	/*struct TSoftObjectPtr<USkeletalMesh>*/char RescueItemMeshPathNormal[0x28]; // 0x738(0x28)
	struct AInventoryPickup_DeadBody* LootingBox; // 0x760(0x08)
	float InLowHpPercentage; // 0x768(0x04)
	float OutLowHpPercentage; // 0x76c(0x04)
	struct FName InLowHpAudioEvent; // 0x770(0x08)
	struct FName OutLowHpAudioEvent; // 0x778(0x08)
	struct FName InDyingAudioEvent; // 0x780(0x08)
	struct FName OutDyingAudioEvent; // 0x788(0x08)
	struct FName DeathAudioEvent; // 0x790(0x08)
	float LowHpPercentScreenPostProcessing; // 0x798(0x04)
	float LowHpPercentScreenEffect; // 0x79c(0x04)
	struct UCurveFloat* ScreenEffectOpacityCurve; // 0x7a0(0x08)
	struct UCurveFloat* ScreenEffectOpacityCurve_Mobile; // 0x7a8(0x08)
	struct FName LowHpScreenEffect_CN; // 0x7b0(0x08)
	struct FName LowHpScreenEffect_GLOBAL; // 0x7b8(0x08)
	struct FName LowHpScreenEffectOut_CN; // 0x7c0(0x08)
	struct FName LowHpScreenEffectOut_GLOBAL; // 0x7c8(0x08)
	struct USkeletalMesh* RescueItemMesh; // 0x7d0(0x08)
	struct USkeletalMesh* RecueScoItemMesh; // 0x7d8(0x08)
	struct USkeletalMesh* RescueItemMeshNormal; // 0x7e0(0x08)
	float RespirationFrequency; // 0x7e8(0x04)
	float RespirationVolume; // 0x7ec(0x04)
	char pad_7F0[0x10]; // 0x7f0(0x10)
	struct UCurveFloat* RespirationCurve; // 0x800(0x08)
	char pad_808[0x1c]; // 0x808(0x1c)
	int32_t NeedShowRescueNum; // 0x824(0x04)
	float FastRescueSOLTime; // 0x828(0x04)
	float FastRescueDeathSOLTime; // 0x82c(0x04)
	float FastRescueMPTime; // 0x830(0x04)
	float RescueSOLTime; // 0x834(0x04)
	float RescueDeathSOLTime; // 0x838(0x04)
	float RescueMPTime; // 0x83c(0x04)
	struct FString RescueVOStr; // 0x840(0x10)
	char pad_850[0x40]; // 0x850(0x40)

	void SetIsNeedRescue(int32_t InNeedShowRescueNum); // Function DFMGameplay.DFMHealthDataComponent.SetIsNeedRescue // (Final|Native|Public|BlueprintCallable) // @ game+0x62ca300
	void ServerSendTLog(); // Function DFMGameplay.DFMHealthDataComponent.ServerSendTLog // (Native|Protected) // @ game+0x40a6c20
	void ServerPlayerRescueEndDelegate(struct AGPCharacterBase* Player, struct AGPCharacterBase* RescueTarget, bool IsSucess); // Function DFMGameplay.DFMHealthDataComponent.ServerPlayerRescueEndDelegate // (Native|Public) // @ game+0x62ca0e0
	void ServerCollectTLogData(); // Function DFMGameplay.DFMHealthDataComponent.ServerCollectTLogData // (Native|Protected) // @ game+0x3660170
	void Server2ClientBeRescuedSetBasePose(bool FastRescue); // Function DFMGameplay.DFMHealthDataComponent.Server2ClientBeRescuedSetBasePose // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x62ca050
	void OnServerMatchEnded(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMHealthDataComponent.OnServerMatchEnded // (Native|Protected) // @ game+0x62c9b90
	void OnRep_NeedShowRescueNum(); // Function DFMGameplay.DFMHealthDataComponent.OnRep_NeedShowRescueNum // (Final|Native|Public) // @ game+0x62c9a30
	void OnCharacterReborn(); // Function DFMGameplay.DFMHealthDataComponent.OnCharacterReborn // (Final|Native|Protected) // @ game+0x62c8f10
	void OnChangeCarryBox(struct AGPCharacterBase* OwnerCharacter, char OldStauts, char NewStatus); // Function DFMGameplay.DFMHealthDataComponent.OnChangeCarryBox // (Final|Native|Public|BlueprintCallable) // @ game+0x62c8e10
	void OnAddCarryBoxForBadGirl(); // Function DFMGameplay.DFMHealthDataComponent.OnAddCarryBoxForBadGirl // (Final|Native|Public|BlueprintCallable) // @ game+0x62c8df0
	bool IsEnemy(struct AGPCharacterBase* CharecterA, struct AGPCharacterBase* CharecterB); // Function DFMGameplay.DFMHealthDataComponent.IsEnemy // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x62c8a80
	struct FVector GetRescueStandPoint(struct FVector& RescueLocation); // Function DFMGameplay.DFMHealthDataComponent.GetRescueStandPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62c88b0
	struct UGPAttributeSetHealth* GetGPAttributeSetHealth(); // Function DFMGameplay.DFMHealthDataComponent.GetGPAttributeSetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x62c8740
	struct UDFMHealthDataComponent* STATIC_Get(struct AActor* Owner); // Function DFMGameplay.DFMHealthDataComponent.Get // (Final|Native|Static|Public) // @ game+0x62c86c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMImpendingDeathMarkerItem
// Size: 0x5a0 (Inherited: 0x5a0)
class UDFMImpendingDeathMarkerItem : public UGPImpendingDeathMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMInteractorComponentBase
// Size: 0x6e0 (Inherited: 0x100)
class UDFMInteractorComponentBase : public UInteractorComponentBase {
public:

	bool bIgnoreSetMoveModeAgainWhenKnockBack; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	bool bGatherOutAreaSingleItemWhenUIOpened_Mobile; // 0x108(0x01)
	bool bGatherOutAreaSingleItemWhenUIOpened_HD; // 0x109(0x01)
	bool bUseClientCheckCurrentCanOperate; // 0x10a(0x01)
	bool bUseDSCheckCurrentCanOperate; // 0x10b(0x01)
	bool bUseDSCheckPlayerState; // 0x10c(0x01)
	bool bUseDSCheckPlayerInInteractorRange; // 0x10d(0x01)
	bool bUseDSCheckPlayerPassFilterCollision; // 0x10e(0x01)
	bool bUseDSCheckItemOwnProtect; // 0x10f(0x01)
	bool bUseDSCheckInteractorCanOverlap; // 0x110(0x01)
	bool bUse1PCamPosAsClientInteractOriginPos; // 0x111(0x01)
	bool bUseDSCheckPickupSingleItem; // 0x112(0x01)
	bool bUseDSCheckLootDeadBody; // 0x113(0x01)
	char pad_114[0x4]; // 0x114(0x04)
	struct TArray<int32_t> BuildedSignalStationIDHistoryArray; // 0x118(0x10)
	struct TArray<int32_t> BuildedSignalStationIDInMatchArray; // 0x128(0x10)
	struct TMap<int32_t, struct AInteractor_SignalStation*> SignalStationMap; // 0x138(0x50)
	struct TArray<struct FSafeBoxCodeUnlockedInfo> SafeBoxCodeUnlockedInfos; // 0x188(0x10)
	char pad_198[0x44]; // 0x198(0x44)
	int32_t ItemHeapInteractTimes; // 0x1dc(0x04)
	struct TArray<struct FSafeBoxCodeTryInfo> SafeBoxCodeTryInfos; // 0x1e0(0x10)
	int32_t SafeBoxCodeTryMaxTimes; // 0x1f0(0x04)
	char pad_1F4[0x2]; // 0x1f4(0x02)
	bool bSetOutlineContextLaziedOpened; // 0x1f6(0x01)
	bool bUseClearCachedDelayDataMobileToServer; // 0x1f7(0x01)
	float AmmoBoxExecuteTimeStamp; // 0x1f8(0x04)
	float PreciseMoveEndOverTime; // 0x1fc(0x04)
	char pad_200[0x8]; // 0x200(0x08)
	float PreciseInteractorSetOwnerNullOverTime; // 0x208(0x04)
	char pad_20C[0xc]; // 0x20c(0x0c)
	struct AActor* CachedInteractingActor; // 0x218(0x08)
	struct AActor* OwnerPawn; // 0x220(0x08)
	struct ACHARACTER* OperatorCharacter; // 0x228(0x08)
	char pad_230[0x30]; // 0x230(0x30)
	struct AGPCharacter* CachedGPCharacter; // 0x260(0x08)
	struct TArray<struct AActor*> AllConsiderableSingleInteractors; // 0x268(0x10)
	struct TArray<struct AActor*> MostPotentialAllInteractors; // 0x278(0x10)
	struct TArray<struct FInteractableProxy> AllHUDInteractableProxies; // 0x288(0x10)
	struct TArray<struct AActor*> MostPotentialWhiteDotInteractors; // 0x298(0x10)
	struct TArray<struct FInteractableProxy> AllWhiteDotInteractableProxies; // 0x2a8(0x10)
	struct TArray<struct FInteractableProxy> AllOutlineInteractableProxies; // 0x2b8(0x10)
	struct TArray<struct FPotentialInteractorInfo> CurrentPotentialInteractors; // 0x2c8(0x10)
	struct TArray<struct FPotentialInteractorInfo> CurrIndepViewPotnInteractors; // 0x2d8(0x10)
	struct TArray<struct AActor*> CustomPotentialInteractors_HD; // 0x2e8(0x10)
	struct TArray<struct AActor*> CustomPotentialInteractors_Mobile; // 0x2f8(0x10)
	struct AActor* CurrentInteractingObject; // 0x308(0x08)
	struct FInteractableProxy CurrentInteractingProxy; // 0x310(0x10)
	float DetectCakeRadiusShowWhiteDot; // 0x320(0x04)
	int32_t CurrentInteractingIndex; // 0x324(0x04)
	char pad_328[0x4]; // 0x328(0x04)
	int32_t OperateFlag; // 0x32c(0x04)
	struct FPreciseMovementPackage PreciseMovementPackage; // 0x330(0xa0)
	float PreciseMoveMaxDis; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct AActor* TriggerredInteractingObject; // 0x3d8(0x08)
	struct FPreciseInteractFOVMatrixTracker InteractFOVMatrixOneMinusTracker; // 0x3e0(0x20)
	struct FPreciseInteractFOVAdditiveTracker InteractFPPFOVAdditiveTracker; // 0x400(0x28)
	char pad_428[0x8]; // 0x428(0x08)
	struct FPreciseInteractTracker PreciseInteractTracket; // 0x430(0x70)
	struct FGPGameModeLogicConfig GameModeLogicConfig; // 0x4a0(0x30)
	struct TArray<struct FInteractableProxy> CachedFilteredInteractableProxies_Mobile; // 0x4d0(0x10)
	struct TArray<struct FInteractableProxy> CachedLastFilteredInteractableProxies_Mobile; // 0x4e0(0x10)
	struct FInteractableProxy CachedFilteredInteractableProxy_HD; // 0x4f0(0x10)
	struct FInteractableProxy CachedLastFilteredInteractableProxy_HD; // 0x500(0x10)
	struct TArray<struct FInteractableProxy> CachedFilteredOutlineInteractableProxies; // 0x510(0x10)
	struct TArray<struct FInteractableProxy> CachedLastFilteredOutlineInteractableProxies; // 0x520(0x10)
	struct TArray<struct FInteractableProxy> CachedAllOriginInteractableProxies; // 0x530(0x10)
	struct TArray<struct FInteractableProxy> CachedLastAllOriginInteractableProxies; // 0x540(0x10)
	struct AActor* CachedShowingHUDInteractor_HD; // 0x550(0x08)
	float DetectRatio; // 0x558(0x04)
	float DetectCakeHeight; // 0x55c(0x04)
	float DetectCakeCenterHeight; // 0x560(0x04)
	float DetectMaxDistanceInterval; // 0x564(0x04)
	float DetectCakeRadiusShowHUD; // 0x568(0x04)
	float DetectSingleItemExtraRadius; // 0x56c(0x04)
	float DetectCakeRadiusShowGlow; // 0x570(0x04)
	float AimingAtSingleItemActorAngle; // 0x574(0x04)
	float SingleItemOverlapMaxDistance; // 0x578(0x04)
	float SingleItemOverlapMaxAngle; // 0x57c(0x04)
	float CamLocBackOffset; // 0x580(0x04)
	char pad_584[0x4]; // 0x584(0x04)
	struct TArray<struct AActor*> AllOverlapActors; // 0x588(0x10)
	bool bCachedStaticDirty; // 0x598(0x01)
	char pad_599[0x7]; // 0x599(0x07)
	struct TArray<struct UPrimitiveComponent*> CachedStaticOverlapComps; // 0x5a0(0x10)
	struct FVector LastCachedStaticsLoc; // 0x5b0(0x0c)
	char pad_5BC[0x4]; // 0x5bc(0x04)
	struct TArray<struct FInteractableProxy> AllPotentialHUDInteractableProxies; // 0x5c0(0x10)
	struct TArray<struct AActor*> AllPotentialInteractors; // 0x5d0(0x10)
	struct TArray<struct AActor*> MostPotentialGlowInteractors; // 0x5e0(0x10)
	struct TArray<struct AActor*> AllPotentialOutlineInteractors; // 0x5f0(0x10)
	struct TArray<struct AActor*> AllWaitingListInteractingObject; // 0x600(0x10)
	struct AActor* LastInteractingObject; // 0x610(0x08)
	struct FInteractableProxy LastInteractingProxy; // 0x618(0x10)
	char pad_628[0x4]; // 0x628(0x04)
	float DetectInterval_HD; // 0x62c(0x04)
	float DetectInterval_Mobile; // 0x630(0x04)
	char pad_634[0x10]; // 0x634(0x10)
	float CheckOverlapMaxDistance; // 0x644(0x04)
	char pad_648[0x8]; // 0x648(0x08)
	bool bNeedTick; // 0x650(0x01)
	char pad_651[0x1]; // 0x651(0x01)
	bool bWhitelistEnable; // 0x652(0x01)
	char pad_653[0x5]; // 0x653(0x05)
	struct FGameplayTagContainer InteractableTags; // 0x658(0x20)
	struct AActor* CurrentHookPotentialInteractor; // 0x678(0x08)
	struct TArray<struct AActor*> GridInteractorArr; // 0x680(0x10)
	struct TArray<struct AActor*> MovableGridInteractorArr; // 0x690(0x10)
	char pad_6A0[0x20]; // 0x6a0(0x20)
	float PreCheckMaxDisSquared; // 0x6c0(0x04)
	float PreCheckMaxDisSquaredForPlayer; // 0x6c4(0x04)
	bool bUseActorLocInCheckPreForPlayer; // 0x6c8(0x01)
	bool bUseOnlyPlayerCharacterWhenCheckPreInMaxDis; // 0x6c9(0x01)
	bool bUseClientWhenCheckPreInMaxDis; // 0x6ca(0x01)
	bool bUseClientOverlapWhenCheckPreInMaxDis; // 0x6cb(0x01)
	float ClientOverlapRadius; // 0x6cc(0x04)
	struct TArray<struct AActor*> ClientOverlapInteractorArr; // 0x6d0(0x10)

	bool SetCurrentIndex(int32_t Index); // Function DFMGameplay.DFMInteractorComponentBase.SetCurrentIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x62d00f0
	void ServerVerifySafeBoxCode(struct AInventoryPickup_OpenBox* InSafeBoxCode, struct TArray<int32_t> InPwdDigits); // Function DFMGameplay.DFMInteractorComponentBase.ServerVerifySafeBoxCode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cffe0
	void ServerVerifyPassWord(struct AInteractor_HackPC* InPC, int32_t InNum); // Function DFMGameplay.DFMInteractorComponentBase.ServerVerifyPassWord // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cff10
	void ServerVerifyCodedLockPassWord(struct AInteractor_CodedLock* InCodedLock, struct TArray<int32_t> InPwdDigits); // Function DFMGameplay.DFMInteractorComponentBase.ServerVerifyCodedLockPassWord // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfe00
	void ServerUseRadio(struct AInteractor_Radio* InRadio); // Function DFMGameplay.DFMInteractorComponentBase.ServerUseRadio // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfd70
	void ServerStartOperateCodedLock(struct AInteractor_CodedLock* InCodedLock); // Function DFMGameplay.DFMInteractorComponentBase.ServerStartOperateCodedLock // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfce0
	void ServerSetSICSafeBoxUnlocking(struct AInteractor_SingleItemContainer* InSafeBox, bool InbUnlocking); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetSICSafeBoxUnlocking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf910
	void ServerSetScouting(struct AInteractor_Scouter* InScouter, uint64_t InPlayerUin); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetScouting // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfc10
	void ServerSetScouted(struct AInteractor_Scouter* InScouter); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetScouted // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4919fb0
	void ServerSetSafeBoxUnlocking(struct AInteractor_SingleItemContainer* InSafeBox, uint64_t InPlayerUin); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetSafeBoxUnlocking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfb40
	void ServerSetSafeBoxUnlocked(struct AInteractor_SingleItemContainer* InSafeBox); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetSafeBoxUnlocked // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cfab0
	void ServerSetSafeBoxCodeOperating(struct AInventoryPickup_OpenBox* InSafeBoxCode, struct AGPCharacterBase* InOperatingCharacter); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetSafeBoxCodeOperating // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf9e0
	void ServerSetOpeningUI(struct AInteractorBase* InInteractorBase, bool InbOpeningUI); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetOpeningUI // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf840
	void ServerSetHacking(struct AInteractor_HackPC* InPC, bool InbHacking); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetHacking // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf770
	void ServerSetCapturing(struct AInventoryPickup_OpenBox* InOpenBox, bool InbCapturing); // Function DFMGameplay.DFMInteractorComponentBase.ServerSetCapturing // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf6a0
	void ServerScoutNearestEnemy(struct AInteractor_Scouter* InScouter); // Function DFMGameplay.DFMInteractorComponentBase.ServerScoutNearestEnemy // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4901e00
	void ServerScoutExit(struct AInteractor_Scouter* InScouter); // Function DFMGameplay.DFMInteractorComponentBase.ServerScoutExit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x35fd650
	void ServerScoutBoss(struct AInteractor_Scouter* InScouter); // Function DFMGameplay.DFMInteractorComponentBase.ServerScoutBoss // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x4902040
	void ServerPlayDavidVOForCarryOn(); // Function DFMGameplay.DFMInteractorComponentBase.ServerPlayDavidVOForCarryOn // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x48e8b00
	void ServerPlayDavidVOForCarrying(); // Function DFMGameplay.DFMInteractorComponentBase.ServerPlayDavidVOForCarrying // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x36604b0
	void ServerPlayDavidVOForCarryDown(); // Function DFMGameplay.DFMInteractorComponentBase.ServerPlayDavidVOForCarryDown // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x3666040
	void ServerMiniGameData(struct AActor* inActor, int32_t EndState, int32_t Duration); // Function DFMGameplay.DFMInteractorComponentBase.ServerMiniGameData // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf5a0
	void ServerInterupt(struct FGameplayTag Tag); // Function DFMGameplay.DFMInteractorComponentBase.ServerInterupt // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf510
	void ServerInterruptInteracting(struct AActor* InInteractor, struct FGameplayTag InTag); // Function DFMGameplay.DFMInteractorComponentBase.ServerInterruptInteracting // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf440
	void ServerInteractAction(struct AActor* targetObj, struct FGameplayTag OperatorTag); // Function DFMGameplay.DFMInteractorComponentBase.ServerInteractAction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf370
	void ServerExecuteInteractByTag(struct AActor* inActor, struct FGameplayTag InTag, struct FInteractingContext InInteractingContext); // Function DFMGameplay.DFMInteractorComponentBase.ServerExecuteInteractByTag // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf140
	void ServerExecuteInteractableCompByTag(struct UDFInteractableComponentBase* InInteractableComp, struct FGameplayTag InTag); // Function DFMGameplay.DFMInteractorComponentBase.ServerExecuteInteractableCompByTag // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf2a0
	void ServerEndOperateCodedLock(struct AInteractor_CodedLock* InCodedLock); // Function DFMGameplay.DFMInteractorComponentBase.ServerEndOperateCodedLock // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf0b0
	void ServerCustomBreakBreakablePawn(struct ABreakablePawn* InBreakablePawn); // Function DFMGameplay.DFMInteractorComponentBase.ServerCustomBreakBreakablePawn // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cf020
	void ServerCurrentInteractWorldLocation(struct FInteractableProxy InInteractableProxy); // Function DFMGameplay.DFMInteractorComponentBase.ServerCurrentInteractWorldLocation // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cefa0
	void PrintCurrentInteractWorldLocation(); // Function DFMGameplay.DFMInteractorComponentBase.PrintCurrentInteractWorldLocation // (Final|Native|Public) // @ game+0x62cef80
	void PlayVOForCountDownReleaseDoor(struct FName VOName); // Function DFMGameplay.DFMInteractorComponentBase.PlayVOForCountDownReleaseDoor // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x38e19b0
	void OnSignalStationError(struct AInteractor_SignalStation* InSignalStation, int32_t InError); // Function DFMGameplay.DFMInteractorComponentBase.OnSignalStationError // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62ceeb0
	void OnShowDSCheckErrorTips(struct FText InTips); // Function DFMGameplay.DFMInteractorComponentBase.OnShowDSCheckErrorTips // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cecf0
	void OnRep_SafeBoxCodeUnlockedInfos(); // Function DFMGameplay.DFMInteractorComponentBase.OnRep_SafeBoxCodeUnlockedInfos // (Final|Native|Protected) // @ game+0x17621d0
	void OnRep_PreciseMovementPackage(); // Function DFMGameplay.DFMInteractorComponentBase.OnRep_PreciseMovementPackage // (Native|Protected) // @ game+0x405fef0
	void OnRep_OperateFlag(); // Function DFMGameplay.DFMInteractorComponentBase.OnRep_OperateFlag // (Native|Protected) // @ game+0x406cac0
	void OnRep_GridInteractorArr(); // Function DFMGameplay.DFMInteractorComponentBase.OnRep_GridInteractorArr // (Final|Native|Public) // @ game+0x62cecd0
	void OnPawnImpendingDeath(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.DFMInteractorComponentBase.OnPawnImpendingDeath // (Final|Native|Public) // @ game+0x62cec50
	void OnPawnDie(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.DFMInteractorComponentBase.OnPawnDie // (Final|Native|Public) // @ game+0x62cebd0
	void OnPakMachineError(struct AInteractor_SingleItemContainer* InPakMachine, int32_t InError); // Function DFMGameplay.DFMInteractorComponentBase.OnPakMachineError // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62ceb00
	void OnNewInteractStaticActorCreate(struct AActor* inActor, bool bCreate); // Function DFMGameplay.DFMInteractorComponentBase.OnNewInteractStaticActorCreate // (Final|Native|Public|BlueprintCallable) // @ game+0x62cea30
	void OnKnockBack(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.DFMInteractorComponentBase.OnKnockBack // (Final|Native|Public) // @ game+0x62ce9b0
	void OnItemHeapError(struct AInteractor_SingleItemContainer* InItemHeap, int32_t InError); // Function DFMGameplay.DFMInteractorComponentBase.OnItemHeapError // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62ce8e0
	void OnCurrentInteractAction(struct FGameplayTag OperatorTag, bool ignoreOperateFlag); // Function DFMGameplay.DFMInteractorComponentBase.OnCurrentInteractAction // (Final|Native|Public|BlueprintCallable) // @ game+0x62ce810
	void OnControllerSwitchActivated(struct ADFMCharacter* TriggerCharacter, struct FText& TriggerTips, float ShowTime); // Function DFMGameplay.DFMInteractorComponentBase.OnControllerSwitchActivated // (Final|Native|Public|HasOutParms) // @ game+0x62ce6c0
	void OnAssassinate(bool InBeing); // Function DFMGameplay.DFMInteractorComponentBase.OnAssassinate // (Final|Native|Public) // @ game+0x62ce630
	void HookPotentialInteractor(struct AActor* InPoteitialInteractor); // Function DFMGameplay.DFMInteractorComponentBase.HookPotentialInteractor // (Final|Native|Public) // @ game+0x62ce5b0
	struct TArray<struct AActor*> GetAllConsiderableSingleInteractors(); // Function DFMGameplay.DFMInteractorComponentBase.GetAllConsiderableSingleInteractors // (Final|Native|Public) // @ game+0x62ce4c0
	void Get1PInteractOrginPosAndForwardForDSByLSI(/*struct TScriptInterface<ILootSpaceInterface> LootSpaceInterface, struct FVector& OriginPos, struct FVector& OriginForward, bool& OutbHitInteractor*/); // Function DFMGameplay.DFMInteractorComponentBase.Get1PInteractOrginPosAndForwardForDSByLSI // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62ce310
	void Get1PInteractOrginPosAndForwardForDS(struct AActor* inActor, struct FVector& OriginPos, struct FVector& OriginForward, bool& OutbHitInteractor); // Function DFMGameplay.DFMInteractorComponentBase.Get1PInteractOrginPosAndForwardForDS // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62ce190
	void Get1PInteractOrginPosAndForward(struct FVector& OriginPos, struct FVector& OriginForward); // Function DFMGameplay.DFMInteractorComponentBase.Get1PInteractOrginPosAndForward // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62ce0a0
	void ForcePreciseInteractorSetOwnerNull(); // Function DFMGameplay.DFMInteractorComponentBase.ForcePreciseInteractorSetOwnerNull // (Final|Native|Public) // @ game+0x62ce080
	void EnableInteractiveWhitelist(bool bEnable); // Function DFMGameplay.DFMInteractorComponentBase.EnableInteractiveWhitelist // (Native|Public|BlueprintCallable) // @ game+0x3607fd0
	bool ConfirmCurrentInteractingObject(struct AActor* replacementObj); // Function DFMGameplay.DFMInteractorComponentBase.ConfirmCurrentInteractingObject // (Native|Public|BlueprintCallable) // @ game+0x62cdfe0
	void ClientShowFindAndEscapeTips(); // Function DFMGameplay.DFMInteractorComponentBase.ClientShowFindAndEscapeTips // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x48e8ae0
	void ClientShowControllerSwitchActivatedTips(struct FText ControllerSwitchActivatedTips, float ShowTime); // Function DFMGameplay.DFMInteractorComponentBase.ClientShowControllerSwitchActivatedTips // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cdee0
	void ClientReceiveScoutNearestEnemy(uint64_t InPlayerUin, bool Inb1P); // Function DFMGameplay.DFMInteractorComponentBase.ClientReceiveScoutNearestEnemy // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cde10
	void ClientReceiveScoutExit(int32_t InExitID, int32_t InState, bool Inb1P); // Function DFMGameplay.DFMInteractorComponentBase.ClientReceiveScoutExit // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cdd10
	void ClientReceiveScoutedByNearestEnemy(); // Function DFMGameplay.DFMInteractorComponentBase.ClientReceiveScoutedByNearestEnemy // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x17553a0
	void ClientReceiveScoutBoss(struct FString InBossPOIName, bool Inb1P); // Function DFMGameplay.DFMInteractorComponentBase.ClientReceiveScoutBoss // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cdc00
	void ClientOnVerifySafeBoxCode(struct AInventoryPickup_OpenBox* InSafeBoxCode, struct TArray<int32_t> InPwdDigits, int32_t InRet); // Function DFMGameplay.DFMInteractorComponentBase.ClientOnVerifySafeBoxCode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cdac0
	void ClientOnUseRadio3(struct AInteractor_Radio* InRadio, struct TArray<uint32_t> InExitIdArray, struct TArray<uint32_t> InSelectedIdArray); // Function DFMGameplay.DFMInteractorComponentBase.ClientOnUseRadio3 // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cd940
	void ClientOnHackPcFireRocket(struct AInteractor_HackPC* HackPC, int32_t ErrorCode); // Function DFMGameplay.DFMInteractorComponentBase.ClientOnHackPcFireRocket // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x62cd870
	void ClientCurrentInteractWorldLocation(struct FInteractableProxy InInteractableProxy, struct FVector ServerLoc); // Function DFMGameplay.DFMInteractorComponentBase.ClientCurrentInteractWorldLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x62cd7a0
	void Client2ServerEndSmallDelayOperate(); // Function DFMGameplay.DFMInteractorComponentBase.Client2ServerEndSmallDelayOperate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd780
	void Client2ServerEndDelayOperate(); // Function DFMGameplay.DFMInteractorComponentBase.Client2ServerEndDelayOperate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd760
	void Client2ServerBeginSmallDelayOperate(float Timeout); // Function DFMGameplay.DFMInteractorComponentBase.Client2ServerBeginSmallDelayOperate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd6e0
	void Client2ServerBeginDelayOperate(float Timeout); // Function DFMGameplay.DFMInteractorComponentBase.Client2ServerBeginDelayOperate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd660
	void ClearCachedDelayDataMobileToServer(int32_t reason, struct FString DesStr); // Function DFMGameplay.DFMInteractorComponentBase.ClearCachedDelayDataMobileToServer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62cd560
	void CleanHookPotentialActor(); // Function DFMGameplay.DFMInteractorComponentBase.CleanHookPotentialActor // (Final|Native|Public) // @ game+0x62cd540
	bool CheckCanInteractingObject(struct AActor* InteractingObject); // Function DFMGameplay.DFMInteractorComponentBase.CheckCanInteractingObject // (Native|Public|BlueprintCallable) // @ game+0x62cd4a0
	bool CanCheck(); // Function DFMGameplay.DFMInteractorComponentBase.CanCheck // (Native|Public|BlueprintCallable) // @ game+0x62cd3d0
	bool CancelCurrentInteractingObject(struct AActor* replacementObj); // Function DFMGameplay.DFMInteractorComponentBase.CancelCurrentInteractingObject // (Native|Public|BlueprintCallable) // @ game+0x62cd400
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTieBreaker
// Size: 0x5f0 (Inherited: 0x3d8)
class ADFMTieBreaker : public APawn {
public:

	char pad_3D8[0x38]; // 0x3d8(0x38)
	struct UDFMTieBreakerHealthComponent* HealthComp; // 0x410(0x08)
	struct UDFMTieBreakerAudioComponent* AudioComp; // 0x418(0x08)
	uint32_t CurTieRider; // 0x420(0x04)
	uint32_t CurTieMaxRider; // 0x424(0x04)
	bool bIsActived; // 0x428(0x01)
	bool bEnableSelfInteract; // 0x429(0x01)
	char pad_42A[0x56]; // 0x42a(0x56)
	struct TArray<struct FTieWeaponInfo> TieWeaponInfos; // 0x480(0x10)
	struct TMap<struct FName, struct UFXResourceContainerComponent*> DamageEffectContainers; // 0x490(0x50)
	struct TMap<struct FString, struct FTieWeaknessInfo> TieWeaknessMap; // 0x4e0(0x50)
	enum class ETieBreakerState CurTieBreakerState; // 0x530(0x01)
	char pad_531[0x3]; // 0x531(0x03)
	float ActiveWaitingTime; // 0x534(0x04)
	float TieDamagedFactor; // 0x538(0x04)
	char pad_53C[0x4]; // 0x53c(0x04)
	struct TMap<struct FName, float> TieWeaknessArr; // 0x540(0x50)
	int32_t OwnerCamp; // 0x590(0x04)
	int32_t MaxRider; // 0x594(0x04)
	struct TMap<struct FName, struct FName> WeaponAndDoorMap; // 0x598(0x50)
	float WeaponAnimWaitTime; // 0x5e8(0x04)
	float WeaponRebornTime; // 0x5ec(0x04)

	void SwitchUnusedTieWeapon(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.DFMTieBreaker.SwitchUnusedTieWeapon // (Final|Native|Public) // @ game+0x6301b10
	void SwitchSelectTieWeapon(struct ACHARACTER* OperatorCharacter, struct ADFFixedWeaponPawn* SelectWeapon); // Function DFMGameplay.DFMTieBreaker.SwitchSelectTieWeapon // (Final|Native|Public) // @ game+0x6301a50
	void SetTieWeaponInfos(struct ADFFixedWeaponPawn* InTieWeapon, enum class ETieWeaponState InTieWeaponState); // Function DFMGameplay.DFMTieBreaker.SetTieWeaponInfos // (Final|Native|Public) // @ game+0x6301820
	void SetTieBreakerAllWeaponState(enum class ETieWeaponState InTieWeaponState); // Function DFMGameplay.DFMTieBreaker.SetTieBreakerAllWeaponState // (Final|Native|Public) // @ game+0x63017a0
	void SetTieBreakerAllDoorState(enum class ETieDoorState InTieDoorState); // Function DFMGameplay.DFMTieBreaker.SetTieBreakerAllDoorState // (Final|Native|Public) // @ game+0x6301720
	void SetCurTieBreakerState(enum class ETieBreakerState InTieBreakerState); // Function DFMGameplay.DFMTieBreaker.SetCurTieBreakerState // (Final|Native|Public) // @ game+0x6301600
	void SetActiveState(bool InbIsActived); // Function DFMGameplay.DFMTieBreaker.SetActiveState // (Final|Native|Public) // @ game+0x6301570
	void PlayWeaponAndDoorAnimation(bool bIsOpenAnim); // Function DFMGameplay.DFMTieBreaker.PlayWeaponAndDoorAnimation // (Final|Native|Public) // @ game+0x63014e0
	void PlayTowerWeaponAnimation(bool bIsOpenAnim); // Function DFMGameplay.DFMTieBreaker.PlayTowerWeaponAnimation // (Final|Native|Public) // @ game+0x6301450
	void OnWeaponReborn(struct ADFFixedWeaponPawn* InTieWeapon); // Function DFMGameplay.DFMTieBreaker.OnWeaponReborn // (Final|Native|Public) // @ game+0x63013d0
	void OnWeaponAnimWaitHandle(); // Function DFMGameplay.DFMTieBreaker.OnWeaponAnimWaitHandle // (Final|Native|Public) // @ game+0x63012f0
	void OnServerWarTowerActive(); // Function DFMGameplay.DFMTieBreaker.OnServerWarTowerActive // (Final|Native|Public) // @ game+0x6301250
	void OnServerTieWeaponHealthChanged(float HealthPrecent, float MaxHealth, float CurrentHealth); // Function DFMGameplay.DFMTieBreaker.OnServerTieWeaponHealthChanged // (Final|Native|Public) // @ game+0x6301140
	void OnServerTieWeaponDestory(struct AActor* InTieWeapon); // Function DFMGameplay.DFMTieBreaker.OnServerTieWeaponDestory // (Final|Native|Public) // @ game+0x63010c0
	void OnServerTieWeaponBroken(struct ADFMSceneWeapon* InSceneWeapon); // Function DFMGameplay.DFMTieBreaker.OnServerTieWeaponBroken // (Final|Native|Public) // @ game+0x6301040
	void OnServerSwitchWeaponSeat(struct AGPCharacter* CHARACTER); // Function DFMGameplay.DFMTieBreaker.OnServerSwitchWeaponSeat // (Final|Native|Public) // @ game+0x6300fc0
	void OnServerRebornWarTower(struct AActor* CHARACTER, struct AActor* TargetWarTower); // Function DFMGameplay.DFMTieBreaker.OnServerRebornWarTower // (Final|Native|Public) // @ game+0x6300f00
	void OnServerFirstActived(); // Function DFMGameplay.DFMTieBreaker.OnServerFirstActived // (Final|Native|Public) // @ game+0x6300ee0
	void OnSceneWeaponUsingStateChanged(struct AActor* InTieWeapon); // Function DFMGameplay.DFMTieBreaker.OnSceneWeaponUsingStateChanged // (Final|Native|Public) // @ game+0x6300e60
	void OnRep_TieWeaponInfosUpdate(); // Function DFMGameplay.DFMTieBreaker.OnRep_TieWeaponInfosUpdate // (Final|Native|Public) // @ game+0x6300e40
	void OnRep_CurTieBreakerStateChanged(); // Function DFMGameplay.DFMTieBreaker.OnRep_CurTieBreakerStateChanged // (Final|Native|Public) // @ game+0x6300e00
	void OnClientInitPlayer(struct AGPCharacter* OperatorCharacter, struct ADFMSceneWeapon* TargetSceneWeapon); // Function DFMGameplay.DFMTieBreaker.OnClientInitPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63009d0
	struct FVector GetPlayerOffPoint(); // Function DFMGameplay.DFMTieBreaker.GetPlayerOffPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63007e0
	struct UActorComponent* GetComponentFromName(struct UClass* ComponentClass, struct FString FindName); // Function DFMGameplay.DFMTieBreaker.GetComponentFromName // (Final|Native|Public) // @ game+0x6300670
	void CreateEffect(struct FName SocketName, struct UParticleSystem* Effect, struct UParticleSystemGroup* EffectGroup, struct UGPAudioEventAsset* Sound, bool Active); // Function DFMGameplay.DFMTieBreaker.CreateEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x6300440
	void ChangeDamagedMesh(struct USkeletalMesh* NewMesh); // Function DFMGameplay.DFMTieBreaker.ChangeDamagedMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x2279c80
	void BP_HealthStateEffect(enum class ETieBreakerState CurState, float HPRatio); // Function DFMGameplay.DFMTieBreaker.BP_HealthStateEffect // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CommentItemBP
// Size: 0x48 (Inherited: 0x30)
class UCommentItemBP : public UObject {
public:

	struct FText ItemID; // 0x30(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkCondBase
// Size: 0x30 (Inherited: 0x30)
class UDFMPerkCondBase : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkLogicBase
// Size: 0x30 (Inherited: 0x30)
class UDFMPerkLogicBase : public UObject {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerStatisticsComponent
// Size: 0x470 (Inherited: 0x100)
class UDFMPlayerStatisticsComponent : public UActorComponent {
public:

	char pad_100[0x360]; // 0x100(0x360)
	struct AGPPlayerController* OwnerController; // 0x460(0x08)
	struct AGPCharacter* OwnerCharacter; // 0x468(0x08)

	void OnVOSubtitleSeqFinishedEventNtf(struct ACharacterBase* CHARACTER, struct FName& SubtitleSeqId); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnVOSubtitleSeqFinishedEventNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62ebab0
	void OnVehicleDiedNtf(struct FDamageResultInfo& DestroyedDamageInfo); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnVehicleDiedNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62ebba0
	void OnVehicleAmmoSupplyNtf(); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnVehicleAmmoSupplyNtf // (Final|Native|Protected) // @ game+0x62ebb80
	void OnUseSkillNtf(int32_t ExportId, int32_t SkillId, int32_t Num); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnUseSkillNtf // (Final|Native|Protected) // @ game+0x62eb9b0
	void OnUsePassiveSkillNtf(int32_t ExportId, int32_t SkillId, struct AActor* TargetActor); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnUsePassiveSkillNtf // (Final|Native|Protected) // @ game+0x62eb8b0
	void OnUseItemFinishedNtf(uint64_t InPlayerUin, uint64_t InItemID, bool bIsSucceed); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnUseItemFinishedNtf // (Final|Native|Protected) // @ game+0x62eb7a0
	void OnServerWeaponChangeNtf(struct AGPCharacterBase* GPCharacterBase, struct AWeaponBase* OldWeapon, struct AWeaponBase* NewWeapon); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerWeaponChangeNtf // (Final|Native|Protected) // @ game+0x62eb680
	void OnServerSectorOccupyStatusChangedNtf(/*struct AActor* InSectorAnchorActor, int32_t OccupyCampId, int32_t BetterCamp, struct TSet<struct TWeakObjectPtr<struct ADFMCharacter>>& InnerCharacters, struct FName NameInIcon*/); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerSectorOccupyStatusChangedNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62eb480
	void OnServerPlayerSettlement(enum class EMatchOverReason MatchOverReason, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerPlayerSettlement // (Final|Native|Protected) // @ game+0x62eb3c0
	void OnServerPlayerRescueSucceedNtf(struct AGPCharacterBase* Player, struct AGPCharacterBase* RescueTarget); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerPlayerRescueSucceedNtf // (Final|Native|Protected) // @ game+0x62eb300
	void OnServerItemMoveNtf(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerItemMoveNtf // (Final|Native|Protected) // @ game+0x62eb260
	void OnServerGuardPlayerUinArrayUpdate(int32_t InState, struct TArray<int64_t> GuardPlayerUinArray); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnServerGuardPlayerUinArrayUpdate // (Final|Native|Protected) // @ game+0x62eb100
	void OnQuestLootItemMoveNtf(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnQuestLootItemMoveNtf // (Final|Native|Protected) // @ game+0x62eb060
	void OnPostMakeDamageNtf(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnPostMakeDamageNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62eaf90
	void OnPlayerStatUpdateNtf(uint64_t PlayerUin, struct FPlayerStatItem& PlayerStat, int32_t dKill, int32_t dDeath, int32_t dAssit); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnPlayerStatUpdateNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62eada0
	void OnPlayerRebornOnRebornFlagNtf(uint64_t OwnerPlayerId, struct AGPCharacter* RebornCharacter, int32_t RebornFlagType); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnPlayerRebornOnRebornFlagNtf // (Final|Native|Protected) // @ game+0x62eaca0
	void OnPlayerInEscaping(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnPlayerInEscaping // (Final|Native|Protected) // @ game+0x62eabe0
	void OnPlayerEscape(struct ACHARACTER* CHARACTER, struct AController* Controller); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnPlayerEscape // (Final|Native|Protected) // @ game+0x62eab20
	void OnMakeDamageToVehicleNotify(struct FDamageResultInfo& DamageInfo); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnMakeDamageToVehicleNotify // (Final|Native|Protected|HasOutParms) // @ game+0x62eaa50
	void OnLootOpenBox(uint64_t Uin, struct FString OpenBoxType, bool bFirstOpen); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnLootOpenBox // (Final|Native|Protected) // @ game+0x62ea8c0
	void OnInteractItem(uint64_t Uin, struct AActor* Actor, enum class EInteractorType Type, struct FString Params); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnInteractItem // (Final|Native|Protected) // @ game+0x62ea6f0
	void OnGetOnVehicleNtf(struct AActor* CHARACTER, struct AActor* Vehicle, struct FName Seat); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnGetOnVehicleNtf // (Final|Native|Protected) // @ game+0x62ea5f0
	void OnGetOffVehicleNtf(struct AActor* CHARACTER, struct AActor* Vehicle); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnGetOffVehicleNtf // (Final|Native|Protected) // @ game+0x62ea530
	void OnControllerPossessPawnCalled(struct APlayerController* Conroller, struct APawn* Pawn); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnControllerPossessPawnCalled // (Final|Native|Protected) // @ game+0x62ea470
	void OnCharacterLiveStatusChanged(struct AGPCharacterBase* CharacterBase, enum class ECharacterLiveStatus OldStatus, enum class ECharacterLiveStatus NewStatus); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnCharacterLiveStatusChanged // (Final|Native|Protected) // @ game+0x62ea370
	void OnCarryBodyFinish(struct AActor* BodyActor); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnCarryBodyFinish // (Final|Native|Protected) // @ game+0x62ea2f0
	void OnBreakthroughRankSkillUsedNtf(struct ADFMCharacter* CHARACTER, int32_t SkillId, int32_t CurrentCostScore, uint64_t VehicleId); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnBreakthroughRankSkillUsedNtf // (Final|Native|Protected) // @ game+0x62ea1b0
	void OnBehaviorScoreUpdateNtf(struct AGPCharacter* CHARACTER, int32_t ScoreName, struct FName ScoreNameExt, int32_t Score); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnBehaviorScoreUpdateNtf // (Final|Native|Protected) // @ game+0x62ea070
	void OnBeforeMakeDamageNtf(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnBeforeMakeDamageNtf // (Final|Native|Protected|HasOutParms) // @ game+0x62e9fa0
	void OnAmmoSupplyOnMapNtf(); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnAmmoSupplyOnMapNtf // (Final|Native|Protected) // @ game+0x62e9f80
	void OnAmmoSupplyNtf(struct ADFMCharacter* CHARACTER, struct ADFMCharacter* TargetCharacter, int32_t Count); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnAmmoSupplyNtf // (Final|Native|Protected) // @ game+0x62e9e80
	void OnAbilityCastNtf(enum class ECharingSlot InSlot, int32_t InSkillID, bool InbCastOrEnd); // Function DFMGameplay.DFMPlayerStatisticsComponent.OnAbilityCastNtf // (Final|Native|Protected) // @ game+0x62e9d70
	void NtfContractEnd(uint64_t InPlayerUin, uint64_t InQuestId, int32_t objectiveId, enum class EGPQuestEndReason EndReason, int32_t Step); // Function DFMGameplay.DFMPlayerStatisticsComponent.NtfContractEnd // (Final|Native|Protected) // @ game+0x62e9be0
	void HandleQuestEvent(struct AActor* MakerActor, struct TArray<struct FName>& EventTagArr); // Function DFMGameplay.DFMPlayerStatisticsComponent.HandleQuestEvent // (Final|Native|Protected|HasOutParms) // @ game+0x62e99c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerCameraManager
// Size: 0x5170 (Inherited: 0x5100)
class ADFMPlayerCameraManager : public AGPPlayerCameraManager {
public:

	char pad_5100[0x44]; // 0x5100(0x44)
	bool bSeamlessEntryTransition; // 0x5144(0x01)
	enum class ECollisionChannel ProbeChannel; // 0x5145(0x01)
	char pad_5146[0x2]; // 0x5146(0x02)
	float ProbeSize; // 0x5148(0x04)
	char pad_514C[0x4]; // 0x514c(0x04)
	struct TArray<enum class EDFMGamePlayMode> LogicAudioModeConfig; // 0x5150(0x10)
	struct ULogicAudioManager* LogicAudioManager; // 0x5160(0x08)
	bool EnableLogicAudio; // 0x5168(0x01)
	char pad_5169[0x3]; // 0x5169(0x03)
	float CustomLogicAudioTickInterval; // 0x516c(0x04)

	void InitLogicAudio(); // Function DFMGameplay.DFMPlayerCameraManager.InitLogicAudio // (Final|Native|Public) // @ game+0x62d9e10
	struct FVector BP_GetCameraOffset(float ScopeHeight, float ScopeRadius); // Function DFMGameplay.DFMPlayerCameraManager.BP_GetCameraOffset // (Native|Event|Public|HasDefaults|BlueprintEvent|Const) // @ game+0x62d9660
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphVisibleSetManager
// Size: 0xe0 (Inherited: 0x30)
class UDFMReplicationGraphVisibleSetManager : public UObject {
public:

	char pad_30[0x51]; // 0x30(0x51)
	bool bDisableManager; // 0x81(0x01)
	char pad_82[0x2]; // 0x82(0x02)
	float CullDist; // 0x84(0x04)
	float ReserveDist; // 0x88(0x04)
	float PausedDist; // 0x8c(0x04)
	float CullSecond; // 0x90(0x04)
	float PausedSecond; // 0x94(0x04)
	bool bCullPlayerCharacter; // 0x98(0x01)
	bool bCullAIPlayerBot; // 0x99(0x01)
	bool bCullAILabBot; // 0x9a(0x01)
	bool bCullBTAICharacter; // 0x9b(0x01)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TArray<struct FDynamicSpatialFrequency> InvisibleDynamicSpatialFrequencies; // 0xa0(0x10)
	char pad_B0[0x30]; // 0xb0(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSettlementComponent
// Size: 0x298 (Inherited: 0x100)
class UDFMSettlementComponent : public UActorComponent {
public:

	char pad_100[0xf8]; // 0x100(0xf8)
	struct TMap<struct ADFMCharacter*, struct FTimerHandle> OnPlayerDiedClientShowHeroCardTimerHandleMap; // 0x1f8(0x50)
	char pad_248[0x50]; // 0x248(0x50)

	void OnServerGameEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMSettlementComponent.OnServerGameEnd // (Native|Public) // @ game+0x62f6de0
	void OnPlayerRealFinishGame(struct ADFMPlayerState* PlayerState); // Function DFMGameplay.DFMSettlementComponent.OnPlayerRealFinishGame // (Final|Native|Public) // @ game+0x62f6d20
	void OnPlayerMatchOver(struct ADFMPlayerState* DFMPlayerState, enum class EMatchOverReason& MatchOverReason, bool IsOffline); // Function DFMGameplay.DFMSettlementComponent.OnPlayerMatchOver // (Native|Public|HasOutParms) // @ game+0x62f6c00
	void OnPlayerEndDeathWatch(struct AController* Controller); // Function DFMGameplay.DFMSettlementComponent.OnPlayerEndDeathWatch // (Final|Native|Public) // @ game+0x62f6b80
	void OnPlayerDied2FinishGame(struct ADFMCharacter* DFMCharacter); // Function DFMGameplay.DFMSettlementComponent.OnPlayerDied2FinishGame // (Final|Native|Public) // @ game+0x62f6b00
	void OnPlayerDied(struct AController* Controller); // Function DFMGameplay.DFMSettlementComponent.OnPlayerDied // (Native|Public) // @ game+0x129b970
	void OnDelayServerGameEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.DFMSettlementComponent.OnDelayServerGameEnd // (Native|Public) // @ game+0x62f6990
	void OnAILabPlayerDied(struct AController* Controller); // Function DFMGameplay.DFMSettlementComponent.OnAILabPlayerDied // (Native|Public) // @ game+0x360bad0
	void DestroyActor(struct ACHARACTER* CHARACTER); // Function DFMGameplay.DFMSettlementComponent.DestroyActor // (Final|Native|Public|Const) // @ game+0x62f6460
	void AILabDebugReborn(struct AController* Controller); // Function DFMGameplay.DFMSettlementComponent.AILabDebugReborn // (Final|Native|Public) // @ game+0x895130
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponAAGunAnimInstance
// Size: 0x298 (Inherited: 0x280)
class UDFMWeaponAAGunAnimInstance : public UAnimInstance {
public:

	float AimPitch; // 0x280(0x04)
	float AimYaw; // 0x284(0x04)
	bool IsFppWeapon; // 0x288(0x01)
	char pad_289[0xf]; // 0x289(0x0f)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DialogStateNode
// Size: 0x138 (Inherited: 0x30)
class UDialogStateNode : public UObject {
public:

	struct FNPCDialogDataRow Row; // 0x30(0xf8)
	/*struct FMulticastInlineDelegate*/char OnStateComplete[0x10]; // 0x128(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaTrigger
// Size: 0x378 (Inherited: 0x378)
class ADramaTrigger : public AActor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerBase
// Size: 0x40 (Inherited: 0x30)
class UExitCheckerBase : public UObject {
public:

	bool Not; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct APlayerExitBase* PlayerExit; // 0x38(0x08)

	void Init(struct APlayerExitBase* InArg); // Function DFMGameplay.ExitCheckerBase.Init // (Native|Public) // @ game+0xbe5f50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FormationSlotPattern
// Size: 0x50 (Inherited: 0x30)
class UFormationSlotPattern : public UObject {
public:

	bool bDrawDebug; // 0x30(0x01)
	enum class EFormationSyncType SyncType; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float SpeedFactor; // 0x34(0x04)
	float WaitMemberDistance; // 0x38(0x04)
	bool bEnableRandOffset; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float RandOffsetRadius; // 0x40(0x04)
	float WayPointDistance; // 0x44(0x04)
	float TargetRadius; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameplayMonitor
// Size: 0x3e0 (Inherited: 0x378)
class AGameplayMonitor : public AActor {
public:

	struct FSoftObjectPath RenderTargetPath; // 0x378(0x18)
	struct TArray<struct UClass*> RuntimeActorTypes; // 0x390(0x10)
	struct TArray<struct UClass*> RuntimeForbidActorTypes; // 0x3a0(0x10)
	struct FName Group; // 0x3b0(0x08)
	struct TArray<struct APlayerController*> CachedOutlandRepPlayerCtrls; // 0x3b8(0x10)
	bool bCachedRepEnable; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct AGameplayMonitorManager* MonitorMgr; // 0x3d0(0x08)
	char pad_3D8[0x8]; // 0x3d8(0x08)

	void RenderTargetLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.GameplayMonitor.RenderTargetLoadComplete // (Final|Native|Public) // @ game+0x6322a90
	void RemoveOutlandRepPlayer(struct APlayerController* PlayerCtrls); // Function DFMGameplay.GameplayMonitor.RemoveOutlandRepPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x6322a10
	void OnRenderTargetLoadComplete(struct UTexture2D* SceneRTTexture); // Function DFMGameplay.GameplayMonitor.OnRenderTargetLoadComplete // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct AActor*> FilterRenderActors(struct TArray<struct AActor*> AllConsiderActor); // Function DFMGameplay.GameplayMonitor.FilterRenderActors // (Final|Native|Public|BlueprintCallable) // @ game+0x6321850
	void AsyncLoadRenderTargetTexture(); // Function DFMGameplay.GameplayMonitor.AsyncLoadRenderTargetTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x63214f0
	void AddOutlandRepPlayer(struct APlayerController* PlayerCtrls); // Function DFMGameplay.GameplayMonitor.AddOutlandRepPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x6321470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_FPPCameraBoneAnimScaleCurve
// Size: 0x68 (Inherited: 0x50)
class UGPCameraModifier_FPPCameraBoneAnimScaleCurve : public UGPCameraModifier {
public:

	bool bEnable; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FName FocusBoneName; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct UCurveFloat* CameraAnimScaleCurve; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIEvent
// Size: 0x40 (Inherited: 0x30)
class UAIEvent : public UObject {
public:

	struct FAIEventQueueHandle Dest; // 0x30(0x08)
	struct FAIEventQueueHandle Source; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetViewBase
// Size: 0x40 (Inherited: 0x30)
class UHelmetViewBase : public UObject {
public:

	struct UHelmetComponent* HelmetComp; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HitNotifyComponent
// Size: 0x100 (Inherited: 0x100)
class UHitNotifyComponent : public UActorComponent {
public:


	void OnServerTakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.HitNotifyComponent.OnServerTakeDamage // (Native|Public|HasOutParms) // @ game+0x6337730
	void OnClientTakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.HitNotifyComponent.OnClientTakeDamage // (Native|Public|HasOutParms) // @ game+0x6337430
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorProcessComponent
// Size: 0x250 (Inherited: 0x100)
class UInteractorOperatorProcessComponent : public UActorComponent {
public:

	char pad_100[0x8]; // 0x100(0x08)
	bool bIgnoreCheckCanInteract; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct FGameplayTagContainer TriggerTags; // 0x110(0x20)
	struct FGameplayTagContainer AcquireTags; // 0x130(0x20)
	struct FGameplayTagContainer ForbidTags; // 0x150(0x20)
	struct FGameplayTagContainer CanInteractAcquireTags; // 0x170(0x20)
	struct FGameplayTagContainer CanInteractForbidTags; // 0x190(0x20)
	struct TArray<struct UInteractorOperatorConditionComponent*> MustConditions; // 0x1b0(0x10)
	struct TArray<struct UInteractorOperatorConditionComponent*> OneMoreConditions; // 0x1c0(0x10)
	struct TArray<struct UInteractorOperatorConditionComponent*> CanInteractMustConditions; // 0x1d0(0x10)
	struct TArray<struct UInteractorOperatorConditionComponent*> CanInteractOneMoreConditions; // 0x1e0(0x10)
	float CoolDown; // 0x1f0(0x04)
	float ExecuteTimeStamp; // 0x1f4(0x04)
	bool bUseCDOnly1P; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
	/*struct FMulticastInlineDelegate*/char OnProcessEndDelegate[0x10]; // 0x200(0x10)
	bool NeedPreciseInteractor; // 0x210(0x01)
	bool PreciseChangeFOVWhenMove; // 0x211(0x01)
	bool NeedSwitchToEmptyHand; // 0x212(0x01)
	bool NeedUseEmptyHandAnimBasePose; // 0x213(0x01)
	float MoveToTargetTime; // 0x214(0x04)
	float PreciseStateTimeout; // 0x218(0x04)
	char pad_21C[0x4]; // 0x21c(0x04)
	struct FGameplayTagContainer CustomPreciseTags; // 0x220(0x20)
	struct FGameplayTag CachedOperatorTag; // 0x240(0x08)
	bool bDontShowTag; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)

	void ProcessOperatorTag(struct FGameplayTag OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.ProcessOperatorTag // (Native|Public|BlueprintCallable) // @ game+0x635fed0
	void ProcessOperator(struct FGameplayTag OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.ProcessOperator // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x635fe00
	void PlayerStartupPreciseInteract(struct FGameplayTag& OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.PlayerStartupPreciseInteract // (Native|Public|HasOutParms) // @ game+0x635fd20
	void NetMultiProcessOperator(struct FGameplayTag OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.NetMultiProcessOperator // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x635f730
	bool IsForbidActive(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.IsForbidActive // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x143ed20
	struct FGameplayTagContainer GetTriggerTagContainer(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.GetTriggerTagContainer // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x635f5b0
	struct FGameplayTag GetDriveAppearanceTag(struct FGameplayTag OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.GetDriveAppearanceTag // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x635f3e0
	float GetCoolDownRemainTime(struct ACHARACTER* InCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.GetCoolDownRemainTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x635f340
	bool CanInteract(struct FGameplayTag OperateTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorOperatorProcessComponent.CanInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635f0f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_Elevator
// Size: 0x570 (Inherited: 0x378)
class AInteractor_Elevator : public AActor {
public:

	char pad_378[0x8]; // 0x378(0x08)
	/*struct FMulticastInlineDelegate*/char OnElevatorOpened[0x10]; // 0x380(0x10)
	/*struct FMulticastInlineDelegate*/char OnElevatorOpening[0x10]; // 0x390(0x10)
	/*struct FMulticastInlineDelegate*/char OnElevatorClosing[0x10]; // 0x3a0(0x10)
	/*struct FMulticastInlineDelegate*/char OnElevatorMoving[0x10]; // 0x3b0(0x10)
	struct UStaticMeshComponent* Elevator; // 0x3c0(0x08)
	struct UStaticMeshComponent* ElevatorInnerDoorTop; // 0x3c8(0x08)
	struct UStaticMeshComponent* ElevatorInnerDoorDown; // 0x3d0(0x08)
	struct UStaticMeshComponent* ElevatorInnerDoorDownNet; // 0x3d8(0x08)
	struct UBoxComponent* BlockBox; // 0x3e0(0x08)
	struct UBoxComponent* VehicleOverlapBoxComp; // 0x3e8(0x08)
	struct USplineComponent* InnerDoorTopSplineComp; // 0x3f0(0x08)
	struct USplineComponent* InnerDoorDownSplineComp; // 0x3f8(0x08)
	struct USplineComponent* InnerDoorDownNetSplineComp; // 0x400(0x08)
	float LastTopDoorOffset; // 0x408(0x04)
	float LastDownDoorOffset; // 0x40c(0x04)
	float LastDownNetDoorOffset; // 0x410(0x04)
	char pad_414[0xc]; // 0x414(0x0c)
	/*struct TSet<struct ADFMCharacter*>*/char OnElevatorCharacters[0x50]; // 0x420(0x50)
	enum class EElevatorState CurElevatorState; // 0x470(0x01)
	enum class EElevatorDoorState CurElevatorDoorState; // 0x471(0x01)
	enum class EElevatorUsingState CurElevatorUsingState; // 0x472(0x01)
	char pad_473[0x1]; // 0x473(0x01)
	float ElevatorDoorMovingStartTime; // 0x474(0x04)
	char pad_478[0x20]; // 0x478(0x20)
	struct UDFElevatorMovementComponent* DFElevatorMovementComponent; // 0x498(0x08)
	bool bHasDoor; // 0x4a0(0x01)
	char pad_4A1[0x3]; // 0x4a1(0x03)
	struct FName ElevatorUpPathTag; // 0x4a4(0x08)
	struct FName ElevatorDownPathTag; // 0x4ac(0x08)
	float TotalDoorMoveTime; // 0x4b4(0x04)
	struct UCurveFloat* TopDoorOpenCurve; // 0x4b8(0x08)
	struct UCurveFloat* TopDoorCloseCurve; // 0x4c0(0x08)
	struct UCurveFloat* DownDoorOpenCurve; // 0x4c8(0x08)
	struct UCurveFloat* DownDoorCloseCurve; // 0x4d0(0x08)
	struct UCurveFloat* DownNetDoorOpenCurve; // 0x4d8(0x08)
	struct UCurveFloat* DownNetDoorCloseCurve; // 0x4e0(0x08)
	struct AInteractor_ElevatorDoor* FirstFloorDoor; // 0x4e8(0x08)
	struct AInteractor_ElevatorDoor* SecondFloorDoor; // 0x4f0(0x08)
	float ElevatorDelayTime; // 0x4f8(0x04)
	bool bIsAllowJump; // 0x4fc(0x01)
	char pad_4FD[0x3]; // 0x4fd(0x03)
	float ElevatorUsingDelayTime; // 0x500(0x04)
	float ElevatorCloseDoorKillVehicleInterval; // 0x504(0x04)
	struct TMap<enum class EElevatorUsingState, struct FText> ElevatorUsingStateText; // 0x508(0x50)
	struct UGPPathFollowComponent* GPPathFollowComp; // 0x558(0x08)
	struct TArray<struct FVehicleInElevatorInfo> VehicleInElevatorInfoArray; // 0x560(0x10)

	void OnServerElevatorDelayOpenSimulatePhysics(); // Function DFMGameplay.Interactor_Elevator.OnServerElevatorDelayOpenSimulatePhysics // (Final|Native|Public) // @ game+0x63445a0
	void OnRep_VehicleInElevatorInfoArray(); // Function DFMGameplay.Interactor_Elevator.OnRep_VehicleInElevatorInfoArray // (Final|Native|Public) // @ game+0x63444f0
	void OnRep_CurElevatorUsingState(); // Function DFMGameplay.Interactor_Elevator.OnRep_CurElevatorUsingState // (Native|Public) // @ game+0xbd5ba0
	void OnRep_CurElevatorState(); // Function DFMGameplay.Interactor_Elevator.OnRep_CurElevatorState // (Native|Public) // @ game+0xbcb880
	void OnRep_CurElevatorDoorState(); // Function DFMGameplay.Interactor_Elevator.OnRep_CurElevatorDoorState // (Final|Native|Public) // @ game+0x63444b0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_Elevator.OnOverlapEnd // (Native|Public) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_Elevator.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x36ce950
	void OnElevatorServerDelayUsingTimerHandle(); // Function DFMGameplay.Interactor_Elevator.OnElevatorServerDelayUsingTimerHandle // (Final|Native|Public) // @ game+0x6344470
	void OnElevatorEndPath(struct AActor* Follower); // Function DFMGameplay.Interactor_Elevator.OnElevatorEndPath // (Native|Public) // @ game+0x63443e0
	void OnElevatorCloseDoorKillVehicleTimerHandle(); // Function DFMGameplay.Interactor_Elevator.OnElevatorCloseDoorKillVehicleTimerHandle // (Final|Native|Public) // @ game+0x63443c0
	void OnClientElevatorDelayOpenSimulatePhysics(); // Function DFMGameplay.Interactor_Elevator.OnClientElevatorDelayOpenSimulatePhysics // (Final|Native|Public) // @ game+0x6344380
	void OnBlockBoxOverlap(struct TArray<struct AActor*>& InOverlapActors); // Function DFMGameplay.Interactor_Elevator.OnBlockBoxOverlap // (Native|Public|HasOutParms) // @ game+0x63442a0
	void MoveDoorToClosedPosition(); // Function DFMGameplay.Interactor_Elevator.MoveDoorToClosedPosition // (Final|Native|Public) // @ game+0x6343ef0
	struct UActorComponent* GetComponentFromName(struct UClass* ComponentClass, struct FString FindName); // Function DFMGameplay.Interactor_Elevator.GetComponentFromName // (Final|Native|Public) // @ game+0x6343de0
	bool EnableSelfInteract(); // Function DFMGameplay.Interactor_Elevator.EnableSelfInteract // (Final|Native|Public) // @ game+0x6343db0
	void ElevatorOpenDoorHandle(); // Function DFMGameplay.Interactor_Elevator.ElevatorOpenDoorHandle // (Final|Native|Public) // @ game+0x6343d90
	void ElevatorMoveUpHandle(); // Function DFMGameplay.Interactor_Elevator.ElevatorMoveUpHandle // (Native|Public) // @ game+0xc37770
	void ElevatorMoveDownHandle(); // Function DFMGameplay.Interactor_Elevator.ElevatorMoveDownHandle // (Native|Public) // @ game+0xc37ab0
	void ElevatorHandleWithoutDoor(); // Function DFMGameplay.Interactor_Elevator.ElevatorHandleWithoutDoor // (Final|Native|Public) // @ game+0x6343d70
	void ElevatorHandle(); // Function DFMGameplay.Interactor_Elevator.ElevatorHandle // (Native|Public) // @ game+0xbcb8c0
	void ElevatorDoorMove(struct UStaticMeshComponent* ElevatorDoor, struct USplineComponent* DoorSpline, struct UCurveFloat* DoorCurve, float Curtime); // Function DFMGameplay.Interactor_Elevator.ElevatorDoorMove // (Final|Native|Public) // @ game+0x6343c20
	void ElevatorCloseDoorHandle(); // Function DFMGameplay.Interactor_Elevator.ElevatorCloseDoorHandle // (Final|Native|Public) // @ game+0x6343c00
	void BP_ElevatorUseStop(); // Function DFMGameplay.Interactor_Elevator.BP_ElevatorUseStop // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ElevatorUseBegin(); // Function DFMGameplay.Interactor_Elevator.BP_ElevatorUseBegin // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ElevatorOpenDoorAudioPlay(); // Function DFMGameplay.Interactor_Elevator.BP_ElevatorOpenDoorAudioPlay // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ElevatorCloseDoorAudioPlay(); // Function DFMGameplay.Interactor_Elevator.BP_ElevatorCloseDoorAudioPlay // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ElevatorBellPlay(); // Function DFMGameplay.Interactor_Elevator.BP_ElevatorBellPlay // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorInterfaceBase
// Size: 0x30 (Inherited: 0x30)
class UInteractorInterfaceBase : public UInterface {
public:


	void SetElectronicLockVisible(bool InVisible); // Function DFMGameplay.InteractorInterfaceBase.SetElectronicLockVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635c970
	void ProcessLocalExecuteFailed(struct ACHARACTER* OperatorCharacter, struct FGameplayTag InOperatorTag); // Function DFMGameplay.InteractorInterfaceBase.ProcessLocalExecuteFailed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635c8a0
	bool NeedProcessLocalExecuteFailed(struct ACHARACTER* OperatorCharacter, struct FGameplayTag InOperatorTag); // Function DFMGameplay.InteractorInterfaceBase.NeedProcessLocalExecuteFailed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635c620
	bool LowerPriorityAfterSomething(); // Function DFMGameplay.InteractorInterfaceBase.LowerPriorityAfterSomething // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174f5f0
	bool IsUseInteractPointForCalcDis(); // Function DFMGameplay.InteractorInterfaceBase.IsUseInteractPointForCalcDis // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x17604e0
	bool IsElectronicLockDoor(); // Function DFMGameplay.InteractorInterfaceBase.IsElectronicLockDoor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174a970
	struct FVector GetViewLookAtLocation(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetViewLookAtLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635c110
	struct FRotator GetTurnRotator(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetTurnRotator // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635c060
	struct FVector GetNavLocation(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetNavLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bfb0
	struct TArray<struct FVector> GetMultiRayCastPoints(); // Function DFMGameplay.InteractorInterfaceBase.GetMultiRayCastPoints // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635bf30
	float GetMoveTimeOut(); // Function DFMGameplay.InteractorInterfaceBase.GetMoveTimeOut // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635bef0
	struct FVector GetInteractTopPointWorldLocation(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractTopPointWorldLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bd60
	struct FRotator GetInteractPointWorldRotation(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractPointWorldRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bd20
	struct FVector GetInteractPointWorldLocationInDS(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetInteractPointWorldLocationInDS // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bc70
	struct FVector GetInteractPointWorldLocation(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractPointWorldLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bc30
	struct FVector GetInteractPointWorldForward(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractPointWorldForward // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bbf0
	struct FText GetInteractorNameText(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractorNameText // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635be50
	struct FGameplayTagContainer GetInteractableTags(); // Function DFMGameplay.InteractorInterfaceBase.GetInteractableTags // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635bda0
	struct FVector GetElectronicLockLocation(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetElectronicLockLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635bb40
	struct FVector GetElectronicLockDir(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.GetElectronicLockDir // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635ba90
	struct USceneComponent* GetAnglePoint(); // Function DFMGameplay.InteractorInterfaceBase.GetAnglePoint // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635ba60
	void EnableMaterialGlow(); // Function DFMGameplay.InteractorInterfaceBase.EnableMaterialGlow // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635ba40
	void DisableMaterialGlow(); // Function DFMGameplay.InteractorInterfaceBase.DisableMaterialGlow // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635ba00
	bool CanOverlap(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.CanOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635b960
	bool CanInteract(struct ACHARACTER* OperatorCharacter, struct FGameplayTag OperatorTag); // Function DFMGameplay.InteractorInterfaceBase.CanInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x635b890
	struct FRotator CalcTurnRotator(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorInterfaceBase.CalcTurnRotator // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x635b7e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionComponent
// Size: 0x60 (Inherited: 0x30)
class UInteractorOperatorConditionComponent : public UObject {
public:

	char pad_30[0x8]; // 0x30(0x08)
	bool bIsShowFailedTips; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FText FailedTipsFormatText; // 0x40(0x18)
	bool bIsTest; // 0x58(0x01)
	bool bIsMatchArmdedForce; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	bool BP_IsAllowOperator(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase, struct FGameplayTag InInteractTag); // Function DFMGameplay.InteractorOperatorConditionComponent.BP_IsAllowOperator // (Native|Event|Public|BlueprintEvent) // @ game+0x63569c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptExecuteComponent
// Size: 0x168 (Inherited: 0x100)
class UInteractorOptExecuteComponent : public UActorComponent {
public:

	float DelayExecuteTime; // 0x100(0x04)
	bool bIgnoreFinished; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	struct ACHARACTER* CachedCharacter; // 0x108(0x08)
	struct AActor* CachedInteractor; // 0x110(0x08)
	struct FGameplayTag CachedOperateTag; // 0x118(0x08)
	struct FInteractingContext CachedInteractingContext; // 0x120(0x2c)
	char pad_14C[0xc]; // 0x14c(0x0c)
	struct UInteractorOptProcessComponent* CachedOptProcess; // 0x158(0x08)
	bool bReCheckOptProcessCanInteract; // 0x160(0x01)
	char pad_161[0x7]; // 0x161(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptProcessComponent
// Size: 0x200 (Inherited: 0x100)
class UInteractorOptProcessComponent : public UActorComponent {
public:

	struct FGameplayTag TriggerTag; // 0x100(0x08)
	struct FGameplayTagContainer AcquireTags; // 0x108(0x20)
	struct FGameplayTagContainer ForbidTags; // 0x128(0x20)
	struct TArray<struct FInteractorOptConditionContext> MustConditions; // 0x148(0x10)
	struct TArray<struct FInteractorOptConditionContext> OneMoreConditions; // 0x158(0x10)
	struct ACHARACTER* CachedCharacter; // 0x168(0x08)
	struct AActor* CachedInteractor; // 0x170(0x08)
	struct FGameplayTag CachedOperateTag; // 0x178(0x08)
	struct FInteractingContext CachedInteractingContext; // 0x180(0x2c)
	char pad_1AC[0xc]; // 0x1ac(0x0c)
	struct TArray<struct FInteractorOptExecuteContainer> ExecuteChains; // 0x1b8(0x10)
	struct TArray<struct FInteractorOptExecuteNameContainer> ExecuteNameChains; // 0x1c8(0x10)
	char pad_1D8[0x10]; // 0x1d8(0x10)
	bool bServerEarlyProcess; // 0x1e8(0x01)
	bool bUsePreciseState; // 0x1e9(0x01)
	bool bUseSimpleState; // 0x1ea(0x01)
	bool bUpdateFSMImmediately; // 0x1eb(0x01)
	bool bNeedPreciseInteractor; // 0x1ec(0x01)
	bool bPreciseChangeFOVWhenMove; // 0x1ed(0x01)
	bool bNeedSwitchToEmptyHand; // 0x1ee(0x01)
	bool bNeedUseEmptyHandAnimBasePose; // 0x1ef(0x01)
	float MoveToTargetTime; // 0x1f0(0x04)
	float PreciseStateTimeout; // 0x1f4(0x04)
	bool bCheckServerCurrentCanOperate; // 0x1f8(0x01)
	bool bCheckInNeedInterruptExecute; // 0x1f9(0x01)
	char pad_1FA[0x6]; // 0x1fa(0x06)

	void OnFakeTick(); // Function DFMGameplay.InteractorOptProcessComponent.OnFakeTick // (Final|Native|Protected) // @ game+0x6366760
	void NetMultiProcessOperator(struct ACHARACTER* InOptCharacter, struct AActor* InOptInteractor, struct FGameplayTag InOptTag, struct FInteractingContext InInteractingContext); // Function DFMGameplay.InteractorOptProcessComponent.NetMultiProcessOperator // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6365a70
	void NetMultiInterruptProcess(struct ACHARACTER* InOptCharacter, struct AActor* InOptInteractor, struct FGameplayTag InOptTag); // Function DFMGameplay.InteractorOptProcessComponent.NetMultiInterruptProcess // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6365970
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItemBase
// Size: 0x618 (Inherited: 0x30)
class UInventoryItemBase : public UObject {
public:

	enum class EItemUseFunction UseItemFunctionType; // 0x30(0x01)
	bool bOverrideBasePos; // 0x31(0x01)
	bool bOverrideBasePosTPP; // 0x32(0x01)
	bool bUsingLoopAnimation; // 0x33(0x01)
	float AnimTotalTime; // 0x34(0x04)
	float MaxUseCnt; // 0x38(0x04)
	float RealWantUseCnt; // 0x3c(0x04)
	bool bPeriodItem; // 0x40(0x01)
	enum class EItemHealthTriggerType TriggerType; // 0x41(0x01)
	enum class EItemHealthBuffTriggerType AddBuffTriggerType; // 0x42(0x01)
	bool bDynamicUseTime; // 0x43(0x01)
	float Period; // 0x44(0x04)
	float PreUseTime; // 0x48(0x04)
	float AfterUseTime; // 0x4c(0x04)
	uint64_t CurrentRepairHelmetGid; // 0x50(0x08)
	uint64_t CurrentRepairArmorGid; // 0x58(0x08)
	bool bFinshPeriodUse; // 0x60(0x01)
	enum class EItemState ItemState; // 0x61(0x01)
	char pad_62[0x2]; // 0x62(0x02)
	float CoolDownTime; // 0x64(0x04)
	float CoolDownStartTime; // 0x68(0x04)
	float TimeToUse; // 0x6c(0x04)
	struct FInventoryItemInfo ItemInfo; // 0x70(0x538)
	struct FUseItemArgs UseItemArgs; // 0x5a8(0x38)
	struct FName AttachSocketName; // 0x5e0(0x08)
	struct FName AttachSocketName3P; // 0x5e8(0x08)
	char pad_5F0[0x20]; // 0x5f0(0x20)
	struct ADFMCharacter* OwnerCharacter; // 0x610(0x08)

	bool UseThisItem(); // Function DFMGameplay.InventoryItemBase.UseThisItem // (Final|Native|Public) // @ game+0x637a320
	void Update(float DeltaTime); // Function DFMGameplay.InventoryItemBase.Update // (Native|Public) // @ game+0x637a2a0
	void SetItemStateNew(enum class EItemState NewItemState); // Function DFMGameplay.InventoryItemBase.SetItemStateNew // (Native|Public|BlueprintCallable) // @ game+0x6379fe0
	void SetItemState(enum class EItemState NewItemState); // Function DFMGameplay.InventoryItemBase.SetItemState // (Native|Public|BlueprintCallable) // @ game+0x6379f60
	bool IsItemStillCoolingdown(); // Function DFMGameplay.InventoryItemBase.IsItemStillCoolingdown // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x4a1e8d0
	struct ADFMCharacter* GetOwner(); // Function DFMGameplay.InventoryItemBase.GetOwner // (Final|Native|Public) // @ game+0x6377a90
	enum class EItemState GetItemStateNew(); // Function DFMGameplay.InventoryItemBase.GetItemStateNew // (Native|Public|BlueprintCallable) // @ game+0x129b4e0
	struct FInventoryItemInfo GetItemInfo(); // Function DFMGameplay.InventoryItemBase.GetItemInfo // (Final|Native|Public) // @ game+0x6377680
	struct FName GetInventoryIdName(); // Function DFMGameplay.InventoryItemBase.GetInventoryIdName // (Final|Native|Public) // @ game+0x63775b0
	uint64_t GetID(); // Function DFMGameplay.InventoryItemBase.GetID // (Final|Native|Public) // @ game+0x6377580
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemBaseFunComponent
// Size: 0x118 (Inherited: 0x100)
class UItemBaseFunComponent : public UActorComponent {
public:

	struct ADFMCharacter* Owner; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionActionComponent
// Size: 0x478 (Inherited: 0x100)
class UMotionActionComponent : public UActorComponent {
public:

	char pad_100[0x10]; // 0x100(0x10)
	bool bDrawDebugFootPhase; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct UClass* MotionStateMachineClass; // 0x118(0x08)
	struct UDataTable* MotionStateActionTable; // 0x120(0x08)
	struct UDataTable* ExtraAnimConfigTable; // 0x128(0x08)
	struct TArray<struct FAnimPoseBoneConfig> AnimPoseBoneConfigs; // 0x130(0x10)
	bool bEnableStepPlan; // 0x140(0x01)
	char pad_141[0x3]; // 0x141(0x03)
	float ExtraStepPlanLength; // 0x144(0x04)
	bool bEnableAutoMatchPose; // 0x148(0x01)
	char pad_149[0x3]; // 0x149(0x03)
	int32_t MotionPlannerType; // 0x14c(0x04)
	bool bMarkWaterPath; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
	struct FGPAIFocusTargetInfo FocusTargetInfo; // 0x158(0x18)
	int32_t DragNum; // 0x170(0x04)
	float TotalDragDist; // 0x174(0x04)
	bool bMoveFlying; // 0x178(0x01)
	char pad_179[0x27]; // 0x179(0x27)
	float SnapToEndLen; // 0x1a0(0x04)
	float AISpeedAlpha; // 0x1a4(0x04)
	struct FName ExtraAdditiveAnimName; // 0x1a8(0x08)
	bool bRootMotionCheckNavEdge; // 0x1b0(0x01)
	char pad_1B1[0x7]; // 0x1b1(0x07)
	struct ULineBatchComponent* DebugDrawComp; // 0x1b8(0x08)
	char pad_1C0[0x28]; // 0x1c0(0x28)
	struct FMotionActionScheduler MotionActionScheduler; // 0x1e8(0x38)
	struct ADFMAICharacter* OwnerCharacter; // 0x220(0x08)
	char pad_228[0x8]; // 0x228(0x08)
	struct FMotionActionAgent Agent; // 0x230(0x50)
	struct UGPAIAnimInstance* AnimInstance; // 0x280(0x08)
	char pad_288[0xe0]; // 0x288(0xe0)
	struct TArray<struct FMotionActionMsg_NewRequest> PendingNewRequestMsg; // 0x368(0x10)
	char pad_378[0x20]; // 0x378(0x20)
	struct TArray<struct FAnimNotifyEventReference> AnimNotifies; // 0x398(0x10)
	struct TArray<struct FAnimNotifyEvent> ActiveAnimNotifyState; // 0x3a8(0x10)
	char pad_3B8[0x14]; // 0x3b8(0x14)
	float AuthorPlayTimeStamp; // 0x3cc(0x04)
	char pad_3D0[0xa8]; // 0x3d0(0xa8)

	void TearOffLocation(bool Val); // Function DFMGameplay.MotionActionComponent.TearOffLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x63a1b10
	void SetAISpeedAlpha(float Alpha); // Function DFMGameplay.MotionActionComponent.SetAISpeedAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x63a1870
	void SetAIExtraAdditiveAnim(struct FName AnimName); // Function DFMGameplay.MotionActionComponent.SetAIExtraAdditiveAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x63a17f0
	void OnFocusTargetInfoRep(); // Function DFMGameplay.MotionActionComponent.OnFocusTargetInfoRep // (Final|Native|Public) // @ game+0x63a1550
	void OnExtraAdditiveAnimRep(); // Function DFMGameplay.MotionActionComponent.OnExtraAdditiveAnimRep // (Final|Native|Public) // @ game+0x63a1530
	void OnCharacterDead(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.MotionActionComponent.OnCharacterDead // (Final|Native|Public) // @ game+0x63a1430
	void OnBeAssassinated(bool bCarry); // Function DFMGameplay.MotionActionComponent.OnBeAssassinated // (Final|Native|Public) // @ game+0x63a13a0
	bool IsLocationTornOff(); // Function DFMGameplay.MotionActionComponent.IsLocationTornOff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x35f6f20
	bool IsAllAnimLoaded(); // Function DFMGameplay.MotionActionComponent.IsAllAnimLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63a12e0
	struct UAnimationAsset* GetExtraAnimByName(struct FName AnimName); // Function DFMGameplay.MotionActionComponent.GetExtraAnimByName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63a0ff0
	void EnableMotionAction(); // Function DFMGameplay.MotionActionComponent.EnableMotionAction // (Final|Native|Public|BlueprintCallable) // @ game+0x63a0e10
	void DisableMotionAction(); // Function DFMGameplay.MotionActionComponent.DisableMotionAction // (Final|Native|Public|BlueprintCallable) // @ game+0x63a0df0
	void DebugPostProcessNavPath(struct TArray<struct FVector> NavPathPoints); // Function DFMGameplay.MotionActionComponent.DebugPostProcessNavPath // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x61cb520
	void DebugNativeNavPath(struct TArray<struct FVector> NavPathPoints); // Function DFMGameplay.MotionActionComponent.DebugNativeNavPath // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63a0d20
	void CollectDragData(float Dist, float Angle); // Function DFMGameplay.MotionActionComponent.CollectDragData // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x63a0a30
	void ClientDisableMotionAction(); // Function DFMGameplay.MotionActionComponent.ClientDisableMotionAction // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x360c9c0
	bool CheckCurrentStateHasTags(struct FGameplayTagContainer& Tags, bool bMatchAllTags, bool bMatchParentTag); // Function DFMGameplay.MotionActionComponent.CheckCurrentStateHasTags // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x63a0890
	void BroadcastMsg_UpdateActionFrames(struct FMotionActionMsg_UpdateActionFrames Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_UpdateActionFrames // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63a07e0
	void BroadcastMsg_SyncState(struct FMotionActionMsg_SyncState Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_SyncState // (Net|Native|Event|NetMulticast|Protected) // @ game+0x63a0730
	void BroadcastMsg_SyncPlayTimeStamp(struct FMotionActionMsg_SyncPlayTimeStamp Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_SyncPlayTimeStamp // (Net|Native|Event|NetMulticast|Protected) // @ game+0x63a06b0
	void BroadcastMsg_RequestSeparatorFrame(struct FMotionActionMsg_RequestSeparatorFrame Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_RequestSeparatorFrame // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63a0620
	void BroadcastMsg_NewTickActionFrame(struct FMotionActionMsg_NewTickActionFrame Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_NewTickActionFrame // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63a0520
	void BroadcastMsg_NewRequest(struct FMotionActionMsg_NewRequest Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_NewRequest // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63a0350
	void BroadcastMsg_NewActionFrame(struct FMotionActionMsg_NewActionFrames Msg); // Function DFMGameplay.MotionActionComponent.BroadcastMsg_NewActionFrame // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x63a0260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PerformingActorBase
// Size: 0x3a8 (Inherited: 0x378)
class APerformingActorBase : public AActor {
public:

	char pad_378[0x30]; // 0x378(0x30)

	void UpdateSkeletalMeshCompTickStatus(bool bIsCanTick); // Function DFMGameplay.PerformingActorBase.UpdateSkeletalMeshCompTickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x63b43c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitBase
// Size: 0xb30 (Inherited: 0x378)
class APlayerExitBase : public AActor {
public:

	struct FText NameText; // 0x378(0x18)
	bool bEnableInStandalone; // 0x390(0x01)
	bool bAlwaysQualified; // 0x391(0x01)
	char pad_392[0x2]; // 0x392(0x02)
	struct FExitAcitiveConfig ActiveConfig; // 0x394(0x0c)
	struct FExitCountdownConfig CountdownConfig; // 0x3a0(0x18)
	struct FExitAwakeConfig AwakeConfig; // 0x3b8(0x18)
	struct FExitOpenConfig ExitOpenConfig; // 0x3d0(0x60)
	struct FExitConditionConfig ExitConditionConfig; // 0x430(0x98)
	struct FExitMethodConfig ExitMethodConfig; // 0x4c8(0x08)
	struct FExitCloseConfig ExitCloseConfig; // 0x4d0(0x0c)
	struct FExitResetConfig ExitResetConfig; // 0x4dc(0x0c)
	struct FExitVOConfig ExitVOConfig; // 0x4e8(0x70)
	enum class EExitStageType ExitStage; // 0x558(0x01)
	char pad_559[0x7]; // 0x559(0x07)
	struct FExitUIConfig UIConfig; // 0x560(0x178)
	struct FExitTriggersConfig TriggersConfig; // 0x6d8(0x50)
	uint32_t PlayerExitID; // 0x728(0x04)
	char pad_72C[0x4]; // 0x72c(0x04)
	struct USceneComponent* SceneComponent; // 0x730(0x08)
	struct UShapeComponent* CollisionComp; // 0x738(0x08)
	struct UShapeComponent* NoticeAreaComp; // 0x740(0x08)
	bool bNeedAlarm; // 0x748(0x01)
	enum class EExitCutSceneType ExitCutSceneType; // 0x749(0x01)
	char pad_74A[0x2]; // 0x74a(0x02)
	struct FRotator ExitCutSceneRotator; // 0x74c(0x0c)
	struct AGPSequenceActor* CutSceneActor; // 0x758(0x08)
	float CutSceneEarlyEndTime; // 0x760(0x04)
	bool bNeedHideCharacter; // 0x764(0x01)
	char pad_765[0x3]; // 0x765(0x03)
	struct FString CutSceneMediaVideoName; // 0x768(0x10)
	float ServerMediaVideoIntoSettlement; // 0x778(0x04)
	float ExpectedAwakeTime; // 0x77c(0x04)
	struct TArray<struct AInteractor_ExitTrigger*> ExitTriggers; // 0x780(0x10)
	struct TArray<struct FExitTriggerInfo> ExitTriggerInfos; // 0x790(0x10)
	char pad_7A0[0x8]; // 0x7a0(0x08)
	struct TMap<struct FName, struct UDFMEvacRefMapIconViewController*> EvacRefMapIconViewControllerCache; // 0x7a8(0x50)
	struct TMap<struct FName, struct UMapLineViewController*> MapLineControllerCache; // 0x7f8(0x50)
	/*struct TSet<struct AInteractorBase*>*/char InteractorTriggerSet[0x50]; // 0x848(0x50)
	bool bIsTriggerActive; // 0x898(0x01)
	char pad_899[0xbf]; // 0x899(0xbf)
	bool bExitActive; // 0x958(0x01)
	bool bAwake; // 0x959(0x01)
	bool bIconActive; // 0x95a(0x01)
	char pad_95B[0x1]; // 0x95b(0x01)
	float AwakeTime; // 0x95c(0x04)
	struct TArray<int32_t> QualifiedTeams; // 0x960(0x10)
	char pad_970[0x8]; // 0x970(0x08)
	struct FExitUIInfo ExitUIInfo; // 0x978(0x30)
	struct TArray<struct FCharacterExitInfo> EnteredCharacters; // 0x9a8(0x10)
	struct FCountingInfo CountingInfo; // 0x9b8(0xa8)
	struct FExitStatisticsInfo ExitRuntimeInfo; // 0xa60(0x20)
	struct FVector2D IconOffsetOnMap; // 0xa80(0x08)
	char pad_A88[0x8]; // 0xa88(0x08)
	struct APlayerExitLensFlare* LensFlareEffect; // 0xa90(0x08)
	char pad_A98[0x4]; // 0xa98(0x04)
	float LensFlareFoliageUpdateTime; // 0xa9c(0x04)
	char pad_AA0[0x44]; // 0xaa0(0x44)
	float CheckTime; // 0xae4(0x04)
	float SmokeEffectVisibleDistance; // 0xae8(0x04)
	struct FName SmokeEffectID; // 0xaec(0x08)
	bool bShowSmokeEffect; // 0xaf4(0x01)
	bool bUseCustomSceneComp; // 0xaf5(0x01)
	char pad_AF6[0x2]; // 0xaf6(0x02)
	struct USceneComponent* EvacuateSmokeSceneComp; // 0xaf8(0x08)
	char pad_B00[0x18]; // 0xb00(0x18)
	struct UFXResourceContainerComponent* EffectComp; // 0xb18(0x08)
	struct AFXProxyActor* FXProxyActor; // 0xb20(0x08)
	struct AActor* CommonExitBasePoint; // 0xb28(0x08)

	void UpdateRealPayPlayerNum(struct ACHARACTER* PaidCharacter); // Function DFMGameplay.PlayerExitBase.UpdateRealPayPlayerNum // (Final|Native|Protected) // @ game+0x63bcdd0
	void UpdateRealExitPlayerNum(); // Function DFMGameplay.PlayerExitBase.UpdateRealExitPlayerNum // (Final|Native|Protected) // @ game+0x63bcdb0
	void UpdateExitConditionCheck(); // Function DFMGameplay.PlayerExitBase.UpdateExitConditionCheck // (Final|Native|Public) // @ game+0x63bcd90
	void TurnOnAlarm(bool bTurnOn); // Function DFMGameplay.PlayerExitBase.TurnOnAlarm // (Final|Native|Public) // @ game+0x63bcd00
	bool TryConditionExit(struct AGPCharacterBase* GPCharacter); // Function DFMGameplay.PlayerExitBase.TryConditionExit // (Final|Native|Public|BlueprintCallable) // @ game+0x63bcc70
	void TriggerAlarmAudio(); // Function DFMGameplay.PlayerExitBase.TriggerAlarmAudio // (Final|Native|Public) // @ game+0x63bcc50
	void ShowPreparationCutScene(); // Function DFMGameplay.PlayerExitBase.ShowPreparationCutScene // (Final|Native|Public) // @ game+0x17621d0
	void ShowExitStatusSubtitleSequence(struct FName& SubtitleSeqId, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.PlayerExitBase.ShowExitStatusSubtitleSequence // (Final|Native|Public|HasOutParms|Const) // @ game+0x63bca40
	void ShowCountDownExitSubtitleSequence(struct FName& SubtitleId, struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.ShowCountDownExitSubtitleSequence // (Final|Native|Public|HasOutParms|Const) // @ game+0x63bc970
	void SetIconActive(bool bInActive); // Function DFMGameplay.PlayerExitBase.SetIconActive // (Final|Native|Public|BlueprintCallable) // @ game+0x63bc8e0
	void SetCharactersAlreadyInAreaOnAwake(float InAwakeTime); // Function DFMGameplay.PlayerExitBase.SetCharactersAlreadyInAreaOnAwake // (Final|Native|Protected) // @ game+0x63bc860
	void SetCharacterMeetExitCondition(struct AGPCharacterBase* CHARACTER, bool bConditionMeet); // Function DFMGameplay.PlayerExitBase.SetCharacterMeetExitCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x63bc790
	void SetActive(bool InBActive); // Function DFMGameplay.PlayerExitBase.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x63bc700
	void ServerShowExitStatusSubtitleSequence(bool bOpenOrClose, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.PlayerExitBase.ServerShowExitStatusSubtitleSequence // (Final|Native|Public) // @ game+0x63bc640
	void ServerSetEventExitUIInfo(struct FLinearColor LinearColor, struct FText DescText); // Function DFMGameplay.PlayerExitBase.ServerSetEventExitUIInfo // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63bc510
	void ServerOnEndCutScene(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.ServerOnEndCutScene // (Final|Native|Protected) // @ game+0x63bc490
	void ResetAwakeStatus(); // Function DFMGameplay.PlayerExitBase.ResetAwakeStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x63bc3d0
	void RemoveAllExitTriggerIcon(); // Function DFMGameplay.PlayerExitBase.RemoveAllExitTriggerIcon // (Final|Native|Public) // @ game+0x63bc3b0
	void ReducePlayerExitEscapeCount(int32_t ReduceEscapeCount); // Function DFMGameplay.PlayerExitBase.ReducePlayerExitEscapeCount // (Final|Native|Public) // @ game+0x63bc330
	void ReducePlayerExitCountDownTime(float ReduceCountDownTime); // Function DFMGameplay.PlayerExitBase.ReducePlayerExitCountDownTime // (Final|Native|Public) // @ game+0x63bc2b0
	void PlayCharacterEvacVoice(struct AGPCharacter* GPCharacter); // Function DFMGameplay.PlayerExitBase.PlayCharacterEvacVoice // (Final|Native|Public) // @ game+0x63bc230
	void OnVisibleChanged(); // Function DFMGameplay.PlayerExitBase.OnVisibleChanged // (Native|Protected) // @ game+0x364e570
	void OnSleep(); // Function DFMGameplay.PlayerExitBase.OnSleep // (Native|Public|BlueprintCallable) // @ game+0x364e7b0
	void OnRep_QualifiedTeams(); // Function DFMGameplay.PlayerExitBase.OnRep_QualifiedTeams // (Native|Protected) // @ game+0x364e490
	void OnRep_NeedAlarm(); // Function DFMGameplay.PlayerExitBase.OnRep_NeedAlarm // (Final|Native|Public) // @ game+0x63bc130
	void OnRep_IconActive(); // Function DFMGameplay.PlayerExitBase.OnRep_IconActive // (Native|Protected) // @ game+0xbcc840
	void OnRep_ExpectedAwakeTime(); // Function DFMGameplay.PlayerExitBase.OnRep_ExpectedAwakeTime // (Native|Protected) // @ game+0x364e750
	void OnRep_ExitUIInfo(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitUIInfo // (Native|Public) // @ game+0xbcb8a0
	void OnRep_ExitTriggers(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitTriggers // (Final|Native|Public) // @ game+0x63bc110
	void OnRep_ExitStage(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitStage // (Native|Protected) // @ game+0x364e770
	void OnRep_ExitRuntimeInfo(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitRuntimeInfo // (Native|Protected) // @ game+0xbcc8e0
	void OnRep_ExitMethodConfig(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitMethodConfig // (Native|Protected) // @ game+0x364e790
	void OnRep_ExitActive(); // Function DFMGameplay.PlayerExitBase.OnRep_ExitActive // (Native|Protected) // @ game+0x2278f90
	void OnRep_EnteredCharacters(); // Function DFMGameplay.PlayerExitBase.OnRep_EnteredCharacters // (Native|Protected) // @ game+0xbcc900
	void OnRep_CountingInfo(); // Function DFMGameplay.PlayerExitBase.OnRep_CountingInfo // (Native|Protected) // @ game+0xbcc8c0
	void OnRep_AwakeTime(); // Function DFMGameplay.PlayerExitBase.OnRep_AwakeTime // (Native|Protected) // @ game+0x128d870
	void OnRep_Awake(); // Function DFMGameplay.PlayerExitBase.OnRep_Awake // (Native|Protected) // @ game+0x63bc0f0
	void OnPlayerRebornInNoticeArea(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerRebornInNoticeArea // (Native|Protected) // @ game+0x63bc060
	void OnPlayerRebornInExitArea(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerRebornInExitArea // (Native|Protected) // @ game+0x40ab2b0
	void OnPlayerLeft(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerLeft // (Native|Protected) // @ game+0x63bbfd0
	void OnPlayerEntered(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerEntered // (Native|Protected) // @ game+0x4060600
	void OnPlayerDiedInNoticeArea(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerDiedInNoticeArea // (Native|Protected) // @ game+0x63bbf40
	void OnPlayerDiedInExitArea(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnPlayerDiedInExitArea // (Native|Protected) // @ game+0x63bbeb0
	void OnOverlapNoticeAreaEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.PlayerExitBase.OnOverlapNoticeAreaEnd // (Native|Protected) // @ game+0x63bbd70
	void OnOverlapNoticeAreaBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.PlayerExitBase.OnOverlapNoticeAreaBegin // (Native|Protected|HasOutParms) // @ game+0x63bbb70
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.PlayerExitBase.OnOverlapEnd // (Native|Protected) // @ game+0x63bba30
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.PlayerExitBase.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x63bb830
	void OnGameLoadSuccess(int32_t MapID, enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.PlayerExitBase.OnGameLoadSuccess // (Final|Native|Protected) // @ game+0x63bb770
	void OnEscapingHUDInit(bool Init); // Function DFMGameplay.PlayerExitBase.OnEscapingHUDInit // (Final|Native|Protected) // @ game+0x63bb6e0
	void OnDSLogicReqBeginMatch(); // Function DFMGameplay.PlayerExitBase.OnDSLogicReqBeginMatch // (Final|Native|Public) // @ game+0x63bb6a0
	void OnCountDownOver(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnCountDownOver // (Native|Protected) // @ game+0x630b8b0
	void OnCountDownCancelled(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnCountDownCancelled // (Native|Protected) // @ game+0x630bd10
	void OnCountDownBegin(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.OnCountDownBegin // (Native|Protected) // @ game+0x63bb610
	void OnCommonExitLevelLoaded(); // Function DFMGameplay.PlayerExitBase.OnCommonExitLevelLoaded // (Final|Native|Protected) // @ game+0x63bb5f0
	void OnClientSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.PlayerExitBase.OnClientSeamlessTravelEnd // (Final|Native|Protected) // @ game+0x63bb560
	void OnBattleFieldBlockWallAdd(struct AActor* BlockWall); // Function DFMGameplay.PlayerExitBase.OnBattleFieldBlockWallAdd // (Final|Native|Protected) // @ game+0x63bb4e0
	void OnAwake(); // Function DFMGameplay.PlayerExitBase.OnAwake // (Native|Public|BlueprintCallable) // @ game+0x364e730
	void MultiShowExitStatusSubtitleSequence(bool bOpenOrClose, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.PlayerExitBase.MultiShowExitStatusSubtitleSequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63bb070
	void MulticastToggleExitOpenBanner(struct FString ExitOpenStr, enum class ESOLUIIconType SOLUIIconType, float ExitOpenTextDuration); // Function DFMGameplay.PlayerExitBase.MulticastToggleExitOpenBanner // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63bb140
	void LocalPlayerEnterOrExit(struct ACHARACTER* CHARACTER, bool bEnter); // Function DFMGameplay.PlayerExitBase.LocalPlayerEnterOrExit // (Native|Protected) // @ game+0x63bafa0
	bool IsWaitingInteractOpen(); // Function DFMGameplay.PlayerExitBase.IsWaitingInteractOpen // (Native|Public|BlueprintCallable) // @ game+0x63bad60
	bool IsWaitingDelayOpen(); // Function DFMGameplay.PlayerExitBase.IsWaitingDelayOpen // (Final|Native|Public|Const) // @ game+0x63bad20
	bool IsUseOneTimer(); // Function DFMGameplay.PlayerExitBase.IsUseOneTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63bacf0
	bool IsUrgentCountDown(int32_t countdown); // Function DFMGameplay.PlayerExitBase.IsUrgentCountDown // (Final|Native|Public|BlueprintCallable) // @ game+0x63bac60
	bool IsTimelimitExit(); // Function DFMGameplay.PlayerExitBase.IsTimelimitExit // (Final|Native|Public|BlueprintCallable) // @ game+0x63bac30
	bool IsRoleLoadLimitExit(); // Function DFMGameplay.PlayerExitBase.IsRoleLoadLimitExit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63bac00
	bool IsRandomExit(); // Function DFMGameplay.PlayerExitBase.IsRandomExit // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63babd0
	bool IsNeedReset(); // Function DFMGameplay.PlayerExitBase.IsNeedReset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63baba0
	bool IsInteractExitCondition(); // Function DFMGameplay.PlayerExitBase.IsInteractExitCondition // (Native|Public|BlueprintCallable) // @ game+0x63bab70
	bool IsFixedExit(); // Function DFMGameplay.PlayerExitBase.IsFixedExit // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63bab40
	bool IsEventExit(); // Function DFMGameplay.PlayerExitBase.IsEventExit // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63bab10
	bool IsEquipmentLimitExit(); // Function DFMGameplay.PlayerExitBase.IsEquipmentLimitExit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63baae0
	bool IsAwake(); // Function DFMGameplay.PlayerExitBase.IsAwake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63baac0
	bool IsActive(); // Function DFMGameplay.PlayerExitBase.IsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63baaa0
	bool HasAwaked(); // Function DFMGameplay.PlayerExitBase.HasAwaked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63baa70
	void GMPlayExitCutScene(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.GMPlayExitCutScene // (Final|Native|Public) // @ game+0x63ba1f0
	struct FLinearColor GetTriggerColor(bool bTrigger); // Function DFMGameplay.PlayerExitBase.GetTriggerColor // (Final|Native|Public|HasDefaults|Const) // @ game+0x63ba9d0
	int32_t GetTimeToExpectedAwake(); // Function DFMGameplay.PlayerExitBase.GetTimeToExpectedAwake // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba9a0
	struct ACHARACTER* GetTargetLocalCharacter(); // Function DFMGameplay.PlayerExitBase.GetTargetLocalCharacter // (Final|Native|Protected|Const) // @ game+0x63ba970
	float GetResetCoolDownTime(); // Function DFMGameplay.PlayerExitBase.GetResetCoolDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba940
	int32_t GetRemainResetNum(); // Function DFMGameplay.PlayerExitBase.GetRemainResetNum // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba910
	int32_t GetRemainPayQuota(); // Function DFMGameplay.PlayerExitBase.GetRemainPayQuota // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63ba8e0
	int32_t GetRemainEscapeQuota(); // Function DFMGameplay.PlayerExitBase.GetRemainEscapeQuota // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba8b0
	struct FLinearColor GetLocalPlayerExitIconColor(); // Function DFMGameplay.PlayerExitBase.GetLocalPlayerExitIconColor // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63ba870
	struct FVector GetExitLocationWithMapOffset(); // Function DFMGameplay.PlayerExitBase.GetExitLocationWithMapOffset // (Final|Native|Public|HasDefaults) // @ game+0x63ba830
	void GetExitIconSoftObjectPathOnlyType(struct FSoftObjectPath& SoftObjectPath, struct FLinearColor& Color); // Function DFMGameplay.PlayerExitBase.GetExitIconSoftObjectPathOnlyType // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x63ba700
	struct FText GetExitConditionTips(); // Function DFMGameplay.PlayerExitBase.GetExitConditionTips // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba660
	struct FString GetDescription(); // Function DFMGameplay.PlayerExitBase.GetDescription // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63ba5e0
	struct USceneComponent* GetCustomEvacuateSmokeSceneComp(); // Function DFMGameplay.PlayerExitBase.GetCustomEvacuateSmokeSceneComp // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	float GetCurrentServertime(); // Function DFMGameplay.PlayerExitBase.GetCurrentServertime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba5b0
	float GetCurrentCountDownTime(); // Function DFMGameplay.PlayerExitBase.GetCurrentCountDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba580
	float GetCurrentCharacterCountDownTime(struct AGPCharacterBase* CharacterBase); // Function DFMGameplay.PlayerExitBase.GetCurrentCharacterCountDownTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba4e0
	int32_t GetCharacterRemainPayQuota(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.PlayerExitBase.GetCharacterRemainPayQuota // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63ba450
	enum class EExitState GetCharacterExitState(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.GetCharacterExitState // (Final|Native|Protected|BlueprintCallable) // @ game+0x63ba3c0
	float GetCharacterEndTime(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.GetCharacterEndTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba320
	struct FString GetAwakeLeftTimeString(); // Function DFMGameplay.PlayerExitBase.GetAwakeLeftTimeString // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba2a0
	float GetAwakeLeftTime(); // Function DFMGameplay.PlayerExitBase.GetAwakeLeftTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63ba270
	void ClientToggleExitOpenBanner(struct FText& ExitOpenText, struct FSoftObjectPath& IconSoftObjectPath, float ExitOpenTextDuration); // Function DFMGameplay.PlayerExitBase.ClientToggleExitOpenBanner // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x63b9ec0
	void ClientOnPreEndSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.PlayerExitBase.ClientOnPreEndSequence // (Final|Native|Protected) // @ game+0x63b9e40
	void ClientOnEndSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.PlayerExitBase.ClientOnEndSequence // (Final|Native|Protected) // @ game+0x63b9dc0
	void ClientOnBeginSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.PlayerExitBase.ClientOnBeginSequence // (Final|Native|Protected) // @ game+0x63b9d40
	bool CheckShouldShowOpenIcon(struct ADFMCharacter* InCharacter); // Function DFMGameplay.PlayerExitBase.CheckShouldShowOpenIcon // (Final|Native|Public) // @ game+0x63b9bb0
	bool CheckOverlapNoticeAreaBegin(struct AActor* OtherActor, struct USceneComponent* OtherComp, bool bCheckIsOverlappingActor); // Function DFMGameplay.PlayerExitBase.CheckOverlapNoticeAreaBegin // (Final|Native|Public) // @ game+0x63b9ab0
	void CheckOverlapExitAreaBegin(struct AActor* OtherActor, struct USceneComponent* OtherComp); // Function DFMGameplay.PlayerExitBase.CheckOverlapExitAreaBegin // (Final|Native|Public) // @ game+0x63b99f0
	bool CheckMayAwake(); // Function DFMGameplay.PlayerExitBase.CheckMayAwake // (Final|Native|Public) // @ game+0x63b99c0
	bool CheckIsVisible(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckIsVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63b9930
	bool CheckIsQualifiedByTeamId(int32_t TeamId); // Function DFMGameplay.PlayerExitBase.CheckIsQualifiedByTeamId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63b98a0
	bool CheckIsQualifiedByCharacter(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckIsQualifiedByCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63b9810
	bool CheckInteractOpenValid(struct ASOLCharacter* SOLCharacter); // Function DFMGameplay.PlayerExitBase.CheckInteractOpenValid // (Final|Native|Public) // @ game+0x63b9780
	bool CheckIfCharacterInNoticeArea(struct AGPCharacterBase* CharacterBase); // Function DFMGameplay.PlayerExitBase.CheckIfCharacterInNoticeArea // (Native|Public|Const) // @ game+0x63b96e0
	bool CheckIfCharacterInExitArea(struct AGPCharacterBase* CharacterBase); // Function DFMGameplay.PlayerExitBase.CheckIfCharacterInExitArea // (Native|Public|Const) // @ game+0x40663f0
	bool CheckExitConditionValid(struct ASOLCharacter* SOLCharacter); // Function DFMGameplay.PlayerExitBase.CheckExitConditionValid // (Final|Native|Public) // @ game+0x63b9650
	void CheckCountingVO(float Curtime, struct FCountingInfo& InCountingInfo, struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckCountingVO // (Final|Native|Protected|HasOutParms) // @ game+0x63b9460
	void CheckCharactersAlreadyInArea(bool bCheckNoticeArea); // Function DFMGameplay.PlayerExitBase.CheckCharactersAlreadyInArea // (Native|Protected) // @ game+0x63b93d0
	bool CheckCharacterOverlapNoticeAreaEnd(struct ACHARACTER* CharacterBase); // Function DFMGameplay.PlayerExitBase.CheckCharacterOverlapNoticeAreaEnd // (Final|Native|Public) // @ game+0x63b9340
	bool CheckCharacterOverlapNoticeAreaBegin(struct ACHARACTER* CharacterBase, bool bCheckIsOverlappingActor); // Function DFMGameplay.PlayerExitBase.CheckCharacterOverlapNoticeAreaBegin // (Final|Native|Public) // @ game+0x63b9280
	bool CheckCharacterMeetExitCondition(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckCharacterMeetExitCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x63b91f0
	bool CheckCharacterLoadExitCondition(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckCharacterLoadExitCondition // (Final|Native|Public|Const) // @ game+0x63b9160
	bool CheckCharacterExitCondition(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckCharacterExitCondition // (Final|Native|Public|Const) // @ game+0x63b90d0
	bool CheckCharacterCanCounting(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerExitBase.CheckCharacterCanCounting // (Final|Native|Public|Const) // @ game+0x63b9040
	void CheckCarryBody(struct ACHARACTER* BaseCharacter, enum class EExitState ExitState); // Function DFMGameplay.PlayerExitBase.CheckCarryBody // (Final|Native|Protected) // @ game+0x63b8f80
	bool CheckCanTriggerAwake(); // Function DFMGameplay.PlayerExitBase.CheckCanTriggerAwake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x63b8f50
	bool CheckAndPayItem(struct AGPCharacterBase* GPCharacter); // Function DFMGameplay.PlayerExitBase.CheckAndPayItem // (Final|Native|Protected) // @ game+0x63b8ec0
	void BP_OnVisibleChanged(); // Function DFMGameplay.PlayerExitBase.BP_OnVisibleChanged // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnStopAlarmAudio(); // Function DFMGameplay.PlayerExitBase.BP_OnStopAlarmAudio // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnSleep(); // Function DFMGameplay.PlayerExitBase.BP_OnSleep // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnRepActive(); // Function DFMGameplay.PlayerExitBase.BP_OnRepActive // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnPlayAlarmAudio(); // Function DFMGameplay.PlayerExitBase.BP_OnPlayAlarmAudio // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnClientQuit(); // Function DFMGameplay.PlayerExitBase.BP_OnClientQuit // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnAwake(); // Function DFMGameplay.PlayerExitBase.BP_OnAwake // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void AfterLoadPlayMediaVideo(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.PlayerExitBase.AfterLoadPlayMediaVideo // (Final|Native|Public) // @ game+0x63b8dc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PVPNavigationQueryFilterBase
// Size: 0x50 (Inherited: 0x50)
class UPVPNavigationQueryFilterBase : public UNavigationQueryFilter {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RankSkillSelectPositionActor
// Size: 0x3c0 (Inherited: 0x378)
class ARankSkillSelectPositionActor : public AActor {
public:

	char pad_378[0x48]; // 0x378(0x48)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISceneAnnotation
// Size: 0x3c8 (Inherited: 0x378)
class AAISceneAnnotation : public AActor {
public:

	/*struct TSet<struct FName>*/char AnnotationTags[0x50]; // 0x378(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEvacuationEvent
// Size: 0x3f8 (Inherited: 0x378)
class ASOLEvacuationEvent : public AActor {
public:

	enum class ESOLEvacuationEventState State; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct APlayerExitBase* PlayerExit; // 0x380(0x08)
	struct AInteractorBase* EvacuationInteractor; // 0x388(0x08)
	struct FText BannerTips; // 0x390(0x18)
	struct USceneComponent* SceneRoot; // 0x3a8(0x08)
	struct UBoxComponent* NoticeArea; // 0x3b0(0x08)
	bool bInit; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)
	struct UDFMExitIconHUDController* ExitIconHUDController; // 0x3c0(0x08)
	struct UMapLineViewController* PlayerMapLineViewController; // 0x3c8(0x08)
	struct UDFMEvacRefMapIconViewController* EvacRefMapIconController; // 0x3d0(0x08)
	char pad_3D8[0x18]; // 0x3d8(0x18)
	struct USOLTimeLineComponnet* SOLTimeLimeSystem; // 0x3f0(0x08)

	void ShowOrHideExitMidCountDown(bool bShow); // Function DFMGameplay.SOLEvacuationEvent.ShowOrHideExitMidCountDown // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void ShowExitIcon(bool bShow); // Function DFMGameplay.SOLEvacuationEvent.ShowExitIcon // (Native|Public|BlueprintCallable) // @ game+0x6404870
	void SendWirelessDialog(struct FName SubtitleId, bool bNeedCheckIfCharacterInExitArea); // Function DFMGameplay.SOLEvacuationEvent.SendWirelessDialog // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6404570
	void OnRep_State(); // Function DFMGameplay.SOLEvacuationEvent.OnRep_State // (Final|Native|Public) // @ game+0x6404230
	void OnRep_Init(); // Function DFMGameplay.SOLEvacuationEvent.OnRep_Init // (Native|Protected) // @ game+0x632ca20
	void OnPlayerLeftNoticeArea(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.SOLEvacuationEvent.OnPlayerLeftNoticeArea // (Final|Native|Protected) // @ game+0x6403560
	void OnPlayerLeft(struct APlayerExitBase* InExit); // Function DFMGameplay.SOLEvacuationEvent.OnPlayerLeft // (Final|Native|Public) // @ game+0x64034e0
	void OnPlayerEnterNoticeArea(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.SOLEvacuationEvent.OnPlayerEnterNoticeArea // (Final|Native|Protected|HasOutParms) // @ game+0x6403260
	void OnPlayerEntered(struct APlayerExitBase* InExit); // Function DFMGameplay.SOLEvacuationEvent.OnPlayerEntered // (Final|Native|Public) // @ game+0x6403460
	void OnCharacterInEvacuationArea(bool bin); // Function DFMGameplay.SOLEvacuationEvent.OnCharacterInEvacuationArea // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	float GetTimeToEvacuate(); // Function DFMGameplay.SOLEvacuationEvent.GetTimeToEvacuate // (Native|Public|BlueprintCallable) // @ game+0x6402a80
	void EventStartBP(); // Function DFMGameplay.SOLEvacuationEvent.EventStartBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void ClientOnStateChangeBP(enum class ESOLEvacuationEventState InState); // Function DFMGameplay.SOLEvacuationEvent.ClientOnStateChangeBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AwakeEvacuatePoint(); // Function DFMGameplay.SOLEvacuationEvent.AwakeEvacuatePoint // (Final|Native|Public) // @ game+0x88f4d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQuestObjectionItemBase
// Size: 0x80 (Inherited: 0x30)
class USOLQuestObjectionItemBase : public UObject {
public:

	enum class EGoalType ObjectionType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	int64_t QuestID; // 0x38(0x08)
	int64_t QuestObjectionID; // 0x40(0x08)
	float TimeLimit; // 0x48(0x04)
	float TimeSpent; // 0x4c(0x04)
	int64_t PrerequestObjectionID; // 0x50(0x08)
	uint64_t PlayerUin; // 0x58(0x08)
	enum class ESOLQuestObjectionState ObjectionState; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct FTimerHandle TimerHandle_QuestObj; // 0x68(0x08)
	char pad_70[0x10]; // 0x70(0x10)

	void OnQuestObjectionUpdate(uint64_t InPlayerUin, int64_t UpdateQuestId, int64_t UpdateObjectionId, char ObjState, bool ShouldShowUpdateUI); // Function DFMGameplay.SOLQuestObjectionItemBase.OnQuestObjectionUpdate // (Final|Native|Public) // @ game+0x6407690
	void OnPlayerGameStart(); // Function DFMGameplay.SOLQuestObjectionItemBase.OnPlayerGameStart // (Final|Native|Public) // @ game+0x6407670
	void OnObjectiveEnd(); // Function DFMGameplay.SOLQuestObjectionItemBase.OnObjectiveEnd // (Native|Public) // @ game+0x895960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQuestTriggerBase
// Size: 0x940 (Inherited: 0x3c0)
class ASOLQuestTriggerBase : public AGPInteractorBase {
public:

	char pad_3C0[0x238]; // 0x3c0(0x238)
	bool bEnableAdvancedTracking; // 0x5f8(0x01)
	char pad_5F9[0x3]; // 0x5f9(0x03)
	float ShowTrackingRangeDist; // 0x5fc(0x04)
	float TrackingRangeRadius; // 0x600(0x04)
	struct FVector2D TrackingRangeOffset; // 0x604(0x08)
	float ShowPreciseHudIconRangeRadius; // 0x60c(0x04)
	struct USceneComponent* SceneComponent; // 0x610(0x08)
	struct UShapeComponent* CollisionComp; // 0x618(0x08)
	struct UShapeComponent* BoxCollisionComp; // 0x620(0x08)
	int32_t QuestObjectionID; // 0x628(0x04)
	bool bUseSphereCollision; // 0x62c(0x01)
	bool bShowTrackingRange; // 0x62d(0x01)
	bool bTrackingTrigger; // 0x62e(0x01)
	char pad_62F[0x1]; // 0x62f(0x01)
	struct FGameplayTag InteractorTag; // 0x630(0x08)
	struct FGameplayTagContainer InteractableTags; // 0x638(0x20)
	struct FText InteractText; // 0x658(0x18)
	bool CustombActive_HD; // 0x670(0x01)
	bool CustombEnable_HD; // 0x671(0x01)
	bool CustombNeedHUDFixedPos_HD; // 0x672(0x01)
	bool CustombIsTagNumOverTwo_HD; // 0x673(0x01)
	bool CustombIsNeedFilterPre_HD; // 0x674(0x01)
	bool CustombIsNeedFilter3C_HD; // 0x675(0x01)
	bool CustombIsNeedShowWhiteDot_HD; // 0x676(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_HD; // 0x677(0x01)
	float CustomDetectShowWhiteDotHorizontalAngle_HD; // 0x678(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_HD; // 0x67c(0x04)
	float CustomDetectShowWhiteDotMinRadius_HD; // 0x680(0x04)
	float CustomDetectShowWhiteDotMaxRadius_HD; // 0x684(0x04)
	bool CustombIsNeedShowOutline_HD; // 0x688(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_HD; // 0x689(0x01)
	char pad_68A[0x2]; // 0x68a(0x02)
	float CustomDetectShowOutlineHorizontalAngle_HD; // 0x68c(0x04)
	float CustomDetectShowOutlineVerticalAngle_HD; // 0x690(0x04)
	float CustomDetectShowOutlineMinRadius_HD; // 0x694(0x04)
	float CustomDetectShowOutlineMaxRadius_HD; // 0x698(0x04)
	float CustomDetectShowHUDMinRadius_HD; // 0x69c(0x04)
	float CustomDetectShowHUDMaxRadius_HD; // 0x6a0(0x04)
	struct FName CustomDetectShowHUDBoxCompName_HD; // 0x6a4(0x08)
	char pad_6AC[0x4]; // 0x6ac(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_HD; // 0x6b0(0x08)
	float CustomDetectShowHUDHorizontalAngle_HD; // 0x6b8(0x04)
	float CustomDetectShowHUDVerticalAngle_HD; // 0x6bc(0x04)
	bool CustombIsNeedInteractPointForward_HD; // 0x6c0(0x01)
	bool CustombUseAimedBoxFilterHUDDir_HD; // 0x6c1(0x01)
	bool CustombUseBoxFilterHUDRange_HD; // 0x6c2(0x01)
	bool CustombUseBoxOverlapForFilterHUDRange_HD; // 0x6c3(0x01)
	bool CustombIsNeedShowToButton_HD; // 0x6c4(0x01)
	bool CustombIsNeedCheckAllowShowWidget_HD; // 0x6c5(0x01)
	bool CustombIsNeedFilterCollision_HD; // 0x6c6(0x01)
	enum class EInteractorHUDType CustomHUDType_HD; // 0x6c7(0x01)
	enum class EInteractorPriority CustomInteractorPriority_HD; // 0x6c8(0x01)
	bool CustombIsNeedGather_HD; // 0x6c9(0x01)
	char pad_6CA[0x6]; // 0x6ca(0x06)
	struct FText CustomButtonTitle_HD; // 0x6d0(0x18)
	bool CustombCanJump_HD; // 0x6e8(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_HD; // 0x6e9(0x01)
	bool CustombNeedIgnoreSelf_HD; // 0x6ea(0x01)
	char pad_6EB[0x5]; // 0x6eb(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_HD; // 0x6f0(0x10)
	float CustomCachedCanOverlapInterval_HD; // 0x700(0x04)
	float CustomCachedAllowShowWidgetInterval_HD; // 0x704(0x04)
	float CustomCachedFilterCollisionInterval_HD; // 0x708(0x04)
	float CustomCachedScreenPosInterval_HD; // 0x70c(0x04)
	bool CustombActive_Mobile; // 0x710(0x01)
	bool CustombEnable_Mobile; // 0x711(0x01)
	bool CustombIsNeedFilterPre_Mobile; // 0x712(0x01)
	bool CustombIsNeedFilter3C_Mobile; // 0x713(0x01)
	bool CustombIsNeedShowWhiteDot_Mobile; // 0x714(0x01)
	bool CustombUseAimedBoxFilterWhiteDotDir_Mobile; // 0x715(0x01)
	char pad_716[0x2]; // 0x716(0x02)
	float CustomDetectShowWhiteDotHorizontalAngle_Mobile; // 0x718(0x04)
	float CustomDetectShowWhiteDotVerticalAngle_Mobile; // 0x71c(0x04)
	float CustomDetectShowWhiteDotMinRadius_Mobile; // 0x720(0x04)
	float CustomDetectShowWhiteDotMaxRadius_Mobile; // 0x724(0x04)
	bool CustombIsNeedShowOutline_Mobile; // 0x728(0x01)
	bool CustombUseAimedBoxFilterOutlineDir_Mobile; // 0x729(0x01)
	char pad_72A[0x2]; // 0x72a(0x02)
	float CustomDetectShowOutlineHorizontalAngle_Mobile; // 0x72c(0x04)
	float CustomDetectShowOutlineVerticalAngle_Mobile; // 0x730(0x04)
	float CustomDetectShowOutlineMinRadius_Mobile; // 0x734(0x04)
	float CustomDetectShowOutlineMaxRadius_Mobile; // 0x738(0x04)
	float CustomDetectShowHUDMinRadius_Mobile; // 0x73c(0x04)
	float CustomDetectShowHUDMaxRadius_Mobile; // 0x740(0x04)
	struct FName CustomDetectShowHUDBoxCompName_Mobile; // 0x744(0x08)
	char pad_74C[0x4]; // 0x74c(0x04)
	struct UBoxComponent* CachedCustomDetectShowHUDBoxComp_Mobile; // 0x750(0x08)
	float CustomDetectShowHUDHorizontalAngle_Mobile; // 0x758(0x04)
	float CustomDetectShowHUDVerticalAngle_Mobile; // 0x75c(0x04)
	bool CustombIsNeedInteractPointForward_Mobile; // 0x760(0x01)
	bool CustombUseAimedBoxFilterHUDDir_Mobile; // 0x761(0x01)
	bool CustombUseBoxFilterHUDRange_Mobile; // 0x762(0x01)
	bool CustombUseBoxOverlapForFilterHUDRange_Mobile; // 0x763(0x01)
	bool CustombIsNeedShowToButton_Mobile; // 0x764(0x01)
	bool CustombIsNeedCheckAllowShowWidget_Mobile; // 0x765(0x01)
	bool CustombIsNeedFilterCollision_Mobile; // 0x766(0x01)
	enum class EInteractorHUDType CustomHUDType_Mobile; // 0x767(0x01)
	enum class EInteractorPriority CustomInteractorPriority_Mobile; // 0x768(0x01)
	bool CustombIsNeedGather_Mobile; // 0x769(0x01)
	char pad_76A[0x6]; // 0x76a(0x06)
	/*struct TSoftObjectPtr<UObject>*/char CustomButtonSoftIcon_Mobile[0x28]; // 0x770(0x28)
	struct FText CustomButtonTitle_Mobile; // 0x798(0x18)
	bool CustombCanJump_Mobile; // 0x7b0(0x01)
	bool CustombIgnoreCollisionWhenPassShowHUD_Mobile; // 0x7b1(0x01)
	bool CustombNeedIgnoreSelf_Mobile; // 0x7b2(0x01)
	char pad_7B3[0x5]; // 0x7b3(0x05)
	struct TArray<enum class EFSMForbidReason> CustomWhitelist_Mobile; // 0x7b8(0x10)
	float CustomCachedCanOverlapInterval_Mobile; // 0x7c8(0x04)
	float CustomCachedAllowShowWidgetInterval_Mobile; // 0x7cc(0x04)
	float CustomCachedFilterCollisionInterval_Mobile; // 0x7d0(0x04)
	float CustomCachedScreenPosInterval_Mobile; // 0x7d4(0x04)
	bool bCanOverlap; // 0x7d8(0x01)
	char pad_7D9[0x7]; // 0x7d9(0x07)
	struct FGameplayTagContainer DelayTagContainer; // 0x7e0(0x20)
	struct TMap<struct FGameplayTag, float> Tag2DelayTime; // 0x800(0x50)
	struct TMap<struct FGameplayTag, struct FText> Tag2DelayDesc; // 0x850(0x50)
	/*struct TSoftObjectPtr<UObject>*/char DelayButtonSoftIcon[0x28]; // 0x8a0(0x28)
	struct FText DelayButtonTitle; // 0x8c8(0x18)
	struct ACHARACTER* CachedDelayCharacter; // 0x8e0(0x08)
	char pad_8E8[0x8]; // 0x8e8(0x08)
	enum class EInteractorType CustomInteractorType; // 0x8f0(0x01)
	char pad_8F1[0x3]; // 0x8f1(0x03)
	struct FVector CustomInteractPointOffset; // 0x8f4(0x0c)
	float CustomDSCheckPlayerInRangeScale; // 0x900(0x04)
	bool CustombUseDSCheckPlayerState; // 0x904(0x01)
	bool CustombUseDSCheckCurrentCanOperate; // 0x905(0x01)
	bool CustombUseClientCheckCurrentCanOperate; // 0x906(0x01)
	bool CustombUseDSCheckPlayerInRange; // 0x907(0x01)
	bool CustombUseDSCheckPlayerPassFilterCollision; // 0x908(0x01)
	bool CustombUseDSCheckInteractorCanOverlap; // 0x909(0x01)
	enum class EInteractorBlockCheckType CustomBlockCheckType; // 0x90a(0x01)
	bool CustombUseForwardAndCheckHitFirstly; // 0x90b(0x01)
	bool CustombUseTrustClientWhenHitInteractor; // 0x90c(0x01)
	bool CustombUseDSCheckNearly; // 0x90d(0x01)
	char pad_90E[0x2]; // 0x90e(0x02)
	float CustomNearlyThresholdScale; // 0x910(0x04)
	bool CustombDSUseClientPosToCheckBlock; // 0x914(0x01)
	bool bRegToAdditionalInteractorArray; // 0x915(0x01)
	char pad_916[0x2]; // 0x916(0x02)
	struct UInteractorOptInterruptComponent* CachedInterruptComponent; // 0x918(0x08)
	struct TArray<struct ACHARACTER*> InteractCandidatorArray; // 0x920(0x10)
	struct ACHARACTER* LastOperatorCharacter; // 0x930(0x08)
	char pad_938[0x8]; // 0x938(0x08)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.SOLQuestTriggerBase.OnOverlapEnd // (Native|Public) // @ game+0x36ceb50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.SOLQuestTriggerBase.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x36ce950
	void OnDetectValidSystem(); // Function DFMGameplay.SOLQuestTriggerBase.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x6407100
	void OnDelayTHEnd_Mobile(); // Function DFMGameplay.SOLQuestTriggerBase.OnDelayTHEnd_Mobile // (Final|Native|Public) // @ game+0x64070e0
	void OnCommonBarCountingEnd(int32_t InIndex); // Function DFMGameplay.SOLQuestTriggerBase.OnCommonBarCountingEnd // (Final|Native|Public) // @ game+0x6406fa0
	void OnCommonBarCloseBtnClick(int32_t InIndex); // Function DFMGameplay.SOLQuestTriggerBase.OnCommonBarCloseBtnClick // (Final|Native|Public) // @ game+0x6406f20
	float GetRangeRadius(); // Function DFMGameplay.SOLQuestTriggerBase.GetRangeRadius // (Final|Native|Public) // @ game+0x6406c50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimeLineEventActor
// Size: 0x458 (Inherited: 0x378)
class ASOLTimeLineEventActor : public AActor {
public:

	enum class ESOLTimeLineEventActorType EventType; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct FString EventName; // 0x380(0x10)
	bool bDisplayTimelineUI; // 0x390(0x01)
	bool bIndependent; // 0x391(0x01)
	char pad_392[0x2]; // 0x392(0x02)
	int32_t TriggeredTime; // 0x394(0x04)
	int32_t TriggeredTimeRandomness; // 0x398(0x04)
	float TriggerRate; // 0x39c(0x04)
	struct FString TriggerTip; // 0x3a0(0x10)
	float TipTriggerAdvanceTime; // 0x3b0(0x04)
	float EventDuration; // 0x3b4(0x04)
	struct FSoftObjectPath EventIconPath; // 0x3b8(0x18)
	struct FString AffiliateToEventName; // 0x3d0(0x10)
	bool bSpecifiedPoint; // 0x3e0(0x01)
	char pad_3E1[0x3]; // 0x3e1(0x03)
	struct FName PointTag; // 0x3e4(0x08)
	char pad_3EC[0x34]; // 0x3ec(0x34)
	int32_t ActualTriggerTime; // 0x420(0x04)
	enum class ESOLTimeLineEventState TimeLineEventState; // 0x424(0x01)
	char pad_425[0x3]; // 0x425(0x03)
	struct FVector EventIconLocation; // 0x428(0x0c)
	float EventIconRadius; // 0x434(0x04)
	bool bShowMapIcon; // 0x438(0x01)
	bool bTriggeredAlertBanner; // 0x439(0x01)
	char pad_43A[0x6]; // 0x43a(0x06)
	struct FString TriggeredAlertTip; // 0x440(0x10)
	struct FTimerHandle TimerHandle_TimeLineEvent; // 0x450(0x08)

	void TriggerAlertBannerTips(struct FString TipStr); // Function DFMGameplay.SOLTimeLineEventActor.TriggerAlertBannerTips // (Final|Native|Public|BlueprintCallable) // @ game+0x640af20
	void TriggerAlertBanner(); // Function DFMGameplay.SOLTimeLineEventActor.TriggerAlertBanner // (Final|Native|Public|BlueprintCallable) // @ game+0x640af00
	void TimeLineEventStart(); // Function DFMGameplay.SOLTimeLineEventActor.TimeLineEventStart // (Final|Native|Public|BlueprintCallable) // @ game+0x640aee0
	void TimeLineEventEnd(); // Function DFMGameplay.SOLTimeLineEventActor.TimeLineEventEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x640aec0
	void ShowMapIcon(bool bShow); // Function DFMGameplay.SOLTimeLineEventActor.ShowMapIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x640ae30
	void OnTriggerTimeLineEvent(); // Function DFMGameplay.SOLTimeLineEventActor.OnTriggerTimeLineEvent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnRep_TriggeredAlertTip(); // Function DFMGameplay.SOLTimeLineEventActor.OnRep_TriggeredAlertTip // (Final|Native|Public) // @ game+0x640a8e0
	void OnRep_TimeLineEventState(); // Function DFMGameplay.SOLTimeLineEventActor.OnRep_TimeLineEventState // (Final|Native|Public) // @ game+0x640a8c0
	void OnRep_bTriggeredAlertBanner(); // Function DFMGameplay.SOLTimeLineEventActor.OnRep_bTriggeredAlertBanner // (Final|Native|Public) // @ game+0x640a900
	bool GetShowMapIcon(); // Function DFMGameplay.SOLTimeLineEventActor.GetShowMapIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x640a420
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineMajorEvent
// Size: 0x470 (Inherited: 0x378)
class ASOLTimelineMajorEvent : public AActor {
public:

	bool bUseSelfConfig; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct TArray<struct FSOLMajorEventCustomConfig> EventCustomConfig; // 0x380(0x10)
	struct TArray<struct FSOLTimelineEventRange> TimeRanges; // 0x390(0x10)
	int32_t TimeBeforeNotice; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct FSoftObjectPath EventIconPath; // 0x3a8(0x18)
	struct FText EventAlertText; // 0x3c0(0x18)
	float EventAlertDelayTime; // 0x3d8(0x04)
	struct FSOLTimelineWirelessConfig WirelessConfig; // 0x3dc(0x28)
	char pad_404[0x4]; // 0x404(0x04)
	struct FSoftObjectPath EventMusicPath; // 0x408(0x18)
	struct TArray<struct FString> AtmosphereEvents; // 0x420(0x10)
	struct TArray<struct FString> ExtraPerformances; // 0x430(0x10)
	bool bSelected; // 0x440(0x01)
	char pad_441[0x1]; // 0x441(0x01)
	enum class ESOLTimelineMajorEventState EventState; // 0x442(0x01)
	char pad_443[0x2d]; // 0x443(0x2d)

	void OnRep_State(); // Function DFMGameplay.SOLTimelineMajorEvent.OnRep_State // (Final|Native|Public) // @ game+0x640fa90
	void OnRep_Selected(); // Function DFMGameplay.SOLTimelineMajorEvent.OnRep_Selected // (Final|Native|Public) // @ game+0x640fa30
	void MulticastEventNotice(int32_t Period, int32_t TimeBefore); // Function DFMGameplay.SOLTimelineMajorEvent.MulticastEventNotice // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x640f480
	void MulticastEventEnd(bool AllEnd); // Function DFMGameplay.SOLTimelineMajorEvent.MulticastEventEnd // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x3653a50
	void MulticastEventBegin(); // Function DFMGameplay.SOLTimelineMajorEvent.MulticastEventBegin // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0xbcc1a0
	void BP_ClientOnStateChange(enum class ESOLTimelineMajorEventState InState); // Function DFMGameplay.SOLTimelineMajorEvent.BP_ClientOnStateChange // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AddPOIToTwinkleList(struct FString POIName, float BeginTime, float Duration); // Function DFMGameplay.SOLTimelineMajorEvent.AddPOIToTwinkleList // (Final|Native|Public|BlueprintCallable) // @ game+0x640eec0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnStaticMesh
// Size: 0x3a8 (Inherited: 0x378)
class ASpawnStaticMesh : public AActor {
public:

	struct UClass* StaticActorClass; // 0x378(0x08)
	struct UStaticMesh* StaticMesh; // 0x380(0x08)
	struct USkeletalMesh* SkeletalMesh; // 0x388(0x08)
	struct FName EffectName; // 0x390(0x08)
	float EffectDistance; // 0x398(0x04)
	struct TWeakObjectPtr<struct AActor> NewStaticActor; // 0x39c(0x08)
	bool bSpawnFinish; // 0x3a4(0x01)
	char pad_3A5[0x3]; // 0x3a5(0x03)

	void SpawnStaticMesh(struct AAIController* Control); // Function DFMGameplay.SpawnStaticMesh.SpawnStaticMesh // (Native|Public|BlueprintCallable) // @ game+0x61daa40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StartSpotAllocator
// Size: 0x90 (Inherited: 0x30)
class UStartSpotAllocator : public UObject {
public:

	char pad_30[0x60]; // 0x30(0x60)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinApperanceModifer_NameCard
// Size: 0x110 (Inherited: 0x40)
class UWeaponSkinApperanceModifer_NameCard : public UWeaponSkinApperanceModiferBase {
public:

	struct FVector2D TextureSize; // 0x40(0x08)
	uint64_t BindItemId; // 0x48(0x08)
	struct FName FontStyleName; // 0x50(0x08)
	struct FName TextureParamName; // 0x58(0x08)
	enum class EOrginNamrCardReplaceType ReplaceType; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UTexture2D* OrginTexture; // 0x68(0x08)
	struct UMaterialInterface* OriginMaterial; // 0x70(0x08)
	struct FName BindMaterialName; // 0x78(0x08)
	struct FName ColorParamName; // 0x80(0x08)
	struct FName ReadFromParamName; // 0x88(0x08)
	struct FLinearColor Color; // 0x90(0x10)
	struct UClass* TextWidget; // 0xa0(0x08)
	struct UWeaponNameCardWidget* wtTextWidget; // 0xa8(0x08)
	struct TArray<struct FNameCardMaterialParamOverride> OverrideParams; // 0xb0(0x10)
	char pad_C0[0x8]; // 0xc0(0x08)
	struct UTextureRenderTarget2D* RenderTarget2D; // 0xc8(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0xd0(0x08)
	int32_t MaterialIndex; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UMaterialInstanceDynamic* OriginMaterialDynamicIns; // 0xe0(0x08)
	struct TArray<struct UMaterialInstanceDynamic*> MaterialInstanceDynamics; // 0xe8(0x10)
	bool bReadColorParam; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct FString LastDrawName; // 0x100(0x10)

	void RefreshView(struct FString Name, bool bCacheNameRT); // Function DFMGameplay.WeaponSkinApperanceModifer_NameCard.RefreshView // (Final|Native|Public) // @ game+0x642fe30
	void InitMaterialInfos(); // Function DFMGameplay.WeaponSkinApperanceModifer_NameCard.InitMaterialInfos // (Final|Native|Protected) // @ game+0x642fb30
	void InitColorFromSkinParam(struct UModularWeaponDesc* Desc); // Function DFMGameplay.WeaponSkinApperanceModifer_NameCard.InitColorFromSkinParam // (Final|Native|Protected) // @ game+0x642fab0
	void DrawNameToRT(struct FString NameStr, bool bCacheNameRT); // Function DFMGameplay.WeaponSkinApperanceModifer_NameCard.DrawNameToRT // (Final|Native|Protected) // @ game+0x642f5e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectAbilityAssult
// Size: 0x1d0 (Inherited: 0xe8)
class UGPEffectAbilityAssult : public UGPEffectCueHandler {
public:

	struct FString PostEffectName; // 0xe8(0x10)
	struct FString PostEffectNameHD; // 0xf8(0x10)
	bool UseHDWhenHD; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	struct FCameraDelayEffectData CameraDelayEffectData; // 0x10c(0x08)
	struct FCameraSlowEffectData CameraSlowEffectData; // 0x114(0x04)
	struct FName PostMatSourcePosParamName; // 0x118(0x08)
	bool bTickSourcePos; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	float PostMatSourcePosTickTime; // 0x124(0x04)
	float PostMatTime; // 0x128(0x04)
	char pad_12C[0x10]; // 0x12c(0x10)
	bool EnablePostEffectFadeInOut; // 0x13c(0x01)
	char pad_13D[0x3]; // 0x13d(0x03)
	struct FName PostEffectFadeScalarParameterName; // 0x140(0x08)
	float PostEffectFadeInTime; // 0x148(0x04)
	float PostEffectFadeInStartIntensity; // 0x14c(0x04)
	float PostEffectFadeInEndIntensity; // 0x150(0x04)
	float PostEffectFadeOutTime; // 0x154(0x04)
	float PostEffectFadeOutStartIntensity; // 0x158(0x04)
	float PostEffectFadeOutEndIntensity; // 0x15c(0x04)
	struct FName AssaultHudName; // 0x160(0x08)
	float AssaultHudEffectTime; // 0x168(0x04)
	float AssaultHudTime; // 0x16c(0x04)
	bool bApplySnociDirView; // 0x170(0x01)
	bool bApplyAssaultEffect; // 0x171(0x01)
	bool bMiniMapShowFakeEnemy; // 0x172(0x01)
	char pad_173[0x1]; // 0x173(0x01)
	struct FFakeEnemyParams MPFakeEnemyParam; // 0x174(0x14)
	struct FFakeEnemyParams SolFakeEnemyParam; // 0x188(0x14)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UClass* Shake; // 0x1a0(0x08)
	struct FShakeParams ShakeParams; // 0x1a8(0x04)
	char pad_1AC[0x24]; // 0x1ac(0x24)

	void OnPostTime(); // Function DFMGameplay.GPEffectAbilityAssult.OnPostTime // (Final|Native|Public) // @ game+0x63226b0
	void OnNotifyRefreshBuff(uint32_t BuffId); // Function DFMGameplay.GPEffectAbilityAssult.OnNotifyRefreshBuff // (Final|Native|Public) // @ game+0x6322630
	void OnLoadMat(struct TArray<struct FSoftObjectPath> InPath); // Function DFMGameplay.GPEffectAbilityAssult.OnLoadMat // (Final|Native|Public) // @ game+0x63224a0
	void OnHudTime(); // Function DFMGameplay.GPEffectAbilityAssult.OnHudTime // (Final|Native|Public) // @ game+0x6322480
	void BP_OnPostTime(); // Function DFMGameplay.GPEffectAbilityAssult.BP_OnPostTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnHudTime(); // Function DFMGameplay.GPEffectAbilityAssult.BP_OnHudTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectAbility
// Size: 0x300 (Inherited: 0xe8)
class UGPEffectAbility : public UGPEffectCueHandler {
public:

	char pad_E8[0x18]; // 0xe8(0x18)
	struct AGPCharacter* OwnerChar; // 0x100(0x08)
	char pad_108[0x4]; // 0x108(0x04)
	bool bEnable; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct TArray<struct FString> RemoveEffects; // 0x110(0x10)
	struct FScreenPostProcessEffectConfig FadeInMatConfig; // 0x120(0x58)
	struct FScreenPostProcessEffectConfig LoopMatConfig; // 0x178(0x58)
	struct FScreenPostProcessEffectConfig FadeOutMatConfig; // 0x1d0(0x58)
	float EffectWeightAtZoom; // 0x228(0x04)
	float EffectWeightAtVehicle; // 0x22c(0x04)
	struct FName bUseTimeControlParamName; // 0x230(0x08)
	struct FScreenPostProcesaScalarParameterConfig SpeedEventConfig; // 0x238(0x18)
	/*struct TMap<struct FName, struct TSoftObjectPtr<UCurveFloat>>*/char SpeedEventCurves[0x50]; // 0x250(0x50)
	char pad_2A0[0x50]; // 0x2a0(0x50)
	struct TArray<struct UCurveBase*> CurrCurves; // 0x2f0(0x10)

	void ShowPanel(bool Show, struct FName Name); // Function DFMGameplay.GPEffectAbility.ShowPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x6327360
	void OnPanelShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.GPEffectAbility.OnPanelShow // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct UBaseUIView* GetPanel(struct FName Name); // Function DFMGameplay.GPEffectAbility.GetPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x6326be0
	void FinalExit(); // Function DFMGameplay.GPEffectAbility.FinalExit // (Final|Native|Public) // @ game+0x6326b40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectAbilityC202BeTracing
// Size: 0x148 (Inherited: 0xe8)
class UGPEffectAbilityC202BeTracing : public UGPEffectCueHandler {
public:

	struct FName StartBeTracingAudioName; // 0xe8(0x08)
	struct FName BeTracingAudioRTPCName; // 0xf0(0x08)
	struct FName BeTracingTipsAudioName_Near; // 0xf8(0x08)
	struct FName BeTracingTipsAudioName_Mid; // 0x100(0x08)
	struct FName BeTracingTipsAudioName_Far; // 0x108(0x08)
	struct FName BeTracingPostEffectName_Near; // 0x110(0x08)
	struct FName BeTracingPostEffectName_Mid; // 0x118(0x08)
	struct FName BeTracingPostEffectName_Far; // 0x120(0x08)
	struct FName BeTracingPostEffectName_Mobail; // 0x128(0x08)
	struct ADFMCharacter* CacheCharacter; // 0x130(0x08)
	int32_t CurTracingLevel; // 0x138(0x04)
	struct FName CurBeTracingPostEffectName; // 0x13c(0x08)
	bool bHasMobailEffect; // 0x144(0x01)
	char pad_145[0x3]; // 0x145(0x03)

	void SetTracingLevel(int32_t TracingLevel); // Function DFMGameplay.GPEffectAbilityC202BeTracing.SetTracingLevel // (Final|Native|Public) // @ game+0x632d140
	void PlayScreenEffect(int32_t TracingLevel); // Function DFMGameplay.GPEffectAbilityC202BeTracing.PlayScreenEffect // (Final|Native|Public) // @ game+0x632cbb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectBleeding
// Size: 0x190 (Inherited: 0xe8)
class UGPEffectBleeding : public UGPEffectCueHandler {
public:

	/*struct TSoftObjectPtr<UMaterialInstance>*/char PostEffectMat_Start[0x28]; // 0xe8(0x28)
	/*struct TSoftObjectPtr<UMaterialInstance>*/char PostEffectMat_Loop[0x28]; // 0x110(0x28)
	struct FString PostEffectName_Start; // 0x138(0x10)
	struct FString PostEffectName_Loop; // 0x148(0x10)
	struct UMaterialInstanceDynamic* PostEffectMat_Start_DMI; // 0x158(0x08)
	struct UMaterialInstanceDynamic* PostEffectMat_Loop_DMI; // 0x160(0x08)
	struct AGPPlayerCameraManager* CameraManager; // 0x168(0x08)
	char pad_170[0x4]; // 0x170(0x04)
	float StepOneTime; // 0x174(0x04)
	bool bRefreshPostProcessMat; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
	struct FTimerHandle TimerHandle; // 0x180(0x08)
	struct FTimerHandle PreTimerHandle; // 0x188(0x08)

	void ShowPanel(bool Show, struct FName Name); // Function DFMGameplay.GPEffectBleeding.ShowPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x632d2c0
	void SetPreLifeTime(float PreLifeTime); // Function DFMGameplay.GPEffectBleeding.SetPreLifeTime // (Final|Native|Public|BlueprintCallable) // @ game+0x632d0c0
	void OnPreLifeTime(); // Function DFMGameplay.GPEffectBleeding.OnPreLifeTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void OnPanelShow(struct FString FunctionName, struct UBaseUIView* View); // Function DFMGameplay.GPEffectBleeding.OnPanelShow // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void OnNotifyRefreshBuff(uint32_t BuffId); // Function DFMGameplay.GPEffectBleeding.OnNotifyRefreshBuff // (Final|Native|Public) // @ game+0x632c680
	void OnLoadMatFinsh(struct TArray<struct FSoftObjectPath> InPath); // Function DFMGameplay.GPEffectBleeding.OnLoadMatFinsh // (Final|Native|Public) // @ game+0x632c4f0
	struct UBaseUIView* GetPanel(struct FName Name); // Function DFMGameplay.GPEffectBleeding.GetPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x632b820
	float GetLifeTime(); // Function DFMGameplay.GPEffectBleeding.GetLifeTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x632b7f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectC102Adrenaline
// Size: 0xf0 (Inherited: 0xe8)
class UGPEffectC102Adrenaline : public UGPEffectCueHandler {
public:

	struct ADFMCharacter* TargetChar; // 0xe8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectPain
// Size: 0xf8 (Inherited: 0xe8)
class UGPEffectPain : public UGPEffectCueHandler {
public:

	bool bLoop; // 0xe8(0x01)
	bool bImmediateTrrige; // 0xe9(0x01)
	char pad_EA[0x2]; // 0xea(0x02)
	float TriggerShakeTime; // 0xec(0x04)
	struct FTimerHandle ShakeTimeHandle; // 0xf0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityWeaponThrowableAdrenaline
// Size: 0xfb0 (Inherited: 0xfa0)
class AAbilityWeaponThrowableAdrenaline : public AAbilityWeaponThrowableBullet {
public:

	float DelayDestroyTime; // 0xfa0(0x04)
	char pad_FA4[0x4]; // 0xfa4(0x04)
	struct FTimerHandle DestroyTimerHandle; // 0xfa8(0x08)

	void DestroyAdrenaline(); // Function DFMGameplay.AbilityWeaponThrowableAdrenaline.DestroyAdrenaline // (Final|Native|Public) // @ game+0x61c10f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityWeaponThrowableFlashDrone
// Size: 0x12a0 (Inherited: 0xfa0)
class AAbilityWeaponThrowableFlashDrone : public AAbilityWeaponThrowableBullet {
public:

	char pad_FA0[0x18]; // 0xfa0(0x18)
	float Health; // 0xfb8(0x04)
	float FlyDuration_2; // 0xfbc(0x04)
	float FlyDuration_3; // 0xfc0(0x04)
	float FlySpeed; // 0xfc4(0x04)
	float TrackingSpeed; // 0xfc8(0x04)
	float MinFlyHight; // 0xfcc(0x04)
	float MaxFlyHight; // 0xfd0(0x04)
	float MinStayFlyHight; // 0xfd4(0x04)
	float MaxStayFlyHight; // 0xfd8(0x04)
	float ZFlySpeed; // 0xfdc(0x04)
	float MaxZFlySpeed; // 0xfe0(0x04)
	float CheckEnemyInterval; // 0xfe4(0x04)
	float TryFindAndTracingPathInterval; // 0xfe8(0x04)
	char pad_FEC[0x4]; // 0xfec(0x04)
	struct TArray<struct FDFMAbilityFlashDroneData> FlashBuffData; // 0xff0(0x10)
	/*struct TSoftClassPtr<UObject>*/char FlashDroneLightBP[0x28]; // 0x1000(0x28)
	/*struct TSoftClassPtr<UObject>*/char FlashDroneLightBP_Mobile[0x28]; // 0x1028(0x28)
	float FlashLightTime; // 0x1050(0x04)
	float DelayDestroyTime; // 0x1054(0x04)
	struct FName PrepareFlashEffectID; // 0x1058(0x08)
	struct FName PrepareFlashEffectID_Teammate; // 0x1060(0x08)
	struct FName FlashEffectID; // 0x1068(0x08)
	struct UAnimSequenceBase* RotatePropellerAnimSeq; // 0x1070(0x08)
	struct FName OutLineEffectMeshTag; // 0x1078(0x08)
	struct FName PrepareEffectRootTag; // 0x1080(0x08)
	struct UGPAudioEventAsset* FlyForwardStartAudio; // 0x1088(0x08)
	struct UGPAudioEventAsset* FlyForwardEndAudio; // 0x1090(0x08)
	struct UGPAudioEventAsset* StopFlyAudio; // 0x1098(0x08)
	struct UGPAudioEventAsset* LockSuccAudio; // 0x10a0(0x08)
	struct UGPAudioEventAsset* FlashAudio; // 0x10a8(0x08)
	struct UGPAudioEventAsset* DestroyAudio; // 0x10b0(0x08)
	struct UCapsuleComponent* RangeCheckCapsule; // 0x10b8(0x08)
	struct UPrimitiveComponent* PrepareEffectRoot; // 0x10c0(0x08)
	float StartTracingTime; // 0x10c8(0x04)
	bool TryFindPath; // 0x10cc(0x01)
	char pad_10CD[0x3]; // 0x10cd(0x03)
	float StopAutoFlyTime; // 0x10d0(0x04)
	float AutoDestroyTime; // 0x10d4(0x04)
	bool bStartTracing; // 0x10d8(0x01)
	bool bStartRotation; // 0x10d9(0x01)
	char pad_10DA[0x6]; // 0x10da(0x06)
	struct TArray<struct AActor*> Ignores; // 0x10e0(0x10)
	bool bShowMarker; // 0x10f0(0x01)
	char pad_10F1[0x7]; // 0x10f1(0x07)
	struct FTimerHandle DestroyTimerHandle; // 0x10f8(0x08)
	int32_t PathIndex; // 0x1100(0x04)
	int32_t NextPosIndex; // 0x1104(0x04)
	float DistanceAlongPath; // 0x1108(0x04)
	struct FVector FlyDir; // 0x110c(0x0c)
	bool bStopFly; // 0x1118(0x01)
	bool bContinueFlah; // 0x1119(0x01)
	char pad_111A[0x2]; // 0x111a(0x02)
	float CurCheckTime; // 0x111c(0x04)
	float LastScanTime; // 0x1120(0x04)
	float WarningTime; // 0x1124(0x04)
	bool bIsWarning; // 0x1128(0x01)
	char pad_1129[0x3]; // 0x1129(0x03)
	struct FVector ActorFootPos; // 0x112c(0x0c)
	struct FVector CurFootLocation; // 0x1138(0x0c)
	struct FVector LastFootLocation; // 0x1144(0x0c)
	float CurZSpeed; // 0x1150(0x04)
	char pad_1154[0x4]; // 0x1154(0x04)
	struct FAbilityTracingPathData TracingPath; // 0x1158(0x38)
	struct TArray<struct FVector> RealTracingPath; // 0x1190(0x10)
	struct TArray<float> TracingPathLengths; // 0x11a0(0x10)
	/*struct TSet<int32_t>*/char HitPlayerSet[0x50]; // 0x11b0(0x50)
	struct FVector CurTargetPos; // 0x1200(0x0c)
	struct FVector CurVelocity; // 0x120c(0x0c)
	bool bHasTracingPath; // 0x1218(0x01)
	bool bWaitForEndFlashLight; // 0x1219(0x01)
	char pad_121A[0x2]; // 0x121a(0x02)
	float LastFlashLightTime; // 0x121c(0x04)
	struct FVector FlashTargetPos; // 0x1220(0x0c)
	struct FDFMAbilityFlashDroneData CurModeFlashDroneData; // 0x122c(0x34)
	struct AC202FlashDroneLightBase* FlashLightActor; // 0x1260(0x08)
	struct UFXResourceContainerComponent* PrepareFlashFXComp; // 0x1268(0x08)
	int32_t PrepareFlashFXCompHandle; // 0x1270(0x04)
	char pad_1274[0x4]; // 0x1274(0x04)
	struct UFXResourceContainerComponent* FlashFXComp; // 0x1278(0x08)
	int32_t FlashFXCompHandle; // 0x1280(0x04)
	float LastTryFindAndTracingPathTime; // 0x1284(0x04)
	uint64_t OutLineItemID; // 0x1288(0x08)
	struct USkeletalMeshComponent* OutLineEffectMesh; // 0x1290(0x08)
	char pad_1298[0x8]; // 0x1298(0x08)

	bool TryFlashEnemy(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.TryFlashEnemy // (Final|Native|Private) // @ game+0x61c1e80
	bool TryFindAndTracingPath(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.TryFindAndTracingPath // (Final|Native|Private) // @ game+0x61c1e50
	void TickFly(float DeltaTime); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.TickFly // (Final|Native|Private) // @ game+0x61c1dd0
	void StopFly(bool bEmpDestory); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.StopFly // (Final|Native|Public) // @ game+0x61c1d40
	void StartAutoFly(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.StartAutoFly // (Final|Native|Public) // @ game+0x61c1d20
	bool ScanEnemy(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.ScanEnemy // (Final|Native|Private) // @ game+0x61c1cf0
	void RotatePropeller(bool bActive); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.RotatePropeller // (Final|Native|Public) // @ game+0x61c1c60
	struct FVector ProjectPointToGround(struct FVector Point); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.ProjectPointToGround // (Final|Native|Private|HasDefaults) // @ game+0x61c1b70
	void PlayPrepareFlashEffect(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.PlayPrepareFlashEffect // (Final|Native|Public) // @ game+0x61c1b50
	void PlayFlashLight(struct AActor* Target, struct FVector TargetPos); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.PlayFlashLight // (Final|Native|Public|HasDefaults) // @ game+0x61c1a80
	void MulticastClientPrepareFlash(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.MulticastClientPrepareFlash // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1befa30
	void MulticastClientPlayFlashLight(struct AActor* Target, struct FVector TargetPos); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.MulticastClientPlayFlashLight // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x61c1530
	bool IsEnemyChar(struct AGPCharacter* TargetChar); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.IsEnemyChar // (Final|Native|Private) // @ game+0x61c14a0
	struct AAbilityWeaponThrowableFlashDrone* GetRealPlayEffectFlashDrone(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.GetRealPlayEffectFlashDrone // (Final|Native|Public) // @ game+0x61c1470
	bool GetNextTargetPos(struct FVector& NextTargetPos); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.GetNextTargetPos // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x61c13d0
	float GetFlySpeed(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.GetFlySpeed // (Final|Native|Private) // @ game+0x61c1370
	struct FVector FindNearestPointOnPath(struct FVector& PointA, struct TArray<struct FVector>& PathPoints, struct TArray<float>& PathLengths, int32_t& NextIndex); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.FindNearestPointOnPath // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x61c1150
	void EndPlayFlashLight(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.EndPlayFlashLight // (Final|Native|Public) // @ game+0x61c1130
	void DestroyFlashDrone(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.DestroyFlashDrone // (Final|Native|Public) // @ game+0x61c1110
	bool CheckBlock(struct FVector& StartLocation, struct AActor* Target); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.CheckBlock // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x61c0ff0
	struct FVector CalculateVelocity(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.CalculateVelocity // (Final|Native|Private|HasDefaults) // @ game+0x61c0fb0
	void CalculatePath(); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.CalculatePath // (Final|Native|Private) // @ game+0x61c0f90
	struct FVector CalculateLocationOnPath(float Distance); // Function DFMGameplay.AbilityWeaponThrowableFlashDrone.CalculateLocationOnPath // (Final|Native|Private|HasDefaults) // @ game+0x61c0ef0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICharacter
// Size: 0x2e60 (Inherited: 0x2870)
class ADFMAICharacter : public ADFMCharacter {
public:

	struct FName OpenDoorAnimRowName; // 0x2870(0x08)
	bool bOpenDoor; // 0x2878(0x01)
	char pad_2879[0x7]; // 0x2879(0x07)
	struct TArray<struct UMeshComponent*> OutLineMeshsOverride; // 0x2880(0x10)
	bool bRemoveCorpse; // 0x2890(0x01)
	char pad_2891[0x7]; // 0x2891(0x07)
	uint32_t OverrideAnimID; // 0x2898(0x04)
	struct FName AIDSPoseConfig; // 0x289c(0x08)
	bool bFighting; // 0x28a4(0x01)
	char pad_28A5[0xb]; // 0x28a5(0x0b)
	struct FRootMotionActionInfo RootMotionActionRep; // 0x28b0(0xf0)
	struct TArray<struct FRootMotionActionInfo> RootMotionActionReps; // 0x29a0(0x10)
	struct FPlanningTransitionInfo PlanningTransitionRep; // 0x29b0(0x68)
	struct TArray<struct FPlanningTransitionInfo> PlanningTransitionReps; // 0x2a18(0x10)
	char pad_2A28[0x160]; // 0x2a28(0x160)
	struct FDebugTransitionPathInfo DebugTransitionRep; // 0x2b88(0x20)
	struct UDFMAICharacterMovementComponent* AIMovementComp; // 0x2ba8(0x08)
	struct UMotionActionComponent* MotionActionComponent; // 0x2bb0(0x08)
	struct UCharacterLODComponent* AICharacterLODComponent; // 0x2bb8(0x08)
	struct UGPAIDataComponentAnim* AIAnimDataComp; // 0x2bc0(0x08)
	struct UDFMAIHelicopterSpawnComponent* HelicopterSpawnComponent; // 0x2bc8(0x08)
	enum class EAIMachineGunFocusMode AIMachineGunFocusMode; // 0x2bd0(0x01)
	char pad_2BD1[0xf]; // 0x2bd1(0x0f)
	float SmallAngleTurnInPlaceDelay; // 0x2be0(0x04)
	float TurnInPlaceTriggerThreshold; // 0x2be4(0x04)
	struct UClass* GMKillMeGameplayEffect; // 0x2be8(0x08)
	struct UClass* GMKillMeAttributeEffect; // 0x2bf0(0x08)
	char pad_2BF8[0x8]; // 0x2bf8(0x08)
	struct FSpawnBaseAIInfo AIInfo; // 0x2c00(0x30)
	struct FVector MuzzleFlashScale; // 0x2c30(0x0c)
	bool bDisableTeammateAndSelfDamage; // 0x2c3c(0x01)
	bool bAlwaysNotIgnoreDamageTrace; // 0x2c3d(0x01)
	bool bCollectAnalysisData; // 0x2c3e(0x01)
	char pad_2C3F[0x1]; // 0x2c3f(0x01)
	/*struct TSet<struct UActorComponent*>*/char DisableTickComponents[0x50]; // 0x2c40(0x50)
	/*struct TSet<struct UActorComponent*>*/char AggregateTickComponents[0x50]; // 0x2c90(0x50)
	struct TArray<enum class EAICharacterTag> CharacterTags; // 0x2ce0(0x10)
	bool bEnableRippleEffect; // 0x2cf0(0x01)
	char pad_2CF1[0x3]; // 0x2cf1(0x03)
	struct FName RippleEffectId; // 0x2cf4(0x08)
	char pad_2CFC[0x4]; // 0x2cfc(0x04)
	struct ADFMWaterRippleEffect* RippleEffect; // 0x2d00(0x08)
	float CheckPlasmolysisTime; // 0x2d08(0x04)
	float EffectBaseScale; // 0x2d0c(0x04)
	float EffectMaxPlayDistance; // 0x2d10(0x04)
	struct FVector InitMeshOffest; // 0x2d14(0x0c)
	struct UCurveFloat* ShootEffectCurveFloat; // 0x2d20(0x08)
	char pad_2D28[0x5c]; // 0x2d28(0x5c)
	float DisplaySubtitlesFarthest; // 0x2d84(0x04)
	float CrouchEyePosOffset; // 0x2d88(0x04)
	struct FVector ProneEyePosOffset; // 0x2d8c(0x0c)
	bool bAllowedReplenish; // 0x2d98(0x01)
	bool OpenPreDeadDrama; // 0x2d99(0x01)
	bool BeginPreDeadDrama; // 0x2d9a(0x01)
	char pad_2D9B[0x5]; // 0x2d9b(0x05)
	struct UGPAIAnimProxyComponent* AIAnimProxyComp; // 0x2da0(0x08)
	struct UDFMAIEnvironmentInteractComponent* AIEnvInteractComp; // 0x2da8(0x08)
	struct UWeaponReplicateComponent* WeaponReplicateComponent; // 0x2db0(0x08)
	struct UFXResourceContainerComponent* TeamMarkFxComp; // 0x2db8(0x08)
	char pad_2DC0[0x8]; // 0x2dc0(0x08)
	struct UAirHitDetectorComponent* AirHitDetectorComp; // 0x2dc8(0x08)
	struct FVector LastCheckStuckLoc; // 0x2dd0(0x0c)
	struct FName KillCamAttachBoneName; // 0x2ddc(0x08)
	struct FVector KillCamCameraOffset; // 0x2de4(0x0c)
	char pad_2DF0[0x18]; // 0x2df0(0x18)
	enum class ECharacterDuty CurrentCharacterDuty; // 0x2e08(0x01)
	char pad_2E09[0x1]; // 0x2e09(0x01)
	bool bAllowStuckSuicide; // 0x2e0a(0x01)
	bool bForceCloseCheckSucide; // 0x2e0b(0x01)
	float StayTimeLimit; // 0x2e0c(0x04)
	struct FVector LastLoc; // 0x2e10(0x0c)
	float LastUpdateLocTime; // 0x2e1c(0x04)
	int32_t LastHasNav; // 0x2e20(0x04)
	struct FVector RelativeLocationOverride; // 0x2e24(0x0c)
	bool bDetachFromActorWhenDie; // 0x2e30(0x01)
	char pad_2E31[0x17]; // 0x2e31(0x17)
	struct TArray<struct AInteractor_DoorBase*> Doors; // 0x2e48(0x10)
	bool bIsHideRomytheus; // 0x2e58(0x01)
	bool bIgnoreMoveCollision; // 0x2e59(0x01)
	bool bIsDavid; // 0x2e5a(0x01)
	bool bShouldPlayDavidVO; // 0x2e5b(0x01)
	bool bCallBPServerOnImpendingDeath; // 0x2e5c(0x01)
	char pad_2E5D[0x3]; // 0x2e5d(0x03)

	void UpdateAIMachineGunFocusMode(enum class EAIMachineGunFocusMode InAIMachineGunFocusMode); // Function DFMGameplay.DFMAICharacter.UpdateAIMachineGunFocusMode // (Final|Native|Public|BlueprintCallable) // @ game+0x6239ca0
	void ToggleWeaponTacticalFunction(bool bEnable); // Function DFMGameplay.DFMAICharacter.ToggleWeaponTacticalFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x6239c10
	void StopFireEffect(); // Function DFMGameplay.DFMAICharacter.StopFireEffect // (Net|Native|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239a60
	void StopDefaultPrepareFireEffect(); // Function DFMGameplay.DFMAICharacter.StopDefaultPrepareFireEffect // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239a40
	void StartDefaultPrepareFireEffect(struct FName PreShootEffectName, struct TArray<enum class EWeaponItemType> AllowEWeapoTypes, float MaxPlayDistance, struct UCurveFloat* CurveFloat); // Function DFMGameplay.DFMAICharacter.StartDefaultPrepareFireEffect // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x62398c0
	bool SpecifyPistolAttachSecondaryWeapon(); // Function DFMGameplay.DFMAICharacter.SpecifyPistolAttachSecondaryWeapon // (Native|Event|Public|BlueprintEvent) // @ game+0x6239890
	void SetWeaponTraceRange(float TraceRange_Override); // Function DFMGameplay.DFMAICharacter.SetWeaponTraceRange // (Final|Native|Public|BlueprintCallable) // @ game+0x6239810
	void SetSameCamp(struct TArray<struct ADFMCharacter*> PlayerList); // Function DFMGameplay.DFMAICharacter.SetSameCamp // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239740
	void SetPlayLocoAdditiveAnim(bool bPlay, float AnimBlendTime); // Function DFMGameplay.DFMAICharacter.SetPlayLocoAdditiveAnim // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x6239680
	void SetEffectBaseScale(float InEffectBaseScale); // Function DFMGameplay.DFMAICharacter.SetEffectBaseScale // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239600
	void RPC_AIRequestSubtitleSequence(struct FName VOConfigName); // Function DFMGameplay.DFMAICharacter.RPC_AIRequestSubtitleSequence // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239570
	void PrepareFireEffect(struct FName PreShootEffectName); // Function DFMGameplay.DFMAICharacter.PrepareFireEffect // (Net|Native|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x62394e0
	void PlaySpecWeaponAudio(struct FName AudioTypeName, float Duration); // Function DFMGameplay.DFMAICharacter.PlaySpecWeaponAudio // (Net|Native|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239410
	void PlayMontageMulticast(struct UAnimInstance* AnimInstance, struct UAnimMontage* MontageToPlay, float InPlayRate); // Function DFMGameplay.DFMAICharacter.PlayMontageMulticast // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6239310
	void PlayAnimation(struct UAnimMontage* Anim, enum class EAnimationPlayType AnimPlayType); // Function DFMGameplay.DFMAICharacter.PlayAnimation // (Net|Native|Event|NetMulticast|Public) // @ game+0x6239190
	void OnRepRootMotionAction(); // Function DFMGameplay.DFMAICharacter.OnRepRootMotionAction // (Final|Native|Public) // @ game+0x6239170
	void OnRepPlanningTransitionRep(); // Function DFMGameplay.DFMAICharacter.OnRepPlanningTransitionRep // (Final|Native|Public) // @ game+0x6239150
	void OnPrepareFireEffectBP(struct FName PreShootEffectName, bool bActive); // Function DFMGameplay.DFMAICharacter.OnPrepareFireEffectBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnDebugTransitionRep(); // Function DFMGameplay.DFMAICharacter.OnDebugTransitionRep // (Final|Native|Public) // @ game+0x6238e10
	void MulticastSetMovementMode(enum class EMovementMode MovementMode); // Function DFMGameplay.DFMAICharacter.MulticastSetMovementMode // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6238d90
	void MulticastSetCapsuleCollisionType(enum class ECollisionEnabled NewType); // Function DFMGameplay.DFMAICharacter.MulticastSetCapsuleCollisionType // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6238d10
	void MulticastAIKnockback(struct ADFMCharacter* Attacker, float TargetYawWorld); // Function DFMGameplay.DFMAICharacter.MulticastAIKnockback // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6238c40
	void MultiAddSubtitleKey(struct FName SubtitleKey); // Function DFMGameplay.DFMAICharacter.MultiAddSubtitleKey // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6238bb0
	bool STATIC_IsShelterLocation(struct AActor* AICharacter, struct FVector Location, struct FVector TargetLocation); // Function DFMGameplay.DFMAICharacter.IsShelterLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x6238a90
	void HideRomytheus(); // Function DFMGameplay.DFMAICharacter.HideRomytheus // (Final|Native|Public|BlueprintCallable) // @ game+0x6238a70
	void GMKillMe(); // Function DFMGameplay.DFMAICharacter.GMKillMe // (Final|Native|Public|BlueprintCallable) // @ game+0x6238860
	enum class EMovePlanAvoidanceStatus GetMovePlanAvoidanceStatus(); // Function DFMGameplay.DFMAICharacter.GetMovePlanAvoidanceStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x6238a40
	bool GetIsAllowDynamicChangeBehaviors(); // Function DFMGameplay.DFMAICharacter.GetIsAllowDynamicChangeBehaviors // (Final|Native|Public|BlueprintCallable) // @ game+0x6238a10
	struct AActor* GetFocusActor(); // Function DFMGameplay.DFMAICharacter.GetFocusActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62389e0
	struct USceneComponent* GetAttachComponent(); // Function DFMGameplay.DFMAICharacter.GetAttachComponent // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void GetAngleAndDistanceWithTarget(struct FVector TargetLocation, float& Angle, float& Distance); // Function DFMGameplay.DFMAICharacter.GetAngleAndDistanceWithTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x62388b0
	struct UDFMAIEnvironmentInteractComponent* GetAIEnvironmentInteractComponent(); // Function DFMGameplay.DFMAICharacter.GetAIEnvironmentInteractComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x6238880
	bool STATIC_FindShelterLocationToEdge(struct AActor* AICharacter, struct FVector Location, struct FVector TargetLocation, struct TArray<struct FVector>& CrouchFightLocation, struct TArray<struct FVector>& StandFightLocation, struct TArray<struct FVector>& OnlyStandLocation); // Function DFMGameplay.DFMAICharacter.FindShelterLocationToEdge // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6238590
	void ClientsStopTurnInPlaceMontage(); // Function DFMGameplay.DFMAICharacter.ClientsStopTurnInPlaceMontage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x62381b0
	void ClientsPlayTurnInPlaceMontage(float TargetYaw); // Function DFMGameplay.DFMAICharacter.ClientsPlayTurnInPlaceMontage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6238130
	void CheckPlasmolysis(); // Function DFMGameplay.DFMAICharacter.CheckPlasmolysis // (Final|Native|Public) // @ game+0x6238110
	void CheckNeedSucide(); // Function DFMGameplay.DFMAICharacter.CheckNeedSucide // (Final|Native|Public) // @ game+0x62380f0
	void BPSetSameCamp(struct TArray<struct ADFMCharacter*>& PlayerList); // Function DFMGameplay.DFMAICharacter.BPSetSameCamp // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x6237cb0
	void BP_ServerPreDodyingEvent(); // Function DFMGameplay.DFMAICharacter.BP_ServerPreDodyingEvent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerOnImpendingDeath(); // Function DFMGameplay.DFMAICharacter.BP_ServerOnImpendingDeath // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnWeaponEvent(struct AWeaponBase* Weapon, enum class EItemMainType MainType, enum class EWeaponItemType WeaponItemType, enum class EGPWeaponInnerEvent EventType); // Function DFMGameplay.DFMAICharacter.BP_OnWeaponEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x6237fb0
	void BP_OnDelegateWeaponCreated(struct AWeaponBase* NewWeapon); // Function DFMGameplay.DFMAICharacter.BP_OnDelegateWeaponCreated // (Native|Event|Public|BlueprintEvent) // @ game+0x6237f20
	bool BP_ModifyDamageCheck(struct FDamageSourceInfo& SourceInfo, struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMAICharacter.BP_ModifyDamageCheck // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x6237d90
	void AICallHelp(); // Function DFMGameplay.DFMAICharacter.AICallHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x89e920
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerCharacter
// Size: 0x2a98 (Inherited: 0x2870)
class ADFMPlayerCharacter : public ADFMCharacter {
public:

	struct UGPTacticalActionComponent* GPTacticalActionComp; // 0x2870(0x08)
	struct UDFMTelescopeComponent* DFMTelescopeComp; // 0x2878(0x08)
	struct UDFMCharacterBattleClassComponent* DFMCharacterBattleClassComp; // 0x2880(0x08)
	struct UDFMProcessAIMsgComponent* DFMProcessAIMsgComp; // 0x2888(0x08)
	struct UGPSpeedScaleDataComponent* GPSpeedScaleDataComp; // 0x2890(0x08)
	struct UGPActionSequenceComponent* GPActionSequenceComp; // 0x2898(0x08)
	struct UGPAudioAnimationNotifyPlayer* GPAudioAnimationNotifyPlayerComp; // 0x28a0(0x08)
	struct UGPPhysicalAnimationComponent* GPPhysicalAnimationComp; // 0x28a8(0x08)
	struct UDFMPlayerDataAnalysisComponent* DFMPlayerDataAnalysisComp; // 0x28b0(0x08)
	struct UGPSoundVisualizationComponent* GPSoundVisualizationComponent; // 0x28b8(0x08)
	struct UGPStaminaDataComponent* GPStaminaDataComp; // 0x28c0(0x08)
	struct UDFMBehaviorFactorComponent* DFMBehaviorFactorComp; // 0x28c8(0x08)
	struct UGPVehicleDataComponent* GPVehicleDataComp; // 0x28d0(0x08)
	struct UDFMAnimDataComponent* GPAnimDataComp; // 0x28d8(0x08)
	struct UPlayerDialogueComponent* PlayerDialogueComp; // 0x28e0(0x08)
	struct UDFMCharacterAmbientAudioFSM* DFMCharacterAmbientAudioFSMComp; // 0x28e8(0x08)
	struct UGPExplosionEffectComponent* GPExplosionEffectComponent; // 0x28f0(0x08)
	struct UGPCharacterVoiceComponent* GPVoiceComponent; // 0x28f8(0x08)
	struct UGPAnimProxyComponent* GPAnimProxyComponent; // 0x2900(0x08)
	struct UGPCameraModeComponent* GPCameraModeComponent; // 0x2908(0x08)
	struct UWeaponManagerComponent* WeaponManagerComponent; // 0x2910(0x08)
	struct UWeaponReplicateComponent* WeaponReplicateComponent; // 0x2918(0x08)
	struct UCharacterEquipComponent* CharacterEquipComponent; // 0x2920(0x08)
	struct UInventoryManager* InventoryManager; // 0x2928(0x08)
	struct UInventoryUseItemManager* InventoryUseItemManager; // 0x2930(0x08)
	struct UCharacterLODComponent* PlayerCharacterLODComponent; // 0x2938(0x08)
	struct UGPVaultAndClimbComponent* GPVaultAndClimbComponent; // 0x2940(0x08)
	struct UGPSlidingTackleComponent* GPSlidingTackleComponent; // 0x2948(0x08)
	struct UDFMParachuteComponent* DFMParachuteComponent; // 0x2950(0x08)
	struct UGPPushedComponent* GPPushedComponent; // 0x2958(0x08)
	struct UDFMHitEffectComponent* DFMHitEffectComponent; // 0x2960(0x08)
	struct UDFMSkillComponent* DFMSkillComponent; // 0x2968(0x08)
	struct UDFMSniperMarkAimedEnemyComponent* DFMSniperMarkAimedEnemyComponent; // 0x2970(0x08)
	struct UDFMAICharacterScoringComponent* DFMAICharacterScoringComponent; // 0x2978(0x08)
	struct UDFMSlotChargingComponent* SlotChargingComponent; // 0x2980(0x08)
	struct UGPRushMoveComponent* GPRushMoveComponent; // 0x2988(0x08)
	struct UDFCommercializationComponent* DFCommercializationComponent; // 0x2990(0x08)
	char pad_2998[0x10]; // 0x2998(0x10)
	bool bPlayerInCombatState; // 0x29a8(0x01)
	char pad_29A9[0x7]; // 0x29a9(0x07)
	struct FSoftObjectPath RescueVoicePath; // 0x29b0(0x18)
	struct FSoftObjectPath RescueVoice2DPath; // 0x29c8(0x18)
	/*struct TSoftClassPtr<UObject>*/char FlashLightCanvasClass[0x28]; // 0x29e0(0x28)
	struct TArray<struct UClass*> RuleInvalidCharacterComponentArray; // 0x2a08(0x10)
	struct TMap<enum class EFSMCharacterState, uint64_t> PreStateRTTCheckMap; // 0x2a18(0x50)
	struct FTimerHandle PreStateForRTTTimerHandle; // 0x2a68(0x08)
	enum class EFSMCharacterState CurrentPreStateForRTTT; // 0x2a70(0x01)
	char pad_2A71[0x7]; // 0x2a71(0x07)
	struct UParticleSystemComponent* ScreenParticleEffectComponent; // 0x2a78(0x08)
	int32_t CrocodileNum; // 0x2a80(0x04)
	struct FGPAudioFuturePlayingID ScrrenAudioID; // 0x2a84(0x08)
	struct FName DeathCloseEyeEffectName; // 0x2a8c(0x08)
	char pad_2A94[0x4]; // 0x2a94(0x04)

	void TriggerAttractionThrow(struct FVector Vel); // Function DFMGameplay.DFMPlayerCharacter.TriggerAttractionThrow // (Net|Native|Event|Protected|NetServer|HasDefaults|BlueprintCallable) // @ game+0x62db0e0
	void SetWeaponInspect(bool bEnter); // Function DFMGameplay.DFMPlayerCharacter.SetWeaponInspect // (Final|Native|Public) // @ game+0x62dafc0
	void SetSearchItemState(bool bEnter, float TimeOutValue); // Function DFMGameplay.DFMPlayerCharacter.SetSearchItemState // (Final|Native|Public) // @ game+0x62daf00
	void SetCharacterOnFlyBaseMovementMode(bool OnFlyBase); // Function DFMGameplay.DFMPlayerCharacter.SetCharacterOnFlyBaseMovementMode // (Final|Native|Public|BlueprintCallable) // @ game+0x62dadb0
	void ServerStartRankSkillOperate(int32_t RankSkillID); // Function DFMGameplay.DFMPlayerCharacter.ServerStartRankSkillOperate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62dad20
	void ServerLeaveAirDropState(); // Function DFMGameplay.DFMPlayerCharacter.ServerLeaveAirDropState // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62dad00
	void ServerFinishRankSkillOperate(int32_t RankSkillID, bool bSuccess, struct TArray<char> ParameterData); // Function DFMGameplay.DFMPlayerCharacter.ServerFinishRankSkillOperate // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62daaf0
	void ServerEnterAirDropState(int64_t AirDropVehicleID); // Function DFMGameplay.DFMPlayerCharacter.ServerEnterAirDropState // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x62daa60
	void ServerAirDropVehicle(struct FVector AirDropSelectPos); // Function DFMGameplay.DFMPlayerCharacter.ServerAirDropVehicle // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable) // @ game+0x62da9d0
	void RemoveCharacterComponents(); // Function DFMGameplay.DFMPlayerCharacter.RemoveCharacterComponents // (Final|Native|Public) // @ game+0x62da9b0
	void OnVaultAndClimbBeginOverlap(struct AActor* MyActor, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FHitResult& SweepResult); // Function DFMGameplay.DFMPlayerCharacter.OnVaultAndClimbBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x62da830
	void OnSucceedBeingRescue(struct AGPCharacterBase* Target); // Function DFMGameplay.DFMPlayerCharacter.OnSucceedBeingRescue // (Native|Protected) // @ game+0x62da7a0
	void OnRescueVoiceLoadCompleted(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMPlayerCharacter.OnRescueVoiceLoadCompleted // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62da6c0
	void OnRescueVoice2DLoadCompleted(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMPlayerCharacter.OnRescueVoice2DLoadCompleted // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62da5e0
	void OnRep_RuleInvalidCharacterComponentArray(); // Function DFMGameplay.DFMPlayerCharacter.OnRep_RuleInvalidCharacterComponentArray // (Final|Native|Public) // @ game+0x62da5c0
	void OnRep_PlayerInCombatState(); // Function DFMGameplay.DFMPlayerCharacter.OnRep_PlayerInCombatState // (Final|Native|Protected) // @ game+0x62da5a0
	void OnPreStateForRTTTimeOut(); // Function DFMGameplay.DFMPlayerCharacter.OnPreStateForRTTTimeOut // (Final|Native|Public) // @ game+0x62da4e0
	void OnFlashLightCanvasAssetLoaded(struct FSoftObjectPath& ObjectPath); // Function DFMGameplay.DFMPlayerCharacter.OnFlashLightCanvasAssetLoaded // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x62da110
	void EnableScreenParticleEffect(struct FName ScreenParticleEffectName, struct FName AudioResourceName); // Function DFMGameplay.DFMPlayerCharacter.EnableScreenParticleEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x62d9c80
	void DisableScreenParticleEffect(); // Function DFMGameplay.DFMPlayerCharacter.DisableScreenParticleEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x62d9c60
	void Client2ServerWeaponBipodDeploy(bool bEnter); // Function DFMGameplay.DFMPlayerCharacter.Client2ServerWeaponBipodDeploy // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62d9ae0
	void Client2ServerSetWeaponInspect(bool bEnter); // Function DFMGameplay.DFMPlayerCharacter.Client2ServerSetWeaponInspect // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62d9a50
	void Client2ServerSetSearchItemState(bool bEnter, float TimeOutValue); // Function DFMGameplay.DFMPlayerCharacter.Client2ServerSetSearchItemState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x62d9980
	void CharacterToggleRightLean(int32_t PeekValue, bool bAutoZoom); // Function DFMGameplay.DFMPlayerCharacter.CharacterToggleRightLean // (Native|Public|BlueprintCallable) // @ game+0x62d9820
	void CharacterToggleLeftLean(int32_t PeekValue, bool bAutoZoom); // Function DFMGameplay.DFMPlayerCharacter.CharacterToggleLeftLean // (Native|Public|BlueprintCallable) // @ game+0x62d9750
	void AddCharacterComponents(); // Function DFMGameplay.DFMPlayerCharacter.AddCharacterComponents // (Final|Native|Public) // @ game+0x62d9610
	void _TriggerAttractionThrown(struct FVector& Vel); // Function DFMGameplay.DFMPlayerCharacter._TriggerAttractionThrown // (Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMRangeTargetCharacter
// Size: 0x3340 (Inherited: 0x2870)
class ADFMRangeTargetCharacter : public ADFMCharacter {
public:

	float Health; // 0x2870(0x04)
	char pad_2874[0x4]; // 0x2874(0x04)
	uint64_t AvatarID; // 0x2878(0x08)
	uint64_t HelmetID; // 0x2880(0x08)
	uint64_t BreastPlateID; // 0x2888(0x08)
	float ResetDuration; // 0x2890(0x04)
	int32_t Index; // 0x2894(0x04)
	float DistanceValue; // 0x2898(0x04)
	/*struct FDelegate*/char OnRangeTargetDead[0x10]; // 0x289c(0x10)
	/*struct FDelegate*/char OnRangeTargetReborn[0x10]; // 0x28ac(0x10)
	char pad_28BC[0x4]; // 0x28bc(0x04)
	struct USplineComponent* Spline; // 0x28c0(0x08)
	struct FInventoryItemInfo TempHelmetItem; // 0x28c8(0x538)
	struct FInventoryItemInfo TempBreastPlateItem; // 0x2e00(0x538)
	char pad_3338[0x8]; // 0x3338(0x08)

	void UpdatePositionInSpline(float Value); // Function DFMGameplay.DFMRangeTargetCharacter.UpdatePositionInSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x62ec0f0
	void RebornRangeTarget(); // Function DFMGameplay.DFMRangeTargetCharacter.RebornRangeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x62ebd70
	void InitRangerTarget(bool bReborn); // Function DFMGameplay.DFMRangeTargetCharacter.InitRangerTarget // (Final|Native|Public) // @ game+0x62e9b50
	void EnableNecessaryTicks(bool bEnable); // Function DFMGameplay.DFMRangeTargetCharacter.EnableNecessaryTicks // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9410
	void BindSplineComponent(struct USplineComponent* SplineComponent); // Function DFMGameplay.DFMRangeTargetCharacter.BindSplineComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9100
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBulletRCVStingerMissile
// Size: 0x830 (Inherited: 0x808)
class AWeaponBulletRCVStingerMissile : public AWeaponBulletStingerMissile {
public:

	struct FVector HomingLocation; // 0x808(0x0c)
	float DelayHoming; // 0x814(0x04)
	bool enableDebugDraw; // 0x818(0x01)
	char pad_819[0x3]; // 0x819(0x03)
	struct FVector DelayLoc; // 0x81c(0x0c)
	struct AActor* DelayTarget; // 0x828(0x08)

	void OnRep_HomingLocation(); // Function DFMGameplay.WeaponBulletRCVStingerMissile.OnRep_HomingLocation // (Final|Native|Protected) // @ game+0x6255d30
	float CalcDelayHoming(struct AActor* Target, struct FVector Loc); // Function DFMGameplay.WeaponBulletRCVStingerMissile.CalcDelayHoming // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x6255490
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentStingerMissile
// Size: 0x2d8 (Inherited: 0x248)
class UWeaponFuncComponentStingerMissile : public UWeaponFuncComponentTargetAcquiredBase {
public:

	char pad_248[0x8]; // 0x248(0x08)
	struct UWeaponDataComponentStingerMissile* DcStingMissile; // 0x250(0x08)
	struct FLockingObjectInfo LockingObjectInfo; // 0x258(0x28)
	char pad_280[0x40]; // 0x280(0x40)
	struct TWeakObjectPtr<struct AActor> CachedTarget; // 0x2c0(0x08)
	char pad_2C8[0x10]; // 0x2c8(0x10)

	void SwithchOutWhenFire(); // Function DFMGameplay.WeaponFuncComponentStingerMissile.SwithchOutWhenFire // (Final|Native|Public) // @ game+0x6430040
	void StopAllAudio(); // Function DFMGameplay.WeaponFuncComponentStingerMissile.StopAllAudio // (Final|Native|Protected) // @ game+0x6430020
	void PlayLockingStateAudio(enum class EStingerMissileLockingState LastLockingState, enum class EStingerMissileLockingState CurLockingState); // Function DFMGameplay.WeaponFuncComponentStingerMissile.PlayLockingStateAudio // (Final|Native|Protected) // @ game+0x642fd70
	void OnStateChangeSetOperate(enum class EStingerMissileLockingState LockState); // Function DFMGameplay.WeaponFuncComponentStingerMissile.OnStateChangeSetOperate // (Final|Native|Public) // @ game+0x642fcf0
	uint64_t GetWeaponId(); // Function DFMGameplay.WeaponFuncComponentStingerMissile.GetWeaponId // (Final|Native|Public) // @ game+0x642f9b0
	struct UWeaponFuncComponentStingerMissile* STATIC_GetWeaponFuncComponentStingerMissile(struct UObject* WorldContext); // Function DFMGameplay.WeaponFuncComponentStingerMissile.GetWeaponFuncComponentStingerMissile // (Final|Native|Static|Public) // @ game+0x642f8b0
	struct FStingMissileHudInfo GetHudInfo(); // Function DFMGameplay.WeaponFuncComponentStingerMissile.GetHudInfo // (Final|Native|Public) // @ game+0x642f830
	void ForceSetLockObject(struct AActor* Target, enum class EStingerMissileLockingState LockState); // Function DFMGameplay.WeaponFuncComponentStingerMissile.ForceSetLockObject // (Final|Native|Public|BlueprintCallable) // @ game+0x642f770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentLaserPointer
// Size: 0x2a8 (Inherited: 0x248)
class UWeaponFuncComponentLaserPointer : public UWeaponFuncComponentTargetAcquiredBase {
public:

	float PersistentTime; // 0x248(0x04)
	char pad_24C[0x1c]; // 0x24c(0x1c)
	struct FLaserPointerLockingObjectInfo LockingObjectInfo; // 0x268(0x38)
	char pad_2A0[0x8]; // 0x2a0(0x08)

	void SetPersistentTime(float Time); // Function DFMGameplay.WeaponFuncComponentLaserPointer.SetPersistentTime // (Final|Native|Public) // @ game+0x642cc60
	void SetLPParams(); // Function DFMGameplay.WeaponFuncComponentLaserPointer.SetLPParams // (Final|Native|Public) // @ game+0x642cc40
	void OnUnequip(); // Function DFMGameplay.WeaponFuncComponentLaserPointer.OnUnequip // (Final|Native|Public) // @ game+0x642c740
	void OnEquip(); // Function DFMGameplay.WeaponFuncComponentLaserPointer.OnEquip // (Final|Native|Public) // @ game+0x642c720
	void ChangeSoundStackState(enum class EStingerMissileLockingState LastLockingState, enum class EStingerMissileLockingState CurLockingState); // Function DFMGameplay.WeaponFuncComponentLaserPointer.ChangeSoundStackState // (Final|Native|Public) // @ game+0x642ab20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFuncComponentLaserPointerReciver
// Size: 0x270 (Inherited: 0x248)
class UWeaponFuncComponentLaserPointerReciver : public UWeaponFuncComponentTargetAcquiredBase {
public:

	float PersistentTime; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	/*struct TScriptInterface<IStingerMissileTakerInterface>*/char LockingObject[0x10]; // 0x250(0x10)
	char pad_260[0x8]; // 0x260(0x08)
	struct UGPLaserPointerMarkItem* ItemCache; // 0x268(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIRCVWeapon
// Size: 0x10e8 (Inherited: 0x10d0)
class ADFMAIRCVWeapon : public ADFMWeapon {
public:

	struct TArray<struct FName> FireSocketNames; // 0x10d0(0x10)
	struct UDFMAIRCVDataComponent* RCVDataComponent; // 0x10e0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBaseSkillWeapon
// Size: 0x10d8 (Inherited: 0x10d0)
class ADFMBaseSkillWeapon : public ADFMWeapon {
public:

	int32_t AbilityConfigSkillID; // 0x10d0(0x04)
	char pad_10D4[0x4]; // 0x10d4(0x04)

	void SkillReplaceFireImage(bool Replace); // Function DFMGameplay.DFMBaseSkillWeapon.SkillReplaceFireImage // (Final|Native|Private) // @ game+0x626d900
	void OnIconLoaded(struct FSoftObjectPath& Path); // Function DFMGameplay.DFMBaseSkillWeapon.OnIconLoaded // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x626cdc0
	bool Is1PStandalone(); // Function DFMGameplay.DFMBaseSkillWeapon.Is1PStandalone // (Final|Native|Private|Const) // @ game+0x626ca10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMDoubleHandsWeapon
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMDoubleHandsWeapon : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMRaidTankBossWeapon
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMRaidTankBossWeapon : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSceneWeapon
// Size: 0x1828 (Inherited: 0x10d0)
class ADFMSceneWeapon : public ADFMWeapon {
public:

	char pad_10D0[0x30]; // 0x10d0(0x30)
	int64_t WeaponRecId; // 0x1100(0x08)
	bool bEnableSelfInteract; // 0x1108(0x01)
	char pad_1109[0x7]; // 0x1109(0x07)
	int64_t AnimIdForVehicleGun; // 0x1110(0x08)
	bool bNeedSetParentYaw; // 0x1118(0x01)
	char pad_1119[0x3]; // 0x1119(0x03)
	struct FVector2D WeaponRotateLimitPitch; // 0x111c(0x08)
	struct FVector2D WeaponRotateLimitYaw; // 0x1124(0x08)
	bool bIsNeedExplode; // 0x112c(0x01)
	enum class EWeaponConsumeAmmoType ConsumeAmmoType; // 0x112d(0x01)
	char pad_112E[0x2]; // 0x112e(0x02)
	float MaxAngularVelocityPitch; // 0x1130(0x04)
	float MaxAngularVelocityYaw; // 0x1134(0x04)
	bool bUseMachineGunMoveTurnNew; // 0x1138(0x01)
	char pad_1139[0x2f]; // 0x1139(0x2f)
	bool bEnableTickAIMachineGun; // 0x1168(0x01)
	char pad_1169[0x7]; // 0x1169(0x07)
	struct TArray<struct FVector> ExtendedDropOffLocations; // 0x1170(0x10)
	bool bIsUsing; // 0x1180(0x01)
	char pad_1181[0x3]; // 0x1181(0x03)
	float AORotationSpeed; // 0x1184(0x04)
	enum class ESceneWeaponType SceneWeaponType; // 0x1188(0x01)
	bool bNeedAttachtoWeapon; // 0x1189(0x01)
	char pad_118A[0x2]; // 0x118a(0x02)
	struct FName ScoketName; // 0x118c(0x08)
	struct FName DamageCheckScoketName; // 0x1194(0x08)
	char pad_119C[0x4]; // 0x119c(0x04)
	uint64_t DestoryDamageID; // 0x11a0(0x08)
	struct FName DestoryEffectID; // 0x11a8(0x08)
	char pad_11B0[0x10]; // 0x11b0(0x10)
	struct USkeletalMeshComponent* WeaponDisplayMesh; // 0x11c0(0x08)
	char pad_11C8[0x24]; // 0x11c8(0x24)
	struct TWeakObjectPtr<struct AActor> LastMakerInstigator; // 0x11ec(0x08)
	char pad_11F4[0x5e4]; // 0x11f4(0x5e4)
	/*struct TScriptInterface<IWeaponFixedAudioInterface>*/char FixedAudioInterface[0x10]; // 0x17d8(0x10)
	/*struct TScriptInterface<IGPWeaponDataComponentOverHeatInterface>*/char OverHeatInterface[0x10]; // 0x17e8(0x10)
	struct ADFScenceWeaponPawn* WeaponPawn; // 0x17f8(0x08)
	/*struct FMulticastInlineDelegate*/char OnSetWeaponPawnEvent[0x10]; // 0x1800(0x10)
	char pad_1810[0x18]; // 0x1810(0x18)

	void UpdateWeaponHudInfo(); // Function DFMGameplay.DFMSceneWeapon.UpdateWeaponHudInfo // (Final|Native|Public) // @ game+0x17621d0
	void PlayGetOutAudio(); // Function DFMGameplay.DFMSceneWeapon.PlayGetOutAudio // (Final|Native|Public) // @ game+0x62f3220
	void PlayGetInAudio(); // Function DFMGameplay.DFMSceneWeapon.PlayGetInAudio // (Final|Native|Public) // @ game+0x62f3200
	void OnUsingStateChanged(); // Function DFMGameplay.DFMSceneWeapon.OnUsingStateChanged // (Final|Native|Protected) // @ game+0x89e920
	void OnRep_CurrentHealth(); // Function DFMGameplay.DFMSceneWeapon.OnRep_CurrentHealth // (Final|Native|Protected) // @ game+0x17621d0
	void OnDelaySetMeshNotTick(); // Function DFMGameplay.DFMSceneWeapon.OnDelaySetMeshNotTick // (Final|Native|Public) // @ game+0x62f31c0
	bool IsInCD(); // Function DFMGameplay.DFMSceneWeapon.IsInCD // (Final|Native|Public) // @ game+0x62f3190
	struct FVector GetPlayerStandRelativeLocation(); // Function DFMGameplay.DFMSceneWeapon.GetPlayerStandRelativeLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x62f30f0
	struct FVector GetPlayerGetOffLocation(); // Function DFMGameplay.DFMSceneWeapon.GetPlayerGetOffLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x62f30b0
	void CheckPlayAudio(enum class ESceneHealthState InState); // Function DFMGameplay.DFMSceneWeapon.CheckPlayAudio // (Final|Native|Protected) // @ game+0x35e5a40
	void BP_PlayHealthStateEffect(enum class ESceneHealthState InState); // Function DFMGameplay.DFMSceneWeapon.BP_PlayHealthStateEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMVehicleWeapon
// Size: 0x10d8 (Inherited: 0x10d0)
class ADFMVehicleWeapon : public ADFMWeapon {
public:

	uint64_t DependenceWeaponId; // 0x10d0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponC302Base
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMWeaponC302Base : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponC4
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMWeaponC4 : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponTiger
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMWeaponTiger : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponSupport
// Size: 0x10d0 (Inherited: 0x10d0)
class ADFMWeaponSupport : public ADFMWeapon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMWeaponWeldingGun
// Size: 0x10d8 (Inherited: 0x10d0)
class ADFMWeaponWeldingGun : public ADFMWeapon {
public:

	struct UWeldingGunComponent* WeldingGunComp; // 0x10d0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFFSM_SeamlessShowAction
// Size: 0x128 (Inherited: 0x110)
class UDFFSM_SeamlessShowAction : public UDFMFSMAction {
public:

	char pad_110[0x18]; // 0x110(0x18)

	void OnSeamlessShowExit(); // Function DFMGameplay.DFFSM_SeamlessShowAction.OnSeamlessShowExit // (Final|Native|Public) // @ game+0x622a7e0
	void OnPlayHelmetAnim(); // Function DFMGameplay.DFFSM_SeamlessShowAction.OnPlayHelmetAnim // (Final|Native|Public) // @ game+0x622a7c0
	void OnPlayFirstEquipAnim(); // Function DFMGameplay.DFFSM_SeamlessShowAction.OnPlayFirstEquipAnim // (Final|Native|Public) // @ game+0x622a7a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AimingCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_AimingCheckAction : public UDFMFSMAction {
public:

	bool CheckEnter; // 0x110(0x01)
	bool CheckExit; // 0x111(0x01)
	bool bIsSkillInnerCheck; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AimingControlAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_AimingControlAction : public UDFMFSMAction {
public:

	bool NeedSnap; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float SpringArmSpeedAdd; // 0x114(0x04)
	struct AActor* LocalFocusActor; // 0x118(0x08)

	void OnZoomRateChanged(); // Function DFMGameplay.DFMFSM_AimingControlAction.OnZoomRateChanged // (Final|Native|Public) // @ game+0x6294630
	void OnBreathValueFull(); // Function DFMGameplay.DFMFSM_AimingControlAction.OnBreathValueFull // (Final|Native|Public) // @ game+0x6293d70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AirDropVehicleAction
// Size: 0x1a0 (Inherited: 0x110)
class UDFMFSM_AirDropVehicleAction : public UDFMFSMAction {
public:

	struct FName SelectPosFXName; // 0x110(0x08)
	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x118(0x10)
	float CheckStep; // 0x128(0x04)
	float Timeout; // 0x12c(0x04)
	struct AWeaponBase* LastUseWeapon; // 0x130(0x08)
	char pad_138[0x18]; // 0x138(0x18)
	struct UMaterialInstanceDynamic* SelectPosMaterial; // 0x150(0x08)
	struct UMaterialInstanceDynamic* SelectPosErrorMaterial; // 0x158(0x08)
	char pad_160[0x8]; // 0x160(0x08)
	struct UFXResourceContainerComponent* FXResourceComponent; // 0x168(0x08)
	char pad_170[0x18]; // 0x170(0x18)
	struct AActor* DecalActor; // 0x188(0x08)
	char pad_190[0x10]; // 0x190(0x10)

	void ServerWeaponChangeNtf(struct AGPCharacterBase* GPCharacter, struct AWeaponBase* OldWeapon, struct AWeaponBase* NewWeapon); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.ServerWeaponChangeNtf // (Final|Native|Public) // @ game+0x6294670
	void OnRightMouseButtonClk(); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.OnRightMouseButtonClk // (Final|Native|Public) // @ game+0x6294580
	void OnLeftMouseButtonClk(); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.OnLeftMouseButtonClk // (Final|Native|Public) // @ game+0x62944a0
	void OnCancelButtonClk(); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.OnCancelButtonClk // (Final|Native|Public) // @ game+0x6293fb0
	void InterruptAirDrop(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.InterruptAirDrop // (Final|Native|Public) // @ game+0x62937a0
	void EndAirDrop(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.EndAirDrop // (Final|Native|Public) // @ game+0x6293610
	void ClientSelectAirDropPoint(); // Function DFMGameplay.DFMFSM_AirDropVehicleAction.ClientSelectAirDropPoint // (Final|Native|Public) // @ game+0x62935f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ApplySprayAction
// Size: 0x160 (Inherited: 0x110)
class UDFMFSM_ApplySprayAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	float MaxDuration; // 0x120(0x04)
	char pad_124[0x1c]; // 0x124(0x1c)
	struct AGPCommercializationItem* SprayPaint; // 0x140(0x08)
	struct UAnimMontage* ApplySprayFpp; // 0x148(0x08)
	struct UAnimMontage* ApplySprayTpp; // 0x150(0x08)
	struct UAnimMontage* ApplySprayTppProne; // 0x158(0x08)

	void OnExit3DSafeHouse(bool bEnter); // Function DFMGameplay.DFMFSM_ApplySprayAction.OnExit3DSafeHouse // (Final|Native|Public) // @ game+0x6294360
	void InterruptAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_ApplySprayAction.InterruptAction // (Final|Native|Public) // @ game+0x6293720
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AssassinateCheckAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_AssassinateCheckAction : public UDFMFSMAction {
public:

	bool bCheckBeginAssassinate; // 0x110(0x01)
	bool bCheckCancelAssassinate; // 0x111(0x01)
	char pad_112[0x2]; // 0x112(0x02)
	float Speed; // 0x114(0x04)
	char pad_118[0x18]; // 0x118(0x18)

	void OnCancelAssassinate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_AssassinateCheckAction.OnCancelAssassinate // (Final|Native|Public) // @ game+0x6293d90
	void OnBeginBeginAssassinate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_AssassinateCheckAction.OnBeginBeginAssassinate // (Final|Native|Public) // @ game+0x6293a40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AssassinateControllAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_AssassinateControllAction : public UDFMFSMAction {
public:

	bool bCheckCancelAssassinate; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float TraceHeight; // 0x114(0x04)
	float InAirInterruptedHeight; // 0x118(0x04)
	float InAirTraceRadius; // 0x11c(0x04)
	float AIDeathTime; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct ADFMCharacter* AssassinatTarget; // 0x128(0x08)
	char pad_130[0x3]; // 0x130(0x03)
	bool EnableOwnerDisableReplicateMovement; // 0x133(0x01)
	char pad_134[0xc]; // 0x134(0x0c)

	void OnCancelAssassinate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_AssassinateControllAction.OnCancelAssassinate // (Final|Native|Public) // @ game+0x6293d90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AssassinateGetInAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_AssassinateGetInAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AssassinateGlobalAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_AssassinateGlobalAction : public UDFMFSMAction {
public:

	char pad_110[0x1]; // 0x110(0x01)
	bool bCheckCancelAssassinate; // 0x111(0x01)
	bool NeedSnap; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)
	struct ADFMCharacter* TargetCharacter; // 0x118(0x08)

	void OnCancelAssassinate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_AssassinateGlobalAction.OnCancelAssassinate // (Final|Native|Protected) // @ game+0x6293ea0
	void OnActionSimulateBeingSpectating(bool bEnter); // Function DFMGameplay.DFMFSM_AssassinateGlobalAction.OnActionSimulateBeingSpectating // (Final|Native|Protected) // @ game+0x6293820
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_AutonomousBackgroundAction
// Size: 0x138 (Inherited: 0x110)
class UDFMFSM_AutonomousBackgroundAction : public UDFMFSMAction {
public:

	struct UAnimMontage* CurFppMontage; // 0x110(0x08)
	struct UAnimMontage* CurTppMontage; // 0x118(0x08)
	char pad_120[0x18]; // 0x120(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BasePoseAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_BasePoseAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BehitCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_BehitCheckAction : public UDFMFSMAction {
public:

	bool CheckExplodeDamage; // 0x110(0x01)
	bool CheckCancelExplodeDamage; // 0x111(0x01)
	bool CheckFallHighState; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)

	void OnCancelExplodeDamage(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_BehitCheckAction.OnCancelExplodeDamage // (Final|Native|Public) // @ game+0x6293fd0
	void OnBeginExplodeDamage(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_BehitCheckAction.OnBeginExplodeDamage // (Final|Native|Public) // @ game+0x6293b50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BeingAssassinateControllAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_BeingAssassinateControllAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	void OnBeingAssassinateBreakOff(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_BeingAssassinateControllAction.OnBeingAssassinateBreakOff // (Final|Native|Public) // @ game+0x6293c60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BeingRescueByMyselfAction
// Size: 0x148 (Inherited: 0x110)
class UDFMFSM_BeingRescueByMyselfAction : public UDFMFSMAction {
public:

	struct UAnimSequence* RescueMyselfClipFPP; // 0x110(0x08)
	bool IsFPPAnimationAdditive; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
	struct UAnimSequence* RescueMyselfClipTPP; // 0x120(0x08)
	bool AnimationHasWeapon; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
	struct UAnimMontage* RescueSomeoneClipFPP_Montage; // 0x130(0x08)
	struct UAnimMontage* RescueSomeoneClipTPP_Montage; // 0x138(0x08)
	char pad_140[0x8]; // 0x140(0x08)

	void TriggerRescueMyselfAnimation(); // Function DFMGameplay.DFMFSM_BeingRescueByMyselfAction.TriggerRescueMyselfAnimation // (Final|Native|Private) // @ game+0x6294980
	void BeingRescueInfoArrived(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_BeingRescueByMyselfAction.BeingRescueInfoArrived // (Final|Native|Private) // @ game+0x62934e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BeSuppressedAction
// Size: 0x178 (Inherited: 0x110)
class UDFMFSM_BeSuppressedAction : public UDFMFSMAction {
public:

	struct FName TPPSuppressedAnimName; // 0x110(0x08)
	bool bUseAnimTime; // 0x118(0x01)
	bool AnimLoopPlay; // 0x119(0x01)
	char pad_11A[0x2]; // 0x11a(0x02)
	float SuppressedTime; // 0x11c(0x04)
	/*struct TSoftObjectPtr<UAnimSequence>*/char TPPAnimConfig[0x28]; // 0x120(0x28)
	struct UAnimMontage* CurFppMontage; // 0x148(0x08)
	struct UAnimMontage* CurTppMontage; // 0x150(0x08)
	char pad_158[0x8]; // 0x158(0x08)
	struct UAnimSequence* AnimFPP; // 0x160(0x08)
	struct UAnimSequence* AnimTPP; // 0x168(0x08)
	char pad_170[0x8]; // 0x170(0x08)

	void PlaySuppressedAnim(); // Function DFMGameplay.DFMFSM_BeSuppressedAction.PlaySuppressedAnim // (Final|Native|Public) // @ game+0x6294650
	void OnAnimLoad(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.DFMFSM_BeSuppressedAction.OnAnimLoad // (Final|Native|Public) // @ game+0x62938b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_BipodDeployCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_BipodDeployCheckAction : public UDFMFSMAction {
public:


	void StartWeaponBipodDeploy(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_BipodDeployCheckAction.StartWeaponBipodDeploy // (Final|Native|Public) // @ game+0x6294870
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CarringBodyAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_CarringBodyAction : public UDFMFSMAction {
public:

	char pad_110[0x4]; // 0x110(0x04)
	float UnEquipTimer; // 0x114(0x04)
	char pad_118[0x1]; // 0x118(0x01)
	bool bUpdateCheckOffset; // 0x119(0x01)
	char pad_11A[0x2]; // 0x11a(0x02)
	float UpdateInterval; // 0x11c(0x04)
	char pad_120[0x8]; // 0x120(0x08)

	void TryDrop(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_CarringBodyAction.TryDrop // (Final|Native|Protected) // @ game+0x62949a0
	void OnXPPChange(bool bNewFPP); // Function DFMGameplay.DFMFSM_CarringBodyAction.OnXPPChange // (Native|Public) // @ game+0x62945a0
	void OnLocalPawnChange(struct AActor* OldCharacter, struct AActor* NewCharacter); // Function DFMGameplay.DFMFSM_CarringBodyAction.OnLocalPawnChange // (Final|Native|Protected) // @ game+0x62944c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CarringBodyInVehicleCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_CarringBodyInVehicleCheckAction : public UDFMFSMAction {
public:

	bool CheckGetOnVehicle; // 0x110(0x01)
	bool CheckGetOffVehicle; // 0x111(0x01)
	bool bHiddenBurden; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)

	void OnGetOnVehicle(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_CarringBodyInVehicleCheckAction.OnGetOnVehicle // (Final|Native|Public) // @ game+0x6299600
	void OnGetOffVehicle(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_CarringBodyInVehicleCheckAction.OnGetOffVehicle // (Final|Native|Public) // @ game+0x62994f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CarryBodyCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_CarryBodyCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginCarryBody; // 0x110(0x01)
	bool CheckCancelCarryBody; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryCarryBody(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_CarryBodyCheckAction.TryCarryBody // (Final|Native|Public) // @ game+0x6299e20
	void TryCancel(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_CarryBodyCheckAction.TryCancel // (Final|Native|Public) // @ game+0x6299d10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CarryBodyGlobalAction
// Size: 0x160 (Inherited: 0x110)
class UDFMFSM_CarryBodyGlobalAction : public UDFMFSMAction {
public:

	char pad_110[0x41]; // 0x110(0x41)
	bool bExitStopAllMontage; // 0x151(0x01)
	char pad_152[0x2]; // 0x152(0x02)
	int32_t CarryBodyMoveSpeedId; // 0x154(0x04)
	char pad_158[0x8]; // 0x158(0x08)

	void OnCarryingDavid(); // Function DFMGameplay.DFMFSM_CarryBodyGlobalAction.OnCarryingDavid // (Final|Native|Public) // @ game+0x62993a0
	void InterruptCarry(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_CarryBodyGlobalAction.InterruptCarry // (Final|Native|Public) // @ game+0x6298ec0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CharacterSafeHelicopterControlAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_CharacterSafeHelicopterControlAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ClimbLadderCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_ClimbLadderCheckAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ClimbLadderControlAction
// Size: 0x380 (Inherited: 0x110)
class UDFMFSM_ClimbLadderControlAction : public UDFMFSMAction {
public:

	char pad_110[0x240]; // 0x110(0x240)
	struct UAnimSequence* LadderClimbCurveAsset; // 0x350(0x08)
	float RootMoveXCurveScale; // 0x358(0x04)
	float RootMoveYCurveScale; // 0x35c(0x04)
	float MoveValidThreshold; // 0x360(0x04)
	float ClimbLadderSpeed; // 0x364(0x04)
	bool bUseAverSpeed; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	float ClimbLadderAverSpeed; // 0x36c(0x04)
	struct UGPAudioEventAsset* ClimbLadderStepAudio; // 0x370(0x08)
	char pad_378[0x8]; // 0x378(0x08)

	void PlayStepAudio(); // Function DFMGameplay.DFMFSM_ClimbLadderControlAction.PlayStepAudio // (Final|Native|Public) // @ game+0x6299b60
	void MoveForward(float Value); // Function DFMGameplay.DFMFSM_ClimbLadderControlAction.MoveForward // (Final|Native|Public) // @ game+0x62991e0
	void JumpButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ClimbLadderControlAction.JumpButtonPressed // (Final|Native|Public) // @ game+0x6298fc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ClimbLadderGetOffAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_ClimbLadderGetOffAction : public UDFMFSMAction {
public:

	char pad_110[0x18]; // 0x110(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ClimbLadderGlobalAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_ClimbLadderGlobalAction : public UDFMFSMAction {
public:

	struct FVector2D ClimbLadderPitchLimit; // 0x110(0x08)
	struct FVector2D ClimbLadderPitchLimitFOV120; // 0x118(0x08)
	struct FVector2D ClimbLadderYawLimit; // 0x120(0x08)
	float ClimbLadderDefaultFOV; // 0x128(0x04)
	char pad_12C[0x4]; // 0x12c(0x04)

	void OnActionSimulateBeingSpectating(bool bEnter); // Function DFMGameplay.DFMFSM_ClimbLadderGlobalAction.OnActionSimulateBeingSpectating // (Final|Native|Public) // @ game+0x6299260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CommonLeftArmAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_CommonLeftArmAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	void OnReceiveWeaponEvent(char Event); // Function DFMGameplay.DFMFSM_CommonLeftArmAction.OnReceiveWeaponEvent // (Final|Native|Public) // @ game+0x6299710
	void InterruptLeftArmAmimAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_CommonLeftArmAction.InterruptLeftArmAmimAction // (Final|Native|Public) // @ game+0x6298f40
	float GetServerActionTime(); // Function DFMGameplay.DFMFSM_CommonLeftArmAction.GetServerActionTime // (Final|Native|Protected|Const) // @ game+0x6298c90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_CrocodileBiteAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_CrocodileBiteAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_DeathAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_DeathAction : public UDFMFSMAction {
public:

	bool bEnableRagdoll; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct ADFMCharacter* OwnerDFCharacter; // 0x118(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_DeathWaitingForRescueAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_DeathWaitingForRescueAction : public UDFMFSMAction {
public:

	float LiveSpectatingForResetOutTime; // 0x110(0x04)
	char pad_114[0x14]; // 0x114(0x14)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_DropDownBodyAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_DropDownBodyAction : public UDFMFSMAction {
public:

	char pad_110[0xc]; // 0x110(0x0c)
	bool EnableCustomTime; // 0x11c(0x01)
	bool EnableCustomDrawImpendingDeathCharacterTime; // 0x11d(0x01)
	char pad_11E[0x2]; // 0x11e(0x02)
	float CustomAnimPlayDropBodyLength; // 0x120(0x04)
	float CustomAnimPlayDropBoxLength; // 0x124(0x04)
	float CustomImpendingDeathAnimPlayDropBoxLength; // 0x128(0x04)
	float AnimPlayRemainTime; // 0x12c(0x04)
	bool TurnPitch; // 0x130(0x01)
	char pad_131[0x3]; // 0x131(0x03)
	float TurnPitchTimeOut; // 0x134(0x04)
	char pad_138[0x8]; // 0x138(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_EnterRangeAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_EnterRangeAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_EnterRangeCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_EnterRangeCheckAction : public UDFMFSMAction {
public:

	bool bCheckEnterRange; // 0x110(0x01)
	bool bCheckLeaveRange; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryLeaveRange(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_EnterRangeCheckAction.TryLeaveRange // (Final|Native|Public) // @ game+0x629a040
	void TryEnterRange(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_EnterRangeCheckAction.TryEnterRange // (Final|Native|Public) // @ game+0x6299f30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ExplodeDamageAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_ExplodeDamageAction : public UDFMFSMAction {
public:

	float ExplodeDownTime; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FallHighAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_FallHighAction : public UDFMFSMAction {
public:

	struct UAnimMontage* CurFppMontage; // 0x110(0x08)
	struct UAnimMontage* CurTppMontage; // 0x118(0x08)
	float FallHighDuration; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FallingHighAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_FallingHighAction : public UDFMFSMAction {
public:

	bool bFallingHigh; // 0x110(0x01)
	bool bEnterFalling; // 0x111(0x01)
	char pad_112[0x2]; // 0x112(0x02)
	struct FVector JumpHighestPosition; // 0x114(0x0c)
	struct UAnimMontage* CurFppMontage; // 0x120(0x08)
	struct UAnimMontage* CurTppMontage; // 0x128(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireBaseAction
// Size: 0x190 (Inherited: 0x110)
class UDFMFSM_FireBaseAction : public UDFMFSMAction {
public:

	bool bIsLoop; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float fLoopInterval; // 0x114(0x04)
	struct TArray<float> DamageRateArray; // 0x118(0x10)
	struct UClass* DFMSkillDamageActorClass; // 0x128(0x08)
	struct ADFMSkillDamageActor* DFMSkillDamageActor; // 0x130(0x08)
	int64_t ExplodeAttackerValueId; // 0x138(0x08)
	int64_t PointAttackerValueId; // 0x140(0x08)
	struct FName FireEffectID; // 0x148(0x08)
	struct UFXResourceContainerComponent* CreatedFireEffectPSC; // 0x150(0x08)
	char pad_158[0x8]; // 0x158(0x08)
	struct FTransform FirePointTrans; // 0x160(0x30)

	void SingleFire(); // Function DFMGameplay.DFMFSM_FireBaseAction.SingleFire // (Native|Public|BlueprintCallable) // @ game+0x6299cf0
	void PlaySingleFireEffect(); // Function DFMGameplay.DFMFSM_FireBaseAction.PlaySingleFireEffect // (Final|Native|Protected) // @ game+0x6299b40
	void BP_SingleFire(); // Function DFMGameplay.DFMFSM_FireBaseAction.BP_SingleFire // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_SetActorOwnerFirePointTrans(); // Function DFMGameplay.DFMFSM_FireBaseAction.BP_SetActorOwnerFirePointTrans // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnExit(); // Function DFMGameplay.DFMFSM_FireBaseAction.BP_OnExit // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FirefightingAction
// Size: 0x188 (Inherited: 0x110)
class UDFMFSM_FirefightingAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	float FirefightingDuration; // 0x120(0x04)
	float FirefightingAnimEndLength; // 0x124(0x04)
	float ZoyaSwarmsDuration; // 0x128(0x04)
	float ZoyaSwarmsAnimEndLength; // 0x12c(0x04)
	struct FName ActionProcessName; // 0x130(0x08)
	struct FName ZoyaSwarmsActionProcessName; // 0x138(0x08)
	char pad_140[0x28]; // 0x140(0x28)
	struct UAnimMontage* FppFirefighting; // 0x168(0x08)
	struct UAnimMontage* TppFirefighting; // 0x170(0x08)
	struct UAnimMontage* TppProneFirefighting; // 0x178(0x08)
	struct AGPCommercializationItem* ZoyaSwarms; // 0x180(0x08)

	void SendAbilityFirefightingEvent(bool bIsEnter); // Function DFMGameplay.DFMFSM_FirefightingAction.SendAbilityFirefightingEvent // (Final|Native|Protected) // @ game+0x6299b80
	void OnServerEnd(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_FirefightingAction.OnServerEnd // (Final|Native|Public) // @ game+0x6299790
	void OnClientEnd(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_FirefightingAction.OnClientEnd // (Final|Native|Public) // @ game+0x62993c0
	void OnActionSucceed(); // Function DFMGameplay.DFMFSM_FirefightingAction.OnActionSucceed // (Final|Native|Protected) // @ game+0x6299380
	void OnActionSimulateBeingSpectating(bool bEnter); // Function DFMGameplay.DFMFSM_FirefightingAction.OnActionSimulateBeingSpectating // (Final|Native|Public) // @ game+0x62992f0
	void InterruptAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_FirefightingAction.InterruptAction // (Final|Native|Public) // @ game+0x6298e40
	void FireButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_FirefightingAction.FireButtonPressed // (Final|Native|Public) // @ game+0x62987e0
	void DataFlowTryAddSwarmsManualClearCount(struct ADFMCharacter* DFChar); // Function DFMGameplay.DFMFSM_FirefightingAction.DataFlowTryAddSwarmsManualClearCount // (Final|Native|Protected) // @ game+0x6298760
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireFlame_ShowWarningAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_FireFlame_ShowWarningAction : public UDFMFSMAction {
public:

	struct FTransform FirePointTrans; // 0x110(0x30)

	void OnStateBegin(); // Function DFMGameplay.DFMFSM_FireFlame_ShowWarningAction.OnStateBegin // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FVector GetWariningAreaPosition(struct TArray<struct AActor*> IgnoreActors, struct FRotator FireDirection); // Function DFMGameplay.DFMFSM_FireFlame_ShowWarningAction.GetWariningAreaPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6298cc0
	void BP_SetActorOwnerFirePointTrans(); // Function DFMGameplay.DFMFSM_FireFlame_ShowWarningAction.BP_SetActorOwnerFirePointTrans // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireFlameAndRotateAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_FireFlameAndRotateAction : public UDFMFSMAction {
public:

	float RotateSpeed; // 0x110(0x04)
	float TotalRotateYaw; // 0x114(0x04)
	float ReverseRotateRate; // 0x118(0x04)
	char pad_11C[0xc]; // 0x11c(0x0c)
	struct UCurveFloat* FlameRotateCurve; // 0x128(0x08)

	void OnFlameTimeout(); // Function DFMGameplay.DFMFSM_FireFlameAndRotateAction.OnFlameTimeout // (Final|Native|Public) // @ game+0x62994d0
	void BP_Update(float DeltaYaw); // Function DFMGameplay.DFMFSM_FireFlameAndRotateAction.BP_Update // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnFlameTimeout(); // Function DFMGameplay.DFMFSM_FireFlameAndRotateAction.BP_OnFlameTimeout // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnEnter(); // Function DFMGameplay.DFMFSM_FireFlameAndRotateAction.BP_OnEnter // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FloatingAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_FloatingAction : public UDFMFSMAction {
public:

	float FloatingDuration; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FreeFireAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_FreeFireAction : public UDFMFSMAction {
public:

	bool DisableFire; // 0x110(0x01)
	enum class EFSMForbidReason reason; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FreeMoveAndRotateAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_FreeMoveAndRotateAction : public UDFMFSMAction {
public:

	bool DisableMovement; // 0x110(0x01)
	bool DisableRotation; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TurnAtRate(float Value); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.TurnAtRate // (Native|Public) // @ game+0x629f920
	void Turn(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.Turn // (Native|Public) // @ game+0x629f820
	void MoveRight(float Value); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.MoveRight // (Final|Native|Public) // @ game+0x629d890
	void MoveForward(float Value); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.MoveForward // (Final|Native|Public) // @ game+0x629d810
	void LookUpAtRate(float Value); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.LookUpAtRate // (Native|Public) // @ game+0x629d790
	void LookUp(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_FreeMoveAndRotateAction.LookUp // (Native|Public) // @ game+0x629d690
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_HighValueItemInspectAction
// Size: 0x158 (Inherited: 0x110)
class UDFMFSM_HighValueItemInspectAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	bool bHighValueItemInspectAnimPlaying; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	float Duration; // 0x124(0x04)
	struct TWeakObjectPtr<struct AInteractAcquireItemBase> CacheInteractAcquireItemBase; // 0x128(0x08)
	struct UAnimMontage* CacheCharacterInspectionFPP; // 0x130(0x08)
	struct UAnimMontage* CacheCharacterInspectionTPP; // 0x138(0x08)
	char pad_140[0x18]; // 0x140(0x18)

	void StopHighLevelPickupInspection(); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.StopHighLevelPickupInspection // (Final|Native|Private) // @ game+0x629f800
	void SpawnHighValueMeshExecute(struct FName& ItemID, struct UAnimSequence* AnimSeqItemInspection, float LifeSpan); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.SpawnHighValueMeshExecute // (Final|Native|Private|HasOutParms) // @ game+0x629f6f0
	void SetItemInspectDuration(float InDuration); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.SetItemInspectDuration // (Final|Native|Private) // @ game+0x629f670
	void SetDuration(float InDuration); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.SetDuration // (Final|Native|Private) // @ game+0x629f5f0
	void SetBlackboardActions(bool bCanUse); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.SetBlackboardActions // (Final|Native|Public) // @ game+0x629f560
	void RegisterDelegate(bool bRegister); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.RegisterDelegate // (Final|Native|Public) // @ game+0x629f4d0
	void PlayHighLevelPickupInspectionAnimInnerAndCheck(struct TArray<struct FSoftObjectPath> AnimPaths, struct FName ItemID, bool bIfUnderFPP); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.PlayHighLevelPickupInspectionAnimInnerAndCheck // (Final|Native|Private) // @ game+0x629f2d0
	bool PlayHighLevelPickupInspectionAnimInner(struct TArray<struct FSoftObjectPath> AnimPaths, struct FName ItemID, bool bIfUnderFPP); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.PlayHighLevelPickupInspectionAnimInner // (Final|Native|Private) // @ game+0x629f0e0
	void PlayHighLevelPickupInspectionAnim(struct FName& ItemID); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.PlayHighLevelPickupInspectionAnim // (Final|Native|Private|HasOutParms) // @ game+0x629f050
	void OnVaultStateChange(bool bEnter); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnVaultStateChange // (Final|Native|Public) // @ game+0x629efc0
	void OnUseSkill(enum class ESkillUISlot UISlot); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnUseSkill // (Final|Native|Public) // @ game+0x629ef40
	void OnTakeDamage(float HPDamage, float ArmorDamage); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnTakeDamage // (Final|Native|Public) // @ game+0x629ee80
	void OnServerInteractorPawnAnimExecute(); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnServerInteractorPawnAnimExecute // (Final|Native|Public) // @ game+0x629ee60
	void OnReceiveWeaponEvent(char Event); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnReceiveWeaponEvent // (Final|Native|Public) // @ game+0x629ecd0
	void OnPickupItem(struct FItemMoveCmd& MoveCmd); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnPickupItem // (Final|Native|Public|HasOutParms) // @ game+0x629e9d0
	void OnLootOpenBox(uint64_t PlayerUin, struct FString OpenBoxType, bool bFirstOpen); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnLootOpenBox // (Final|Native|Public) // @ game+0x629e840
	void OnClientRestartHighValueItemInspect(struct FName ItemID); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnClientRestartHighValueItemInspect // (Final|Native|Public) // @ game+0x629e360
	void OnChangeWeapon(struct AWeaponBase* LastActiveWeapon, struct AWeaponBase* CurrentActiveWeapon); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.OnChangeWeapon // (Final|Native|Public) // @ game+0x629e2a0
	void InterruptHighValueItemInspect(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.InterruptHighValueItemInspect // (Final|Native|Public) // @ game+0x629d610
	void InteractiveWeaponExecute(bool bGetOrPutWeapon); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.InteractiveWeaponExecute // (Final|Native|Private|Const) // @ game+0x629d580
	void InputActionPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.InputActionPressed // (Final|Native|Public) // @ game+0x629d470
	void HighLevelPickupCancelCurrentWeaponReload(); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.HighLevelPickupCancelCurrentWeaponReload // (Final|Native|Private) // @ game+0x629d450
	void EndHighValueItemInspect(bool bWantToServerExecute); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.EndHighValueItemInspect // (Final|Native|Public|Const) // @ game+0x629d2b0
	void DestroyHighValueMesh(); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.DestroyHighValueMesh // (Final|Native|Private|Const) // @ game+0x629d290
	void ClientInterruptHighValueItemInspect(); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.ClientInterruptHighValueItemInspect // (Final|Native|Public|Const) // @ game+0x629d270
	void ClientCheckEndHighValueItemInspect(float DeltaSeconds); // Function DFMGameplay.DFMFSM_HighValueItemInspectAction.ClientCheckEndHighValueItemInspect // (Final|Native|Private) // @ game+0x629d1f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_HipFiringAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_HipFiringAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ImpendingDeathAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_ImpendingDeathAction : public UDFMFSMAction {
public:

	bool bIgnoreCollision; // 0x110(0x01)
	bool bShowFPPLowerMesh; // 0x111(0x01)
	char pad_112[0x16]; // 0x112(0x16)
	struct ADFMCharacter* OwnerDFCharacter; // 0x128(0x08)
	struct AGPPlayerCameraManager* PlayerCameraManager; // 0x130(0x08)
	bool EnablePutGetWeapon; // 0x138(0x01)
	bool PutGetWeaponFast; // 0x139(0x01)
	char pad_13A[0x6]; // 0x13a(0x06)

	void UpdateShouldPlayImpendingAnim(); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.UpdateShouldPlayImpendingAnim // (Final|Native|Protected) // @ game+0x629f9a0
	void OnPlayerArmedForceChanged(); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.OnPlayerArmedForceChanged // (Final|Native|Protected) // @ game+0x629ecb0
	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.OnEndOverlap // (Final|Native|Public) // @ game+0x629e3e0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x629dc60
	void OnAutonomousCharacterBeginplay(); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.OnAutonomousCharacterBeginplay // (Final|Native|Protected) // @ game+0x629d910
	bool CheckIsInEscape(); // Function DFMGameplay.DFMFSM_ImpendingDeathAction.CheckIsInEscape // (Final|Native|Protected|Const) // @ game+0x629d1c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ImpendingDeathBPAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_ImpendingDeathBPAction : public UDFMFSMAction {
public:

	struct UGPAudioEventAsset* DyingActorEvent; // 0x110(0x08)
	struct UGPAudioEventAsset* DyingActor2DEvent; // 0x118(0x08)
	char pad_120[0x8]; // 0x120(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ImpendingDeathControlAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_ImpendingDeathControlAction : public UDFMFSMAction {
public:

	struct FVector2D CameraLimit; // 0x110(0x08)
	bool bChangeLowFPS; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	struct FName lastTurnLable; // 0x11c(0x08)
	char pad_124[0x4]; // 0x124(0x04)

	void CancelRescueImmediately(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ImpendingDeathControlAction.CancelRescueImmediately // (Final|Native|Public) // @ game+0x629d0b0
	void CancelRescue(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ImpendingDeathControlAction.CancelRescue // (Final|Native|Public) // @ game+0x629cfa0
	void CancelCancelRescueImmediately(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ImpendingDeathControlAction.CancelCancelRescueImmediately // (Final|Native|Public) // @ game+0x629ce90
	void CancelCancelRescue(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ImpendingDeathControlAction.CancelCancelRescue // (Final|Native|Public) // @ game+0x629cd80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ImpendingDeathLaydownProcessAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_ImpendingDeathLaydownProcessAction : public UDFMFSMAction {
public:

	struct UCurveFloat* ImpendingDeathSpineHeightCurve; // 0x110(0x08)
	bool bEnableRagdollPhysics; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	float LaydownFPPCameraModeChangeTime; // 0x11c(0x04)
	char pad_120[0x20]; // 0x120(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_InCutSceneAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_InCutSceneAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_InCutSceneCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_InCutSceneCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginCutScene; // 0x110(0x01)
	bool CheckEndCutScene; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void OnFsmEndCutScene(struct AGPSequenceActor* GPSequenceActor); // Function DFMGameplay.DFMFSM_InCutSceneCheckAction.OnFsmEndCutScene // (Final|Native|Public) // @ game+0x629e5a0
	void OnFsmBeginCutScene(struct AGPSequenceActor* GPSequenceActor); // Function DFMGameplay.DFMFSM_InCutSceneCheckAction.OnFsmBeginCutScene // (Final|Native|Public) // @ game+0x629e520
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_InteractAndOperateCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_InteractAndOperateCheckAction : public UDFMFSMAction {
public:


	void BeginUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_InteractAndOperateCheckAction.BeginUseItem // (Final|Native|Public) // @ game+0x629cc70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_InteractOperateAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_InteractOperateAction : public UDFMFSMAction {
public:

	int32_t OperateType; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_JumpCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_JumpCheckAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_JumpUpingAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_JumpUpingAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_KnockbackAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_KnockbackAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_KnockedDownAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_KnockedDownAction : public UDFMFSMAction {
public:

	float KnockedDownTime; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UAnimMontage* CurFppMontage; // 0x118(0x08)
	struct UAnimMontage* CurTppMontage; // 0x120(0x08)
	char pad_128[0x8]; // 0x128(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_KnockedDownCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_KnockedDownCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginKnockedDown; // 0x110(0x01)
	bool CheckCancelKnockedDown; // 0x111(0x01)
	bool CheckBeginFloating; // 0x112(0x01)
	bool CheckCancelFloating; // 0x113(0x01)
	bool CheckBeginBeSuppressed; // 0x114(0x01)
	bool CheckCancelBeSuppressed; // 0x115(0x01)
	char pad_116[0x2]; // 0x116(0x02)

	void OnCancelKnockedDown(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnCancelKnockedDown // (Final|Native|Public) // @ game+0x629e080
	void OnCancelFloating(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnCancelFloating // (Final|Native|Public) // @ game+0x629df70
	void OnCanceBeSuppressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnCanceBeSuppressed // (Final|Native|Public) // @ game+0x629de60
	void OnBeginKnockedDown(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnBeginKnockedDown // (Final|Native|Public) // @ game+0x629db50
	void OnBeginFloating(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnBeginFloating // (Final|Native|Public) // @ game+0x629da40
	void OnBeginBeSuppressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_KnockedDownCheckAction.OnBeginBeSuppressed // (Final|Native|Public) // @ game+0x629d930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_LeanCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_LeanCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginLeftLean; // 0x110(0x01)
	bool CheckBeginRightLean; // 0x111(0x01)
	bool CheckEndLean; // 0x112(0x01)
	char pad_113[0x5]; // 0x113(0x05)

	void OnRightLean(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LeanCheckAction.OnRightLean // (Final|Native|Public) // @ game+0x629ed50
	void OnLeftLean(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LeanCheckAction.OnLeftLean // (Final|Native|Public) // @ game+0x629e730
	void OnJumpCancelLean(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LeanCheckAction.OnJumpCancelLean // (Final|Native|Public) // @ game+0x629e620
	void OnCancelLean(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LeanCheckAction.OnCancelLean // (Final|Native|Public) // @ game+0x629e190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_LeanControlAction
// Size: 0x178 (Inherited: 0x110)
class UDFMFSM_LeanControlAction : public UDFMFSMAction {
public:

	bool bIsLeftLean; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float FPPLeanPeekRotAngle; // 0x114(0x04)
	struct FVector FPPLeanPeekOffset; // 0x118(0x0c)
	float FPPLeanPeekLerpSpeed; // 0x124(0x04)
	uint32_t LeanPeekAttributeId; // 0x128(0x04)
	char pad_12C[0x4c]; // 0x12c(0x4c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_LeisureFunctionAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_LeisureFunctionAction : public UDFMFSMAction {
public:


	void GetOutWeapon(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LeisureFunctionAction.GetOutWeapon // (Final|Native|Public) // @ game+0x629d340
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ListenWeaponInnerEventAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_ListenWeaponInnerEventAction : public UDFMFSMAction {
public:

	enum class EGPWeaponInnerEvent ListenWeaponEvent; // 0x110(0x01)
	enum class EGPFSMTransitionEvent TriggerEvent; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)
	struct AWeaponBase* CacheWeapon; // 0x118(0x08)
	char pad_120[0x10]; // 0x120(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_LootingCheckControlAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_LootingCheckControlAction : public UDFMFSMAction {
public:


	void BeginLooting(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_LootingCheckControlAction.BeginLooting // (Final|Native|Public) // @ game+0x62a2f70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_MacheineFireWarningAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_MacheineFireWarningAction : public UDFMFSMAction {
public:


	void BP_OnUpdate(); // Function DFMGameplay.DFMFSM_MacheineFireWarningAction.BP_OnUpdate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnExit(); // Function DFMGameplay.DFMFSM_MacheineFireWarningAction.BP_OnExit // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_MachineGunAction
// Size: 0x168 (Inherited: 0x110)
class UDFMFSM_MachineGunAction : public UDFMFSMAction {
public:

	struct FGameplayTag EventTag; // 0x110(0x08)
	struct FVector2D RotationThresholdYaw; // 0x118(0x08)
	float MachiGunRotSpeed; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct APawn* DiscActor; // 0x128(0x08)
	struct URotatingMovementComponent* DiscRotMoveCom; // 0x130(0x08)
	char pad_138[0x30]; // 0x138(0x30)

	void TryLeaveMiniGun(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MachineGunAction.TryLeaveMiniGun // (Final|Native|Public) // @ game+0x62a49b0
	void TryEnterSimulateScenceWeapon(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MachineGunAction.TryEnterSimulateScenceWeapon // (Final|Native|Public) // @ game+0x62a48a0
	void OnVehicleDead(struct AGPVehicleBase* CurVehicle); // Function DFMGameplay.DFMFSM_MachineGunAction.OnVehicleDead // (Final|Native|Public) // @ game+0x62a41b0
	void OnActivateWeaponChanged(struct AWeaponBase* LastWeapon, struct AWeaponBase* CurrentWeapon); // Function DFMGameplay.DFMFSM_MachineGunAction.OnActivateWeaponChanged // (Final|Native|Public) // @ game+0x62a35f0
	void MoveRight(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MachineGunAction.MoveRight // (Final|Native|Public) // @ game+0x62a34e0
	void MoveForward(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MachineGunAction.MoveForward // (Final|Native|Public) // @ game+0x62a33d0
	void LeaveMiniGun(); // Function DFMGameplay.DFMFSM_MachineGunAction.LeaveMiniGun // (Final|Native|Public) // @ game+0x62a33b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_MarkingAction
// Size: 0x138 (Inherited: 0x110)
class UDFMFSM_MarkingAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	struct UAnimMontage* MarkingFpp; // 0x120(0x08)
	struct UAnimMontage* MarkingTpp; // 0x128(0x08)
	struct UAnimMontage* MarkingTppProne; // 0x130(0x08)

	void OnReceiveWeaponEvent(char Event); // Function DFMGameplay.DFMFSM_MarkingAction.OnReceiveWeaponEvent // (Final|Native|Public) // @ game+0x62a3e70
	void InterruptMarkingAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_MarkingAction.InterruptMarkingAction // (Final|Native|Public) // @ game+0x62a3230
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_MonitorCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_MonitorCheckAction : public UDFMFSMAction {
public:

	bool CheckStartMonitor; // 0x110(0x01)
	bool CheckCancelMonitor; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryStartMonitor(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MonitorCheckAction.TryStartMonitor // (Final|Native|Public) // @ game+0x62a4ce0
	void TryCancelMonitor(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MonitorCheckAction.TryCancelMonitor // (Final|Native|Public) // @ game+0x62a4680
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_MonitorKeepingWatch
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_MonitorKeepingWatch : public UDFMFSMAction {
public:


	void OnViewNext(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MonitorKeepingWatch.OnViewNext // (Final|Native|Public) // @ game+0x62a4340
	void OnViewLast(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_MonitorKeepingWatch.OnViewLast // (Final|Native|Public) // @ game+0x62a4230
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_OneHandedGestureAction
// Size: 0x150 (Inherited: 0x110)
class UDFMFSM_OneHandedGestureAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	float MaxDuration; // 0x120(0x04)
	char pad_124[0x14]; // 0x124(0x14)
	struct UAnimMontage* FPPAnim; // 0x138(0x08)
	struct UAnimMontage* TPPAnim; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	void OnExit3DSafeHouse(bool bEnter); // Function DFMGameplay.DFMFSM_OneHandedGestureAction.OnExit3DSafeHouse // (Final|Native|Public) // @ game+0x62a3c40
	void OnAnimLoadCompleted(struct TArray<struct FSoftObjectPath> Paths); // Function DFMGameplay.DFMFSM_OneHandedGestureAction.OnAnimLoadCompleted // (Final|Native|Public) // @ game+0x62a36b0
	void InterruptAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_OneHandedGestureAction.InterruptAction // (Final|Native|Public) // @ game+0x62a31b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_OnFlyBaseAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_OnFlyBaseAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ParachuteAction
// Size: 0x138 (Inherited: 0x110)
class UDFMFSM_ParachuteAction : public UDFMFSMAction {
public:

	struct FVector2D ParachutePitchLimit; // 0x110(0x08)
	struct FVector ParachuteFPPCameraLookDown; // 0x118(0x0c)
	struct FVector ParachuteFPPCameraLookUp; // 0x124(0x0c)
	bool bGlide; // 0x130(0x01)
	char pad_131[0x7]; // 0x131(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ParachuteGlobalAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_ParachuteGlobalAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_PlaceableGuiderAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_PlaceableGuiderAction : public UDFMFSMAction {
public:

	bool TestBool; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_PreBeingRescueByMyselfAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_PreBeingRescueByMyselfAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RaiseWatchCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_RaiseWatchCheckAction : public UDFMFSMAction {
public:

	bool bCheckBeginRaiseWatch; // 0x110(0x01)
	bool bCheckEndRaiseWatch; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void OnEndRaiseWatchAction(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RaiseWatchCheckAction.OnEndRaiseWatchAction // (Final|Native|Public) // @ game+0x62a3b30
	void OnBeginRaiseWatchAction(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RaiseWatchCheckAction.OnBeginRaiseWatchAction // (Final|Native|Public) // @ game+0x62a39c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RaiseWatchControlAction
// Size: 0x1d8 (Inherited: 0x110)
class UDFMFSM_RaiseWatchControlAction : public UDFMFSMAction {
public:

	struct USkeletalMesh* WatchSkeletalMesh; // 0x110(0x08)
	struct FName AttachSocketName; // 0x118(0x08)
	float LoopDuration; // 0x120(0x04)
	float EarlyShowHudTime; // 0x124(0x04)
	float Timeout; // 0x128(0x04)
	bool bPlayWatchAnim; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)
	struct FName CharacterHandStart; // 0x130(0x08)
	struct FName CharacterHandLoop; // 0x138(0x08)
	struct FName CharacterHandEnd; // 0x140(0x08)
	struct FName WatchStart; // 0x148(0x08)
	struct FName WatchLoop; // 0x150(0x08)
	struct FName WatchEnd; // 0x158(0x08)
	struct UAnimSequence* FPP_CharacterHandStart; // 0x160(0x08)
	struct UAnimSequence* FPP_CharacterHandLoop; // 0x168(0x08)
	struct UAnimSequence* FPP_CharacterHandEnd; // 0x170(0x08)
	struct UAnimSequence* FPP_WatchStart; // 0x178(0x08)
	struct UAnimSequence* FPP_WatchLoop; // 0x180(0x08)
	struct UAnimSequence* FPP_WatchEnd; // 0x188(0x08)
	bool bPlayFastUnEquipAnim; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)
	struct UGPSkeletalMeshComponent* WatchSkeletalMeshComponent; // 0x198(0x08)
	char pad_1A0[0x38]; // 0x1a0(0x38)

	void PlayBeginRaiseWatchFppAnim(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.PlayBeginRaiseWatchFppAnim // (Final|Native|Public) // @ game+0x62a4450
	void OnPlayFastEquipAnimEnd(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.OnPlayFastEquipAnimEnd // (Final|Native|Public) // @ game+0x62a3d70
	void OnClientStartRaiseWatchFppShowHud(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.OnClientStartRaiseWatchFppShowHud // (Final|Native|Public) // @ game+0x62a3b10
	void OnClientStartRaiseWatchFppAnimFinished(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.OnClientStartRaiseWatchFppAnimFinished // (Final|Native|Public) // @ game+0x62a3af0
	void OnClientEndRaiseWatchFppAnimFinished(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.OnClientEndRaiseWatchFppAnimFinished // (Final|Native|Public) // @ game+0x62a3ad0
	void ExitRaiseWatch(); // Function DFMGameplay.DFMFSM_RaiseWatchControlAction.ExitRaiseWatch // (Final|Native|Public) // @ game+0x62a3190
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RaiseWatchGlobalAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_RaiseWatchGlobalAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	void OnPlayerEndMatch(enum class EMatchOverReason MatchOverReason, int64_t InPlayerUin); // Function DFMGameplay.DFMFSM_RaiseWatchGlobalAction.OnPlayerEndMatch // (Final|Native|Public) // @ game+0x62a3d90
	void OnHealthChanged(int32_t HealthChanged); // Function DFMGameplay.DFMFSM_RaiseWatchGlobalAction.OnHealthChanged // (Final|Native|Public) // @ game+0x62a3cd0
	void OnBeginKnockBackAction(struct AGPCharacterBase* CHARACTER); // Function DFMGameplay.DFMFSM_RaiseWatchGlobalAction.OnBeginKnockBackAction // (Final|Native|Public) // @ game+0x62a3940
	void OnAttributeArmorChangeEvent(struct AActor* ThisOwner, float CurrentValue, float MaxValue); // Function DFMGameplay.DFMFSM_RaiseWatchGlobalAction.OnAttributeArmorChangeEvent // (Final|Native|Public) // @ game+0x62a3840
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RandomFlameTypeAction
// Size: 0x140 (Inherited: 0x110)
class UDFMFSM_RandomFlameTypeAction : public UDFMFSMAction {
public:

	float StateTimeout; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct TArray<float> RandomRateArray; // 0x118(0x10)
	float RandomRate1; // 0x128(0x04)
	float RandomRate2; // 0x12c(0x04)
	float RandomRate3; // 0x130(0x04)
	float RandomRate4; // 0x134(0x04)
	float RandomRate5; // 0x138(0x04)
	float RandomRate6; // 0x13c(0x04)

	void OnRandomFlameTimeout(); // Function DFMGameplay.DFMFSM_RandomFlameTypeAction.OnRandomFlameTimeout // (Final|Native|Public) // @ game+0x62a3e50
	void BP_OnRandomFlameTimeout(int32_t RandomResult); // Function DFMGameplay.DFMFSM_RandomFlameTypeAction.BP_OnRandomFlameTimeout // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RankSkillOperateAction
// Size: 0x160 (Inherited: 0x110)
class UDFMFSM_RankSkillOperateAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	char pad_120[0x28]; // 0x120(0x28)
	struct ARankSkillSelectPositionActor* SelectPositionActor; // 0x148(0x08)
	char pad_150[0x10]; // 0x150(0x10)

	void ServerWeaponChangeNtf(struct AGPCharacterBase* GPCharacter, struct AWeaponBase* OldWeapon, struct AWeaponBase* NewWeapon); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.ServerWeaponChangeNtf // (Final|Native|Public) // @ game+0x62a4470
	void OnStartFireDoRankSkillOperate(); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.OnStartFireDoRankSkillOperate // (Final|Native|Public) // @ game+0x62a3ff0
	void OnSelectPositionPreviewActorLoaded(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.OnSelectPositionPreviewActorLoaded // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x62a3f10
	void OnRightMouseButtonClk(); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.OnRightMouseButtonClk // (Final|Native|Public) // @ game+0x62a3ef0
	void OnLeftMouseButtonClk(); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.OnLeftMouseButtonClk // (Final|Native|Public) // @ game+0x62a3d50
	void InterruptRankSkillOperate(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.InterruptRankSkillOperate // (Final|Native|Public) // @ game+0x62a32b0
	void EndRankSkillOperate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RankSkillOperateAction.EndRankSkillOperate // (Final|Native|Public) // @ game+0x62a3080
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RebornAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_RebornAction : public UDFMFSMAction {
public:

	float StateTimeout; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	uint32_t CharacterRebornBuffId; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RebornCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_RebornCheckAction : public UDFMFSMAction {
public:


	void OnToReborn(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RebornCheckAction.OnToReborn // (Final|Native|Public) // @ game+0x62a40a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RelaxIdleAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_RelaxIdleAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RelaxIdleCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_RelaxIdleCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginRelaxIdle; // 0x110(0x01)
	bool CheckCancelRelaxIdle; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryRelaxIdle(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RelaxIdleCheckAction.TryRelaxIdle // (Final|Native|Public) // @ game+0x62a4ac0
	void TryCancelRelaxIdle(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RelaxIdleCheckAction.TryCancelRelaxIdle // (Final|Native|Public) // @ game+0x62a4790
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ReloadCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_ReloadCheckAction : public UDFMFSMAction {
public:

	bool TestBool; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ReloadControllAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_ReloadControllAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RescueCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_RescueCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginRescue; // 0x110(0x01)
	bool CheckCancelRescue; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryRescue(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RescueCheckAction.TryRescue // (Final|Native|Public) // @ game+0x62a4bd0
	void TryCancel(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RescueCheckAction.TryCancel // (Final|Native|Public) // @ game+0x62a4570
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RescueOperateAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_RescueOperateAction : public UDFMFSMAction {
public:

	struct AGPCharacterBase* Target; // 0x110(0x08)
	char pad_118[0x1]; // 0x118(0x01)
	bool UnEquipAnim; // 0x119(0x01)
	char pad_11A[0x2]; // 0x11a(0x02)
	float UnEquipAnimDelay; // 0x11c(0x04)
	float RescueTimeCheckOffset; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)

	void OnTargetBeAssassinate(bool bAssassinate); // Function DFMGameplay.DFMFSM_RescueOperateAction.OnTargetBeAssassinate // (Final|Native|Public) // @ game+0x62a4010
	void InterruptRescue(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_RescueOperateAction.InterruptRescue // (Final|Native|Public) // @ game+0x62a3330
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RescuePreciseOperateAction
// Size: 0x8a0 (Inherited: 0x110)
class UDFMFSM_RescuePreciseOperateAction : public UDFMFSMAction {
public:

	bool bIsActionRunning; // 0x110(0x01)
	char pad_111[0xf]; // 0x111(0x0f)
	struct ADFMCharacter* CurrentRescuingTarget; // 0x120(0x08)
	struct FVector CurrentTargetStandPoint; // 0x128(0x0c)
	char pad_134[0x6c]; // 0x134(0x6c)
	struct UAnimMontage* RescueSomeoneClipFPP_Montage; // 0x1a0(0x08)
	struct UAnimMontage* RescueSomeoneClipTPP_Montage; // 0x1a8(0x08)
	struct UAnimMontage* BeingRescueBySomeoneClipFPP_Montage; // 0x1b0(0x08)
	struct UAnimMontage* BeingRescueBySomeoneClipTPP_Montage; // 0x1b8(0x08)
	char pad_1C0[0x48]; // 0x1c0(0x48)
	struct TMap<struct FName, struct UObject*> LoadedResourceMap; // 0x208(0x50)
	char pad_258[0x18]; // 0x258(0x18)
	struct TArray<uint64_t> LoadHandles; // 0x270(0x10)
	bool enableDebugDraw; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float MoveToTargetMaxTime; // 0x284(0x04)
	struct UAnimSequence* RescueSomeoneClipFPPStart; // 0x288(0x08)
	struct UAnimSequence* RescueSomeoneClipFPPLoop; // 0x290(0x08)
	struct UAnimSequence* RescueSomeoneClipFPPEnd; // 0x298(0x08)
	struct UAnimSequence* RescueSomeoneClipFPPCrouchEnd; // 0x2a0(0x08)
	struct UAnimSequence* RescueSomeoneClipFPPProneEnd; // 0x2a8(0x08)
	struct UAnimSequence* RescueSomeoneClipTPPStart; // 0x2b0(0x08)
	struct UAnimSequence* RescueSomeoneClipTPPLoop; // 0x2b8(0x08)
	struct UAnimSequence* RescueSomeoneClipTPPEnd; // 0x2c0(0x08)
	struct UAnimSequence* RescueSomeoneClipTPPCrouchEnd; // 0x2c8(0x08)
	struct UAnimSequence* RescueSomeoneClipTPPProneEnd; // 0x2d0(0x08)
	struct UAnimSequence* BeingRescueClipFPPStart; // 0x2d8(0x08)
	struct UAnimSequence* BeingRescueClipFPPLoop; // 0x2e0(0x08)
	struct UAnimSequence* BeingRescueClipFPPEnd; // 0x2e8(0x08)
	struct UAnimSequence* BeingRescueClipFPPCrouchEnd; // 0x2f0(0x08)
	struct UAnimSequence* BeingRescueClipTPPStart; // 0x2f8(0x08)
	struct UAnimSequence* BeingRescueClipTPPLoop; // 0x300(0x08)
	struct UAnimSequence* BeingRescueClipTPPEnd; // 0x308(0x08)
	struct UAnimSequence* BeingRescueClipTPPCrouchEnd; // 0x310(0x08)
	struct TMap<int32_t, struct UMaterialInterface*> ItemMaterials; // 0x318(0x50)
	struct TMap<int32_t, struct UMaterialInterface*> ItemScopMaterials; // 0x368(0x50)
	float RotLerpTime; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct UGPAudioEventAsset* FastBegingRescue1PAudioAsset; // 0x3c0(0x08)
	float FastRescueDistance; // 0x3c8(0x04)
	float FastRescueDistanceSide; // 0x3cc(0x04)
	struct FVector FastRescueOffset; // 0x3d0(0x0c)
	float RotationLerpSpeed; // 0x3dc(0x04)
	char pad_3E0[0x8]; // 0x3e0(0x08)
	bool UnEquipAnim; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	struct FName FastRecueSocket; // 0x3ec(0x08)
	struct FName UsingFastRecueSocket; // 0x3f4(0x08)
	float FastRescueHeightOffset; // 0x3fc(0x04)
	struct UGPSkeletalMeshComponent* ItemMesh; // 0x400(0x08)
	struct UGPSkeletalMeshComponent* ScoItemMesh; // 0x408(0x08)
	struct UAnimSequence* RescueSomeoneClipFPP_Fast; // 0x410(0x08)
	struct UAnimSequence* RescueSomeoneClipFPP_FastLoop; // 0x418(0x08)
	struct UAnimSequence* RescueSomeoneClipFPP_FastEnd; // 0x420(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_Fast; // 0x428(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_FastLoop; // 0x430(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_FastEnd; // 0x438(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_CrouchFast; // 0x440(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_CrouchFastLoop; // 0x448(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_CrouchFastEnd; // 0x450(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_ProneFast; // 0x458(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_ProneFastLoop; // 0x460(0x08)
	struct UAnimSequence* RescueSomeoneClipTPP_ProneFastEnd; // 0x468(0x08)
	float PlayBeingRescueAnimDelayTime; // 0x470(0x04)
	char pad_474[0x4]; // 0x474(0x04)
	struct UAnimSequence* BeingRescueBySomeoneClipFPP_Fast; // 0x478(0x08)
	struct UAnimSequence* BeingRescueBySomeoneClipTPP_Fast; // 0x480(0x08)
	struct UCurveFloat* RescueSomeoneFOVCurve; // 0x488(0x08)
	struct UCurveFloat* BeingRescueSomeoneFOVCurve; // 0x490(0x08)
	struct UCurveFloat* RescueFadeFOVCurve; // 0x498(0x08)
	enum class ECollisionChannel CapsureTargetType; // 0x4a0(0x01)
	enum class ECollisionChannel MeshTargetType; // 0x4a1(0x01)
	char pad_4A2[0x6]; // 0x4a2(0x06)
	struct TArray<enum class ECollisionChannel> AllIgnoreChannel; // 0x4a8(0x10)
	struct TArray<enum class ECollisionChannel> AllMeshIgnoreChannel; // 0x4b8(0x10)
	float BeingRescueAddRotator; // 0x4c8(0x04)
	float ReturnMeshLocationTime; // 0x4cc(0x04)
	struct FVector MeshMoveOffset; // 0x4d0(0x0c)
	char pad_4DC[0x4]; // 0x4dc(0x04)
	struct TArray<struct FRescuePreciseAudio> EndAudioEvents; // 0x4e0(0x10)
	float RescueBlendOut; // 0x4f0(0x04)
	float BeingRescueBlendOut; // 0x4f4(0x04)
	float BeingRescueFPPBlendIn; // 0x4f8(0x04)
	float BeingRescueFPPBlendOut; // 0x4fc(0x04)
	float BeingFastRescueFPPBlendIn; // 0x500(0x04)
	float BeingFastRescueFPPBlendOut; // 0x504(0x04)
	float BeingFastRescueTPPBlendIn; // 0x508(0x04)
	char pad_50C[0x14]; // 0x50c(0x14)
	float ForceOverridePreApperanceDelay; // 0x520(0x04)
	char pad_524[0x4]; // 0x524(0x04)
	float BeRescueEndDelayTime; // 0x528(0x04)
	char pad_52C[0x4]; // 0x52c(0x04)
	struct FRescueAnims RescueAnims; // 0x530(0x360)
	bool NotUseTickUpdateLocAndRot; // 0x890(0x01)
	char pad_891[0xb]; // 0x891(0x0b)
	bool CheckRescueCount; // 0x89c(0x01)
	char pad_89D[0x3]; // 0x89d(0x03)

	void UpdateNotFastRescueActorLocAndRotation(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.UpdateNotFastRescueActorLocAndRotation // (Final|Native|Public) // @ game+0x62a63c0
	void UpdateFastRescueActorRotation(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.UpdateFastRescueActorRotation // (Final|Native|Public) // @ game+0x62a63a0
	void TriggerRescueAnimation(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.TriggerRescueAnimation // (Final|Native|Private) // @ game+0x62a6290
	void SimulatedInit(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.SimulatedInit // (Final|Native|Public) // @ game+0x62a6270
	void SetupSimulateFastRescueActorRotation(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.SetupSimulateFastRescueActorRotation // (Final|Native|Public) // @ game+0x62a6250
	void SetRescueCompleteStandPointSafe(struct FVector CurRescueCompleteStandPoint); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.SetRescueCompleteStandPointSafe // (Final|Native|Private|HasDefaults) // @ game+0x62a61c0
	void SetCurrentTargetStandPointSafe(struct FVector CurrentStandPoint); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.SetCurrentTargetStandPointSafe // (Final|Native|Private|HasDefaults) // @ game+0x62a6130
	void RemoveItemMesh(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.RemoveItemMesh // (Final|Native|Private) // @ game+0x62a6110
	void OnUnEquipAnimTriggerRescueAnim(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.OnUnEquipAnimTriggerRescueAnim // (Final|Native|Private) // @ game+0x62a60f0
	void OnLoadedPreload(struct FSoftObjectPath& SoftObjectPath); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.OnLoadedPreload // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62a6010
	void IamRescuingInit(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.IamRescuingInit // (Final|Native|Public) // @ game+0x62a5ff0
	void IamEatingWaterMelonInit(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.IamEatingWaterMelonInit // (Final|Native|Public) // @ game+0x62a5fd0
	void IamBeingRescuingInit(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.IamBeingRescuingInit // (Final|Native|Public) // @ game+0x62a5fb0
	struct FVector GetRescueCompleteStandPointSafe(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.GetRescueCompleteStandPointSafe // (Final|Native|Private|HasDefaults) // @ game+0x62a5f70
	struct FVector GetCurrentTargetStandPointSafe(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.GetCurrentTargetStandPointSafe // (Final|Native|Private|HasDefaults) // @ game+0x62a5f30
	void CreateItemMeshPath(); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.CreateItemMeshPath // (Final|Native|Private) // @ game+0x62a5f10
	void BeingRescueInfoArrived(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_RescuePreciseOperateAction.BeingRescueInfoArrived // (Final|Native|Private) // @ game+0x62a5e00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_RoleLoadAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_RoleLoadAction : public UDFMFSMAction {
public:


	void OnRoleLoadChanged(int32_t RoleLoadType); // Function DFMGameplay.DFMFSM_RoleLoadAction.OnRoleLoadChanged // (Final|Native|Public) // @ game+0x4094f40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SafeHouseControlAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_SafeHouseControlAction : public UDFMFSMAction {
public:

	bool bUseFPPInSafeHouse; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SearchItemAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_SearchItemAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SkillStateAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_SkillStateAction : public UDFMFSMAction {
public:


	void SwitchWeaponButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.SwitchWeaponButtonPressed // (Final|Native|Public) // @ game+0x62aaa60
	void ReloadButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.ReloadButtonPressed // (Final|Native|Public) // @ game+0x62aa400
	void OnEndUseSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.OnEndUseSkill // (Final|Native|Public) // @ game+0x62a9e90
	void JumButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.JumButtonPressed // (Final|Native|Public) // @ game+0x62a9830
	void FireButtonReleased(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.FireButtonReleased // (Final|Native|Public) // @ game+0x62a40a0
	void FireButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.FireButtonPressed // (Final|Native|Public) // @ game+0x62a40a0
	void AimButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateAction.AimButtonPressed // (Final|Native|Public) // @ game+0x62a9090
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SkillStateActionBase
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_SkillStateActionBase : public UDFMFSMAction {
public:


	void SwitchWeaponButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.SwitchWeaponButtonPressed // (Final|Native|Public) // @ game+0x62aab70
	void ReloadButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.ReloadButtonPressed // (Final|Native|Public) // @ game+0x62aa510
	void OnEndUseSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.OnEndUseSkill // (Final|Native|Public) // @ game+0x62a9fa0
	void JumButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.JumButtonPressed // (Final|Native|Public) // @ game+0x62a9940
	void FireButtonReleased(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.FireButtonReleased // (Final|Native|Public) // @ game+0x62a40a0
	void FireButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.FireButtonPressed // (Final|Native|Public) // @ game+0x62a40a0
	void AimButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SkillStateActionBase.AimButtonPressed // (Final|Native|Public) // @ game+0x62a91a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SlidingTackleGlobalAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_SlidingTackleGlobalAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SOLEscapedStateAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_SOLEscapedStateAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SpawnActionSequence_SprintIntervalAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_SpawnActionSequence_SprintIntervalAction : public UDFMFSMAction {
public:

	float Timeout; // 0x110(0x04)
	bool SpawnSprintIntervalAction_AtEnter; // 0x114(0x01)
	bool SpawnSprintIntervalAction_AtExit; // 0x115(0x01)
	char pad_116[0x2]; // 0x116(0x02)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SprintCheckAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_SprintCheckAction : public UDFMFSMAction {
public:

	float SprintFiringInterval; // 0x110(0x04)
	bool CurrentIsSprintState; // 0x114(0x01)
	bool CheckEnterSprint; // 0x115(0x01)
	bool CheckExitSprint; // 0x116(0x01)
	char pad_117[0x9]; // 0x117(0x09)

	void TickSpirntInfoNew(float DeltaTime); // Function DFMGameplay.DFMFSM_SprintCheckAction.TickSpirntInfoNew // (Final|Native|Public) // @ game+0x62aac80
	void ServerStartSprint(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SprintCheckAction.ServerStartSprint // (Final|Native|Public) // @ game+0x62aa950
	void ServerEndSprint(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SprintCheckAction.ServerEndSprint // (Final|Native|Public) // @ game+0x62aa840
	void QuitSuperSprint(); // Function DFMGameplay.DFMFSM_SprintCheckAction.QuitSuperSprint // (Final|Native|Public) // @ game+0x62aa3e0
	void PrepareFire(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_SprintCheckAction.PrepareFire // (Final|Native|Public) // @ game+0x62aa2d0
	bool CheckStateCanUpgradeToSuperSprint(); // Function DFMGameplay.DFMFSM_SprintCheckAction.CheckStateCanUpgradeToSuperSprint // (Final|Native|Public) // @ game+0x62a9450
	bool CheckStateCanSuperSprint(bool bInterruptFunction); // Function DFMGameplay.DFMFSM_SprintCheckAction.CheckStateCanSuperSprint // (Final|Native|Public) // @ game+0x62a93c0
	bool CheckStateCanSprint(bool bInterruptFunction); // Function DFMGameplay.DFMFSM_SprintCheckAction.CheckStateCanSprint // (Final|Native|Public) // @ game+0x62a9330
	void CalcSprintInputInfo(float DeltaTime); // Function DFMGameplay.DFMFSM_SprintCheckAction.CalcSprintInputInfo // (Final|Native|Public) // @ game+0x62a92b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_SprintExecuteAction
// Size: 0x138 (Inherited: 0x110)
class UDFMFSM_SprintExecuteAction : public UDFMFSMAction {
public:

	float DuringTransitionTimeout; // 0x110(0x04)
	float FPPSprintCameraAnimStartScale; // 0x114(0x04)
	float FPPSprintCameraAnimTargetScale; // 0x118(0x04)
	float FPPSprintCameraAnimBlendTime; // 0x11c(0x04)
	char pad_120[0x18]; // 0x120(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StandingControlAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_StandingControlAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StandStateAction
// Size: 0x160 (Inherited: 0x110)
class UDFMFSM_StandStateAction : public UDFMFSMAction {
public:

	float ProneToStandTransition; // 0x110(0x04)
	float StaneToProneTransition; // 0x114(0x04)
	float ProneSprintToStandTransition; // 0x118(0x04)
	float CrouchToStandTransition; // 0x11c(0x04)
	float StandToCrouchTransition; // 0x120(0x04)
	float ProneToCrouchTransition; // 0x124(0x04)
	float CrouchToProneTransition; // 0x128(0x04)
	float ProneToStandBreakPoint; // 0x12c(0x04)
	float StandToProneBreakPoint; // 0x130(0x04)
	float ProneSprintToStandBreakPoint; // 0x134(0x04)
	float ProneToCrouchBreakPoint; // 0x138(0x04)
	float CrouchToProneBreakPoint; // 0x13c(0x04)
	float ProneToStandReProneHurdle; // 0x140(0x04)
	float ProneToCrouchReProneHurdle; // 0x144(0x04)
	char pad_148[0x18]; // 0x148(0x18)

	void ToggleToProne(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_StandStateAction.ToggleToProne // (Final|Native|Public) // @ game+0x62aae10
	void ToggleToCrouch(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_StandStateAction.ToggleToCrouch // (Final|Native|Public) // @ game+0x62aad00
	void ForceToStand(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_StandStateAction.ForceToStand // (Final|Native|Public) // @ game+0x62a96a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StartCarryAction
// Size: 0x198 (Inherited: 0x110)
class UDFMFSM_StartCarryAction : public UDFMFSMAction {
public:

	float PlayAnimDelayTime; // 0x110(0x04)
	char pad_114[0x8]; // 0x114(0x08)
	bool EnableCustomTime; // 0x11c(0x01)
	char pad_11D[0x3]; // 0x11d(0x03)
	float CustomAnimPlayLength; // 0x120(0x04)
	float CustomAnimPlayCarryBoxLength; // 0x124(0x04)
	float TimeOutRemainTime; // 0x128(0x04)
	float AnimPlayLengthRemainTime; // 0x12c(0x04)
	float CurPlayAnimDelayTime; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
	struct FGPFSMAudioTrigger CarryAudioTrigger; // 0x138(0x58)
	char pad_190[0x8]; // 0x190(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StatusBoolModifyAction
// Size: 0x170 (Inherited: 0x110)
class UDFMFSM_StatusBoolModifyAction : public UDFMFSMAction {
public:

	struct FStatusBoolModifyInfo CanJumpInfo; // 0x110(0x05)
	struct FStatusBoolModifyInfo CanFireInfo; // 0x115(0x05)
	struct FStatusBoolModifyInfo CanReloadInfo; // 0x11a(0x05)
	struct FStatusBoolModifyInfo CanSwitchWeaponInfo; // 0x11f(0x05)
	struct FStatusBoolModifyInfo CanAimOnInfo; // 0x124(0x05)
	struct FStatusBoolModifyInfo CanCrouchInfo; // 0x129(0x05)
	struct FStatusBoolModifyInfo CanProneInfo; // 0x12e(0x05)
	struct FStatusBoolModifyInfo CanOperateInfo; // 0x133(0x05)
	struct FStatusBoolModifyInfo CanUsingItemInfo; // 0x138(0x05)
	struct FStatusBoolModifyInfo CanVaultInfo; // 0x13d(0x05)
	struct FStatusBoolModifyInfo CanDiscardOrEquipWeapon; // 0x142(0x05)
	struct FStatusBoolModifyInfo CanLootingInfo; // 0x147(0x05)
	struct FStatusBoolModifyInfo CanPlayTacticalAction; // 0x14c(0x05)
	struct FStatusBoolModifyInfo CanClimbLadderInfo; // 0x151(0x05)
	struct FStatusBoolModifyInfo CanVehicleInfo; // 0x156(0x05)
	struct FStatusBoolModifyInfo CanUseTelescopeInfo; // 0x15b(0x05)
	struct FStatusBoolModifyInfo CanLeanPeek; // 0x160(0x05)
	struct FStatusBoolModifyInfo CanBeHit; // 0x165(0x05)
	struct FStatusBoolModifyInfo CanWeaponInspectInfo; // 0x16a(0x05)
	char pad_16F[0x1]; // 0x16f(0x01)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StateBoolControlAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_StateBoolControlAction : public UDFMFSMAction {
public:

	enum class EFSMForbidReason ForbidReason; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct TArray<enum class ECharacterStateMask> StateForbidArray; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StatusInterruptAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_StatusInterruptAction : public UDFMFSMAction {
public:

	bool bEnableInterrupt; // 0x110(0x01)
	struct FStatusInterruptInfo InterruptleanPeek; // 0x111(0x03)
	struct FStatusInterruptInfo InterruptZooming; // 0x114(0x03)
	char pad_117[0x1]; // 0x117(0x01)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_StatusRecordAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_StatusRecordAction : public UDFMFSMAction {
public:

	enum class EFSMGamePlayStatusDefine GamePlayStatus; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_TwoHandedGestureAction
// Size: 0x170 (Inherited: 0x110)
class UDFMFSM_TwoHandedGestureAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	float MaxDuration; // 0x120(0x04)
	char pad_124[0x1c]; // 0x124(0x1c)
	struct UAnimMontage* FPP; // 0x140(0x08)
	struct UAnimMontage* TPP; // 0x148(0x08)
	struct UAnimMontage* FppSkillMeshAnim; // 0x150(0x08)
	struct UAnimMontage* TppSkillMeshAnim; // 0x158(0x08)
	struct TArray<struct AGPCommercializationItem*> Items; // 0x160(0x10)

	void OnSkillMeshAnimLoadCompleted(struct TArray<struct FSoftObjectPath> Paths); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.OnSkillMeshAnimLoadCompleted // (Final|Native|Public) // @ game+0x62aa140
	void OnExit3DSafeHouse(bool bEnter); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.OnExit3DSafeHouse // (Final|Native|Public) // @ game+0x62aa0b0
	void OnClientEnd(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.OnClientEnd // (Final|Native|Public) // @ game+0x62a9c70
	void OnAnimLoadCompleted(struct TArray<struct FSoftObjectPath> Paths); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.OnAnimLoadCompleted // (Final|Native|Public) // @ game+0x62a9ae0
	void OnActionSimulateBeingSpectating(bool bEnter); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.OnActionSimulateBeingSpectating // (Final|Native|Public) // @ game+0x62a9a50
	void InterruptAction(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_TwoHandedGestureAction.InterruptAction // (Final|Native|Public) // @ game+0x62a97b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemActionAftercastAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseHoldItemActionAftercastAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemActionCancelAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseHoldItemActionCancelAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemActionCastingAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseHoldItemActionCastingAction : public UDFMFSMAction {
public:

	struct AItemPreviewActor* PreviewActor; // 0x110(0x08)

	void TryCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionCastingAction.TryCancelUseItem // (Final|Native|Public) // @ game+0x62aaf20
	void ServerCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionCastingAction.ServerCancelUseItem // (Final|Native|Public) // @ game+0x62aa620
	void FireButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionCastingAction.FireButtonPressed // (Final|Native|Public) // @ game+0x62a9590
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemActionPrecastAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseHoldItemActionPrecastAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	void UseItemInfoArrived(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionPrecastAction.UseItemInfoArrived // (Final|Native|Private) // @ game+0x62a40a0
	void TryCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionPrecastAction.TryCancelUseItem // (Final|Native|Private) // @ game+0x62ab030
	void ServerCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionPrecastAction.ServerCancelUseItem // (Final|Native|Private) // @ game+0x62aa730
	void ClientPreUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionPrecastAction.ClientPreUseItem // (Final|Native|Private) // @ game+0x62a9480
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemActionUsingAction
// Size: 0x120 (Inherited: 0x110)
class UDFMFSM_UseHoldItemActionUsingAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)
	float Timeout; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)

	void TryCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionUsingAction.TryCancelUseItem // (Final|Native|Private) // @ game+0x62b0850
	void ServerCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseHoldItemActionUsingAction.ServerCancelUseItem // (Final|Native|Private) // @ game+0x62b01d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseHoldItemAllControlAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseHoldItemAllControlAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseItemAllControlAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseItemAllControlAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseItemOrOperateOrRescueAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseItemOrOperateOrRescueAction : public UDFMFSMAction {
public:


	void CancelOperate(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseItemOrOperateOrRescueAction.CancelOperate // (Final|Native|Public) // @ game+0x62ae230
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseSkillCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseSkillCheckAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	void OnBeginUseSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginUseSkill // (Final|Native|Public) // @ game+0x62aee10
	void OnBeginSpecialSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginSpecialSkill // (Final|Native|Public) // @ game+0x62aed00
	void OnBeginRightHandSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginRightHandSkill // (Final|Native|Public) // @ game+0x62aebf0
	void OnBeginLegsSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginLegsSkill // (Final|Native|Public) // @ game+0x62aeae0
	void OnBeginLeftHandSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginLeftHandSkill // (Final|Native|Public) // @ game+0x62ae9d0
	void OnBeginDoubleHandsSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSkillCheckAction.OnBeginDoubleHandsSkill // (Final|Native|Public) // @ game+0x62ae8c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseStarAppAction
// Size: 0x1f0 (Inherited: 0x110)
class UDFMFSM_UseStarAppAction : public UDFMFSMAction {
public:

	char pad_110[0x10]; // 0x110(0x10)
	struct UAnimSequence* GetStarApp; // 0x120(0x08)
	struct UAnimSequence* UseStarApp; // 0x128(0x08)
	struct UAnimSequence* PutStarApp; // 0x130(0x08)
	struct USkeletalMesh* StarAppMesh; // 0x138(0x08)
	struct UAnimSequence* GetStarAppMeshAnim; // 0x140(0x08)
	struct UAnimSequence* UseStarAppMeshAnim; // 0x148(0x08)
	struct UAnimSequence* PutStarAppMeshAnim; // 0x150(0x08)
	struct FVector StarAppPos; // 0x158(0x0c)
	struct FRotator StarAppRot; // 0x164(0x0c)
	/*struct TSoftObjectPtr<UMediaPlayer>*/char MediaPlayer[0x28]; // 0x170(0x28)
	/*struct TSoftObjectPtr<UMediaSource>*/char MediaSource[0x28]; // 0x198(0x28)
	struct FTimerHandle EndRaiseWatchFppAnimHandle; // 0x1c0(0x08)
	struct FTimerHandle EquipAnimHandle; // 0x1c8(0x08)
	struct UGPSkeletalMeshComponent* StarAppMeshComponent; // 0x1d0(0x08)
	char pad_1D8[0x8]; // 0x1d8(0x08)
	struct UMediaPlayer* MediaPlayerPtr; // 0x1e0(0x08)
	struct UMediaSource* MediaSourcePtr; // 0x1e8(0x08)

	void OnMediaSourceLoad(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMFSM_UseStarAppAction.OnMediaSourceLoad // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62af850
	void OnMediaPlayerLoad(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMFSM_UseStarAppAction.OnMediaPlayerLoad // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62af690
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseStarAppCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseStarAppCheckAction : public UDFMFSMAction {
public:

	bool bCheckStartUseStarApp; // 0x110(0x01)
	bool bCheckCancelUseStarApp; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryUseStarApp(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseStarAppCheckAction.TryUseStarApp // (Final|Native|Public) // @ game+0x62b0a70
	void TryCancelStarApp(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseStarAppCheckAction.TryCancelStarApp // (Final|Native|Public) // @ game+0x62b0630
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseStarAppInRegNameAction
// Size: 0x1e0 (Inherited: 0x110)
class UDFMFSM_UseStarAppInRegNameAction : public UDFMFSMAction {
public:

	char pad_110[0x10]; // 0x110(0x10)
	struct UAnimSequence* GetStarApp; // 0x120(0x08)
	struct UAnimSequence* UseStarApp; // 0x128(0x08)
	struct UAnimSequence* PutStarApp; // 0x130(0x08)
	struct USkeletalMesh* StarAppMesh; // 0x138(0x08)
	struct UAnimSequence* GetStarAppMeshAnim; // 0x140(0x08)
	struct UAnimSequence* UseStarAppMeshAnim; // 0x148(0x08)
	struct UAnimSequence* PutStarAppMeshAnim; // 0x150(0x08)
	struct FVector StarAppPos; // 0x158(0x0c)
	struct FRotator StarAppRot; // 0x164(0x0c)
	/*struct TSoftObjectPtr<UMediaPlayer>*/char MediaPlayer[0x28]; // 0x170(0x28)
	/*struct TSoftObjectPtr<UMediaSource>*/char MediaSource[0x28]; // 0x198(0x28)
	struct UGPSkeletalMeshComponent* StarAppMeshComponent; // 0x1c0(0x08)
	char pad_1C8[0x8]; // 0x1c8(0x08)
	struct UMediaPlayer* MediaPlayerPtr; // 0x1d0(0x08)
	struct UMediaSource* MediaSourcePtr; // 0x1d8(0x08)

	void OnMediaSourceLoad(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMFSM_UseStarAppInRegNameAction.OnMediaSourceLoad // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62af930
	void OnMediaPlayerLoad(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.DFMFSM_UseStarAppInRegNameAction.OnMediaPlayerLoad // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x62af770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseTelescopeAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseTelescopeAction : public UDFMFSMAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseTelescopeCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_UseTelescopeCheckAction : public UDFMFSMAction {
public:

	bool bCheckStartUseTelescope; // 0x110(0x01)
	bool bCheckCancelUseTelescope; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void TryUseTelescope(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseTelescopeCheckAction.TryUseTelescope // (Final|Native|Public) // @ game+0x62b0b80
	void TryCancelTelescope(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseTelescopeCheckAction.TryCancelTelescope // (Final|Native|Public) // @ game+0x62b0740
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UsingItemAction
// Size: 0x1d0 (Inherited: 0x110)
class UDFMFSM_UsingItemAction : public UDFMFSMAction {
public:

	char pad_110[0x38]; // 0x110(0x38)
	struct FRepItemInfo RepUseItemInfo; // 0x148(0x70)
	char pad_1B8[0x18]; // 0x1b8(0x18)

	void SwitchWeaponButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.SwitchWeaponButtonPressed // (Final|Native|Protected) // @ game+0x62b0520
	void SprintButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.SprintButtonPressed // (Final|Native|Protected) // @ game+0x62b0410
	void ServerTryCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.ServerTryCancelUseItem // (Final|Native|Protected) // @ game+0x62b02e0
	void ProcessOnEnter(); // Function DFMGameplay.DFMFSM_UsingItemAction.ProcessOnEnter // (Final|Native|Protected) // @ game+0x62b01b0
	void ProcessClientInterupt(enum class ECancelUseItemReason reason); // Function DFMGameplay.DFMFSM_UsingItemAction.ProcessClientInterupt // (Final|Native|Protected) // @ game+0x62b0130
	void OnUseItemInfoArrived(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.OnUseItemInfoArrived // (Final|Native|Protected) // @ game+0x62aff90
	void OnServerPlayerSettlement(enum class EMatchOverReason MatchOverReason, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.DFMFSM_UsingItemAction.OnServerPlayerSettlement // (Final|Native|Protected) // @ game+0x62afed0
	void OnServerNotifyRemoveEquip(enum class EEquipmentType InType); // Function DFMGameplay.DFMFSM_UsingItemAction.OnServerNotifyRemoveEquip // (Final|Native|Protected) // @ game+0x62afe50
	void OnServerNotifyAddEquip(enum class EEquipmentType InType); // Function DFMGameplay.DFMFSM_UsingItemAction.OnServerNotifyAddEquip // (Final|Native|Protected) // @ game+0x35e5a40
	void OnProcessUsingItem(); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessUsingItem // (Final|Native|Protected) // @ game+0x62afe30
	void OnProcessUseItemAnim(); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessUseItemAnim // (Final|Native|Protected) // @ game+0x62afe10
	void OnProcessSingleAudio(uint64_t ItemID, enum class EUseItemAnimType AnimType, bool bCallFromAsyncCallback); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessSingleAudio // (Final|Native|Protected) // @ game+0x62afd00
	void OnProcessPeriodItem(); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessPeriodItem // (Final|Native|Protected) // @ game+0x62afce0
	void OnProcessLoopAudio(uint64_t ItemID, float LogicTime, bool bCallFromAsyncCallback); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessLoopAudio // (Final|Native|Protected) // @ game+0x62afbd0
	void OnProcessGetWeapon(float GetWeaponTime, float blendIn, float blendOut); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessGetWeapon // (Final|Native|Protected) // @ game+0x62afac0
	void OnProcessAnim(); // Function DFMGameplay.DFMFSM_UsingItemAction.OnProcessAnim // (Final|Native|Protected) // @ game+0x62afaa0
	void OnClientCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.OnClientCancelUseItem // (Final|Native|Protected) // @ game+0x62af030
	void OnActionSimulateBeingSpectating(bool bEnter); // Function DFMGameplay.DFMFSM_UsingItemAction.OnActionSimulateBeingSpectating // (Final|Native|Protected) // @ game+0x62ae830
	bool IsServerOrStandalone(); // Function DFMGameplay.DFMFSM_UsingItemAction.IsServerOrStandalone // (Final|Native|Protected) // @ game+0x62ae7e0
	void InterruptUseItem(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_UsingItemAction.InterruptUseItem // (Final|Native|Protected) // @ game+0x62ae6e0
	void FireButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.FireButtonPressed // (Final|Native|Protected) // @ game+0x62ae5b0
	void CurrentWeaponChanged(struct AWeaponBase* LastActiveWeapon, struct AWeaponBase* CurrentActiveWeapon); // Function DFMGameplay.DFMFSM_UsingItemAction.CurrentWeaponChanged // (Final|Native|Protected) // @ game+0x62ae4d0
	void ClientPreUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.ClientPreUseItem // (Final|Native|Protected) // @ game+0x62ae3c0
	void CheckInteruptOnPronePoseMove(float Value); // Function DFMGameplay.DFMFSM_UsingItemAction.CheckInteruptOnPronePoseMove // (Final|Native|Protected) // @ game+0x62ae340
	void BothTryCancelUseItem(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.BothTryCancelUseItem // (Final|Native|Protected) // @ game+0x62ae120
	void AimButtonPressed(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UsingItemAction.AimButtonPressed // (Final|Native|Protected) // @ game+0x62ae010
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_VaultAndClimbCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_VaultAndClimbCheckAction : public UDFMFSMAction {
public:

	bool CheckBeginVault; // 0x110(0x01)
	bool CheckEndVault; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void OnEndVaultAndClimb(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_VaultAndClimbCheckAction.OnEndVaultAndClimb // (Final|Native|Public) // @ game+0x62af580
	void OnBeginVaultAndClimb(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_VaultAndClimbCheckAction.OnBeginVaultAndClimb // (Final|Native|Public) // @ game+0x62aef20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_VaultAndClimbControllAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_VaultAndClimbControllAction : public UDFMFSMAction {
public:

	char pad_110[0x8]; // 0x110(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_VehicleMachineGunAction
// Size: 0x150 (Inherited: 0x110)
class UDFMFSM_VehicleMachineGunAction : public UDFMFSMAction {
public:

	struct FGameplayTag EventTag; // 0x110(0x08)
	struct FVector2D RotationThresholdYaw; // 0x118(0x08)
	float MachiGunRotSpeed; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct APawn* DiscActor; // 0x128(0x08)
	struct URotatingMovementComponent* DiscRotMoveCom; // 0x130(0x08)
	char pad_138[0x18]; // 0x138(0x18)

	void TryLeaveMiniGun(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_VehicleMachineGunAction.TryLeaveMiniGun // (Final|Native|Public) // @ game+0x62b0960
	void LeaveMiniGun(); // Function DFMGameplay.DFMFSM_VehicleMachineGunAction.LeaveMiniGun // (Final|Native|Public) // @ game+0x62ae810
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_WaitingStartSOLAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_WaitingStartSOLAction : public UDFMFSMAction {
public:


	void Show3PPlayer(); // Function DFMGameplay.DFMFSM_WaitingStartSOLAction.Show3PPlayer // (Final|Native|Public) // @ game+0x62b03f0
	void Hide3PPlayer(); // Function DFMGameplay.DFMFSM_WaitingStartSOLAction.Hide3PPlayer // (Final|Native|Public) // @ game+0x62ae6c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_WeaponBipodDeployAction
// Size: 0x380 (Inherited: 0x110)
class UDFMFSM_WeaponBipodDeployAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	struct TArray<enum class EFSMCharacterState> InterruptExitNoAnimStates; // 0x120(0x10)
	char pad_130[0x228]; // 0x130(0x228)
	struct TWeakObjectPtr<struct AWeaponBase> CacheWeapon; // 0x358(0x08)
	char pad_360[0x20]; // 0x360(0x20)

	void PlayDeployAnim(bool bUp); // Function DFMGameplay.DFMFSM_WeaponBipodDeployAction.PlayDeployAnim // (Final|Native|Public) // @ game+0x62b00a0
	void OnMovingChanged(); // Function DFMGameplay.DFMFSM_WeaponBipodDeployAction.OnMovingChanged // (Final|Native|Public) // @ game+0x88f4d0
	void InterruptWeaponBipodDeploy(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_WeaponBipodDeployAction.InterruptWeaponBipodDeploy // (Final|Native|Public) // @ game+0x62ae760
	void DelayGiveMoveInput(); // Function DFMGameplay.DFMFSM_WeaponBipodDeployAction.DelayGiveMoveInput // (Final|Native|Public) // @ game+0x62ae590
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_WeaponInspectAction
// Size: 0x128 (Inherited: 0x110)
class UDFMFSM_WeaponInspectAction : public UDFMFSMAction {
public:

	struct TArray<enum class EFSMCharacterState> InterruptStates; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	void SetDuration(float InDuration); // Function DFMGameplay.DFMFSM_WeaponInspectAction.SetDuration // (Final|Native|Public) // @ game+0x62b4410
	void OnReceiveWeaponEvent(char Event); // Function DFMGameplay.DFMFSM_WeaponInspectAction.OnReceiveWeaponEvent // (Final|Native|Public) // @ game+0x62b42e0
	void InterruptWeaponInspect(enum class EFSMCharacterState State); // Function DFMGameplay.DFMFSM_WeaponInspectAction.InterruptWeaponInspect // (Final|Native|Public) // @ game+0x62b3f40
	void ClientRestartWeaponInspect(); // Function DFMGameplay.DFMFSM_WeaponInspectAction.ClientRestartWeaponInspect // (Final|Native|Public) // @ game+0x62b3670
	void ClientExitAction(); // Function DFMGameplay.DFMFSM_WeaponInspectAction.ClientExitAction // (Final|Native|Public) // @ game+0x62b3540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_WeaponInspectCheckAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_WeaponInspectCheckAction : public UDFMFSMAction {
public:


	void StartWeaponInspect(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_WeaponInspectCheckAction.StartWeaponInspect // (Final|Native|Public) // @ game+0x62b4620
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ZiplineCheckAction
// Size: 0x118 (Inherited: 0x110)
class UDFMFSM_ZiplineCheckAction : public UDFMFSMAction {
public:

	bool bCheckBeginZipline; // 0x110(0x01)
	bool bCheckEndZipline; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	void OnEndZipline(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ZiplineCheckAction.OnEndZipline // (Final|Native|Public) // @ game+0x62b41d0
	void OnBeginZipline(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_ZiplineCheckAction.OnBeginZipline // (Final|Native|Public) // @ game+0x62b40c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_ZiplineControlAction
// Size: 0x130 (Inherited: 0x110)
class UDFMFSM_ZiplineControlAction : public UDFMFSMAction {
public:

	char pad_110[0x20]; // 0x110(0x20)

	void ResetStateAfterZiplineStartAnim(); // Function DFMGameplay.DFMFSM_ZiplineControlAction.ResetStateAfterZiplineStartAnim // (Final|Native|Public) // @ game+0x62b43f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.UDFMFSM_SkillAimingCheckAction
// Size: 0x118 (Inherited: 0x110)
class UUDFMFSM_SkillAimingCheckAction : public UDFMFSMAction {
public:

	bool SkillAnimCheckEnter; // 0x110(0x01)
	bool SkillAnimCheckExit; // 0x111(0x01)
	char pad_112[0x6]; // 0x112(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SelectableMapIconController
// Size: 0x2c8 (Inherited: 0x290)
class USelectableMapIconController : public UMapIconViewController {
public:

	char pad_290[0x38]; // 0x290(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapItemRangeViewController
// Size: 0x298 (Inherited: 0x290)
class UMapItemRangeViewController : public UMapIconViewController {
public:

	char pad_290[0x8]; // 0x290(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityADSMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class UAbilityADSMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityMapIconController
// Size: 0x2a0 (Inherited: 0x290)
class UAbilityMapIconController : public UMapIconViewController {
public:

	enum class ESOLUIIconType IconType; // 0x290(0x01)
	bool bNeedRotate; // 0x291(0x01)
	char pad_292[0x2]; // 0x292(0x02)
	float IconScale; // 0x294(0x04)
	char pad_298[0x8]; // 0x298(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityRebornFlagMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class UAbilityRebornFlagMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AbilityRobotMapIconViewController
// Size: 0x290 (Inherited: 0x290)
class UAbilityRobotMapIconViewController : public UMapIconViewController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AdjutantLocationViewController
// Size: 0x2b0 (Inherited: 0x290)
class UAdjutantLocationViewController : public UMapIconViewController {
public:

	char pad_290[0x20]; // 0x290(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabCharacterIconViewController
// Size: 0x2d0 (Inherited: 0x290)
class UAILabCharacterIconViewController : public UMapIconViewController {
public:

	struct FString DisplayName; // 0x290(0x10)
	uint64_t PlayerUin; // 0x2a0(0x08)
	int32_t PlayerHP; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	uint64_t PlayerWeaponId; // 0x2b0(0x08)
	uint64_t PlayerArmorId; // 0x2b8(0x08)
	bool isMe; // 0x2c0(0x01)
	bool isOtherPlayer; // 0x2c1(0x01)
	bool isAILabAI; // 0x2c2(0x01)
	bool isBTLabAI; // 0x2c3(0x01)
	bool isBossAI; // 0x2c4(0x01)
	bool isOtherNPCAI; // 0x2c5(0x01)
	char pad_2C6[0xa]; // 0x2c6(0x0a)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AmmoBoxMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class UAmmoBoxMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FloorVolumeMapIconViewController
// Size: 0x2b0 (Inherited: 0x290)
class UFloorVolumeMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x20]; // 0x290(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelicopterDeterrenceIconViewController
// Size: 0x290 (Inherited: 0x290)
class UHelicopterDeterrenceIconViewController : public UMapIconViewController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapLineViewController
// Size: 0x2d0 (Inherited: 0x290)
class UMapLineViewController : public UMapIconViewController {
public:

	char pad_290[0x40]; // 0x290(0x40)

	void InitStartAndEndLoc(struct FVector& InStartLoc, struct FVector& InEndLoc); // Function DFMGameplay.MapLineViewController.InitStartAndEndLoc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6399790
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MapPlayer2SignLineController
// Size: 0x2c0 (Inherited: 0x290)
class UMapPlayer2SignLineController : public UMapIconViewController {
public:

	char pad_290[0x30]; // 0x290(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MissionMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class UMissionMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerMarkingBaseIconViewController
// Size: 0x298 (Inherited: 0x290)
class UPlayerMarkingBaseIconViewController : public UMapIconViewController {
public:

	struct AGPMarkerManager* MarkerManager; // 0x290(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RevengeMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class URevengeMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	void TestUpdate(); // Function DFMGameplay.RevengeMapIconViewController.TestUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x63f8420
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SceneWeaponMapIconViewController
// Size: 0x2e0 (Inherited: 0x290)
class USceneWeaponMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x28]; // 0x290(0x28)
	float AdditionIconRotateAngle; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct AGPSceneActorReplicator* GPSceneActorReplicator; // 0x2c0(0x08)
	char pad_2C8[0x18]; // 0x2c8(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventMapIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class USOLEventMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLEventRangeViewController
// Size: 0x2a0 (Inherited: 0x290)
class USOLEventRangeViewController : public UMapIconViewController {
public:

	char pad_290[0x10]; // 0x290(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SupportPointMapIconViewController
// Size: 0x2c0 (Inherited: 0x290)
class USupportPointMapIconViewController : public UMapIconViewController {
public:

	char pad_290[0x30]; // 0x290(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleMapIconViewController
// Size: 0x2e0 (Inherited: 0x290)
class UVehicleMapIconViewController : public UMapIconViewController {
public:

	struct FSceneActorInfo SceneActorInfo; // 0x290(0x18)
	char pad_2A8[0x24]; // 0x2a8(0x24)
	float AdditionIconRotateAngle; // 0x2cc(0x04)
	char pad_2D0[0x8]; // 0x2d0(0x08)
	struct AGPSceneActorReplicator* SceneActorReplicator; // 0x2d8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBlueprintIconViewController
// Size: 0x2a0 (Inherited: 0x290)
class UWeaponBlueprintIconViewController : public UMapIconViewController {
public:

	struct ABlueprintPlunder* BlueprintPlunder; // 0x290(0x08)
	struct AGPSceneActorReplicator* GPSceneActorReplicator; // 0x298(0x08)

	void OnBlueprintPlunderInfoUpdate(struct FBlueprintPlunderInfo& BlueprintPlunderInfo); // Function DFMGameplay.WeaponBlueprintIconViewController.OnBlueprintPlunderInfoUpdate // (Final|Native|Public|HasOutParms) // @ game+0x64262b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ZiplineMapIconViewController
// Size: 0x290 (Inherited: 0x290)
class UZiplineMapIconViewController : public UMapIconViewController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorBaseExecutor
// Size: 0xe0 (Inherited: 0xd0)
class UInteractorBaseExecutor : public UInteractExecutor {
public:

	struct FGameplayTag TriggerTag; // 0xd0(0x08)
	struct FName DetailRelevantCompName; // 0xd8(0x08)

	bool IsNeedTriggerBySkill(struct AActor* InteractorBase); // Function DFMGameplay.InteractorBaseExecutor.IsNeedTriggerBySkill // (Native|Public) // @ game+0x6356b50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractExecutor_ExitPayment
// Size: 0xd0 (Inherited: 0xd0)
class UInteractExecutor_ExitPayment : public UInteractExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorClimbLadderExecutor
// Size: 0xd0 (Inherited: 0xd0)
class UInteractorClimbLadderExecutor : public UInteractExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_ContractNPC
// Size: 0xd0 (Inherited: 0xd0)
class UInteractorExecutor_ContractNPC : public UInteractExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_ShopStation
// Size: 0xd0 (Inherited: 0xd0)
class UInteractorExecutor_ShopStation : public UInteractExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_Zipline
// Size: 0xd0 (Inherited: 0xd0)
class UInteractorExecutor_Zipline : public UInteractExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorPortableAmmoExecutor
// Size: 0xe0 (Inherited: 0xd0)
class UInteractorPortableAmmoExecutor : public UInteractExecutor {
public:

	struct FGameplayTag PortableAmmoTag1; // 0xd0(0x08)
	struct FGameplayTag PortableAmmoTag2; // 0xd8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSafeBoxExecutor
// Size: 0x100 (Inherited: 0xd0)
class UInteractorSafeBoxExecutor : public UInteractExecutor {
public:

	struct AActor* CachedSafeBoxInteractor; // 0xd0(0x08)
	/*struct TSoftObjectPtr<UObject>*/char AlreadySearchedSoftIcon[0x28]; // 0xd8(0x28)

	void OpenUIForBP(int32_t InUIType, struct FName InUIName); // Function DFMGameplay.InteractorSafeBoxExecutor.OpenUIForBP // (Final|Native|Protected|BlueprintCallable) // @ game+0x636cf50
	void OpenBox(struct ACHARACTER* OperatorCharacter, struct AActor* InteractorBase); // Function DFMGameplay.InteractorSafeBoxExecutor.OpenBox // (Final|Native|Public|BlueprintCallable) // @ game+0x636ce90
	bool IsUILoaded(); // Function DFMGameplay.InteractorSafeBoxExecutor.IsUILoaded // (Final|Native|Public|BlueprintCallable) // @ game+0x636cad0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSinglePickupExecutor
// Size: 0x100 (Inherited: 0xd0)
class UInteractorSinglePickupExecutor : public UInteractExecutor {
public:

	struct FText BrunchItemsTitleText; // 0xd0(0x18)
	struct AActor* InteractorSinglePickup; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction
// Size: 0x70 (Inherited: 0x70)
class UMotionAction : public UAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.UnmannedAerialVehicleCruiseController
// Size: 0x4c0 (Inherited: 0x4c0)
class AUnmannedAerialVehicleCruiseController : public AAerialVehicleController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.UnmannedAerialVehicleTreatmentController
// Size: 0x4f8 (Inherited: 0x4c0)
class AUnmannedAerialVehicleTreatmentController : public AAerialVehicleController {
public:

	struct TArray<uint32_t> AddBuffIDs; // 0x4c0(0x10)
	struct TArray<uint32_t> RemoveBuffIds; // 0x4d0(0x10)
	float RestoreHealth; // 0x4e0(0x04)
	float RestoreTime; // 0x4e4(0x04)
	uint32_t MaxRestoreNum; // 0x4e8(0x04)
	float MaxTreatmentDistance; // 0x4ec(0x04)
	bool bExTreatment; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	uint32_t CurrentRestoreNum; // 0x4f4(0x04)

	bool UseTreatment(); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.UseTreatment // (Final|Native|Public) // @ game+0x6422780
	void OnUseUp(); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.OnUseUp // (Native|Event|Public|BlueprintEvent) // @ game+0x64225d0
	int32_t GetResidueDegree(); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.GetResidueDegree // (Final|Native|Public|BlueprintCallable) // @ game+0x6421e70
	void ExTreatment(); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.ExTreatment // (Final|Native|Public|BlueprintCallable) // @ game+0x64218c0
	bool ExRestoreHealth(struct ADFMCharacter* TherapeuticGoal, float Health); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.ExRestoreHealth // (Final|Native|Public) // @ game+0x6421800
	bool ExAddOrRemoveBuff(struct ADFMCharacter* TherapeuticGoal); // Function DFMGameplay.UnmannedAerialVehicleTreatmentController.ExAddOrRemoveBuff // (Final|Native|Public) // @ game+0x6421770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterLODComponent
// Size: 0x288 (Inherited: 0x1a8)
class UCharacterLODComponent : public UAICharacterSignificanceComponentBase {
public:

	struct UClass* ClientFeatureGraph; // 0x1a8(0x08)
	struct UClass* DSFeatureGraph; // 0x1b0(0x08)
	struct FName ResourcePoolName; // 0x1b8(0x08)
	struct UClass* FeatureGraph; // 0x1c0(0x08)
	char pad_1C8[0x8]; // 0x1c8(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x1d0(0x08)
	char pad_1D8[0x3c]; // 0x1d8(0x3c)
	int32_t CurrentDSSolution; // 0x214(0x04)
	char pad_218[0x70]; // 0x218(0x70)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIFogTriggerZone
// Size: 0x3f8 (Inherited: 0x3f8)
class AAIFogTriggerZone : public ATriggerZone {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIHelicopterDramaArea
// Size: 0x570 (Inherited: 0x4d8)
class AAIHelicopterDramaArea : public ADramaArea {
public:

	struct TArray<struct FMovePathPointHelicopterExData> PathPointHelicopterExData; // 0x4d8(0x10)
	struct TMap<int32_t, struct FMovePathSectionHelicopterData> PathSectionHelicopterData; // 0x4e8(0x50)
	struct TArray<struct FTransform> CrashPointsData; // 0x538(0x10)
	struct TArray<struct FCrashPointData> HelicopterCrashPointsData; // 0x548(0x10)
	float CrashPointPredictTime; // 0x558(0x04)
	bool bRaidHelicopter; // 0x55c(0x01)
	char pad_55D[0x3]; // 0x55d(0x03)
	struct UClass* OverrideHelicopter; // 0x560(0x08)
	struct UClass* OverrideHelicopterHD; // 0x568(0x08)

	struct AActor* SpawnHelicopter(struct UClass* TemplateBP, struct FTransform Transform); // Function DFMGameplay.AIHelicopterDramaArea.SpawnHelicopter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x61cc720
	void ReBegin(); // Function DFMGameplay.AIHelicopterDramaArea.ReBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x61cc620
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaScript
// Size: 0x568 (Inherited: 0x4d8)
class ADramaScript : public ADramaArea {
public:

	struct UDataTable* AIDialogDataTable; // 0x4d8(0x08)
	struct FString DramaKey; // 0x4e0(0x10)
	float TriggerInteval; // 0x4f0(0x04)
	bool Oneshot; // 0x4f4(0x01)
	char pad_4F5[0x3]; // 0x4f5(0x03)
	float CoolingDown; // 0x4f8(0x04)
	bool Wait4Position; // 0x4fc(0x01)
	char pad_4FD[0x3]; // 0x4fd(0x03)
	struct ADramaTrigger* DramaTrigger; // 0x500(0x08)
	bool DramaSignaled; // 0x508(0x01)
	char pad_509[0x3]; // 0x509(0x03)
	float RemainingCD; // 0x50c(0x04)
	struct FString DebugString; // 0x510(0x10)
	char pad_520[0x48]; // 0x520(0x48)

	bool GetRolePositionAndRotation(struct AAIController* AIController, struct FVector& Positon, struct FRotator& Yaw); // Function DFMGameplay.DramaScript.GetRolePositionAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x630f140
	int32_t GetRoleCount(); // Function DFMGameplay.DramaScript.GetRoleCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x630f110
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MultiAIDramaArea
// Size: 0x508 (Inherited: 0x4d8)
class AMultiAIDramaArea : public ADramaArea {
public:

	struct TArray<struct FMultiDramaActingAIInfo> ActingAICtrlsInfo; // 0x4d8(0x10)
	/*struct TArray<struct TSoftObjectPtr<UBehaviorTree>>*/char LinkedBTAssets[0x10]; // 0x4e8(0x10)
	int32_t MaxInteractAINumber; // 0x4f8(0x04)
	int32_t CurrentDecoratorIdx; // 0x4fc(0x04)
	char pad_500[0x8]; // 0x500(0x08)

	void UnbindAllAI(); // Function DFMGameplay.MultiAIDramaArea.UnbindAllAI // (Final|Native|Public|BlueprintCallable) // @ game+0x63aa950
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PawnKinematic
// Size: 0xa0 (Inherited: 0x30)
class UPawnKinematic : public UKinematic {
public:

	struct APawn* Pawn; // 0x30(0x08)
	struct TArray<struct UKinematic*> Neighbors; // 0x38(0x10)
	char pad_48[0x10]; // 0x48(0x10)
	struct UAIHelicopterSteeringComponent* SteeringComponent; // 0x58(0x08)
	char pad_60[0x40]; // 0x60(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Seek
// Size: 0x58 (Inherited: 0x48)
class USeek : public USteeringBase {
public:

	float TimeToTarget; // 0x48(0x04)
	char pad_4C[0xc]; // 0x4c(0x0c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Flee
// Size: 0x58 (Inherited: 0x48)
class UFlee : public USteeringBase {
public:

	char pad_48[0x10]; // 0x48(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Arrive
// Size: 0x68 (Inherited: 0x48)
class UArrive : public USteeringBase {
public:

	bool bArrive2D; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float TargetRadius; // 0x4c(0x04)
	float SlowRadius; // 0x50(0x04)
	float TimeToTarget; // 0x54(0x04)
	char pad_58[0x10]; // 0x58(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Align3D
// Size: 0x70 (Inherited: 0x48)
class UAlign3D : public USteeringBase {
public:

	float TargetRadius; // 0x48(0x04)
	float SlowRadius; // 0x4c(0x04)
	float TimeToTarget; // 0x50(0x04)
	char pad_54[0x1c]; // 0x54(0x1c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CollisonAvoidance
// Size: 0x60 (Inherited: 0x48)
class UCollisonAvoidance : public USteeringBase {
public:

	char pad_48[0x18]; // 0x48(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.KeepAltitude
// Size: 0x60 (Inherited: 0x48)
class UKeepAltitude : public USteeringBase {
public:

	float MinAltitude; // 0x48(0x04)
	float MaxAltitude; // 0x4c(0x04)
	float MaxVerticalSpeed; // 0x50(0x04)
	float TargetRadius; // 0x54(0x04)
	float SlowRadius; // 0x58(0x04)
	float TimeToTarget; // 0x5c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BlendSteering
// Size: 0x58 (Inherited: 0x48)
class UBlendSteering : public USteeringBase {
public:

	struct TArray<struct USteeringBase*> SteeringBehaviors; // 0x48(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PropertySteering
// Size: 0x58 (Inherited: 0x48)
class UPropertySteering : public USteeringBase {
public:

	struct TArray<struct USteeringBase*> SteeringBehaviors; // 0x48(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabControllerBase
// Size: 0xbd8 (Inherited: 0xb98)
class AAILabControllerBase : public ADFMPlayerController {
public:

	float AILabDamageScalerToPlayer; // 0xb98(0x04)
	char pad_B9C[0x21]; // 0xb9c(0x21)
	bool IsActive; // 0xbbd(0x01)
	char pad_BBE[0x1a]; // 0xbbe(0x1a)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAutoTestController
// Size: 0xba0 (Inherited: 0xb98)
class ADFMAutoTestController : public ADFMPlayerController {
public:

	struct ADFMCharacter* DFMCharacter; // 0xb98(0x08)

	void ToggleSprint(bool Sprint); // Function DFMGameplay.DFMAutoTestController.ToggleSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x626db80
	void ToggleSlientWalk(bool Walk); // Function DFMGameplay.DFMAutoTestController.ToggleSlientWalk // (Final|Native|Public|BlueprintCallable) // @ game+0x626daf0
	void ToggleProne(bool Prone); // Function DFMGameplay.DFMAutoTestController.ToggleProne // (Final|Native|Public|BlueprintCallable) // @ game+0x626da60
	void ToggleCrouch(bool Crouch); // Function DFMGameplay.DFMAutoTestController.ToggleCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x626d9d0
	void Shoot(); // Function DFMGameplay.DFMAutoTestController.Shoot // (Final|Native|Public|BlueprintCallable) // @ game+0x626d8e0
	void Reborn(struct FTransform RebornLoc); // Function DFMGameplay.DFMAutoTestController.Reborn // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x626d6e0
	void MoveForward(float Value); // Function DFMGameplay.DFMAutoTestController.MoveForward // (Final|Native|Public|BlueprintCallable) // @ game+0x626ca70
	bool IsAlive(); // Function DFMGameplay.DFMAutoTestController.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x626ca40
	void FaceTo(struct FVector AimLoc); // Function DFMGameplay.DFMAutoTestController.FaceTo // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x626c8f0
	bool EquipItem(struct FString ItemID, enum class EEquipmentType Type); // Function DFMGameplay.DFMAutoTestController.EquipItem // (Final|Native|Public|BlueprintCallable) // @ game+0x626c790
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFObserverPlayerController
// Size: 0xc08 (Inherited: 0xb98)
class ADFObserverPlayerController : public ADFMPlayerController {
public:

	struct UOBMatchInfoStatComponent* OBMatchInfoStatComp; // 0xb98(0x08)
	struct UOBInventoryManager* OBInventoryManager; // 0xba0(0x08)
	struct UClass* HUDClass; // 0xba8(0x08)
	float ObserverPawnTickRate; // 0xbb0(0x04)
	struct FVector OBPawnSpawnStartLocOffset; // 0xbb4(0x0c)
	struct FRotator OBPawnSpawnStartRotOffset; // 0xbc0(0x0c)
	struct FVector OBFreeCameraLocOffset; // 0xbcc(0x0c)
	struct FRotator OBFreeCameraRotOffset; // 0xbd8(0x0c)
	char pad_BE4[0x4]; // 0xbe4(0x04)
	struct FText TeamNamePrefix; // 0xbe8(0x18)
	float TickElapsedTime; // 0xc00(0x04)
	char pad_C04[0x4]; // 0xc04(0x04)

	void UpdateObserverPawnTransform(float DeltaSeconds); // Function DFMGameplay.DFObserverPlayerController.UpdateObserverPawnTransform // (Final|Native|Public) // @ game+0x630bdc0
	void SetOBPlayerAllocatedExits(uint64_t OBPlayerUin); // Function DFMGameplay.DFObserverPlayerController.SetOBPlayerAllocatedExits // (Final|Native|Public|Const) // @ game+0x630bc90
	void ServerOBSpecificPlayerByUin(uint64_t PlayerUin); // Function DFMGameplay.DFObserverPlayerController.ServerOBSpecificPlayerByUin // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x630baa0
	void ServerOBSpecificPlayerByGUID(uint64_t PlayerGUID); // Function DFMGameplay.DFObserverPlayerController.ServerOBSpecificPlayerByGUID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x630ba10
	void ServerEnterFreeCamera(struct FTransform TargetTransform); // Function DFMGameplay.DFObserverPlayerController.ServerEnterFreeCamera // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults) // @ game+0x630b940
	void OnSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.DFObserverPlayerController.OnSeamlessTravelEnd // (Final|Native|Public) // @ game+0x630b680
	struct AGPCharacter* GetPlayerCharacterByUin(uint64_t Uin); // Function DFMGameplay.DFObserverPlayerController.GetPlayerCharacterByUin // (Final|Native|Public|Const) // @ game+0x630b260
	void EnterFreeCamera(); // Function DFMGameplay.DFObserverPlayerController.EnterFreeCamera // (Final|Native|Public) // @ game+0x630b0b0
	void ClientStartOBPlayer(uint64_t PlayerUin); // Function DFMGameplay.DFObserverPlayerController.ClientStartOBPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x630b020
	void ClientShowTeamInfo(); // Function DFMGameplay.DFObserverPlayerController.ClientShowTeamInfo // (Final|Native|Public|Const) // @ game+0x630b000
	void ClientShowPlayerMarker(); // Function DFMGameplay.DFObserverPlayerController.ClientShowPlayerMarker // (Final|Native|Public|Const) // @ game+0x630afe0
	void ClientShowOutLineEffect(); // Function DFMGameplay.DFObserverPlayerController.ClientShowOutLineEffect // (Final|Native|Public|Const) // @ game+0x630afc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SafeHousePlayerController
// Size: 0xc18 (Inherited: 0xb98)
class ASafeHousePlayerController : public ADFMPlayerController {
public:

	struct UClass* DefaultCharacterClass; // 0xb98(0x08)
	struct TMap<enum class ESafeHouseHUDMode, struct UClass*> HUDModeMapping; // 0xba0(0x50)
	bool bKeepLastHUD; // 0xbf0(0x01)
	enum class ESafeHouseHUDMode CurrentHUDMode; // 0xbf1(0x01)
	char pad_BF2[0x2]; // 0xbf2(0x02)
	/*struct FDelegate*/char OnPreload3DSafeHouseDone[0x10]; // 0xbf4(0x10)
	char pad_C04[0x14]; // 0xc04(0x14)

	void StartPreload3DSafeHouse(struct FVector DefaultLoc, enum class EOpenWorldStreamingImportance Importance, float Timeout); // Function DFMGameplay.SafeHousePlayerController.StartPreload3DSafeHouse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x63f8310
	bool SpawnDefaultCharacter(); // Function DFMGameplay.SafeHousePlayerController.SpawnDefaultCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x63f82e0
	void SetSafeHouseHUDMode(enum class ESafeHouseHUDMode SafeHouseHUDMode, bool bForce); // Function DFMGameplay.SafeHousePlayerController.SetSafeHouseHUDMode // (Final|Native|Public|BlueprintCallable) // @ game+0x63f8210
	void OnPreload3DSafeHousePercent(int32_t Percentage); // Function DFMGameplay.SafeHousePlayerController.OnPreload3DSafeHousePercent // (Final|Native|Protected) // @ game+0x63f8070
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AILabPlayerAIController
// Size: 0xfb0 (Inherited: 0xf90)
class AAILabPlayerAIController : public ADFMAIController {
public:

	struct UAILabAIJobManagerComponent* OwnJobManagerComp; // 0xf90(0x08)
	bool IsActive; // 0xf98(0x01)
	char pad_F99[0x17]; // 0xf99(0x17)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIControllerDerived
// Size: 0xf90 (Inherited: 0xf90)
class ADFMAIControllerDerived : public ADFMAIController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIPlayerController
// Size: 0x1130 (Inherited: 0xf90)
class ADFMAIPlayerController : public ADFMAIController {
public:

	bool AllowPartialPath; // 0xf90(0x01)
	char pad_F91[0x3]; // 0xf91(0x03)
	float ProneAllowYaw; // 0xf94(0x04)
	float ProneAllowCharRotDiff; // 0xf98(0x04)
	float SuicideNotMoveTime; // 0xf9c(0x04)
	float SuperSprintDelay; // 0xfa0(0x04)
	char pad_FA4[0x4]; // 0xfa4(0x04)
	struct ADFMCharacter* DCharacter; // 0xfa8(0x08)
	struct UClass* GMKillMeAttributeEffect; // 0xfb0(0x08)
	uint64_t KillSelfDamageId; // 0xfb8(0x08)
	struct UDFMPVPAIDiffcultyComponent* PVPAIDiffcultyComp; // 0xfc0(0x08)
	struct UDFMAIPlayerThreatRecordComponent* AIPlayerThreadRecordComp; // 0xfc8(0x08)
	char pad_FD0[0x18]; // 0xfd0(0x18)
	float FocusDelay; // 0xfe8(0x04)
	float FocusUpdateInterval; // 0xfec(0x04)
	bool bIsAlreadyReachedTarget; // 0xff0(0x01)
	char pad_FF1[0x3]; // 0xff1(0x03)
	float OverrideHitRate; // 0xff4(0x04)
	float HitRateScale; // 0xff8(0x04)
	char pad_FFC[0x4]; // 0xffc(0x04)
	float AimErrorTolerance; // 0x1000(0x04)
	float FocusChangeTime; // 0x1004(0x04)
	bool bIsFocusChanged; // 0x1008(0x01)
	bool bIsFocusingCharacter; // 0x1009(0x01)
	bool bIsReachedTarget; // 0x100a(0x01)
	char pad_100B[0x5]; // 0x100b(0x05)
	struct UGPSlidingTackleComponent* SlideComp; // 0x1010(0x08)
	char pad_1018[0xc]; // 0x1018(0x0c)
	float UpdateFireFocusBodyPartInterval; // 0x1024(0x04)
	bool UseFireRealPlayerBodyPart; // 0x1028(0x01)
	char pad_1029[0xb]; // 0x1029(0x0b)
	bool DisableCheckProneVaild; // 0x1034(0x01)
	char pad_1035[0x13]; // 0x1035(0x13)
	float IdleSeconds; // 0x1048(0x04)
	char pad_104C[0x5c]; // 0x104c(0x5c)
	struct UDFMAIPlayerPathFollowingComponent* AIPlayerPathFollowComp; // 0x10a8(0x08)
	struct ARecastNavMesh* RecastNavMesh; // 0x10b0(0x08)
	float AIFindPathFailRecordTime; // 0x10b8(0x04)
	uint32_t MinFindPathFailureCount; // 0x10bc(0x04)
	uint32_t FindPathFailurePercentThreshold; // 0x10c0(0x04)
	char pad_10C4[0x14]; // 0x10c4(0x14)
	struct TArray<struct ABattleRoutePoint*> ExecBattleRoutePath; // 0x10d8(0x10)
	char pad_10E8[0x8]; // 0x10e8(0x08)
	struct ABattleRoutePoint* LastExecBattleRoutePoint; // 0x10f0(0x08)
	struct TArray<struct ADFScenceWeaponPawn*> ScenceWeapons; // 0x10f8(0x10)
	char pad_1108[0x4]; // 0x1108(0x04)
	bool IsActive; // 0x110c(0x01)
	char pad_110D[0x13]; // 0x110d(0x13)
	float LastLogicPoseOutOffProneTime; // 0x1120(0x04)
	char pad_1124[0xc]; // 0x1124(0x0c)

	bool UseScenceWeapon(struct ADFScenceWeaponPawn* ScenceWeapon, struct FGameplayTag InTag); // Function DFMGameplay.DFMAIPlayerController.UseScenceWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x62531c0
	void UpdateWeaponList(); // Function DFMGameplay.DFMAIPlayerController.UpdateWeaponList // (Final|Native|Public) // @ game+0x62531a0
	bool TryVault(int32_t RetryTimes, float RetryInterval); // Function DFMGameplay.DFMAIPlayerController.TryVault // (Final|Native|Public|BlueprintCallable) // @ game+0x62530e0
	bool TryUseSkill(int32_t SkillId, bool Cancel); // Function DFMGameplay.DFMAIPlayerController.TryUseSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x6253020
	bool TryUseItem(int64_t ItemID, enum class ECharacterPart Part); // Function DFMGameplay.DFMAIPlayerController.TryUseItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6252f60
	bool TrySlide(); // Function DFMGameplay.DFMAIPlayerController.TrySlide // (Final|Native|Public|BlueprintCallable) // @ game+0x6252f30
	bool TryRescueSomeone(struct ADFMCharacter* Other); // Function DFMGameplay.DFMAIPlayerController.TryRescueSomeone // (Final|Native|Public|BlueprintCallable) // @ game+0x6252ea0
	void TryRebornDebug(struct FTransform RebornLoc); // Function DFMGameplay.DFMAIPlayerController.TryRebornDebug // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6252db0
	bool ToggleZipline(); // Function DFMGameplay.DFMAIPlayerController.ToggleZipline // (Final|Native|Public|BlueprintCallable) // @ game+0x6252d80
	bool ToggleSprint(bool bIsSprint); // Function DFMGameplay.DFMAIPlayerController.ToggleSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x6252cf0
	bool SwitchWeapon(struct ADFMWeapon* TargetWeapon, enum class EWeaponSwitchType SwitchType); // Function DFMGameplay.DFMAIPlayerController.SwitchWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6252c30
	bool SwitchToWeaponByPosition(int32_t EquipPosition, enum class EWeaponSwitchType SwitchType); // Function DFMGameplay.DFMAIPlayerController.SwitchToWeaponByPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x6252b70
	bool SwitchToMainWeapon(); // Function DFMGameplay.DFMAIPlayerController.SwitchToMainWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6252b40
	void StoreBattleRoutePath(struct TArray<struct ABattleRoutePoint*> RoutePath); // Function DFMGameplay.DFMAIPlayerController.StoreBattleRoutePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6252970
	void StopFire(); // Function DFMGameplay.DFMAIPlayerController.StopFire // (Native|Public|BlueprintCallable) // @ game+0x3578900
	bool StingerMissleLockNotify(struct AActor* Target, enum class EStingerMissileLockingState State); // Function DFMGameplay.DFMAIPlayerController.StingerMissleLockNotify // (Native|Public|BlueprintCallable) // @ game+0x62528a0
	void StartFire(bool bIsAiming); // Function DFMGameplay.DFMAIPlayerController.StartFire // (Native|Public|BlueprintCallable) // @ game+0x6252810
	void SetZooming(bool Zooming); // Function DFMGameplay.DFMAIPlayerController.SetZooming // (Native|Public|BlueprintCallable) // @ game+0x6252780
	void SetRotateSpeed(float RotateSpeed); // Function DFMGameplay.DFMAIPlayerController.SetRotateSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x6252700
	void SetPathFindingMode(int32_t Mode); // Function DFMGameplay.DFMAIPlayerController.SetPathFindingMode // (Final|Native|Public|BlueprintCallable) // @ game+0x6252680
	void SetIdleState(bool V); // Function DFMGameplay.DFMAIPlayerController.SetIdleState // (Final|Native|Public|BlueprintCallable) // @ game+0x6252600
	void SetHitRateScale(float Scale, float Duration); // Function DFMGameplay.DFMAIPlayerController.SetHitRateScale // (Final|Native|Public|BlueprintCallable) // @ game+0x6252540
	void SetFocusDelay(float InFocusDelay, float InFocusUpdateInterval); // Function DFMGameplay.DFMAIPlayerController.SetFocusDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x6252470
	void SetAutoSuperSprint(bool Val); // Function DFMGameplay.DFMAIPlayerController.SetAutoSuperSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x62523f0
	bool SearchBattleRoutePath(struct ABattleRoutePoint* TargetPoint, struct TArray<struct ABattleRoutePoint*>& RoutePath); // Function DFMGameplay.DFMAIPlayerController.SearchBattleRoutePath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62522d0
	bool RequestDirectMove(struct FVector Vel); // Function DFMGameplay.DFMAIPlayerController.RequestDirectMove // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x6252230
	void ReloadAmmo(); // Function DFMGameplay.DFMAIPlayerController.ReloadAmmo // (Native|Public|BlueprintCallable) // @ game+0x36c99f0
	void OtherPlayerRequestAssist(struct AGPCharacter* Other, enum class EPlayerRequestAssistType Type); // Function DFMGameplay.DFMAIPlayerController.OtherPlayerRequestAssist // (Native|Event|Public|BlueprintEvent) // @ game+0x6252050
	void OpenParachute(bool Open); // Function DFMGameplay.DFMAIPlayerController.OpenParachute // (Final|Native|Public|BlueprintCallable) // @ game+0x6251fc0
	void OnBattleRouteSegmentExecFail(struct ABattleRoutePoint* Src, struct ABattleRoutePoint* Dest); // Function DFMGameplay.DFMAIPlayerController.OnBattleRouteSegmentExecFail // (Final|Native|Public) // @ game+0x6251f00
	void OnBasePoseStatusChanged(); // Function DFMGameplay.DFMAIPlayerController.OnBasePoseStatusChanged // (Final|Native|Public) // @ game+0x6251ee0
	bool MoveToFailAndCanGetout(struct FVector& GetoutLocation, float InTimeSecond); // Function DFMGameplay.DFMAIPlayerController.MoveToFailAndCanGetout // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6251e00
	void LockStingerAt(struct AActor* Target, enum class EStingerMissileLockingState LockState); // Function DFMGameplay.DFMAIPlayerController.LockStingerAt // (Native|Public|BlueprintCallable) // @ game+0x6251d30
	void LeaveSceneScenceWeapon(); // Function DFMGameplay.DFMAIPlayerController.LeaveSceneScenceWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6251d10
	bool JumpAndToggleZipline(); // Function DFMGameplay.DFMAIPlayerController.JumpAndToggleZipline // (Final|Native|Public|BlueprintCallable) // @ game+0x6251ce0
	void Jump(); // Function DFMGameplay.DFMAIPlayerController.Jump // (Final|Native|Public|BlueprintCallable) // @ game+0x6251cc0
	bool IsUsingScenceWeapon(); // Function DFMGameplay.DFMAIPlayerController.IsUsingScenceWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6251c90
	bool IsTooMuchFindPathFailure(); // Function DFMGameplay.DFMAIPlayerController.IsTooMuchFindPathFailure // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6251c60
	bool IsStuck(); // Function DFMGameplay.DFMAIPlayerController.IsStuck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6251c40
	bool IsSliding(); // Function DFMGameplay.DFMAIPlayerController.IsSliding // (Final|Native|Public|BlueprintCallable) // @ game+0x6251c10
	bool IsShouldReload(); // Function DFMGameplay.DFMAIPlayerController.IsShouldReload // (Native|Public|BlueprintCallable) // @ game+0x6251be0
	bool IsOutOfNavMesh(); // Function DFMGameplay.DFMAIPlayerController.IsOutOfNavMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x6251bb0
	bool IsCurrWeaponOutofAmmo(); // Function DFMGameplay.DFMAIPlayerController.IsCurrWeaponOutofAmmo // (Native|Public|BlueprintCallable) // @ game+0x35790e0
	bool IsBattleRouteOpen(); // Function DFMGameplay.DFMAIPlayerController.IsBattleRouteOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x6251b80
	bool HasItem(int64_t ItemID); // Function DFMGameplay.DFMAIPlayerController.HasItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6251910
	int32_t GetTeam(); // Function DFMGameplay.DFMAIPlayerController.GetTeam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x62515c0
	int32_t GetSkillIdByUISlot(enum class ESkillUISlot Slot); // Function DFMGameplay.DFMAIPlayerController.GetSkillIdByUISlot // (Final|Native|Public|BlueprintCallable) // @ game+0x6251530
	float GetRotateSpeed(); // Function DFMGameplay.DFMAIPlayerController.GetRotateSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6251510
	struct TArray<struct ABattleRoutePoint*> GetRemainBattleRoutePath(); // Function DFMGameplay.DFMAIPlayerController.GetRemainBattleRoutePath // (Final|Native|Public|BlueprintCallable) // @ game+0x6251430
	struct FString GetPlayerName(); // Function DFMGameplay.DFMAIPlayerController.GetPlayerName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6251230
	int32_t GetPathFindingMode(); // Function DFMGameplay.DFMAIPlayerController.GetPathFindingMode // (Final|Native|Public|BlueprintCallable) // @ game+0x6251160
	struct ABattleRoutePoint* GetNextBattleRoutePathPoint(bool Remove, int32_t offset); // Function DFMGameplay.DFMAIPlayerController.GetNextBattleRoutePathPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6250f00
	struct ADFMCharacter* GetMainTarget(); // Function DFMGameplay.DFMAIPlayerController.GetMainTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x6250ed0
	float GetIdleSeconds(); // Function DFMGameplay.DFMAIPlayerController.GetIdleSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6250eb0
	enum class EWeaponItemType GetCurWeaponType(); // Function DFMGameplay.DFMAIPlayerController.GetCurWeaponType // (Final|Native|Public|BlueprintCallable) // @ game+0x6250d70
	float GetCurrentHP(); // Function DFMGameplay.DFMAIPlayerController.GetCurrentHP // (Final|Native|Public|BlueprintCallable) // @ game+0x6250da0
	struct AActor* GetCapturePoint(); // Function DFMGameplay.DFMAIPlayerController.GetCapturePoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6250d40
	struct TArray<struct ADFMCharacter*> GetCampMembers(); // Function DFMGameplay.DFMAIPlayerController.GetCampMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x6250c60
	int32_t GetCamp(); // Function DFMGameplay.DFMAIPlayerController.GetCamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6250c30
	struct TArray<struct AGPCharacter*> GetAroundCampMembers(float radius); // Function DFMGameplay.DFMAIPlayerController.GetAroundCampMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x6250b00
	bool GetAngleViewToFocalPoint(float& Yaw, float& Pitch); // Function DFMGameplay.DFMAIPlayerController.GetAngleViewToFocalPoint // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6250a10
	void FireWeaponEvent(enum class EGPWeaponInnerEvent Event, enum class EGPAnimNotifyLogicalBreakType BreakType); // Function DFMGameplay.DFMAIPlayerController.FireWeaponEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x62508d0
	struct TArray<struct FVector> FindRemotePath(struct FVector StartLocation, struct FVector EndLocation); // Function DFMGameplay.DFMAIPlayerController.FindRemotePath // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62507a0
	bool FindPathMiddlePoint(struct FVector Dest, struct FVector& OutLocation, float MiddlePos); // Function DFMGameplay.DFMAIPlayerController.FindPathMiddlePoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x6250670
	struct ADFScenceWeaponPawn* FindNearScenceWeapon(enum class ESceneWeaponType Type, struct FString WeaponIdStr, bool CheckCanUse, float radius, bool ForceCollect); // Function DFMGameplay.DFMAIPlayerController.FindNearScenceWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6250450
	void DotShoot(); // Function DFMGameplay.DFMAIPlayerController.DotShoot // (Native|Public|BlueprintCallable) // @ game+0x6250270
	void DoSuicide(); // Function DFMGameplay.DFMAIPlayerController.DoSuicide // (Final|Native|Public|BlueprintCallable) // @ game+0x6250250
	bool DoSkillBehavior(enum class ESkillBehavior skillbehavior); // Function DFMGameplay.DFMAIPlayerController.DoSkillBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x62501c0
	bool DoMarkerPawn(struct APawn* Target, bool OnlyCheck, float CheckDeg); // Function DFMGameplay.DFMAIPlayerController.DoMarkerPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x62500b0
	bool CheckSkillWeaponAmmoByUISlot(enum class ESkillUISlot Slot); // Function DFMGameplay.DFMAIPlayerController.CheckSkillWeaponAmmoByUISlot // (Final|Native|Public|BlueprintCallable) // @ game+0x6250020
	bool CanUseSkill(int32_t SkillId); // Function DFMGameplay.DFMAIPlayerController.CanUseSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x624ff90
	bool CanActivateSkillByUISlot(enum class ESkillUISlot Slot); // Function DFMGameplay.DFMAIPlayerController.CanActivateSkillByUISlot // (Final|Native|Public|BlueprintCallable) // @ game+0x624ff00
	void ApplyBattleRouteAction(enum class EBattleRouteOccupyAction Action, struct ABattleRoutePoint* DestPoint); // Function DFMGameplay.DFMAIPlayerController.ApplyBattleRouteAction // (Final|Native|Public|BlueprintCallable) // @ game+0x624f130
	bool ActivateSkillByUISlot(enum class ESkillUISlot Slot); // Function DFMGameplay.DFMAIPlayerController.ActivateSkillByUISlot // (Final|Native|Public|BlueprintCallable) // @ game+0x624f0a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPvPAIController
// Size: 0xf90 (Inherited: 0xf90)
class ADFMPvPAIController : public ADFMAIController {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevelBase
// Size: 0x160 (Inherited: 0x148)
class UClientAIMovementLODFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x18]; // 0x148(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UCharacterAppearanceFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UClientAnimFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UClientAudioLODFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientIdleStateFeatureLevel_Yes
// Size: 0x148 (Inherited: 0x148)
class UClientIdleStateFeatureLevel_Yes : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientIdleStateFeatureLevel_No
// Size: 0x148 (Inherited: 0x148)
class UClientIdleStateFeatureLevel_No : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UClientTickFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UPlayerAppearanceFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UPlayerClientAnimFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientIdleStateFeatureLevel_Yes
// Size: 0x148 (Inherited: 0x148)
class UPlayerClientIdleStateFeatureLevel_Yes : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientIdleStateFeatureLevel_No
// Size: 0x148 (Inherited: 0x148)
class UPlayerClientIdleStateFeatureLevel_No : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UPlayerClientTickFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UPlayerClientMovementLODFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevelBase
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevelBase : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSExistanceLODFeatureLevel_No
// Size: 0x148 (Inherited: 0x148)
class UDSExistanceLODFeatureLevel_No : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSExistanceLODFeatureLevel_Yes
// Size: 0x148 (Inherited: 0x148)
class UDSExistanceLODFeatureLevel_Yes : public UCharacterLODFeatureLevel {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFeatureLevelBase
// Size: 0x150 (Inherited: 0x148)
class UWeaponFeatureLevelBase : public UCharacterLODFeatureLevel {
public:

	char pad_148[0x8]; // 0x148(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientMovementLODFeature
// Size: 0x90 (Inherited: 0x90)
class UClientMovementLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeature
// Size: 0x90 (Inherited: 0x90)
class UCharacterAppearanceFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeature
// Size: 0x90 (Inherited: 0x90)
class UClientAnimFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeature
// Size: 0x90 (Inherited: 0x90)
class UClientAudioLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientIdleStateFeature
// Size: 0x90 (Inherited: 0x90)
class UClientIdleStateFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeature
// Size: 0x90 (Inherited: 0x90)
class UClientTickLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeature
// Size: 0x90 (Inherited: 0x90)
class UPlayerAppearanceFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeature
// Size: 0x90 (Inherited: 0x90)
class UPlayerClientAnimFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientIdleStateFeature
// Size: 0x90 (Inherited: 0x90)
class UPlayerClientIdleStateFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeature
// Size: 0x90 (Inherited: 0x90)
class UPlayerClientTickLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeature
// Size: 0x90 (Inherited: 0x90)
class UPlayerClientMovementLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeature
// Size: 0x90 (Inherited: 0x90)
class UDSReplicationLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSExistanceLODFeature
// Size: 0x90 (Inherited: 0x90)
class UDSExistanceLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponLODFeature
// Size: 0x90 (Inherited: 0x90)
class UWeaponLODFeature : public UCharacterLODFeature {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaLocationComponent
// Size: 0x248 (Inherited: 0x240)
class UDramaLocationComponent : public UEditorMarkSceneComponent {
public:

	char pad_240[0x8]; // 0x240(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MovePathPoint
// Size: 0x248 (Inherited: 0x240)
class UMovePathPoint : public UEditorMarkSceneComponent {
public:

	int32_t MovePathPointInx; // 0x240(0x04)
	enum class EPatrolType PatrolType; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GuardPoint
// Size: 0x2f0 (Inherited: 0x240)
class UGuardPoint : public UEditorMarkSceneComponent {
public:

	int32_t GuardPointInx; // 0x240(0x04)
	bool bIsOpenGuard; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	float TotalMontageLen; // 0x248(0x04)
	float GuardTime; // 0x24c(0x04)
	float RandomFluctuationDuration; // 0x250(0x04)
	bool bOpenDrama; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	float CoolDown; // 0x258(0x04)
	float MaxDistance; // 0x25c(0x04)
	enum class EGuardAnimType GuardAnimType; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)
	struct TMap<struct FName, struct UAnimMontage*> RandomMontage; // 0x268(0x50)
	struct UAnimSequenceBase* AnimStart; // 0x2b8(0x08)
	struct UAnimSequenceBase* AnimLoop; // 0x2c0(0x08)
	float LoopTime; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct UAnimSequenceBase* AnimEnd; // 0x2d0(0x08)
	enum class EGuardType GuardType; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct AAIController* GuardAI; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)

	void SetTotalMontageLen(); // Function DFMGameplay.GuardPoint.SetTotalMontageLen // (Final|Native|Public|BlueprintCallable) // @ game+0x63aa930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MovePathPointHelicopter
// Size: 0x250 (Inherited: 0x240)
class UMovePathPointHelicopter : public UEditorMarkSceneComponent {
public:

	int32_t MovePathPointInx; // 0x240(0x04)
	int32_t SectionID; // 0x244(0x04)
	float StayTime; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MovePathSectionHelicopter
// Size: 0x250 (Inherited: 0x240)
class UMovePathSectionHelicopter : public UEditorMarkSceneComponent {
public:

	int32_t SectionID; // 0x240(0x04)
	struct FColor Color; // 0x244(0x04)
	char pad_248[0x8]; // 0x248(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CrashPointHelicopter
// Size: 0x370 (Inherited: 0x240)
class UCrashPointHelicopter : public UEditorMarkSceneComponent {
public:

	int32_t CrashPointID; // 0x240(0x04)
	char pad_244[0xc]; // 0x244(0x0c)
	struct FTransform Offset1; // 0x250(0x30)
	struct FTransform Offset2; // 0x280(0x30)
	struct FTransform OffsetPickupBox; // 0x2b0(0x30)
	struct FTransform BrokenPart1LocalOffset; // 0x2e0(0x30)
	struct FTransform BrokenPart2LocalOffset; // 0x310(0x30)
	struct FTransform PickUpBoxLocalOffset; // 0x340(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIHelicopterPatrolJob
// Size: 0x128 (Inherited: 0xd8)
class UAIHelicopterPatrolJob : public UAIGroupPatrolJob {
public:

	char pad_D8[0x50]; // 0xd8(0x50)

	bool GetNearlyPathPoint(int32_t SectionID, struct FVector SelfLcoation, struct FVector& OutGoalPoint); // Function DFMGameplay.AIHelicopterPatrolJob.GetNearlyPathPoint // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d2c10
	bool GetHelicopterPatrolPath(struct AAIController* AIController, int32_t SectionID, struct TArray<struct FVector>& OutPath, int32_t LoopCount); // Function DFMGameplay.AIHelicopterPatrolJob.GetHelicopterPatrolPath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61d2950
	bool STATIC_GetHelicopterCrashPathV2_Static(struct AActor* Target, struct ADramaArea* TDramaArea, struct FVector Velocity, struct TArray<struct FVector>& OutPath, struct FCrashPointData& CrashTF); // Function DFMGameplay.AIHelicopterPatrolJob.GetHelicopterCrashPathV2_Static // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d26e0
	bool GetHelicopterCrashPathV2(struct AAIController* AIController, struct AActor* Target, struct FVector Velocity, struct TArray<struct FVector>& OutPath, struct FCrashPointData& CrashTF); // Function DFMGameplay.AIHelicopterPatrolJob.GetHelicopterCrashPathV2 // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d2470
	bool GetHelicopterCrashPath(struct AAIController* AIController, struct AActor* Target, struct FVector Velocity, struct TArray<struct FVector>& OutPath, struct FTransform& CrashTF); // Function DFMGameplay.AIHelicopterPatrolJob.GetHelicopterCrashPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d2240
	struct UAIHelicopterPatrolJob* STATIC_CreateAIHelicopterPatrolJob(struct ADramaArea* Area); // Function DFMGameplay.AIHelicopterPatrolJob.CreateAIHelicopterPatrolJob // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d1370
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIGroupPatrolJob_Romytheus
// Size: 0x130 (Inherited: 0xd8)
class UAIGroupPatrolJob_Romytheus : public UAIGroupPatrolJob {
public:

	int32_t GroupPathIdx; // 0xd8(0x04)
	char pad_DC[0x54]; // 0xdc(0x54)

	bool WaitForStep_Romytheus(struct AAIController* AIController, bool bInit); // Function DFMGameplay.AIGroupPatrolJob_Romytheus.WaitForStep_Romytheus // (Final|Native|Public|BlueprintCallable) // @ game+0x61d3720
	bool GetSlotCtx(struct AAIController* AIController, struct FGPContext& SlotCtx); // Function DFMGameplay.AIGroupPatrolJob_Romytheus.GetSlotCtx // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x61d31a0
	bool GetCurrentPointConfig(struct AAIController* AIController, bool bInit, struct FVector& Destination, bool& IsWait, float& StartTime, float& WaitTime, enum class EGroupPatrolPose& Pose, bool& IsGuard); // Function DFMGameplay.AIGroupPatrolJob_Romytheus.GetCurrentPointConfig // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x61d1c40
	struct UAIGroupPatrolJob_Romytheus* STATIC_CreateGroupPatrolJob_Romytheus(struct ADramaArea* Area, int32_t FormationID); // Function DFMGameplay.AIGroupPatrolJob_Romytheus.CreateGroupPatrolJob_Romytheus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x61d15b0
	int32_t CommitReady_Romytheus(struct AAIController* Controller, bool bInit); // Function DFMGameplay.AIGroupPatrolJob_Romytheus.CommitReady_Romytheus // (Final|Native|Public|BlueprintCallable) // @ game+0x61d12b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AirDropInteractorGenerator
// Size: 0x3b0 (Inherited: 0x3a8)
class AAirDropInteractorGenerator : public AAirDropGenerator {
public:

	uint32_t boxId; // 0x3a8(0x04)
	enum class ELootLimitType LootLimit; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)

	struct FString GetUniqueName(); // Function DFMGameplay.AirDropInteractorGenerator.GetUniqueName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetSmallAreaCustomName(); // Function DFMGameplay.AirDropInteractorGenerator.GetSmallAreaCustomName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetMapName(); // Function DFMGameplay.AirDropInteractorGenerator.GetMapName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FString GetBigAreaName(); // Function DFMGameplay.AirDropInteractorGenerator.GetBigAreaName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISense_SightDFMEx
// Size: 0x160 (Inherited: 0x160)
class UAISense_SightDFMEx : public UAISense_SightDFM {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AISense_SightDFMPvPEx
// Size: 0x258 (Inherited: 0x160)
class UAISense_SightDFMPvPEx : public UAISense_SightDFM {
public:

	char pad_160[0xf8]; // 0x160(0xf8)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ItemAmmoBoxComponent
// Size: 0x1c0 (Inherited: 0x188)
class UItemAmmoBoxComponent : public UAmmoBoxComponent {
public:

	enum class EAmmoBoxCharacterLimit AmmoBoxCharacterLimit; // 0x188(0x01)
	enum class EAmmoBoxAddAmmoType AmmoBoxAddAmmoType; // 0x189(0x01)
	char pad_18A[0x2]; // 0x18a(0x02)
	float LifeTime; // 0x18c(0x04)
	int32_t UseTimeLimit; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct TArray<struct FAmmoBoxRepInfo> AddAmmoRecordMap; // 0x198(0x10)
	struct AGPCharacterBase* OwnerCharacter; // 0x1a8(0x08)
	char pad_1B0[0xc]; // 0x1b0(0x0c)
	bool bNeedDestory; // 0x1bc(0x01)
	char pad_1BD[0x3]; // 0x1bd(0x03)

	void CheckLifeTime(); // Function DFMGameplay.ItemAmmoBoxComponent.CheckLifeTime // (Final|Native|Protected) // @ game+0x638c8d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_ShootOneBulletWhenVisible
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_ShootOneBulletWhenVisible : public UAnimNotify_ShootOneBullet {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AnimNotify_ShootOneBulletBlind
// Size: 0x40 (Inherited: 0x40)
class UAnimNotify_ShootOneBulletBlind : public UAnimNotify_ShootOneBullet {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDamageCaculator
// Size: 0x30 (Inherited: 0x30)
class UArmorDamageCaculator : public UArmorDamageCaculatorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OlioArmorDamageCaculator
// Size: 0x30 (Inherited: 0x30)
class UOlioArmorDamageCaculator : public UArmorDamageCaculatorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OlioArmorDamageCaculator02
// Size: 0x30 (Inherited: 0x30)
class UOlioArmorDamageCaculator02 : public UArmorDamageCaculatorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ArmorDurabilityHandler_Sol
// Size: 0x30 (Inherited: 0x30)
class UArmorDurabilityHandler_Sol : public UArmorDurabilityHandler {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerSettlementComponent
// Size: 0x3a8 (Inherited: 0x1d8)
class UPlayerSettlementComponent : public UBasePlayerSettlementComponent {
public:

	struct FSettlementViewModel SettlementViewModel; // 0x1d8(0x90)
	struct APlayerController* PlayerController; // 0x268(0x08)
	struct UClass* GMKillMeAttributeEffect; // 0x270(0x08)
	char pad_278[0xb8]; // 0x278(0xb8)
	struct TMap<enum class EAchievementType, struct FAchievementDescStruct> AchievementDataCache; // 0x330(0x50)
	struct TArray<struct FAchievementInfo> PlayerAchievementList; // 0x380(0x10)
	int64_t GetMandelBricksID; // 0x390(0x08)
	int32_t BlueprintType; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	int64_t BluePrintPrice; // 0x3a0(0x08)

	void ServerHandlePlayerDead(); // Function DFMGameplay.PlayerSettlementComponent.ServerHandlePlayerDead // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x360c9c0
	void ServerCollectTeammateSettlementData(); // Function DFMGameplay.PlayerSettlementComponent.ServerCollectTeammateSettlementData // (Native|Protected) // @ game+0x17512c0
	bool ServerCollectPlayerSettlementData(enum class EMatchOverReason& MatchOverReason); // Function DFMGameplay.PlayerSettlementComponent.ServerCollectPlayerSettlementData // (Native|Protected|HasOutParms) // @ game+0x63e89b0
	void OnRepSettlementViewModel(); // Function DFMGameplay.PlayerSettlementComponent.OnRepSettlementViewModel // (Native|Protected) // @ game+0x22b8690
	void OnNotifyClientShowSettlementView(enum class EMatchOverReason MatchOverReason); // Function DFMGameplay.PlayerSettlementComponent.OnNotifyClientShowSettlementView // (Native|Protected|BlueprintCallable) // @ game+0x6208050
	void OnClientQuitGame(enum class EMatchOverReason QuitReason); // Function DFMGameplay.PlayerSettlementComponent.OnClientQuitGame // (Final|Native|Protected) // @ game+0x63e8720
	void HandlePlayerDead(struct APlayerController* Controller); // Function DFMGameplay.PlayerSettlementComponent.HandlePlayerDead // (Final|Native|Public|Const) // @ game+0x63e86a0
	struct FSettlementViewModel GetSettlementData(); // Function DFMGameplay.PlayerSettlementComponent.GetSettlementData // (Final|Native|Public|BlueprintCallable) // @ game+0x63e82c0
	float GetMoneyNum(); // Function DFMGameplay.PlayerSettlementComponent.GetMoneyNum // (Final|Native|Protected|Const) // @ game+0x63e8290
	void DestroyActor(struct ACHARACTER* CHARACTER); // Function DFMGameplay.PlayerSettlementComponent.DestroyActor // (Final|Native|Public|Const) // @ game+0x2279c80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RaidPlayerSettlementComponent
// Size: 0x2a8 (Inherited: 0x1d8)
class URaidPlayerSettlementComponent : public UBasePlayerSettlementComponent {
public:

	char pad_1D8[0xb0]; // 0x1d8(0xb0)
	struct AGameMode_Raid* GameMode; // 0x288(0x08)
	struct ADFMGameState* GameState; // 0x290(0x08)
	struct UDFMSettlementComponent* SettlementComponent; // 0x298(0x08)
	struct UDFMDSLogic* DsLogic; // 0x2a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItem
// Size: 0x730 (Inherited: 0x5a8)
class ABreakableItem : public ABreakableItemBase {
public:

	char pad_5A8[0x20]; // 0x5a8(0x20)
	float Health; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	/*struct TSoftObjectPtr<UStaticMesh>*/char BrokenStaticMesh[0x28]; // 0x5d0(0x28)
	bool bRandomAnimation; // 0x5f8(0x01)
	char pad_5F9[0x7]; // 0x5f9(0x07)
	/*struct TArray<struct TSoftObjectPtr<USkeletalMesh>>*/char SkeletaMeshArray[0x10]; // 0x600(0x10)
	/*struct TArray<struct TSoftObjectPtr<UAnimationAsset>>*/char BreakingAnimationArray[0x10]; // 0x610(0x10)
	/*struct TArray<struct TSoftObjectPtr<USkeletalMesh>>*/char SkeletaMeshArray_HDOverride[0x10]; // 0x620(0x10)
	/*struct TArray<struct TSoftObjectPtr<UAnimationAsset>>*/char BreakingAnimationArray_HDOverride[0x10]; // 0x630(0x10)
	float DestoryNormalMeshDelayTime; // 0x640(0x04)
	char pad_644[0x4]; // 0x644(0x04)
	struct TArray<struct FName> ParticleSystemResourceIDArray; // 0x648(0x10)
	struct TArray<struct FTransform> ParticleSystemTransformArray; // 0x658(0x10)
	bool isFollowActorRotationPitch; // 0x668(0x01)
	bool isFollowActorRotationYaw; // 0x669(0x01)
	bool isFollowActorRotationRoll; // 0x66a(0x01)
	char pad_66B[0x1]; // 0x66b(0x01)
	int32_t AttakerId; // 0x66c(0x04)
	struct UClass* DamageEffect; // 0x670(0x08)
	struct FVector DamageEffectPosOffset; // 0x678(0x0c)
	bool isAnimaFollowActorRotation; // 0x684(0x01)
	char pad_685[0x3]; // 0x685(0x03)
	struct FString AudioPortalIDString; // 0x688(0x10)
	bool isBreak; // 0x698(0x01)
	char pad_699[0x7]; // 0x699(0x07)
	struct UDFMDesStaticMeshComponent* StaticMeshComponent; // 0x6a0(0x08)
	struct UStaticMeshComponent* BrokenStaticMeshComponent; // 0x6a8(0x08)
	struct TArray<struct UDFMDesSkeletalMeshComponent*> SkeletalMeshComponentArray; // 0x6b0(0x10)
	struct FTimerHandle DestroyTimerHandle; // 0x6c0(0x08)
	struct TArray<struct UBreakableSkeletalMeshLODTimer*> BreakableSkeletalMeshLODTimerTArray; // 0x6c8(0x10)
	struct AActor* LastMakerInstigator; // 0x6d8(0x08)
	struct FTransform FXSocketRelativeTransform; // 0x6e0(0x30)
	char pad_710[0x8]; // 0x710(0x08)
	struct FPropertyReplicationHandler PropertyReplicationHandler; // 0x718(0x10)
	char pad_728[0x8]; // 0x728(0x08)

	void ShowBreakAnimation(); // Function DFMGameplay.BreakableItem.ShowBreakAnimation // (Final|Native|Protected) // @ game+0x61f5f40
	void PreLoadAssets(struct TArray<struct FSoftObjectPath>& AssetPaths); // Function DFMGameplay.BreakableItem.PreLoadAssets // (Final|Native|Protected|HasOutParms) // @ game+0x61f5d00
	void OnRep_BreakState(); // Function DFMGameplay.BreakableItem.OnRep_BreakState // (Final|Native|Protected) // @ game+0x61f57e0
	void InitOnBeginPlay(bool isBreak); // Function DFMGameplay.BreakableItem.InitOnBeginPlay // (Final|Native|Protected) // @ game+0x61f4f30
	struct TArray<struct FSoftObjectPath> GetPathsOfBreakingAssets(); // Function DFMGameplay.BreakableItem.GetPathsOfBreakingAssets // (Final|Native|Protected) // @ game+0x61f4e20
	void BeginExplosionOnServer(struct AActor* MakerInstigator); // Function DFMGameplay.BreakableItem.BeginExplosionOnServer // (Final|Native|Protected) // @ game+0x61f4990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemBuildingBase
// Size: 0xf80 (Inherited: 0x5a8)
class ABreakableItemBuildingBase : public ABreakableItemBase {
public:

	char pad_5A8[0x18]; // 0x5a8(0x18)
	struct FBreakablePhysicsData BreakablePhyxData; // 0x5c0(0x750)
	/*struct TSoftObjectPtr<UDesAllPartEdgeAsset>*/char EdgeModelAsset[0x28]; // 0xd10(0x28)
	/*struct TArray<struct TSoftObjectPtr<UStaticMesh>>*/char EdgeModelAssetRef[0x10]; // 0xd38(0x10)
	/*struct TArray<struct TSoftObjectPtr<UMaterialInstance>>*/char EdgeDecalAssetRef[0x10]; // 0xd48(0x10)
	struct TMap<int32_t, enum class EBreakableNavBoxMode> SectionsOverrideNavBoxMode; // 0xd58(0x50)
	struct UStaticMeshComponent* BrokenMeshComponent; // 0xda8(0x08)
	struct TArray<struct USkeletalMeshComponent*> CacheSMCArray; // 0xdb0(0x10)
	struct TArray<struct UBreakablePhysics*> BreakablePhyxArray; // 0xdc0(0x10)
	struct TArray<struct UStaticMeshComponent*> StaticMeshComponentArray; // 0xdd0(0x10)
	struct TArray<struct FBreakableItemOneSectionData> BreakableItemOneSectionDataArray; // 0xde0(0x10)
	struct UClass* DamageEffect; // 0xdf0(0x08)
	float RadialDamageExtend_; // 0xdf8(0x04)
	char pad_DFC[0x4]; // 0xdfc(0x04)
	struct TMap<int32_t, struct UDesEdgeModelMeshComponent*> EdgeModelMeshComps; // 0xe00(0x50)
	char pad_E50[0x60]; // 0xe50(0x60)
	struct TMap<struct FDesEdgeModelID, struct UDecalComponent*> EdgeDecalComps; // 0xeb0(0x50)
	char pad_F00[0x60]; // 0xf00(0x60)
	int64_t BrokenStateBitMask; // 0xf60(0x08)
	char pad_F68[0x8]; // 0xf68(0x08)
	struct TArray<struct FSectionDependencyPair> SectionDependencyPairArray; // 0xf70(0x10)

	void UnloadMesh(struct TArray<struct USkeletalMeshComponent*> SkeletalMeshComponentArray); // Function DFMGameplay.BreakableItemBuildingBase.UnloadMesh // (Final|Native|Protected) // @ game+0x61f9ae0
	void ShowBrokenMesh(int32_t SectionIndex); // Function DFMGameplay.BreakableItemBuildingBase.ShowBrokenMesh // (Final|Native|Protected) // @ game+0x61f9a60
	void ShowBreakAnimation(int32_t SectionIndex); // Function DFMGameplay.BreakableItemBuildingBase.ShowBreakAnimation // (Native|Protected) // @ game+0x61f9950
	void SetBitMaskBroken(int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.SetBitMaskBroken // (Final|Native|Protected) // @ game+0x61f9510
	void RelatedBreakingSelfComponentForIndex(int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.RelatedBreakingSelfComponentForIndex // (Final|Native|Protected) // @ game+0x61f9330
	void RelatedBreakingItemForIndex(struct AActor* MakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.RelatedBreakingItemForIndex // (Final|Native|Protected) // @ game+0x61f9270
	void RelatedBreakingActorForIndex(int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.RelatedBreakingActorForIndex // (Final|Native|Protected) // @ game+0x61f91f0
	void OnRep_BreakState(); // Function DFMGameplay.BreakableItemBuildingBase.OnRep_BreakState // (Final|Native|Protected) // @ game+0x61f8fa0
	void MakeRadialDamage(struct AActor* DamageMakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.MakeRadialDamage // (Final|Native|Protected) // @ game+0x61f85c0
	bool IsValidIndex(int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.IsValidIndex // (Native|Protected) // @ game+0x61f8490
	bool IsSectionsAllDestructed(struct TArray<int32_t>& ids); // Function DFMGameplay.BreakableItemBuildingBase.IsSectionsAllDestructed // (Final|Native|Protected|HasOutParms) // @ game+0x61f83b0
	bool IsSectionBrokenDependSectionAlive(int32_t SectionIndex, int32_t SectionDataBrokenMeshIndex); // Function DFMGameplay.BreakableItemBuildingBase.IsSectionBrokenDependSectionAlive // (Final|Native|Protected) // @ game+0x61f82f0
	bool IsSectionAlive(int32_t ID); // Function DFMGameplay.BreakableItemBuildingBase.IsSectionAlive // (Final|Native|Protected) // @ game+0x61f8260
	bool IsIndexBroken(int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.IsIndexBroken // (Final|Native|Protected) // @ game+0x61f8140
	void InitOnBeginPlay(int64_t Bitmask); // Function DFMGameplay.BreakableItemBuildingBase.InitOnBeginPlay // (Native|Protected) // @ game+0x61f8030
	int32_t GetStaticMeshComponentIndex(struct UPrimitiveComponent* targetSMComponent); // Function DFMGameplay.BreakableItemBuildingBase.GetStaticMeshComponentIndex // (Final|Native|Protected) // @ game+0x61f7f10
	void BeginExplosionOnServer(struct AActor* MakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemBuildingBase.BeginExplosionOnServer // (Native|Protected) // @ game+0x61f7d30
	void AddCompOnDependentSection(int32_t BreakSectionIndex, struct TArray<struct UActorComponent*>& NewComponentArray, struct TArray<int32_t>& LoadBrokenMeshIndexArray); // Function DFMGameplay.BreakableItemBuildingBase.AddCompOnDependentSection // (Final|Native|Protected|HasOutParms) // @ game+0x61f7ba0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemMultiSection
// Size: 0xe10 (Inherited: 0x5a8)
class ABreakableItemMultiSection : public ABreakableItemBase {
public:

	char pad_5A8[0x18]; // 0x5a8(0x18)
	/*struct TArray<struct TSoftObjectPtr<UStaticMesh>>*/char BrokenCrossMeshes[0x10]; // 0x5c0(0x10)
	struct TArray<struct UStaticMeshComponent*> BrokenCrossSMCs; // 0x5d0(0x10)
	struct FBreakablePhysicsData BreakablePhyxData; // 0x5e0(0x750)
	/*struct TMap<int32_t, struct TSoftObjectPtr<UStaticMesh>>*/char LowPolyProxyMeshes[0x50]; // 0xd30(0x50)
	struct TArray<struct UBreakablePhysics*> BreakablePhyxArray; // 0xd80(0x10)
	struct TArray<struct UStaticMeshComponent*> StaticMeshComponentArray; // 0xd90(0x10)
	struct TArray<struct FBreakableItemOneSectionData> BreakableItemOneSectionDataArray; // 0xda0(0x10)
	struct TArray<struct FSectionDependencyPair> SectionDependencyPairArray; // 0xdb0(0x10)
	struct UClass* DamageEffect; // 0xdc0(0x08)
	float RadialDamageExtend_; // 0xdc8(0x04)
	char pad_DCC[0x4]; // 0xdcc(0x04)
	struct UDFMDesStaticMeshComponent* BatchSMC; // 0xdd0(0x08)
	bool bClientUseBatchProxy; // 0xdd8(0x01)
	char pad_DD9[0x7]; // 0xdd9(0x07)
	struct UStaticMeshComponent* BrokenMeshComponent; // 0xde0(0x08)
	char pad_DE8[0x10]; // 0xde8(0x10)
	int32_t BrokenStateBitMask; // 0xdf8(0x04)
	char pad_DFC[0x4]; // 0xdfc(0x04)
	struct TArray<struct UBreakableSkeletalMeshLODTimer*> BreakableSkeletalMeshLODTimerTArray; // 0xe00(0x10)

	void UnloadMesh(struct TArray<struct USkeletalMeshComponent*> SMCArray); // Function DFMGameplay.BreakableItemMultiSection.UnloadMesh // (Final|Native|Protected) // @ game+0x61f9c00
	void ShowBreakAnimation(int32_t SectionIndex); // Function DFMGameplay.BreakableItemMultiSection.ShowBreakAnimation // (Final|Native|Protected) // @ game+0x61f99e0
	void SetBitMaskBroken(int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.SetBitMaskBroken // (Final|Native|Protected) // @ game+0x61f9590
	void RelatdBreakingItemForIndex(struct AActor* MakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.RelatdBreakingItemForIndex // (Final|Native|Protected) // @ game+0x61f9130
	void RelatdBreakingActorForIndex(int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.RelatdBreakingActorForIndex // (Final|Native|Protected) // @ game+0x61f90b0
	void OnRep_BreakState(); // Function DFMGameplay.BreakableItemMultiSection.OnRep_BreakState // (Final|Native|Protected) // @ game+0x61f8fc0
	void MakeRadialDamage(struct AActor* DamageMakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.MakeRadialDamage // (Final|Native|Protected) // @ game+0x61f8680
	bool IsValidIndex(int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.IsValidIndex // (Final|Native|Protected) // @ game+0x61f8530
	bool IsIndexBroken(int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.IsIndexBroken // (Final|Native|Protected) // @ game+0x61f81d0
	void InitOnBeginPlay(int32_t Bitmask); // Function DFMGameplay.BreakableItemMultiSection.InitOnBeginPlay // (Final|Native|Protected) // @ game+0x61f80c0
	int32_t GetStaticMeshComponentIndex(struct UPrimitiveComponent* targetSMComponent); // Function DFMGameplay.BreakableItemMultiSection.GetStaticMeshComponentIndex // (Final|Native|Protected) // @ game+0x61f7fa0
	void BeginExplosionOnServer(struct AActor* MakerInstigator, int32_t Index); // Function DFMGameplay.BreakableItemMultiSection.BeginExplosionOnServer // (Final|Native|Protected) // @ game+0x61f7e00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakablePerformanceTree
// Size: 0x6b0 (Inherited: 0x5a8)
class ABreakablePerformanceTree : public ABreakableItemBase {
public:

	char pad_5A8[0x18]; // 0x5a8(0x18)
	float Health; // 0x5c0(0x04)
	char pad_5C4[0x4]; // 0x5c4(0x04)
	/*struct TSoftObjectPtr<UStaticMesh>*/char BrokenStaticMesh[0x28]; // 0x5c8(0x28)
	/*struct TArray<struct TSoftObjectPtr<USkeletalMesh>>*/char SkeletaMeshArray[0x10]; // 0x5f0(0x10)
	/*struct TArray<struct TSoftObjectPtr<UAnimationAsset>>*/char BreakingAnimationArray[0x10]; // 0x600(0x10)
	float DestoryNormalMeshDelayTime; // 0x610(0x04)
	char pad_614[0x4]; // 0x614(0x04)
	struct TArray<struct FName> ParticleSystemResourceIDArray; // 0x618(0x10)
	struct TArray<struct FTransform> ParticleSystemTransformArray; // 0x628(0x10)
	bool isFollowActorRotationPitch; // 0x638(0x01)
	bool isFollowActorRotationYaw; // 0x639(0x01)
	bool isFollowActorRotationRoll; // 0x63a(0x01)
	char pad_63B[0x1]; // 0x63b(0x01)
	int32_t AttakerId; // 0x63c(0x04)
	struct UClass* DamageEffect; // 0x640(0x08)
	struct FVector DamageEffectPosOffset; // 0x648(0x0c)
	bool isAnimaFollowActorRotation; // 0x654(0x01)
	char pad_655[0xb]; // 0x655(0x0b)
	struct FTransform FXSocketRelativeTransform; // 0x660(0x30)
	char pad_690[0x8]; // 0x690(0x08)
	struct TArray<struct USkeletalMeshComponent*> SkeletalMeshComponentArray; // 0x698(0x10)
	struct FTimerHandle DestroyTimerHandle; // 0x6a8(0x08)

	void ShowBrokenMesh(struct UStaticMeshComponent* InStaticMeshComponent); // Function DFMGameplay.BreakablePerformanceTree.ShowBrokenMesh // (Final|Native|Protected) // @ game+0x61fe8e0
	void ShowBreakAnimationAsset(); // Function DFMGameplay.BreakablePerformanceTree.ShowBreakAnimationAsset // (Final|Native|Protected) // @ game+0x61fe8c0
	void ShowBreakAnimation(); // Function DFMGameplay.BreakablePerformanceTree.ShowBreakAnimation // (Final|Native|Protected) // @ game+0x61fe8a0
	struct TArray<struct FSoftObjectPath> GetPathsOfBreakingAssets(); // Function DFMGameplay.BreakablePerformanceTree.GetPathsOfBreakingAssets // (Final|Native|Protected) // @ game+0x61fdf70
	void DoBeginExplosion(struct AActor* MakerInstigator); // Function DFMGameplay.BreakablePerformanceTree.DoBeginExplosion // (Final|Native|Public|BlueprintCallable) // @ game+0x61fdcb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableRigidItem
// Size: 0x700 (Inherited: 0x5a8)
class ABreakableRigidItem : public ABreakableItemBase {
public:

	char pad_5A8[0x20]; // 0x5a8(0x20)
	float Health; // 0x5c8(0x04)
	char pad_5CC[0x4]; // 0x5cc(0x04)
	/*struct TSoftObjectPtr<UStaticMesh>*/char NormalStaticMesh[0x28]; // 0x5d0(0x28)
	/*struct TSoftObjectPtr<UStaticMesh>*/char BrokenStaticMesh[0x28]; // 0x5f8(0x28)
	float DestoryActorDelayTime; // 0x620(0x04)
	char pad_624[0x4]; // 0x624(0x04)
	struct TArray<struct FName> ParticleSystemResourceIDArray; // 0x628(0x10)
	struct TArray<struct FTransform> ParticleSystemTransformArray; // 0x638(0x10)
	bool isFollowActorRotationPitch; // 0x648(0x01)
	bool isFollowActorRotationYaw; // 0x649(0x01)
	bool isFollowActorRotationRoll; // 0x64a(0x01)
	char pad_64B[0x1]; // 0x64b(0x01)
	int32_t AttakerId; // 0x64c(0x04)
	struct UClass* DamageEffect; // 0x650(0x08)
	struct FVector DamageEffectPosOffset; // 0x658(0x0c)
	bool isDrawDebugLine; // 0x664(0x01)
	char pad_665[0x3]; // 0x665(0x03)
	struct FName CollisionProfileName; // 0x668(0x08)
	bool isBreak; // 0x670(0x01)
	char pad_671[0x7]; // 0x671(0x07)
	struct UStaticMeshComponent* StaticMeshComponent; // 0x678(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x680(0x08)
	struct UTravelerGameAk* TravelerGameAkComponent; // 0x688(0x08)
	struct FTransform FXSocketRelativeTransform; // 0x690(0x30)
	char pad_6C0[0x28]; // 0x6c0(0x28)
	struct FPropertyReplicationHandler PropertyReplicationHandler; // 0x6e8(0x10)
	char pad_6F8[0x8]; // 0x6f8(0x08)

	void PhyxOnHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function DFMGameplay.BreakableRigidItem.PhyxOnHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x61fe350
	void OnRep_BreakState(); // Function DFMGameplay.BreakableRigidItem.OnRep_BreakState // (Final|Native|Private) // @ game+0x61fe330
	void MultiPlayRigidSimulation(struct FVector HitLocation, struct FVector ImpulseNormal); // Function DFMGameplay.BreakableRigidItem.MultiPlayRigidSimulation // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x61fe080
	void DrawDebug(struct FHitResult HitResult); // Function DFMGameplay.BreakableRigidItem.DrawDebug // (Final|Native|Protected) // @ game+0x61fdd30
	void BP_PhysicalEffect(struct FHitResult HitResult); // Function DFMGameplay.BreakableRigidItem.BP_PhysicalEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ImmunityBuffMonitor
// Size: 0xc0 (Inherited: 0x38)
class UImmunityBuffMonitor : public UBuffMonitorBase {
public:

	struct FName ListenBuffType; // 0x38(0x08)
	uint32_t TriggerCnt; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	uint64_t TriggerBuffID; // 0x48(0x08)
	float ContinueTime; // 0x50(0x04)
	uint32_t Counter; // 0x54(0x04)
	char pad_58[0x8]; // 0x58(0x08)
	struct TMap<uint32_t, struct UBuffImmunityInfo*> ImmunityInfo; // 0x60(0x50)
	struct TArray<struct UBuffImmunityInfo*> Cache; // 0xb0(0x10)

	void RemoveImmunityInfo(int32_t Key); // Function DFMGameplay.ImmunityBuffMonitor.RemoveImmunityInfo // (Final|Native|Protected) // @ game+0x6337a00
	bool PreAddBuffCheck(uint32_t BuffId); // Function DFMGameplay.ImmunityBuffMonitor.PreAddBuffCheck // (Native|Public) // @ game+0x6337960
	void OnBuffAdded(struct UDFMCharacterBuffEntityBase* BuffEntityBase); // Function DFMGameplay.ImmunityBuffMonitor.OnBuffAdded // (Native|Public) // @ game+0x3649840
	struct UBuffImmunityInfo* GetImmunityInfo(int32_t Key); // Function DFMGameplay.ImmunityBuffMonitor.GetImmunityInfo // (Final|Native|Protected) // @ game+0x6336f90
	void AddBuff(int32_t BuffId); // Function DFMGameplay.ImmunityBuffMonitor.AddBuff // (Final|Native|Protected) // @ game+0x6336ca0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CCTVProcessPawnComponent
// Size: 0x260 (Inherited: 0x1a8)
class UCCTVProcessPawnComponent : public UInteractorExecuteOperatorComponent {
public:

	char pad_1A8[0x8]; // 0x1a8(0x08)
	struct TArray<struct AGameplayMonitor_V2*> ViewActors; // 0x1b0(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerView[0x10]; // 0x1c0(0x10)
	/*struct FMulticastInlineDelegate*/char OnViewTargetChange[0x10]; // 0x1d0(0x10)
	/*struct TSoftObjectPtr<UMaterialInterface>*/char PostProcessMaterialPath[0x28]; // 0x1e0(0x28)
	char pad_208[0x8]; // 0x208(0x08)
	struct TMap<struct ACHARACTER*, int32_t> PlayerViewMap; // 0x210(0x50)

	void ViewTargetChange(struct AGPPlayerController* GPPc, struct AActor* NewViewTarget, struct AActor* OldViewTarget); // Function DFMGameplay.CCTVProcessPawnComponent.ViewTargetChange // (Final|Native|Protected) // @ game+0x62085d0
	void OnMaterialLoadComplete(struct FSoftObjectPath& Path); // Function DFMGameplay.CCTVProcessPawnComponent.OnMaterialLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6207e00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAppearanceComponent
// Size: 0x240 (Inherited: 0x1a8)
class UInteractorAppearanceComponent : public UInteractorExecuteOperatorComponent {
public:

	char pad_1A8[0x10]; // 0x1a8(0x10)
	struct FGameplayTagContainer JumpSectionTriggerTags; // 0x1b8(0x20)
	struct FGameplayTagContainer AnimPlayStartTriggerTags; // 0x1d8(0x20)
	struct FGameplayTagContainer AnimPlayCompleteTriggerTags; // 0x1f8(0x20)
	struct FGameplayTagContainer LimitCountOverflowTriggerTags; // 0x218(0x20)
	bool bEndInteractWhenAnimTriggerOnExecuting; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)

	bool IsMoving(struct FName& MeshCompName, struct FName& SocketName, struct FVector& Direction); // Function DFMGameplay.InteractorAppearanceComponent.IsMoving // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x634e150
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAddAmmoExecuteComponent
// Size: 0x1a8 (Inherited: 0x1a8)
class UInteractorAddAmmoExecuteComponent : public UInteractorExecuteOperatorComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorLuaExecuteComponent
// Size: 0x1b8 (Inherited: 0x1a8)
class UInteractorLuaExecuteComponent : public UInteractorExecuteOperatorComponent {
public:

	struct FString Filename; // 0x1a8(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorNarrativeComponent
// Size: 0x1b0 (Inherited: 0x1a8)
class UInteractorNarrativeComponent : public UInteractorExecuteOperatorComponent {
public:

	int64_t ItemID; // 0x1a8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnComponent
// Size: 0x1b0 (Inherited: 0x1a8)
class UInteractorProcessPawnComponent : public UInteractorExecuteOperatorComponent {
public:

	bool bUsePreciseOperate; // 0x1a8(0x01)
	bool bUseSimpleOperate; // 0x1a9(0x01)
	bool bUpdateFSMImmediately; // 0x1aa(0x01)
	char pad_1AB[0x5]; // 0x1ab(0x05)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessHUDChannelComponent
// Size: 0x1d0 (Inherited: 0x1a8)
class UInteractorProcessHUDChannelComponent : public UInteractorExecuteOperatorComponent {
public:

	enum class GameHUDSate InVisibleHUDState; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)
	struct FGameplayTagContainer HiddenChannel; // 0x1b0(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessInterruptComponent
// Size: 0x1b0 (Inherited: 0x1a8)
class UInteractorProcessInterruptComponent : public UInteractorExecuteOperatorComponent {
public:

	struct FGameplayTag InterruptTag; // 0x1a8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorRepairComponent
// Size: 0x1e0 (Inherited: 0x1a8)
class UInteractorRepairComponent : public UInteractorExecuteOperatorComponent {
public:

	char pad_1A8[0xc]; // 0x1a8(0x0c)
	bool bRepairParentActor; // 0x1b4(0x01)
	char pad_1B5[0x3]; // 0x1b5(0x03)
	struct FGameplayTag RepairEndTags; // 0x1b8(0x08)
	float RepairSpeed; // 0x1c0(0x04)
	char pad_1C4[0x14]; // 0x1c4(0x14)
	float MaxRepairDis; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)

	void ServerRepairStop(enum class ERepairEventType EventType); // Function DFMGameplay.InteractorRepairComponent.ServerRepairStop // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6208050
	void MultiRepairFinish(enum class ERepairEventType EventType); // Function DFMGameplay.InteractorRepairComponent.MultiRepairFinish // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x21b3720
	void DoRepair(); // Function DFMGameplay.InteractorRepairComponent.DoRepair // (Final|Native|Public) // @ game+0x636c9a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLCharacterEquipComponent
// Size: 0x420 (Inherited: 0x408)
class USOLCharacterEquipComponent : public UCharacterEquipComponent {
public:

	char pad_408[0x18]; // 0x408(0x18)

	void SetServerArmorHP(struct FArmorInfo& ArmorInfo, float NewHP); // Function DFMGameplay.SOLCharacterEquipComponent.SetServerArmorHP // (Final|Native|Protected|HasOutParms) // @ game+0x63fdd90
	void ServerRemoveArmorInfo(enum class EEquipmentType Type); // Function DFMGameplay.SOLCharacterEquipComponent.ServerRemoveArmorInfo // (Final|Native|Public) // @ game+0x63fdc90
	void ServerAddArmorInfo(enum class EEquipmentType Type, struct FEquipmentInfo& ItemInfo); // Function DFMGameplay.SOLCharacterEquipComponent.ServerAddArmorInfo // (Final|Native|Public|HasOutParms) // @ game+0x63fd900
	void OnServerPlayerSettlement(enum class EMatchOverReason MatchOverReason, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.SOLCharacterEquipComponent.OnServerPlayerSettlement // (Final|Native|Protected) // @ game+0x63fd740
	void OnReborn(); // Function DFMGameplay.SOLCharacterEquipComponent.OnReborn // (Native|Protected) // @ game+0x174f5a0
	void OnCharacterDeadEvent(struct AGPCharacterBase* CHARACTER, struct AController* Killer, struct UDamageType* DamageType); // Function DFMGameplay.SOLCharacterEquipComponent.OnCharacterDeadEvent // (Native|Protected) // @ game+0x63fd1c0
	void OnAttributeHelmetArmorChangeEvent(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.SOLCharacterEquipComponent.OnAttributeHelmetArmorChangeEvent // (Native|Protected) // @ game+0x63fd0c0
	void OnAttributeArmorChangeEvent(struct AActor* Owner, float CurrentValue, float MaxValue); // Function DFMGameplay.SOLCharacterEquipComponent.OnAttributeArmorChangeEvent // (Native|Protected) // @ game+0x63fcfc0
	void NotifyArmorHPChangedEvent(enum class EEquipmentType EquipmentType, float ArmorHPPercentage); // Function DFMGameplay.SOLCharacterEquipComponent.NotifyArmorHPChangedEvent // (Net|Native|Event|NetMulticast|Protected) // @ game+0x63fcf00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterFashionComponent
// Size: 0x520 (Inherited: 0x400)
class UDFMCharacterFashionComponent : public UCharacterFashionComponent {
public:

	struct ADFMCharacter* DFMCharacter; // 0x400(0x08)
	struct TArray<struct FName> AllCharacterAvatarTableRow_New; // 0x408(0x10)
	bool bIsFashionPrior; // 0x418(0x01)
	char pad_419[0x7]; // 0x419(0x07)
	uint64_t currentCharacterHeroID; // 0x420(0x08)
	uint32_t characterTeamId; // 0x428(0x04)
	char pad_42C[0x14]; // 0x42c(0x14)
	struct TMap<uint64_t, uint64_t> currentClientHeroId2FashionSuitIdMap; // 0x440(0x50)
	struct TArray<struct FUsingHeroFashionData> currentUsingHeroFashionData; // 0x490(0x10)
	char pad_4A0[0x8]; // 0x4a0(0x08)
	/*struct FMulticastInlineDelegate*/char CharacterAvatarChangeSignature[0x10]; // 0x4a8(0x10)
	struct UDataTable* CharacterAmbientLightGroupData; // 0x4b8(0x08)
	struct UNZSkyBoxComponent* SkyBoxComponent; // 0x4c0(0x08)
	struct UDFMCharacterAmbientLightControlComponent* LightControlComponent; // 0x4c8(0x08)
	char pad_4D0[0x50]; // 0x4d0(0x50)

	void UpdateUsingHeroFashionWatchData(uint64_t InHeroId, uint64_t InWatchId); // Function DFMGameplay.DFMCharacterFashionComponent.UpdateUsingHeroFashionWatchData // (Final|Native|Public) // @ game+0x6286620
	void UpdateUsingHeroFashionData(uint64_t InHeroId, uint64_t InFashionSuitId, bool InFashionTeammateVisible, bool InFashionEnemyVisible, bool InFashionSafehouseVisible); // Function DFMGameplay.DFMCharacterFashionComponent.UpdateUsingHeroFashionData // (Final|Native|Public) // @ game+0x6286470
	void SwtichTPPMeshToUIPath(bool Enable); // Function DFMGameplay.DFMCharacterFashionComponent.SwtichTPPMeshToUIPath // (Native|Public|BlueprintCallable) // @ game+0x62863e0
	void SwtichFashionPreferenceType(bool is_fashion_prior); // Function DFMGameplay.DFMCharacterFashionComponent.SwtichFashionPreferenceType // (Native|Public|BlueprintCallable) // @ game+0x48cd580
	void SwitchCharacterWatchID(struct FName InWatchItemId); // Function DFMGameplay.DFMCharacterFashionComponent.SwitchCharacterWatchID // (Final|Native|Public) // @ game+0x62862d0
	void SwitchCharacterAvatarID(struct FName InAvatarId); // Function DFMGameplay.DFMCharacterFashionComponent.SwitchCharacterAvatarID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x36f8350
	void SetAvatarAppearance(struct FName RowName, bool IsRemove); // Function DFMGameplay.DFMCharacterFashionComponent.SetAvatarAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x6286120
	void RefreshCharacterLightParameter(bool noUseBool); // Function DFMGameplay.DFMCharacterFashionComponent.RefreshCharacterLightParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x6286070
	void PlayerStateChanged(struct APlayerState* NewPlayerState); // Function DFMGameplay.DFMCharacterFashionComponent.PlayerStateChanged // (Final|Native|Public) // @ game+0x6285ff0
	void PlayerControllerChanged(struct APlayerController* NewController); // Function DFMGameplay.DFMCharacterFashionComponent.PlayerControllerChanged // (Final|Native|Public) // @ game+0x6285f70
	void OnRep_UsingHeroFashionData(); // Function DFMGameplay.DFMCharacterFashionComponent.OnRep_UsingHeroFashionData // (Final|Native|Protected|BlueprintCallable) // @ game+0x6285f30
	void OnRep_CharacterAvatarID(); // Function DFMGameplay.DFMCharacterFashionComponent.OnRep_CharacterAvatarID // (Final|Native|Public|BlueprintCallable) // @ game+0x6285f10
	void OnRep_bIsFashionPrior(); // Function DFMGameplay.DFMCharacterFashionComponent.OnRep_bIsFashionPrior // (Final|Native|Public) // @ game+0x6285f50
	void OnLocalPSReplicate(struct AGPPlayerState* InPlayerState); // Function DFMGameplay.DFMCharacterFashionComponent.OnLocalPSReplicate // (Final|Native|Public) // @ game+0x6285cd0
	void OnGameLoadingFinish(int32_t MapID, enum class EGameFlowStageType StageType, bool bIsLoadingSuccess); // Function DFMGameplay.DFMCharacterFashionComponent.OnGameLoadingFinish // (Final|Native|Public) // @ game+0x6285bd0
	void OnCharacterAvatarChanged(); // Function DFMGameplay.DFMCharacterFashionComponent.OnCharacterAvatarChanged // (Final|Native|Public) // @ game+0x6285b30
	uint64_t GetOriginFashionId(); // Function DFMGameplay.DFMCharacterFashionComponent.GetOriginFashionId // (Final|Native|Public) // @ game+0x6285a40
	bool Get3PVisibile(bool IsEnemy); // Function DFMGameplay.DFMCharacterFashionComponent.Get3PVisibile // (Final|Native|Public) // @ game+0x62858a0
	void DebugSpecificCharacterAvatar(struct FName AvatartID); // Function DFMGameplay.DFMCharacterFashionComponent.DebugSpecificCharacterAvatar // (Final|Native|Public|BlueprintCallable) // @ game+0x62857e0
	void DebugSetEquipAppearance(struct FName EquipID, bool IsRemove); // Function DFMGameplay.DFMCharacterFashionComponent.DebugSetEquipAppearance // (Native|Public|BlueprintCallable) // @ game+0x6285710
	void ClinetWatchChanged(struct FName InWatchItemId); // Function DFMGameplay.DFMCharacterFashionComponent.ClinetWatchChanged // (Final|Native|Protected) // @ game+0x6285690
	void ClientEquipChanged(); // Function DFMGameplay.DFMCharacterFashionComponent.ClientEquipChanged // (Final|Native|Protected) // @ game+0x6285670
	void ClientCameraModeEndChanged(bool bNewFPP); // Function DFMGameplay.DFMCharacterFashionComponent.ClientCameraModeEndChanged // (Final|Native|Protected) // @ game+0x62855e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFFixedWeaponPawn
// Size: 0xc48 (Inherited: 0x4d0)
class ADFFixedWeaponPawn : public ADFScenceWeaponPawn {
public:

	char pad_4D0[0x28]; // 0x4d0(0x28)
	float MaxHealth; // 0x4f8(0x04)
	float LowHealthPercent; // 0x4fc(0x04)
	float CurrentHealth; // 0x500(0x04)
	enum class ESceneHealthState CurrentState; // 0x504(0x01)
	bool bConstructable; // 0x505(0x01)
	enum class ESceneHealthState LastState; // 0x506(0x01)
	bool bAllowNormalDamage; // 0x507(0x01)
	uint64_t DestoryDamageID; // 0x508(0x08)
	struct FName DestoryEffectID; // 0x510(0x08)
	bool bIsNeedExplode; // 0x518(0x01)
	char pad_519[0x3]; // 0x519(0x03)
	struct FName DamageCheckScoketName; // 0x51c(0x08)
	char pad_524[0x4]; // 0x524(0x04)
	struct USkeletalMesh* NormalMesh; // 0x528(0x08)
	struct USkeletalMesh* DestoryMesh; // 0x530(0x08)
	struct FName DestoryAttachEffectScoket; // 0x538(0x08)
	struct FName DestoryAttachEffectName; // 0x540(0x08)
	bool bIsNeedOwnerCamp; // 0x548(0x01)
	char pad_549[0x3]; // 0x549(0x03)
	int32_t OwnerCamp; // 0x54c(0x04)
	bool bNeedGuidedMarker; // 0x550(0x01)
	enum class ETieWeaponState CurTieWeaponState; // 0x551(0x01)
	char pad_552[0x2]; // 0x552(0x02)
	struct FName ScoketName; // 0x554(0x08)
	bool bNeedHeadMarker; // 0x55c(0x01)
	char pad_55D[0x3]; // 0x55d(0x03)
	struct FString SceneWeaponHeadMarkerName; // 0x560(0x10)
	bool bCanBeMarkedByPlayerSOL; // 0x570(0x01)
	bool bCanBeMarkedByPlayerMP; // 0x571(0x01)
	enum class ESceneWeaponMarkerType PlayerMarkingType; // 0x572(0x01)
	bool bCreateMapIcon; // 0x573(0x01)
	char pad_574[0x54]; // 0x574(0x54)
	/*struct FMulticastInlineDelegate*/char UpdateWeaponHealthPrecentEvent[0x10]; // 0x5c8(0x10)
	/*struct FMulticastInlineDelegate*/char ServerUpdateWeaponHealthPrecentEvent[0x10]; // 0x5d8(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerSceneWeaponHealthNearlyZero[0x10]; // 0x5e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSceneWeaponUsingStateChange[0x10]; // 0x5f8(0x10)
	struct TWeakObjectPtr<struct AActor> LastMakerInstigator; // 0x608(0x08)
	char pad_610[0x5e0]; // 0x610(0x5e0)
	struct UFXResourceContainerComponent* DestoryAttachEffect; // 0xbf0(0x08)
	char pad_BF8[0x8]; // 0xbf8(0x08)
	struct UGPSharedRepairComponent* SharedRepairComponent; // 0xc00(0x08)
	struct TArray<int32_t> MarkedCampIDArray; // 0xc08(0x10)
	char pad_C18[0x8]; // 0xc18(0x08)
	/*struct FMulticastInlineDelegate*/char OnServerSceneWeaponMarkInfoUpdate[0x10]; // 0xc20(0x10)
	char pad_C30[0x18]; // 0xc30(0x18)

	void SetCurrentState(enum class ESceneHealthState InState); // Function DFMGameplay.DFFixedWeaponPawn.SetCurrentState // (Final|Native|Public) // @ game+0x62229b0
	void OnRep_CurrentState(); // Function DFMGameplay.DFFixedWeaponPawn.OnRep_CurrentState // (Final|Native|Public) // @ game+0x62227b0
	void OnRep_CurrentHealth(); // Function DFMGameplay.DFFixedWeaponPawn.OnRep_CurrentHealth // (Final|Native|Public) // @ game+0x6222790
	void OnMarkedCampIDArrayChanged(); // Function DFMGameplay.DFFixedWeaponPawn.OnMarkedCampIDArrayChanged // (Native|Public) // @ game+0x6222770
	void OnExitState(enum class ESceneHealthState InExitState, enum class ESceneHealthState InEnterState); // Function DFMGameplay.DFFixedWeaponPawn.OnExitState // (Final|Native|Public) // @ game+0x62226b0
	void OnEnterState(enum class ESceneHealthState InEnterState, enum class ESceneHealthState InExitState); // Function DFMGameplay.DFFixedWeaponPawn.OnEnterState // (Final|Native|Public) // @ game+0x62225f0
	void ConstructWeaponPawnFinish(); // Function DFMGameplay.DFFixedWeaponPawn.ConstructWeaponPawnFinish // (Final|Native|Public) // @ game+0x62225d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFNonFixedWeaponPawn
// Size: 0x4d0 (Inherited: 0x4d0)
class ADFNonFixedWeaponPawn : public ADFScenceWeaponPawn {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDInputManager
// Size: 0x810 (Inherited: 0x660)
class UDFHDInputManager : public UDFMInputManager {
public:

	struct UDFHDKeySettingManager* KeySettingManager; // 0x660(0x08)
	struct UDFHDMouseCursorManager* MouseCursorManager; // 0x668(0x08)
	char pad_670[0x1a0]; // 0x670(0x1a0)

	int32_t RemoveActionBindingByNameAndEventType(struct FName ActionName, enum class EInputEvent InputEvent, enum class EInputActionType ActionType); // Function DFMGameplay.DFHDInputManager.RemoveActionBindingByNameAndEventType // (Final|Native|Private) // @ game+0x622ad70
	void ReleasePressingKeys(); // Function DFMGameplay.DFHDInputManager.ReleasePressingKeys // (Final|Native|Protected) // @ game+0x622ad50
	void ReleasePressingAction(bool bIgnoreInputEnable); // Function DFMGameplay.DFHDInputManager.ReleasePressingAction // (Final|Native|Protected) // @ game+0x622acc0
	void ProcessStopPIE(); // Function DFMGameplay.DFHDInputManager.ProcessStopPIE // (Final|Native|Public) // @ game+0x17621d0
	void ProcessChangeThrowBlockingRotated(enum class EInputActionType AimActionType); // Function DFMGameplay.DFHDInputManager.ProcessChangeThrowBlockingRotated // (Final|Native|Protected) // @ game+0x622a9f0
	void OnSwitchPlayerActionAxisBlockStateByHUDs(struct TArray<char>& StateArray, bool bEnable); // Function DFMGameplay.DFHDInputManager.OnSwitchPlayerActionAxisBlockStateByHUDs // (Final|Native|Private|HasOutParms) // @ game+0x622a8d0
	void OnSwitchPlayerActionAxisBlockStateByHUD(char& HUDState, bool bEnable); // Function DFMGameplay.DFHDInputManager.OnSwitchPlayerActionAxisBlockStateByHUD // (Final|Native|Private|HasOutParms) // @ game+0x622a800
	void OnLeaveGameFlowStage(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFHDInputManager.OnLeaveGameFlowStage // (Final|Native|Private) // @ game+0x622a720
	void OnInputModeChanged(enum class EGPInputModeType OldType, enum class EGPInputModeType NewType); // Function DFMGameplay.DFHDInputManager.OnInputModeChanged // (Final|Native|Protected) // @ game+0x622a5e0
	void OnGamePlayModeChanged(enum class EDFMGamePlayMode NewGamePlayMode); // Function DFMGameplay.DFHDInputManager.OnGamePlayModeChanged // (Final|Native|Private) // @ game+0x622a4d0
	void OnGameHudStateChanged(); // Function DFMGameplay.DFHDInputManager.OnGameHudStateChanged // (Final|Native|Protected) // @ game+0x622a4b0
	void OnEnterGameFlowStage(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.DFHDInputManager.OnEnterGameFlowStage // (Final|Native|Private) // @ game+0x622a430
	bool ChangeFunctionModeImple(struct FName ActionOrAxisName, enum class EKeyActionLogic TargetFunctionMode); // Function DFMGameplay.DFHDInputManager.ChangeFunctionModeImple // (Final|Native|Private) // @ game+0x6227c30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAILabInputManager
// Size: 0x670 (Inherited: 0x660)
class UDFMAILabInputManager : public UDFMInputManager {
public:

	struct ADFMPlayerController* DFMPlayerController; // 0x660(0x08)
	char pad_668[0x8]; // 0x668(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFHDKeySettingManager
// Size: 0x1c8 (Inherited: 0x1c8)
class UDFHDKeySettingManager : public UBaseKeySettingManager {
public:


	struct UDFHDKeySettingManager* STATIC_Get(struct UObject* GameInstanceContext); // Function DFMGameplay.DFHDKeySettingManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6228260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BlackHawkDownKeySettingManager
// Size: 0x1c8 (Inherited: 0x1c8)
class UBlackHawkDownKeySettingManager : public UBaseKeySettingManager {
public:


	struct UBlackHawkDownKeySettingManager* STATIC_Get(struct UObject* GameInstanceContext); // Function DFMGameplay.BlackHawkDownKeySettingManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x6228120
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableComponent_AAGun
// Size: 0x5e0 (Inherited: 0x5e0)
class UDFInteractableComponent_AAGun : public UDFInteractableComponentBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableCompProxy_AAGun
// Size: 0x170 (Inherited: 0x128)
class UDFInteractableCompProxy_AAGun : public UDFInteractableCompProxy {
public:

	struct FGameplayTag UsingTag; // 0x128(0x08)
	struct FGameplayTag UnusingTag; // 0x130(0x08)
	struct FGameplayTag UseTag; // 0x138(0x08)
	struct FGameplayTag RepairTag; // 0x140(0x08)
	float Durations; // 0x148(0x04)
	bool bAttachtoWeaponMesh; // 0x14c(0x01)
	char pad_14D[0x3]; // 0x14d(0x03)
	struct FName CachedRepairProcessCompName; // 0x150(0x08)
	struct UInteractorOperatorProcessComponent* CachedRepairProcessComp; // 0x158(0x08)
	uint64_t RepairWeaponID; // 0x160(0x08)
	uint64_t SceneWeaponID; // 0x168(0x08)

	void DelayUseSecenWeapon(); // Function DFMGameplay.DFInteractableCompProxy_AAGun.DelayUseSecenWeapon // (Final|Native|Protected) // @ game+0x6231750
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFInteractableCompProxy_SkillItem
// Size: 0x128 (Inherited: 0x128)
class UDFInteractableCompProxy_SkillItem : public UDFInteractableCompProxy {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAICharacterMovementComponent
// Size: 0x14c0 (Inherited: 0x1180)
class UDFMAICharacterMovementComponent : public UDFMCharacterMovementComponent {
public:

	char pad_1180[0xb8]; // 0x1180(0xb8)
	struct UDFMParachuteComponent* DFMParachuteComp; // 0x1238(0x08)
	struct ADFMAICharacter* AICharacterOwner; // 0x1240(0x08)
	bool bUseORCA; // 0x1248(0x01)
	bool bDrawDebugORCA; // 0x1249(0x01)
	char pad_124A[0x2]; // 0x124a(0x02)
	float ORCATimeHorizon; // 0x124c(0x04)
	char pad_1250[0x8]; // 0x1250(0x08)
	struct UGPAICharacterMovementSpeedDataAsset* AISpeedConfig; // 0x1258(0x08)
	float CrouchBrakingDeceleration; // 0x1260(0x04)
	float HalfSquatBrakingDeceleration; // 0x1264(0x04)
	float StandRunBrakingDeceleration; // 0x1268(0x04)
	float AlertMoveBrakingDeceleration; // 0x126c(0x04)
	float CrouchStopVelocity; // 0x1270(0x04)
	float HalfSquatStopVelocity; // 0x1274(0x04)
	float StandRunStopVelocity; // 0x1278(0x04)
	float AlertMoveStopVelocity; // 0x127c(0x04)
	char pad_1280[0x10]; // 0x1280(0x10)
	struct UMotionAction* CurrentMotionAction; // 0x1290(0x08)
	struct UCustomRootMotionAction* CurrentCustomRootMotionAction; // 0x1298(0x08)
	float SprintMinPathLength; // 0x12a0(0x04)
	char pad_12A4[0x1cc]; // 0x12a4(0x1cc)
	struct FActionScheduler MotionActionScheduler; // 0x1470(0x40)
	char pad_14B0[0x10]; // 0x14b0(0x10)

	enum class EAIWalkState GetWalkState(); // Function DFMGameplay.DFMAICharacterMovementComponent.GetWalkState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x623dab0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerMovementComponent
// Size: 0x1180 (Inherited: 0x1180)
class UDFMPlayerMovementComponent : public UDFMCharacterMovementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_IsDead
// Size: 0x70 (Inherited: 0x70)
class UDFMAIDecorator_IsDead : public UDFMAIDecorator_SimpleDecoratorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_IsImpendingDeath
// Size: 0x70 (Inherited: 0x70)
class UDFMAIDecorator_IsImpendingDeath : public UDFMAIDecorator_SimpleDecoratorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_BoolCheck
// Size: 0xa0 (Inherited: 0x70)
class UDFMAIDecorator_BoolCheck : public UDFMAIDecorator_SimpleDecoratorBase {
public:

	struct FBlackboardKeySelector BBBoolValue; // 0x70(0x28)
	bool Inverse; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_FloatCompare
// Size: 0xa0 (Inherited: 0x70)
class UDFMAIDecorator_FloatCompare : public UDFMAIDecorator_SimpleDecoratorBase {
public:

	struct FBlackboardKeySelector FloatBBKey; // 0x70(0x28)
	float FloatValue; // 0x98(0x04)
	bool bLarger; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIDecorator_BBActorVaild
// Size: 0x98 (Inherited: 0x70)
class UDFMAIDecorator_BBActorVaild : public UDFMAIDecorator_SimpleDecoratorBase {
public:

	struct FBlackboardKeySelector ActorBBKey; // 0x70(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPVPAIDiffcultyComponent
// Size: 0x980 (Inherited: 0x7e8)
class UDFMPVPAIDiffcultyComponent : public UDFMAIDiffcultyComponent {
public:

	struct UCurveFloat* TurnYawTimeHitProtectCurve; // 0x7e8(0x08)
	char pad_7F0[0x178]; // 0x7f0(0x178)
	struct AGPCharacter* LastMainTarget; // 0x968(0x08)
	char pad_970[0x10]; // 0x970(0x10)

	float GetRebornTime(); // Function DFMGameplay.DFMPVPAIDiffcultyComponent.GetRebornTime // (Final|Native|Public|BlueprintCallable) // @ game+0x62e9900
	struct FName GetPvpDifficultyName(); // Function DFMGameplay.DFMPVPAIDiffcultyComponent.GetPvpDifficultyName // (Final|Native|Public|BlueprintCallable) // @ game+0x62e98e0
	bool GetPvpDifficultyConfig(struct FPvpAiDifficultyConfig& Out); // Function DFMGameplay.DFMPVPAIDiffcultyComponent.GetPvpDifficultyConfig // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x62e96f0
	float GetCancelRescueMyselfTime(); // Function DFMGameplay.DFMPVPAIDiffcultyComponent.GetCancelRescueMyselfTime // (Final|Native|Public|BlueprintCallable) // @ game+0x62e95a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIFirebatFlameChainComponent
// Size: 0x180 (Inherited: 0x180)
class UDFMAIFirebatFlameChainComponent : public UDFMAIFlameChainComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIInteractAction_SingleMontage
// Size: 0x60 (Inherited: 0x58)
class UDFMAIInteractAction_SingleMontage : public UDFMAIInteractActionBase {
public:

	struct UAnimMontage* MontageToPlay; // 0x58(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIInteractAction_UsingSceneWeapon
// Size: 0x68 (Inherited: 0x58)
class UDFMAIInteractAction_UsingSceneWeapon : public UDFMAIInteractActionBase {
public:

	struct ADFFixedWeaponPawn* WeaponPawnToUse; // 0x58(0x08)
	struct ADFMSceneWeapon* SceneWeapon; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionPlanPathFollowingComponent
// Size: 0x510 (Inherited: 0x3ac)
class UMotionPlanPathFollowingComponent : public UDFMAIPathFollowComponent {
public:

	float PushOutDist; // 0x3ac(0x04)
	float MaxIntersectLength; // 0x3b0(0x04)
	float ShortSegExpandLength; // 0x3b4(0x04)
	float ShortSegmentThreshold; // 0x3b8(0x04)
	float WallCheckDist; // 0x3bc(0x04)
	int32_t AreaMaskFlag; // 0x3c0(0x04)
	bool bEnablePathModification; // 0x3c4(0x01)
	bool bRemoveExtremeShortSegment; // 0x3c5(0x01)
	bool bExtendFirstLastSegment; // 0x3c6(0x01)
	bool bSkipAllNavPathPostProcess; // 0x3c7(0x01)
	bool bUseNewProcessAlgorithm; // 0x3c8(0x01)
	bool bDisableAutoUpdateFocus; // 0x3c9(0x01)
	char pad_3CA[0x6]; // 0x3ca(0x06)
	/*struct FMulticastInlineDelegate*/char StartMoveEvent[0x10]; // 0x3d0(0x10)
	/*struct FMulticastInlineDelegate*/char FinishMoveEvent[0x10]; // 0x3e0(0x10)
	char pad_3F0[0x10]; // 0x3f0(0x10)
	struct UMotionActionComponent* MotionActionComponent; // 0x400(0x08)
	char pad_408[0x100]; // 0x408(0x100)
	struct ARecastNavMesh* RecastNavMesh; // 0x508(0x08)

	void ResetMotionPlanFilter(); // Function DFMGameplay.MotionPlanPathFollowingComponent.ResetMotionPlanFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x63a81c0
	void ResetMotionPlanePreferTags(); // Function DFMGameplay.MotionPlanPathFollowingComponent.ResetMotionPlanePreferTags // (Final|Native|Public|BlueprintCallable) // @ game+0x63a8210
	void RemoveMotionPlanUnlockTags(struct FGameplayTagContainer& UnlockTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.RemoveMotionPlanUnlockTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7f00
	void RemoveMotionPlanPreferTags(struct FGameplayTagContainer& PreferTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.RemoveMotionPlanPreferTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7df0
	void RemoveMotionPlanAvoidTags(struct FGameplayTagContainer& AvoidTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.RemoveMotionPlanAvoidTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7cb0
	void AddMotionPlanUnlockTags(struct FGameplayTagContainer& UnlockTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.AddMotionPlanUnlockTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7a90
	void AddMotionPlanPreferTags(struct FGameplayTagContainer& PreferTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.AddMotionPlanPreferTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7980
	void AddMotionPlanAvoidTags(struct FGameplayTagContainer& AvoidTags); // Function DFMGameplay.MotionPlanPathFollowingComponent.AddMotionPlanAvoidTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63a7860
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIPlayerThreatRecordComponent
// Size: 0x5f0 (Inherited: 0x570)
class UDFMAIPlayerThreatRecordComponent : public UDFMAIThreatRecordComponent {
public:

	struct FAIThreatPvpTeamHurtedConfig TeamHurtedConf; // 0x570(0x14)
	char pad_584[0xc]; // 0x584(0x0c)
	float VehicleSightRefreshTime; // 0x590(0x04)
	char pad_594[0x5c]; // 0x594(0x5c)

	void OnVehicleDied(struct AActor* Vehicle); // Function DFMGameplay.DFMAIPlayerThreatRecordComponent.OnVehicleDied // (Final|Native|Protected) // @ game+0x6255d70
	void OnPlayerGetOffVehicle(struct AActor* CHARACTER, struct AActor* Vehicle); // Function DFMGameplay.DFMAIPlayerThreatRecordComponent.OnPlayerGetOffVehicle // (Final|Native|Protected) // @ game+0x6255c30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PathMotionAction
// Size: 0x1b8 (Inherited: 0x1a8)
class UPathMotionAction : public UPathMotionActionBase {
public:

	struct ADFMAICharacter* CHARACTER; // 0x1a8(0x08)
	bool bCanAbort; // 0x1b0(0x01)
	char pad_1B1[0x7]; // 0x1b1(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFireModeRCVStingerMissile
// Size: 0x510 (Inherited: 0x500)
class UWeaponFireModeRCVStingerMissile : public UWeaponFireModeStingerMissile {
public:

	struct FVector HomingLocation; // 0x500(0x0c)
	char pad_50C[0x4]; // 0x50c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponFireModeDirectionPhysicsSimulate
// Size: 0x500 (Inherited: 0x500)
class UWeaponFireModeDirectionPhysicsSimulate : public UWeaponFireModeStingerMissile {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MoveToCover
// Size: 0x190 (Inherited: 0x158)
class UDFMAITask_MoveToCover : public UDFMAITask_AdvancedMoveTo {
public:

	char pad_158[0x8]; // 0x158(0x08)
	struct FTransform DestinationTransform; // 0x160(0x30)

	void BP_PrePerformMoveTask(struct ADFMAIController* AICtrl); // Function DFMGameplay.DFMAITask_MoveToCover.BP_PrePerformMoveTask // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PreOnTaskFinished(struct ADFMAIController* AICtrl); // Function DFMGameplay.DFMAITask_MoveToCover.BP_PreOnTaskFinished // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct FString BP_GetStaticDescription(); // Function DFMGameplay.DFMAITask_MoveToCover.BP_GetStaticDescription // (Event|Protected|BlueprintEvent|Const) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_CoverThrowGrenade
// Size: 0xf0 (Inherited: 0xc8)
class UDFMAITask_CoverThrowGrenade : public UDFMAITask_BossThrowGrenade {
public:

	struct FName ThrowGrenadeAnimName; // 0xc8(0x08)
	struct FGameplayTagContainer EndStateTags; // 0xd0(0x20)

	void BP_SetupAnimParam(struct ADFMAIController* AICtrler); // Function DFMGameplay.DFMAITask_CoverThrowGrenade.BP_SetupAnimParam // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_OverrideMotionFightState
// Size: 0xa8 (Inherited: 0xa8)
class UDFMAITask_OverrideMotionFightState : public UDFMAITask_ChangeFightState {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_PlayFireShotMontage
// Size: 0x108 (Inherited: 0x108)
class UDFMAITask_PlayFireShotMontage : public UDFMAITask_PlaySpecialActing {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RequestInvestigate
// Size: 0xd0 (Inherited: 0xd0)
class UDFMAITask_RequestInvestigate : public UDFMAITask_ReportSuspects {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RequestToMotionState
// Size: 0x120 (Inherited: 0xb0)
class UDFMAITask_RequestToMotionState : public UDFMAITask_RequestToMotionStateBase {
public:

	struct FGameplayTagContainer TargetStateTags; // 0xb0(0x20)
	struct FBlackboardKeySelector TargetLocationOverrideBBKey; // 0xd0(0x28)
	struct FBlackboardKeySelector TargetYawOverrideBBKey; // 0xf8(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_RequestToCoverState
// Size: 0xd0 (Inherited: 0xb0)
class UDFMAITask_RequestToCoverState : public UDFMAITask_RequestToMotionStateBase {
public:

	struct FGameplayTagContainer TargetStateTags; // 0xb0(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MeleeAttack
// Size: 0xa8 (Inherited: 0xa8)
class UDFMAITask_MeleeAttack : public UDFMAITask_Skill {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_ReisMeleeAttack
// Size: 0xb0 (Inherited: 0xa8)
class UDFMAITask_ReisMeleeAttack : public UDFMAITask_Skill {
public:

	enum class EReisSkillType MeleeAttackType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MauriceSkill
// Size: 0xb0 (Inherited: 0xa8)
class UDFMAITask_MauriceSkill : public UDFMAITask_Skill {
public:

	enum class EMauriceSkillType SkillType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MauriceCrossbowShoot
// Size: 0xc0 (Inherited: 0xa8)
class UDFMAITask_MauriceCrossbowShoot : public UDFMAITask_Skill {
public:

	uint64_t BulletId; // 0xa8(0x08)
	float TargetDistanceScale; // 0xb0(0x04)
	bool bIgnoreCollisionInReachableCheck; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	float AcceptableYawAngle; // 0xb8(0x04)
	float AcceptablePitchAngle; // 0xbc(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_CrocodileDeadRoll
// Size: 0xa8 (Inherited: 0xa8)
class UDFMAITask_CrocodileDeadRoll : public UDFMAITask_Skill {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_CrocodileMeleeAttack
// Size: 0xb8 (Inherited: 0xa8)
class UDFMAITask_CrocodileMeleeAttack : public UDFMAITask_Skill {
public:

	struct FName CrocodileAnimName; // 0xa8(0x08)
	struct FName CrocodileAnimName_Water; // 0xb0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBattleCharacterAppearanceProxyComponent
// Size: 0x690 (Inherited: 0x5a0)
class UDFMBattleCharacterAppearanceProxyComponent : public UDFMCharacterAppearanceProxyComponent {
public:

	bool bIsFPPMesh; // 0x5a0(0x01)
	bool bIsBattlefieldTPPMesh; // 0x5a1(0x01)
	char pad_5A2[0x1]; // 0x5a2(0x01)
	bool ForceToIngoreMeshMerge; // 0x5a3(0x01)
	char pad_5A4[0x74]; // 0x5a4(0x74)
	struct FName SignalLampSlotName; // 0x618(0x08)
	struct FName SignalLampSlotName_HD; // 0x620(0x08)
	struct UMaterialInstanceDynamic* SignalLampMatInst; // 0x628(0x08)
	struct USkeletalMeshComponent* SignalLampTPPMesh; // 0x630(0x08)
	char pad_638[0x18]; // 0x638(0x18)
	struct FLinearColor TeammateColor; // 0x650(0x10)
	struct FLinearColor SameCampColor; // 0x660(0x10)
	struct FLinearColor EnemyColor; // 0x670(0x10)
	float EmissionRate_Mobile; // 0x680(0x04)
	float EmissionRate_HD; // 0x684(0x04)
	char pad_688[0x8]; // 0x688(0x08)

	void OnRepPlayerState(); // Function DFMGameplay.DFMBattleCharacterAppearanceProxyComponent.OnRepPlayerState // (Final|Native|Public) // @ game+0x626d0a0
	void OnLocalPSReplicate(struct AGPPlayerState* InPlayerState); // Function DFMGameplay.DFMBattleCharacterAppearanceProxyComponent.OnLocalPSReplicate // (Final|Native|Public) // @ game+0x626cf60
	void OnGamePlayModeChanged(enum class EDFMGamePlayMode NewGamePlayMode); // Function DFMGameplay.DFMBattleCharacterAppearanceProxyComponent.OnGamePlayModeChanged // (Final|Native|Public) // @ game+0x626cd40
	void OnCampReplicate(struct AGPPlayerState* InPlayerState); // Function DFMGameplay.DFMBattleCharacterAppearanceProxyComponent.OnCampReplicate // (Final|Native|Public) // @ game+0x626ccc0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMBuffClientEffect_Default
// Size: 0x380 (Inherited: 0x60)
class UDFMBuffClientEffect_Default : public UDFMBuffClientEffectBase {
public:

	struct TMap<struct FName, uint64_t> LoadHandleMap; // 0x60(0x50)
	struct FVoiceData StartVoice; // 0xb0(0x48)
	struct FVoiceData LoopVoice; // 0xf8(0x48)
	struct TArray<struct FSpecifyTimePlayAudio> SpecifyAudioTimeArray; // 0x140(0x10)
	struct FVoiceData RemovePlayVoice; // 0x150(0x48)
	struct FVoiceData RemoveStopVoice; // 0x198(0x48)
	struct FVoiceData CurrentVoiceData; // 0x1e0(0x48)
	struct FTimerHandle CharacterVoiceTimerHandle; // 0x228(0x08)
	struct TArray<struct FTimerHandle> AudioTimerHandles; // 0x230(0x10)
	uint32_t CacheBuffID; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct FTimerHandle CharacterPartical_3PHandle; // 0x248(0x08)
	struct FTimerHandle Voice2DTimerHandle; // 0x250(0x08)
	struct UGPEffectCueHandler* EffectCueHandler; // 0x258(0x08)
	bool bIsLiveSpectating; // 0x260(0x01)
	bool bActive; // 0x261(0x01)
	char pad_262[0x6]; // 0x262(0x06)
	struct TMap<int32_t, struct UParticleSystemComponent*> ParticleSystemMap; // 0x268(0x50)
	struct TMap<int32_t, struct FDFMBuffClientPlayFXRecord> ResourceContainerMap; // 0x2b8(0x50)
	struct FBuffEffectParam CacheEffectParam; // 0x308(0x78)

	void UnRegisterLiveSpectating(); // Function DFMGameplay.DFMBuffClientEffect_Default.UnRegisterLiveSpectating // (Final|Native|Protected) // @ game+0x6274310
	void RemoveScreenEffect(struct FName ScreenEffectName); // Function DFMGameplay.DFMBuffClientEffect_Default.RemoveScreenEffect // (Final|Native|Protected) // @ game+0x6273e90
	void RegisterLiveSpectating(); // Function DFMGameplay.DFMBuffClientEffect_Default.RegisterLiveSpectating // (Final|Native|Protected) // @ game+0x6273a50
	void RecycleAllResourceFX3P(); // Function DFMGameplay.DFMBuffClientEffect_Default.RecycleAllResourceFX3P // (Final|Native|Protected) // @ game+0x6273a30
	void OnLocalPlayerPawnChanged(struct AActor* OldCharacter, struct AActor* NewCharacter); // Function DFMGameplay.DFMBuffClientEffect_Default.OnLocalPlayerPawnChanged // (Final|Native|Protected) // @ game+0x6273170
	void ClearSpecifyAudioTimer(); // Function DFMGameplay.DFMBuffClientEffect_Default.ClearSpecifyAudioTimer // (Final|Native|Protected) // @ game+0x62715a0
	void CheckLiveSpectating(struct AGPCharacter* GPCharacter); // Function DFMGameplay.DFMBuffClientEffect_Default.CheckLiveSpectating // (Final|Native|Protected) // @ game+0x6271520
	void CancelLoadHandle(); // Function DFMGameplay.DFMBuffClientEffect_Default.CancelLoadHandle // (Final|Native|Protected) // @ game+0x6271500
	void AddScreenEffect(struct FName ScreenEffectName); // Function DFMGameplay.DFMBuffClientEffect_Default.AddScreenEffect // (Final|Native|Protected) // @ game+0x6271480
	void ActivateCharacterResourceFX3P(struct FName& FXName, struct FDFMBuffClientPerformanceRow BuffEffectData, int32_t Index); // Function DFMGameplay.DFMBuffClientEffect_Default.ActivateCharacterResourceFX3P // (Final|Native|Protected|HasOutParms) // @ game+0x6271040
	void ActivateCharacterParticle3P(struct FSoftObjectPath& ParticlePath, struct FDFMBuffClientPerformanceRow BuffEffectData, int32_t Index); // Function DFMGameplay.DFMBuffClientEffect_Default.ActivateCharacterParticle3P // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6270e90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityAimedAlert
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharacterBuffEntityAimedAlert : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityAmmoPickup
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharacterBuffEntityAmmoPickup : public UDFMCharacterBuffEntityBase {
public:

	float AmmoIncreaseRatio; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityBreakDoor
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharacterBuffEntityBreakDoor : public UDFMCharacterBuffEntityBase {
public:

	float BreakDoorRate; // 0x198(0x04)
	float MaxMustBreakDoorCount; // 0x19c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityCDAwards
// Size: 0x2e8 (Inherited: 0x198)
class UDFMCharacterBuffEntityCDAwards : public UDFMCharacterBuffEntityBase {
public:

	struct TMap<enum class ECharingSlot, struct FBuffCDAwardData> KillCDAWards_SOL; // 0x198(0x50)
	struct TMap<enum class ECharingSlot, struct FBuffCDAwardData> KillCDAWards_MP; // 0x1e8(0x50)
	struct TMap<enum class ECharingSlot, struct FBuffCDAwardData> AssistKillCDAWards_SOL; // 0x238(0x50)
	struct TMap<enum class ECharingSlot, struct FBuffCDAwardData> AssistKillCDAWards_MP; // 0x288(0x50)
	struct TArray<enum class EScoreName> ScoreNames; // 0x2d8(0x10)

	void OnPlayerKill(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMCharacterBuffEntityCDAwards.OnPlayerKill // (Native|Public|HasOutParms) // @ game+0x6281ad0
	void OnPlayerAssistKill(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMCharacterBuffEntityCDAwards.OnPlayerAssistKill // (Native|Public|HasOutParms) // @ game+0x6281a20
	bool IsValidTarget(struct AGPCharacter* Target, struct AGPCharacter* SelfCharacter); // Function DFMGameplay.DFMCharacterBuffEntityCDAwards.IsValidTarget // (Final|Native|Public) // @ game+0x6280e80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityEMP
// Size: 0x198 (Inherited: 0x198)
class UDFMCharacterBuffEntityEMP : public UDFMCharacterBuffEntityBase {
public:


	void DoRemoveEMPEffect(); // Function DFMGameplay.DFMCharacterBuffEntityEMP.DoRemoveEMPEffect // (Final|Native|Private|Const) // @ game+0x6285880
	void DoEMPEffect(); // Function DFMGameplay.DFMCharacterBuffEntityEMP.DoEMPEffect // (Final|Native|Private|Const) // @ game+0x6285860
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityFastSprint
// Size: 0x1a8 (Inherited: 0x198)
class UDFMCharacterBuffEntityFastSprint : public UDFMCharacterBuffEntityBase {
public:

	float FPPSprintAnimRate; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct ADFMCharacter* OwnerCharacter; // 0x1a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityForbitAbility
// Size: 0x1e8 (Inherited: 0x198)
class UDFMCharacterBuffEntityForbitAbility : public UDFMCharacterBuffEntityBase {
public:

	struct TMap<int32_t, float> AbilityForbitData; // 0x198(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityGainAmmo
// Size: 0x1b0 (Inherited: 0x198)
class UDFMCharacterBuffEntityGainAmmo : public UDFMCharacterBuffEntityBase {
public:

	bool bAddAmmo; // 0x198(0x01)
	char pad_199[0x7]; // 0x199(0x07)
	struct TArray<enum class ECharingSlot> CharingSlotList; // 0x1a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityLegFracture
// Size: 0x198 (Inherited: 0x198)
class UDFMCharacterBuffEntityLegFracture : public UDFMCharacterBuffEntityBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityMarkEnemy
// Size: 0x200 (Inherited: 0x198)
class UDFMCharacterBuffEntityMarkEnemy : public UDFMCharacterBuffEntityBase {
public:

	float MarkRange; // 0x198(0x04)
	float LostRange; // 0x19c(0x04)
	float DurationTime; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct TMap<char, float> MarkDistanceMap; // 0x1a8(0x50)
	struct AGPCharacter* OwnerCharacter; // 0x1f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityRoleLoad
// Size: 0x208 (Inherited: 0x198)
class UDFMCharacterBuffEntityRoleLoad : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OnwerCharacter; // 0x198(0x08)
	struct UDFMCharacterAttributeCenterComponent* DFMAttributesCenter; // 0x1a0(0x08)
	char pad_1A8[0x20]; // 0x1a8(0x20)
	struct UDataTable* AllLoadEffectData; // 0x1c8(0x08)
	struct FRoleLoadBuffEffectRow CurrentRoleLoadConfig; // 0x1d0(0x28)
	struct TArray<struct FAddAttributeHandle> ActiveAttributeHandles; // 0x1f8(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityScore
// Size: 0x1b0 (Inherited: 0x198)
class UDFMCharacterBuffEntityScore : public UDFMCharacterBuffEntityBase {
public:

	struct TArray<enum class EScoreName> ScoreNames; // 0x198(0x10)
	bool bScore; // 0x1a8(0x01)
	char pad_1A9[0x7]; // 0x1a9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntitySharedEffect
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharacterBuffEntitySharedEffect : public UDFMCharacterBuffEntityBase {
public:

	enum class EPerkSharedEffectType Effect; // 0x198(0x01)
	char pad_199[0x7]; // 0x199(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntitySkillCD
// Size: 0x1b0 (Inherited: 0x198)
class UDFMCharacterBuffEntitySkillCD : public UDFMCharacterBuffEntityBase {
public:

	struct TArray<struct FChangeSkillCDInfo> ChangeSkillCDInfoArray; // 0x198(0x10)
	struct ADFMCharacter* OwnerCharacter; // 0x1a8(0x08)

	bool ChangedSkillCD(); // Function DFMGameplay.DFMCharacterBuffEntitySkillCD.ChangedSkillCD // (Final|Native|Public) // @ game+0x62855b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntitySlowHeal
// Size: 0x1c0 (Inherited: 0x198)
class UDFMCharacterBuffEntitySlowHeal : public UDFMCharacterBuffEntityBase {
public:

	float HealthMin; // 0x198(0x04)
	float HealthMAX; // 0x19c(0x04)
	float HealInterruptCD; // 0x1a0(0x04)
	bool bInterruptByDamage; // 0x1a4(0x01)
	char pad_1A5[0x3]; // 0x1a5(0x03)
	struct ADFMCharacter* OnwerCharacter; // 0x1a8(0x08)
	char pad_1B0[0x10]; // 0x1b0(0x10)

	void StartHealEffect(); // Function DFMGameplay.DFMCharacterBuffEntitySlowHeal.StartHealEffect // (Final|Native|Protected) // @ game+0x62862b0
	void OnCharaterHealthChange(float Health); // Function DFMGameplay.DFMCharacterBuffEntitySlowHeal.OnCharaterHealthChange // (Final|Native|Public) // @ game+0x6285b50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntitySpeedFactorGain
// Size: 0x1d8 (Inherited: 0x198)
class UDFMCharacterBuffEntitySpeedFactorGain : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	struct FCharacterSpeedFactor SpeedFactorGain; // 0x1a0(0x34)
	char pad_1D4[0x4]; // 0x1d4(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityStaggerAI
// Size: 0x1a8 (Inherited: 0x198)
class UDFMCharacterBuffEntityStaggerAI : public UDFMCharacterBuffEntityBase {
public:

	struct FString StaggerName; // 0x198(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityStrong
// Size: 0x1d8 (Inherited: 0x198)
class UDFMCharacterBuffEntityStrong : public UDFMCharacterBuffEntityBase {
public:

	struct TArray<struct FTalentStrongModifyInfo> BuffIdArray; // 0x198(0x10)
	struct ADFMCharacter* OwnerCharacter; // 0x1a8(0x08)
	char pad_1B0[0x28]; // 0x1b0(0x28)

	void RemoveCharacterBuffDelegateCallBackByTalent(); // Function DFMGameplay.DFMCharacterBuffEntityStrong.RemoveCharacterBuffDelegateCallBackByTalent // (Final|Native|Public) // @ game+0x6286100
	void OnBuffRemoveByTalent(int64_t targetBuff); // Function DFMGameplay.DFMCharacterBuffEntityStrong.OnBuffRemoveByTalent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnBuffChanged(uint32_t InBuffId, enum class ECharacterPart InCharacterPart); // Function DFMGameplay.DFMCharacterBuffEntityStrong.OnBuffChanged // (Final|Native|Public) // @ game+0x6285a70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntitySwarmDrone
// Size: 0x1b8 (Inherited: 0x198)
class UDFMCharacterBuffEntitySwarmDrone : public UDFMCharacterBuffEntityBase {
public:

	float MaxHealthLowerBound; // 0x198(0x04)
	int32_t SlowRecoverBuffID; // 0x19c(0x04)
	int32_t SlowRecoverAttributeOperateID; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct ADFMCharacter* OwnerCharacter; // 0x1a8(0x08)
	char pad_1B0[0x8]; // 0x1b0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharacterBuffEntityTriggerIcon
// Size: 0x1b0 (Inherited: 0x198)
class UDFMCharacterBuffEntityTriggerIcon : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	enum class EBuffEntityTriggerIconType TriggerIconType; // 0x1a0(0x01)
	char pad_1A1[0x3]; // 0x1a1(0x03)
	uint32_t TriggerBuffID; // 0x1a4(0x04)
	char pad_1A8[0x8]; // 0x1a8(0x08)

	void OnPerkIconStateDirty(); // Function DFMGameplay.DFMCharacterBuffEntityTriggerIcon.OnPerkIconStateDirty // (Final|Native|Public) // @ game+0x6285e70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityBeArrowMarked
// Size: 0x1c0 (Inherited: 0x198)
class UDFMCharBuffEntityBeArrowMarked : public UDFMCharacterBuffEntityBase {
public:

	float MarkInterval; // 0x198(0x04)
	int32_t MarkEnenmyBuffID; // 0x19c(0x04)
	int32_t MarkEnenmyBuffID_3; // 0x1a0(0x04)
	bool MarkMoveEnenmy; // 0x1a4(0x01)
	char pad_1A5[0x3]; // 0x1a5(0x03)
	struct ADFMCharacter* OwnerCharacter; // 0x1a8(0x08)
	struct FTimerHandle BuffTimerHandle; // 0x1b0(0x08)
	char pad_1B8[0x8]; // 0x1b8(0x08)

	void ShowMarkEffect(); // Function DFMGameplay.DFMCharBuffEntityBeArrowMarked.ShowMarkEffect // (Final|Native|Public) // @ game+0x6286270
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityBeMarked
// Size: 0x1c8 (Inherited: 0x198)
class UDFMCharBuffEntityBeMarked : public UDFMCharacterBuffEntityBase {
public:

	struct FName BuffTakerUIAudioStartName; // 0x198(0x08)
	struct FName BuffTakerUIAudioStopName; // 0x1a0(0x08)
	struct FName BuffMakerUIAudioStartName; // 0x1a8(0x08)
	struct FName BuffMakerUIAudioStopName; // 0x1b0(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x1b8(0x08)
	bool bIsProxSensorMark; // 0x1c0(0x01)
	bool bNeedRunMarkLogic; // 0x1c1(0x01)
	char pad_1C2[0x2]; // 0x1c2(0x02)
	enum class EOutLineEffectType OutLineEffectType; // 0x1c4(0x04)

	void ShowMarkEffect(); // Function DFMGameplay.DFMCharBuffEntityBeMarked.ShowMarkEffect // (Final|Native|Public) // @ game+0x6286290
	void ShowMapMarker(int32_t MarkType); // Function DFMGameplay.DFMCharBuffEntityBeMarked.ShowMapMarker // (Final|Native|Public) // @ game+0x62861f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC102Adrenaline
// Size: 0x1e8 (Inherited: 0x198)
class UDFMCharBuffEntityC102Adrenaline : public UDFMCharacterBuffEntityBase {
public:

	struct UCurveFloat* AdrenalineBuff_AimCurve; // 0x198(0x08)
	struct UCurveFloat* AdrenalineBuff_HitCurve; // 0x1a0(0x08)
	int32_t AimAttributeOperateId; // 0x1a8(0x04)
	int32_t HitAttributeOperateId; // 0x1ac(0x04)
	struct FName VO_Level5; // 0x1b0(0x08)
	struct FName VO_Level8; // 0x1b8(0x08)
	struct ADFMCharacter* OwnerCharacter; // 0x1c0(0x08)
	struct ADFMCharacter* SourceCharacter; // 0x1c8(0x08)
	uint32_t AdrenalineLevel; // 0x1d0(0x04)
	float CurAimAttributeValue; // 0x1d4(0x04)
	float TargetAimAttributeValue; // 0x1d8(0x04)
	float CurHitAttributeValue; // 0x1dc(0x04)
	float TargetHitAttributeValue; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)

	void UpdateBuff(); // Function DFMGameplay.DFMCharBuffEntityC102Adrenaline.UpdateBuff // (Final|Native|Public) // @ game+0x628a330
	void OnPlayerKnockDownSomeOne(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMCharBuffEntityC102Adrenaline.OnPlayerKnockDownSomeOne // (Final|Native|Public|HasOutParms) // @ game+0x6289e90
	void OnPlayerAssistKill(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMCharBuffEntityC102Adrenaline.OnPlayerAssistKill // (Final|Native|Public|HasOutParms) // @ game+0x6289d20
	bool GetCurAttributeValue(float& AimAttributeValue, float& HitAttributeValue); // Function DFMGameplay.DFMCharBuffEntityC102Adrenaline.GetCurAttributeValue // (Final|Native|Public|HasOutParms) // @ game+0x6289540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC102AdrenalineM
// Size: 0x1c8 (Inherited: 0x198)
class UDFMCharBuffEntityC102AdrenalineM : public UDFMCharacterBuffEntityBase {
public:

	struct TArray<struct FC102AdrenalineData> GameModeAdrenalineDataList; // 0x198(0x10)
	struct ADFMCharacter* OwnerCharacter; // 0x1a8(0x08)
	struct FC102AdrenalineData CurData; // 0x1b0(0x10)
	int32_t TeamOrCampID; // 0x1c0(0x04)
	char pad_1C4[0x4]; // 0x1c4(0x04)

	bool IsOnwerEnemyWithCharacter(struct ADFMCharacter* Charecter); // Function DFMGameplay.DFMCharBuffEntityC102AdrenalineM.IsOnwerEnemyWithCharacter // (Final|Native|Public) // @ game+0x6289630
	void AddAdrenalineBuff(); // Function DFMGameplay.DFMCharBuffEntityC102AdrenalineM.AddAdrenalineBuff // (Final|Native|Public) // @ game+0x6289240
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC102Blinding
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharBuffEntityC102Blinding : public UDFMCharacterBuffEntityBase {
public:

	float BlindingBuffStartTime; // 0x198(0x04)
	float BlindingBuffEndTime; // 0x19c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC102Record
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharBuffEntityC102Record : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC202BeFlash
// Size: 0x1a8 (Inherited: 0x198)
class UDFMCharBuffEntityC202BeFlash : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	struct FName LeftArmAnimName; // 0x1a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC202BeTracing
// Size: 0x198 (Inherited: 0x198)
class UDFMCharBuffEntityC202BeTracing : public UDFMCharacterBuffEntityBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityC202TrackEnemy
// Size: 0x1c8 (Inherited: 0x198)
class UDFMCharBuffEntityC202TrackEnemy : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	uint32_t TargetBuffID; // 0x1a0(0x04)
	float EffectMarkTime; // 0x1a4(0x04)
	struct TArray<struct FName> IgnoreTags; // 0x1a8(0x10)
	struct FName WeaponID; // 0x1b8(0x08)
	char pad_1C0[0x8]; // 0x1c0(0x08)

	void OnPlayerMakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMCharBuffEntityC202TrackEnemy.OnPlayerMakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x628a000
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityCustomValue
// Size: 0x238 (Inherited: 0x198)
class UDFMCharBuffEntityCustomValue : public UDFMCharacterBuffEntityBase {
public:

	struct TMap<int64_t, struct FBuffAttributeOperateCustomConfig> OperateIDCustomConfig; // 0x198(0x50)
	struct TMap<uint64_t, struct FBuffAttributeOperateCustomConfig> AttackerIDCustomConfig; // 0x1e8(0x50)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityPathTracing
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharBuffEntityPathTracing : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityPenetratingGun
// Size: 0x1a0 (Inherited: 0x198)
class UDFMCharBuffEntityPenetratingGun : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityPickUpAmmoBox
// Size: 0x1a8 (Inherited: 0x198)
class UDFMCharBuffEntityPickUpAmmoBox : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	struct FName LeftArmAnimName; // 0x1a0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityScoutMarkEnemy
// Size: 0x1c0 (Inherited: 0x198)
class UDFMCharBuffEntityScoutMarkEnemy : public UDFMCharacterBuffEntityBase {
public:

	struct ADFMCharacter* OwnerCharacter; // 0x198(0x08)
	uint32_t TargetBuffID; // 0x1a0(0x04)
	float EffectMarkTime; // 0x1a4(0x04)
	struct TArray<struct FName> IgnoreTags; // 0x1a8(0x10)
	uint32_t EMPBuffID; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)

	void OnPlayerMakeDamage(struct FDamageResultInfo& DamageResult); // Function DFMGameplay.DFMCharBuffEntityScoutMarkEnemy.OnPlayerMakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x628a0d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBDFMDeathMarkerItem
// Size: 0x5b0 (Inherited: 0x5b0)
class UOBDFMDeathMarkerItem : public UDFMDeathMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMElevatorSwitchInteractor
// Size: 0xb38 (Inherited: 0xb20)
class ADFMElevatorSwitchInteractor : public AInteractorBase {
public:

	struct AInteractor_Elevator* Elevator; // 0xb20(0x08)
	bool bNeedShowMarker; // 0xb28(0x01)
	enum class EBreakthroughUIIconType ElevatorMarkerType; // 0xb29(0x01)
	bool bIsInnerElevator; // 0xb2a(0x01)
	char pad_B2B[0x5]; // 0xb2b(0x05)
	struct UGPAudioEventAsset* ElevatorSwitchUsingAudio; // 0xb30(0x08)

	void UseElevator(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.DFMElevatorSwitchInteractor.UseElevator // (Native|Public) // @ game+0x628f630
	void OnNeedShowMarker(); // Function DFMGameplay.DFMElevatorSwitchInteractor.OnNeedShowMarker // (Final|Native|Public) // @ game+0x628ea90
	void OnNeedHideMarker(); // Function DFMGameplay.DFMElevatorSwitchInteractor.OnNeedHideMarker // (Final|Native|Public) // @ game+0x628ea70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHeavyMachineGunInteractor
// Size: 0xb20 (Inherited: 0xb20)
class ADFMHeavyMachineGunInteractor : public AInteractorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMHeavyMachineGunDynamicInteractor
// Size: 0xb20 (Inherited: 0xb20)
class ADFMHeavyMachineGunDynamicInteractor : public AInteractorBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMTieBreakerInteractor
// Size: 0xb20 (Inherited: 0xb20)
class ADFMTieBreakerInteractor : public AInteractorBase {
public:


	void UseTieBreaker(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.DFMTieBreakerInteractor.UseTieBreaker // (Final|Native|Public) // @ game+0x6307470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_AccurateTransMove
// Size: 0xb58 (Inherited: 0xb20)
class AInteractor_AccurateTransMove : public AInteractorBase {
public:

	struct UCapsuleComponent* TransitionPoint; // 0xb20(0x08)
	bool bAutoTransitionMove; // 0xb28(0x01)
	char pad_B29[0x3]; // 0xb29(0x03)
	float TransitionMoveSpeed; // 0xb2c(0x04)
	float TransitionRotateSpeed; // 0xb30(0x04)
	float MoveAnimSpeedScale; // 0xb34(0x04)
	char pad_B38[0x20]; // 0xb38(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorBaseProxy
// Size: 0xc40 (Inherited: 0xb20)
class AInteractorBaseProxy : public AInteractorBase {
public:

	struct TMap<struct FGameplayTag, struct UInteractorOptProcessComponent*> Tag2OptProcessMap; // 0xb20(0x50)
	struct TMap<struct FGameplayTag, struct FName> Tag2OptProcessNameMap; // 0xb70(0x50)
	struct TArray<struct UInteractorOptProcessComponent*> OptProcessComponents; // 0xbc0(0x10)
	struct TArray<struct UInteractorOptExecuteComponent*> OptExecuteComponents; // 0xbd0(0x10)
	struct USceneComponent* CachedInteractPoint; // 0xbe0(0x08)
	struct TMap<struct FGameplayTag, struct FGameplayTag> SwitcherStateTag2ForceProcess; // 0xbe8(0x50)
	int32_t InteractFlag; // 0xc38(0x04)
	bool bNeedCheckProcessing; // 0xc3c(0x01)
	char pad_C3D[0x3]; // 0xc3d(0x03)

	void OnRep_InteractFlag(int32_t OldFlag); // Function DFMGameplay.InteractorBaseProxy.OnRep_InteractFlag // (Final|Native|Protected) // @ game+0x227b380
	struct TArray<struct USceneComponent*> BP_GetMultiInteractPoint(); // Function DFMGameplay.InteractorBaseProxy.BP_GetMultiInteractPoint // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_GetInteractPoint(); // Function DFMGameplay.InteractorBaseProxy.BP_GetInteractPoint // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_PureContractNPC
// Size: 0xb30 (Inherited: 0xb20)
class AInteractor_PureContractNPC : public AInteractorBase {
public:

	int32_t ContractID; // 0xb20(0x04)
	char pad_B24[0x1]; // 0xb24(0x01)
	bool bContractValid; // 0xb25(0x01)
	char pad_B26[0x2]; // 0xb26(0x02)
	struct UBoxComponent* BoxComponent; // 0xb28(0x08)

	void SetContractValid(bool InContractValid); // Function DFMGameplay.Interactor_PureContractNPC.SetContractValid // (Final|Native|Public) // @ game+0x6347a20
	void ServerSetEnable(bool Enable, float EnableServerTime); // Function DFMGameplay.Interactor_PureContractNPC.ServerSetEnable // (Native|Public) // @ game+0x6347910
	void OnRep_ContractValid(); // Function DFMGameplay.Interactor_PureContractNPC.OnRep_ContractValid // (Native|Protected) // @ game+0xbcc900
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_PureContractNPC.OnOverlapEnd // (Native|Protected) // @ game+0x6340980
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_PureContractNPC.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x6340640
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_DecipherDevice
// Size: 0x1188 (Inherited: 0xb20)
class AInteractor_DecipherDevice : public AInteractorBase {
public:

	struct ABlueprintPlunder* BlueprintPlunder; // 0xb20(0x08)
	struct UWeaponBlueprintStationIconViewController* WeaponBlueprintStationIconViewController; // 0xb28(0x08)
	uint32_t DecipherDeviceId; // 0xb30(0x04)
	char pad_B34[0x4]; // 0xb34(0x04)
	struct FText NameText; // 0xb38(0x18)
	int32_t DecipherDuration; // 0xb50(0x04)
	int32_t WaitingRecycleDuration; // 0xb54(0x04)
	float InteractValidateDistance; // 0xb58(0x04)
	struct FName SpawnedTriggerBoxName; // 0xb5c(0x08)
	bool bDeviceActive; // 0xb64(0x01)
	bool bSpawned; // 0xb65(0x01)
	char pad_B66[0x2]; // 0xb66(0x02)
	struct FInventoryItemInfo PickupItemInfo; // 0xb68(0x538)
	struct FGameplayTag PickupBlueprintWeaponTag; // 0x10a0(0x08)
	struct FGameplayTag SubmitBlueprintWeaponTag; // 0x10a8(0x08)
	struct UBoxComponent* BoxComponent; // 0x10b0(0x08)
	char pad_10B8[0x8]; // 0x10b8(0x08)
	struct FName PSEffectId_TreasureLight; // 0x10c0(0x08)
	float TweenFloatTime; // 0x10c8(0x04)
	char pad_10CC[0x4]; // 0x10cc(0x04)
	struct UCurveLinearColor* CurveLinearColor_MandelBrick; // 0x10d0(0x08)
	struct UMaterialInstanceDynamic* EmissionMat_MandelBrick; // 0x10d8(0x08)
	struct FName EmissionColorName; // 0x10e0(0x08)
	struct UGPTweenFloat* TweenFloat_MandelBrick; // 0x10e8(0x08)
	struct UMaterialInstanceDynamic* EmissionMat_MandelBrickContainer0; // 0x10f0(0x08)
	struct UMaterialInstanceDynamic* EmissionMat_MandelBrickContainer1; // 0x10f8(0x08)
	struct FLinearColor SpawnPointColor; // 0x1100(0x10)
	struct FLinearColor DecipherColor; // 0x1110(0x10)
	struct UCurveLinearColor* CurveLinearColor_MandelBrickContainer_Decipher; // 0x1120(0x08)
	struct UCurveLinearColor* CurveLinearColor_MandelBrickContainer_Copy; // 0x1128(0x08)
	struct UCurveLinearColor* CurveLinearColor_MandelBrickContainer_Plunder; // 0x1130(0x08)
	struct UInteractorAsyncSkeletalMeshComponent* ContainerSkeletalMeshComponent; // 0x1138(0x08)
	struct FMandelBrickContainerEffectInfo EffectInfo; // 0x1140(0x04)
	char pad_1144[0x4]; // 0x1144(0x04)
	struct UCurveLinearColor* TempCurveLinearColor; // 0x1148(0x08)
	struct UGPTweenFloat* TweenFloat_MandelBrickContainer; // 0x1150(0x08)
	char pad_1158[0x10]; // 0x1158(0x10)
	struct UMandelBrickProcessPawnComponent* ProcessComp; // 0x1168(0x08)
	struct UInteractorAnimSwitcherComponent_MandelBrick* SwitcherComponent_MandelBrick; // 0x1170(0x08)
	char pad_1178[0x4]; // 0x1178(0x04)
	float InteractCDTime; // 0x117c(0x04)
	char pad_1180[0x8]; // 0x1180(0x08)

	void UpdateContainerSkeletalMeshColor(); // Function DFMGameplay.Interactor_DecipherDevice.UpdateContainerSkeletalMeshColor // (Final|Native|Public|BlueprintCallable) // @ game+0x6341640
	void ServerPickupBlueprintWeapon(struct ADFMCharacter* InCharacter); // Function DFMGameplay.Interactor_DecipherDevice.ServerPickupBlueprintWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x6341370
	void OnUpdateTweenFloat_MandelBrickContainer(float curValue); // Function DFMGameplay.Interactor_DecipherDevice.OnUpdateTweenFloat_MandelBrickContainer // (Final|Native|Public) // @ game+0x6341230
	void OnUpdateTweenFloat_MandelBrick(float curValue); // Function DFMGameplay.Interactor_DecipherDevice.OnUpdateTweenFloat_MandelBrick // (Final|Native|Public) // @ game+0x63411b0
	void OnRep_EffectInfo(); // Function DFMGameplay.Interactor_DecipherDevice.OnRep_EffectInfo // (Native|Public) // @ game+0x364e490
	void OnRep_DeviceActive(); // Function DFMGameplay.Interactor_DecipherDevice.OnRep_DeviceActive // (Final|Native|Public|BlueprintCallable) // @ game+0x6340ae0
	void OnRep_ClientInit(); // Function DFMGameplay.Interactor_DecipherDevice.OnRep_ClientInit // (Native|Public) // @ game+0xbcc900
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_DecipherDevice.OnOverlapEnd // (Native|Protected) // @ game+0x6340980
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_DecipherDevice.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x6340640
	void OnLoadedAllControllerClass(); // Function DFMGameplay.Interactor_DecipherDevice.OnLoadedAllControllerClass // (Final|Native|Public) // @ game+0x63403a0
	void Multicast_PutInBlueprintWeapon(); // Function DFMGameplay.Interactor_DecipherDevice.Multicast_PutInBlueprintWeapon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xbcc840
	void Multicast_PreInteractBlueprintWeapon(int32_t Type); // Function DFMGameplay.Interactor_DecipherDevice.Multicast_PreInteractBlueprintWeapon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x633f860
	void CreateEmissionEffectMaterial(struct UInteractorAsyncSkeletalMeshComponent* MandelBrickContainerSkeletalMeshComponent, struct UInteractorAsyncStaticMeshComponent* MandelBrickStaticMeshComponent); // Function DFMGameplay.Interactor_DecipherDevice.CreateEmissionEffectMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x633f100
	void ClientStartEmissionEffect_MandelBrick(bool bStart); // Function DFMGameplay.Interactor_DecipherDevice.ClientStartEmissionEffect_MandelBrick // (Final|Native|Public|BlueprintCallable) // @ game+0x633ef50
	void ClientSpawnTreasureLight(struct USceneComponent* InSceneComponent); // Function DFMGameplay.Interactor_DecipherDevice.ClientSpawnTreasureLight // (Final|Native|Public|BlueprintCallable) // @ game+0x633eed0
	void BP_SetDeviceActive(bool bActive); // Function DFMGameplay.Interactor_DecipherDevice.BP_SetDeviceActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct FVector BP_GetMarkerPointWorldLocation(); // Function DFMGameplay.Interactor_DecipherDevice.BP_GetMarkerPointWorldLocation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ElevatorSwitch
// Size: 0xb68 (Inherited: 0xb20)
class AInteractor_ElevatorSwitch : public AInteractorBase {
public:

	struct UBoxComponent* InteractorBoxComp; // 0xb20(0x08)
	struct UInteractorSwitcherComponent* InteractorSwitcherComponent; // 0xb28(0x08)
	struct AInteractor_Elevator* Interactor_Elevator; // 0xb30(0x08)
	struct AInteractor_ElevatorDoor* ElevatorOutDoorOne; // 0xb38(0x08)
	struct AInteractor_ElevatorDoor* ElevatorOutDoorTwo; // 0xb40(0x08)
	enum class EElevatorSwitchState CurState; // 0xb48(0x01)
	char pad_B49[0x3]; // 0xb49(0x03)
	struct FName ElevatorName; // 0xb4c(0x08)
	struct FName ElevatorOutDoorOneName; // 0xb54(0x08)
	struct FName ElevatorOutDoorTwoName; // 0xb5c(0x08)
	char pad_B64[0x4]; // 0xb64(0x04)

	void OnSwitcherOpenStateChange(bool CurrentState); // Function DFMGameplay.Interactor_ElevatorSwitch.OnSwitcherOpenStateChange // (Final|Native|Public) // @ game+0x6347800
	void OnShowSwither(); // Function DFMGameplay.Interactor_ElevatorSwitch.OnShowSwither // (Final|Native|Public) // @ game+0x63477c0
	void OnRep_CurState(); // Function DFMGameplay.Interactor_ElevatorSwitch.OnRep_CurState // (Final|Native|Public) // @ game+0x88f4d0
	void OnOutOpenHandle(bool bIsTop); // Function DFMGameplay.Interactor_ElevatorSwitch.OnOutOpenHandle // (Final|Native|Public) // @ game+0x63475a0
	void OnOutCloseHandle(bool bIsTop); // Function DFMGameplay.Interactor_ElevatorSwitch.OnOutCloseHandle // (Final|Native|Public) // @ game+0x6347510
	void OnHideSwither(bool bIsMovingUp); // Function DFMGameplay.Interactor_ElevatorSwitch.OnHideSwither // (Final|Native|Public) // @ game+0x35d74c0
	void EnterNewState(enum class EElevatorSwitchState TargetState); // Function DFMGameplay.Interactor_ElevatorSwitch.EnterNewState // (Final|Native|Public|BlueprintCallable) // @ game+0x6346930
	void BP_PlaySwitchAudioEvent(); // Function DFMGameplay.Interactor_ElevatorSwitch.BP_PlaySwitchAudioEvent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ExitPayment
// Size: 0xb28 (Inherited: 0xb20)
class AInteractor_ExitPayment : public AInteractorBase {
public:

	struct APlayerExitBase* PlayerExit; // 0xb20(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ExitTrigger
// Size: 0xc30 (Inherited: 0xb20)
class AInteractor_ExitTrigger : public AInteractorBase {
public:

	struct APlayerExitBase* TargetExit; // 0xb20(0x08)
	int32_t ScreenMaterialIndex; // 0xb28(0x04)
	char pad_B2C[0x4]; // 0xb2c(0x04)
	struct TMap<enum class EExitTriggerScreenType, float> ScreenAnimationCutValueMap; // 0xb30(0x50)
	float ScreenBlinkIntervalTime; // 0xb80(0x04)
	struct FGameplayTag OpenTag; // 0xb84(0x08)
	struct FGameplayTag CloseTag; // 0xb8c(0x08)
	char pad_B94[0x4]; // 0xb94(0x04)
	struct UGPAudioEventAsset* OpenAudioEvent; // 0xb98(0x08)
	struct UGPAudioEventAsset* StopAudioEvent; // 0xba0(0x08)
	char pad_BA8[0x20]; // 0xba8(0x20)
	enum class EExitTriggerScreenType CurScreenType; // 0xbc8(0x01)
	char pad_BC9[0xf]; // 0xbc9(0x0f)
	bool bUseReleaseCountDown; // 0xbd8(0x01)
	char pad_BD9[0x3]; // 0xbd9(0x03)
	struct FName ReleaseCountDownTag; // 0xbdc(0x08)
	bool bForceInitReleaseDoorBases; // 0xbe4(0x01)
	bool bForceInitReleaseExitTriggers; // 0xbe5(0x01)
	bool bSelectedForMapIcon; // 0xbe6(0x01)
	char pad_BE7[0x1]; // 0xbe7(0x01)
	struct FText ReleaseDoorName; // 0xbe8(0x18)
	struct TArray<struct AInteractor_DoorBase*> ReleaseDoorBases; // 0xc00(0x10)
	struct TArray<struct AInteractor_ExitTrigger*> ReleaseExitTriggers; // 0xc10(0x10)
	struct UCountDownReleaseMapViewController* IconCtrl; // 0xc20(0x08)
	int32_t CountDownState; // 0xc28(0x04)
	float ReleaseTimeStamp; // 0xc2c(0x04)

	void SetScreenType(enum class EExitTriggerScreenType ExitTriggerScreenType); // Function DFMGameplay.Interactor_ExitTrigger.SetScreenType // (Final|Native|Public) // @ game+0x6347ab0
	void RegisterTargetExit(struct APlayerExitBase* InTargetExit); // Function DFMGameplay.Interactor_ExitTrigger.RegisterTargetExit // (Final|Native|Public|BlueprintCallable) // @ game+0x6347890
	void OnSkeletonMeshLoadComplete(); // Function DFMGameplay.Interactor_ExitTrigger.OnSkeletonMeshLoadComplete // (Final|Native|Protected) // @ game+0x63477e0
	void OnRep_CountDownState(); // Function DFMGameplay.Interactor_ExitTrigger.OnRep_CountDownState // (Final|Native|Protected) // @ game+0x63476b0
	void OnPlayerExitResetTriggerState(struct APlayerExitBase* PlayerExitBase); // Function DFMGameplay.Interactor_ExitTrigger.OnPlayerExitResetTriggerState // (Final|Native|Public) // @ game+0x6347630
	void OnLoadedAllControllerClass(); // Function DFMGameplay.Interactor_ExitTrigger.OnLoadedAllControllerClass // (Final|Native|Protected) // @ game+0x6346de0
	void OnAwakeChanged(bool bAwake); // Function DFMGameplay.Interactor_ExitTrigger.OnAwakeChanged // (Final|Native|Public) // @ game+0x6346d30
	enum class EExitTriggerScreenType GetScreenType(); // Function DFMGameplay.Interactor_ExitTrigger.GetScreenType // (Final|Native|Public|Const) // @ game+0x6346ae0
	bool CanTrigger(); // Function DFMGameplay.Interactor_ExitTrigger.CanTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x63467b0
	void BP_StopOpenAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_ExitTrigger.BP_StopOpenAudio // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_ExitTrigger.BP_PlayOpenAudio // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_MachineGun
// Size: 0xb28 (Inherited: 0xb20)
class AInteractor_MachineGun : public AInteractorBase {
public:

	bool bControlled; // 0xb20(0x01)
	char pad_B21[0x7]; // 0xb21(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_PatrolRobot
// Size: 0xb58 (Inherited: 0xb20)
class AInteractor_PatrolRobot : public AInteractorBase {
public:

	enum class EPatrolRobotState CurState; // 0xb20(0x01)
	char pad_B21[0x3]; // 0xb21(0x03)
	float RotationZ; // 0xb24(0x04)
	float MaxHP; // 0xb28(0x04)
	struct FName PatrolTag; // 0xb2c(0x08)
	struct FName GuideInteractionTag; // 0xb34(0x08)
	char pad_B3C[0x4]; // 0xb3c(0x04)
	struct UGPPathFollowComponent* GPPathFollowCom; // 0xb40(0x08)
	struct USphereComponent* SphereComponent; // 0xb48(0x08)
	float CurrentHP; // 0xb50(0x04)
	char pad_B54[0x4]; // 0xb54(0x04)

	void StopPatrol(); // Function DFMGameplay.Interactor_PatrolRobot.StopPatrol // (Final|Native|Public|BlueprintCallable) // @ game+0x6347b50
	void StartPatrol(); // Function DFMGameplay.Interactor_PatrolRobot.StartPatrol // (Final|Native|Public|BlueprintCallable) // @ game+0x6347b30
	void OnRep_CurState(); // Function DFMGameplay.Interactor_PatrolRobot.OnRep_CurState // (Final|Native|Public) // @ game+0x63476f0
	void EnterNewState(enum class EPatrolRobotState TargetState); // Function DFMGameplay.Interactor_PatrolRobot.EnterNewState // (Final|Native|Public|BlueprintCallable) // @ game+0x63469b0
	void BP_StopPatrol(); // Function DFMGameplay.Interactor_PatrolRobot.BP_StopPatrol // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_StartPatrol(); // Function DFMGameplay.Interactor_PatrolRobot.BP_StartPatrol // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OpenLockedDoor(struct AInteractorBase* LockDoor); // Function DFMGameplay.Interactor_PatrolRobot.BP_OpenLockedDoor // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_Damaged(); // Function DFMGameplay.Interactor_PatrolRobot.BP_Damaged // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_RadarStationElevatorSwitch
// Size: 0xbc8 (Inherited: 0xb20)
class AInteractor_RadarStationElevatorSwitch : public AInteractorBase {
public:

	struct FName ElevatorName; // 0xb20(0x08)
	struct ARadarStationElevator* CachedElevator; // 0xb28(0x08)
	enum class ERadarStationElevatorSwitchType SwitchType; // 0xb30(0x01)
	bool bNeedKey2Loc; // 0xb31(0x01)
	char pad_B32[0x2]; // 0xb32(0x02)
	struct FName RelevantOpenBoxTagName; // 0xb34(0x08)
	char pad_B3C[0x4]; // 0xb3c(0x04)
	struct TArray<struct AInventoryPickup*> RelevantOpenBoxArray; // 0xb40(0x10)
	struct TArray<struct AInteractor_SingleItemContainer*> RelevantSIContainerArray; // 0xb50(0x10)
	struct TArray<struct AInteractor_HackPC*> RelevantHackPCArray; // 0xb60(0x10)
	struct UMeshComponent* CachedLock; // 0xb70(0x08)
	struct TArray<float> DelayRefreshLockColorDurationArray; // 0xb78(0x10)
	struct TArray<struct FTimerHandle> DelayRefreshLockColorTHArray; // 0xb88(0x10)
	char pad_B98[0x4]; // 0xb98(0x04)
	bool bIsLockedForColor; // 0xb9c(0x01)
	char pad_B9D[0x3]; // 0xb9d(0x03)
	float LockedDesaturation; // 0xba0(0x04)
	struct FLinearColor LockedBright; // 0xba4(0x10)
	float UnLockedDesaturation; // 0xbb4(0x04)
	struct FLinearColor UnLockedBright; // 0xbb8(0x10)

	void OnRep_bIsLockedForColor(); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.OnRep_bIsLockedForColor // (Final|Native|Protected) // @ game+0x63477a0
	void OnDelayRefreshLockColor(); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.OnDelayRefreshLockColor // (Final|Native|Protected) // @ game+0x6346dc0
	void NetMultiSwitchLockColor(bool InbLocked); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.NetMultiSwitchLockColor // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6346ca0
	void NetMultiReleaseLockSuccess(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.NetMultiReleaseLockSuccess // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6346c10
	void BP_PlayUseAudio(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.BP_PlayUseAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayReleaseLockAudio(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.BP_PlayReleaseLockAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UMeshComponent* BP_GetCachedLock(); // Function DFMGameplay.Interactor_RadarStationElevatorSwitch.BP_GetCachedLock // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_Radio
// Size: 0xb68 (Inherited: 0xb20)
class AInteractor_Radio : public AInteractorBase {
public:

	int32_t SelectedNum; // 0xb20(0x04)
	bool bHasUsed; // 0xb24(0x01)
	char pad_B25[0x3]; // 0xb25(0x03)
	struct TArray<struct APlayerExitBase*> CachedUnExploredRandomExitArray; // 0xb28(0x10)
	struct TArray<struct APlayerExitBase*> CachedSelectedExitArray; // 0xb38(0x10)
	struct TArray<uint32_t> CachedUnExploredRandomExitIdArray; // 0xb48(0x10)
	struct TArray<uint32_t> CachedSelectedExitIdArray; // 0xb58(0x10)

	void OnRep_CachedUnExploredRandomExitIdArray(); // Function DFMGameplay.Interactor_Radio.OnRep_CachedUnExploredRandomExitIdArray // (Final|Native|Protected) // @ game+0x634a5a0
	void OnRep_CachedSelectedExitIdArray(); // Function DFMGameplay.Interactor_Radio.OnRep_CachedSelectedExitIdArray // (Final|Native|Protected) // @ game+0x634a580
	void OnRep_bHasUsed(); // Function DFMGameplay.Interactor_Radio.OnRep_bHasUsed // (Final|Native|Protected) // @ game+0x634a960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_RaidAmmoBox
// Size: 0xbd8 (Inherited: 0xb20)
class AInteractor_RaidAmmoBox : public AInteractorBase {
public:

	struct FName ArmorTableName; // 0xb20(0x08)
	struct TMap<int32_t, struct FRaidAmmoBoxSetsArray> AmmoDifficultySets; // 0xb28(0x50)
	int32_t InteractCountLimit; // 0xb78(0x04)
	char pad_B7C[0x54]; // 0xb7c(0x54)
	int32_t CachedRaidDifficulty; // 0xbd0(0x04)
	char pad_BD4[0x4]; // 0xbd4(0x04)

	void PlayerInteractAmmoBox(struct ACHARACTER* OperatorPlayer); // Function DFMGameplay.Interactor_RaidAmmoBox.PlayerInteractAmmoBox // (Final|Native|Public|BlueprintCallable) // @ game+0x634aaa0
	void ClientInteractAmmoBoxResult(uint64_t PlayerUin, int32_t AddAmmoResult); // Function DFMGameplay.Interactor_RaidAmmoBox.ClientInteractAmmoBoxResult // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x6349f50
	void BP_PlayerAddAmmoResult(int32_t AddAmmoCount); // Function DFMGameplay.Interactor_RaidAmmoBox.BP_PlayerAddAmmoResult // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ShopStation
// Size: 0xb50 (Inherited: 0xb20)
class AInteractor_ShopStation : public AInteractorBase {
public:

	struct TArray<int32_t> ConfigIDArray; // 0xb20(0x10)
	struct TArray<int32_t> SellingIDArray; // 0xb30(0x10)
	struct TArray<struct FPlayerPurchaseInfo> PlayerPurchaseInfoArr; // 0xb40(0x10)

	bool ValidateRequestPurchaseInfo(struct FPlayerPurchaseInfo& RequestPurchaseInfo); // Function DFMGameplay.Interactor_ShopStation.ValidateRequestPurchaseInfo // (Final|Native|Public|HasOutParms) // @ game+0x634ade0
	void UpdateRequestPruchseInfo(struct FPlayerPurchaseInfo& RequestPurchaseInfo); // Function DFMGameplay.Interactor_ShopStation.UpdateRequestPruchseInfo // (Final|Native|Public|HasOutParms) // @ game+0x634acc0
	void OnRep_SellingIDArray(); // Function DFMGameplay.Interactor_ShopStation.OnRep_SellingIDArray // (Final|Native|Public) // @ game+0x634a8c0
	void OnRep_PlayerPurchaseInfoArr(); // Function DFMGameplay.Interactor_ShopStation.OnRep_PlayerPurchaseInfoArr // (Final|Native|Public) // @ game+0x17621d0
	bool HasThisGood(int32_t SellingID); // Function DFMGameplay.Interactor_ShopStation.HasThisGood // (Final|Native|Public) // @ game+0x634a1e0
	int32_t GetAvailableBuyNum(int32_t SellingID, uint64_t PlayerUin); // Function DFMGameplay.Interactor_ShopStation.GetAvailableBuyNum // (Final|Native|Public) // @ game+0x634a0c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_SOLLootQuest
// Size: 0xb88 (Inherited: 0xb20)
class AInteractor_SOLLootQuest : public AInteractorBase {
public:

	struct FName ItemID; // 0xb20(0x08)
	int64_t QuestID; // 0xb28(0x08)
	int64_t objectiveId; // 0xb30(0x08)
	char BindType; // 0xb38(0x01)
	bool bInteractOnce; // 0xb39(0x01)
	bool bEnableTracking; // 0xb3a(0x01)
	bool bEnableAdvancedTracking; // 0xb3b(0x01)
	float ShowTrackingRangeDist; // 0xb3c(0x04)
	float TrackingRangeRadius; // 0xb40(0x04)
	struct FVector2D TrackingRangeOffset; // 0xb44(0x08)
	float ShowPreciseHudIconRangeRadius; // 0xb4c(0x04)
	struct TArray<uint64_t> InteractCharacterArr; // 0xb50(0x10)
	char pad_B60[0x8]; // 0xb60(0x08)
	struct UBoxComponent* CachedBox; // 0xb68(0x08)
	char pad_B70[0x18]; // 0xb70(0x18)

	void OnSolRefreshQuest(bool bGMAddQuest); // Function DFMGameplay.Interactor_SOLLootQuest.OnSolRefreshQuest // (Final|Native|Protected) // @ game+0x634ee30
	void OnRep_InteractCharacterArr(); // Function DFMGameplay.Interactor_SOLLootQuest.OnRep_InteractCharacterArr // (Final|Native|Protected) // @ game+0x634ecd0
	void OnPlayerControllerChanged(struct APlayerController* NewController); // Function DFMGameplay.Interactor_SOLLootQuest.OnPlayerControllerChanged // (Final|Native|Protected) // @ game+0x634eb90
	void OnInteractQuestObject(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SOLLootQuest.OnInteractQuestObject // (Native|Public|BlueprintCallable) // @ game+0x628f630
	void OnClientQuestObjectionUpdate(int64_t InQuestId, int64_t InQuestObjectionID, char ObjectionState, char ObjectionType); // Function DFMGameplay.Interactor_SOLLootQuest.OnClientQuestObjectionUpdate // (Final|Native|Protected) // @ game+0x634e4a0
	void InitQuestLootInteractor(); // Function DFMGameplay.Interactor_SOLLootQuest.InitQuestLootInteractor // (Final|Native|Protected) // @ game+0x634e110
	struct UBoxComponent* BP_GetBox(); // Function DFMGameplay.Interactor_SOLLootQuest.BP_GetBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_TimeBomb
// Size: 0xba0 (Inherited: 0xb20)
class AInteractor_TimeBomb : public AInteractorBase {
public:

	char pad_B20[0x4]; // 0xb20(0x04)
	int32_t WrongWirePunishTime; // 0xb24(0x04)
	int32_t CutWiresNum; // 0xb28(0x04)
	int32_t TotalBombWiresNum; // 0xb2c(0x04)
	int64_t BombEndDateTicks; // 0xb30(0x08)
	struct TArray<struct FBombWireInfo> WiresInfo; // 0xb38(0x10)
	enum class ETimeBombState BombState; // 0xb48(0x01)
	char pad_B49[0x7]; // 0xb49(0x07)
	struct AGPCharacter* OperatingPlayer; // 0xb50(0x08)
	enum class ETimeBombWireLayoutType WireLayoutType; // 0xb58(0x01)
	char pad_B59[0x7]; // 0xb59(0x07)
	/*struct FMulticastInlineDelegate*/char OnBombStateChangedEvent[0x10]; // 0xb60(0x10)
	/*struct FMulticastInlineDelegate*/char OnBombBeingOperatedEvent[0x10]; // 0xb70(0x10)
	/*struct FMulticastInlineDelegate*/char OnCutWiresNumUpdatedEvent[0x10]; // 0xb80(0x10)
	/*struct FMulticastInlineDelegate*/char OnWireHasBeenCutEvent[0x10]; // 0xb90(0x10)

	void SetTimeBombExploded(); // Function DFMGameplay.Interactor_TimeBomb.SetTimeBombExploded // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0xbcc840
	void SetTimeBombBeingOperated(struct AGPCharacter* InOperatingPlayer); // Function DFMGameplay.Interactor_TimeBomb.SetTimeBombBeingOperated // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x634f300
	void SetTimeBombBeingDisabled(); // Function DFMGameplay.Interactor_TimeBomb.SetTimeBombBeingDisabled // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0xbcc900
	void SetTimeBombActivated(int32_t CountdownDuration, int32_t WiresNum, int32_t PunishTime); // Function DFMGameplay.Interactor_TimeBomb.SetTimeBombActivated // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x634f210
	void ServerSetTimeBombBeingOperated(struct AGPCharacter* InOperatingPlayer); // Function DFMGameplay.Interactor_TimeBomb.ServerSetTimeBombBeingOperated // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x634f080
	void ServerDoInterrupt(struct FGameplayTag InterruptTag, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.Interactor_TimeBomb.ServerDoInterrupt // (Final|Native|Public|BlueprintCallable) // @ game+0x634efb0
	void ServerCutWire(int32_t WireIdx); // Function DFMGameplay.Interactor_TimeBomb.ServerCutWire // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // @ game+0x36074d0
	void OnRep_OperatingPlayer(); // Function DFMGameplay.Interactor_TimeBomb.OnRep_OperatingPlayer // (Final|Native|Private) // @ game+0x634ed10
	void OnRep_CutWiresNum(); // Function DFMGameplay.Interactor_TimeBomb.OnRep_CutWiresNum // (Final|Native|Private) // @ game+0x634ecb0
	void OnRep_BombState(); // Function DFMGameplay.Interactor_TimeBomb.OnRep_BombState // (Final|Native|Private) // @ game+0x634ec90
	void NotifyWireHasBeenCut(int32_t CodeWireIdx); // Function DFMGameplay.Interactor_TimeBomb.NotifyWireHasBeenCut // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x633f860
	void GPTServerSetTimeBombBeingOperated(struct AGPCharacter* InOperatingPlayer); // Function DFMGameplay.Interactor_TimeBomb.GPTServerSetTimeBombBeingOperated // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x634df70
	void GPTServerCutWire(struct UBombCutWireInfo* WireInfo); // Function DFMGameplay.Interactor_TimeBomb.GPTServerCutWire // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x634dee0
	void GPTServer_SetTimeBombBeingDisabled(); // Function DFMGameplay.Interactor_TimeBomb.GPTServer_SetTimeBombBeingDisabled // (Final|Native|Public) // @ game+0x634e000
	void GPTClientSetTimeBombBeingOperated(); // Function DFMGameplay.Interactor_TimeBomb.GPTClientSetTimeBombBeingOperated // (Final|Native|Public|BlueprintCallable) // @ game+0x634de10
	void GPTClientCutWire(int32_t WireIdx); // Function DFMGameplay.Interactor_TimeBomb.GPTClientCutWire // (Final|Native|Public|BlueprintCallable) // @ game+0x634dd90
	void STATIC_GPTClient_SetTimeBombBeingDisabled(struct UObject* WorldContext, int32_t Index); // Function DFMGameplay.Interactor_TimeBomb.GPTClient_SetTimeBombBeingDisabled // (Final|Native|Static|Public) // @ game+0x634de30
	int32_t GetBombRemainingSecTime(); // Function DFMGameplay.Interactor_TimeBomb.GetBombRemainingSecTime // (Final|Native|Public|BlueprintCallable) // @ game+0x634e050
	int32_t GetBombRemainingMilsecTime(); // Function DFMGameplay.Interactor_TimeBomb.GetBombRemainingMilsecTime // (Final|Native|Public|BlueprintCallable) // @ game+0x634e020
	void ClearOperator(); // Function DFMGameplay.Interactor_TimeBomb.ClearOperator // (Final|Native|Public|BlueprintCallable) // @ game+0x634dcd0
	bool CheckWireHasBeenCut(int32_t WireIdx); // Function DFMGameplay.Interactor_TimeBomb.CheckWireHasBeenCut // (Final|Native|Public|BlueprintCallable) // @ game+0x634dc40
	void BP_TimeBombActivate(int32_t CountdownDuration); // Function DFMGameplay.Interactor_TimeBomb.BP_TimeBombActivate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerQuitTimeBomb(); // Function DFMGameplay.Interactor_TimeBomb.BP_ServerQuitTimeBomb // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AddWireInfo(int32_t LightIdx); // Function DFMGameplay.Interactor_TimeBomb.AddWireInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x634d9d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PickupBase
// Size: 0xba0 (Inherited: 0xb20)
class APickupBase : public AInteractorBase {
public:

	char pad_B20[0x10]; // 0xb20(0x10)
	struct UParticleSystemComponent* PickupEffectComp; // 0xb30(0x08)
	bool bIsHiddenItem; // 0xb38(0x01)
	char pad_B39[0x7]; // 0xb39(0x07)
	struct UShapeComponent* CollisionComp; // 0xb40(0x08)
	char pad_B48[0x8]; // 0xb48(0x08)
	uint64_t InventoryGID; // 0xb50(0x08)
	enum class EPickupSourceType SourceType; // 0xb58(0x01)
	char pad_B59[0x7]; // 0xb59(0x07)
	bool bShouldDisplayPickupMesh; // 0xb60(0x01)
	char pad_B61[0x3]; // 0xb61(0x03)
	float LDMaxDrawDistance; // 0xb64(0x04)
	struct FName InventoryIdName; // 0xb68(0x08)
	struct UClass* InventoryType; // 0xb70(0x08)
	int32_t StackCount; // 0xb78(0x04)
	bool CanDestroyed; // 0xb7c(0x01)
	char pad_B7D[0x3]; // 0xb7d(0x03)
	int32_t Durability; // 0xb80(0x04)
	float ZOffset; // 0xb84(0x04)
	float PitchRotate; // 0xb88(0x04)
	float YawRotate; // 0xb8c(0x04)
	float RollRotate; // 0xb90(0x04)
	float UnitScale; // 0xb94(0x04)
	int32_t Priority; // 0xb98(0x04)
	char pad_B9C[0x4]; // 0xb9c(0x04)

	void OnRep_StackCount(); // Function DFMGameplay.PickupBase.OnRep_StackCount // (Native|Protected) // @ game+0x364e7b0
	void OnRep_Durability(); // Function DFMGameplay.PickupBase.OnRep_Durability // (Native|Protected) // @ game+0x364e4b0
	void InventoryIdNameUpdated(); // Function DFMGameplay.PickupBase.InventoryIdNameUpdated // (Native|Event|Protected|BlueprintEvent) // @ game+0xbcc840
	void InventoryGidUpdated(); // Function DFMGameplay.PickupBase.InventoryGidUpdated // (Final|Native|Protected) // @ game+0x63b3a20
	struct FText GetItemName(); // Function DFMGameplay.PickupBase.GetItemName // (Native|Public|Const) // @ game+0x63b3780
	void ClientInventoryUpdated(); // Function DFMGameplay.PickupBase.ClientInventoryUpdated // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x128d870
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RadarStationElevatorSwitch
// Size: 0xbc8 (Inherited: 0xb20)
class ARadarStationElevatorSwitch : public AInteractorBase {
public:

	struct FName ElevatorName; // 0xb20(0x08)
	struct ARadarStationElevator* CachedElevator; // 0xb28(0x08)
	enum class ESOLRadarStationElevatorSwitchType SwitchType; // 0xb30(0x01)
	bool bNeedKey2Loc; // 0xb31(0x01)
	char pad_B32[0x2]; // 0xb32(0x02)
	struct FName RelevantOpenBoxTagName; // 0xb34(0x08)
	char pad_B3C[0x4]; // 0xb3c(0x04)
	struct TArray<struct AInventoryPickup*> RelevantOpenBoxArray; // 0xb40(0x10)
	struct TArray<struct AInteractor_SingleItemContainer*> RelevantSIContainerArray; // 0xb50(0x10)
	struct TArray<struct AInteractor_HackPC*> RelevantHackPCArray; // 0xb60(0x10)
	struct UMeshComponent* CachedLock; // 0xb70(0x08)
	struct TArray<float> DelayRefreshLockColorDurationArray; // 0xb78(0x10)
	struct TArray<struct FTimerHandle> DelayRefreshLockColorTHArray; // 0xb88(0x10)
	char pad_B98[0x4]; // 0xb98(0x04)
	bool bIsLockedForColor; // 0xb9c(0x01)
	char pad_B9D[0x3]; // 0xb9d(0x03)
	float LockedDesaturation; // 0xba0(0x04)
	struct FLinearColor LockedBright; // 0xba4(0x10)
	float UnLockedDesaturation; // 0xbb4(0x04)
	struct FLinearColor UnLockedBright; // 0xbb8(0x10)

	void OnRep_bIsLockedForColor(); // Function DFMGameplay.RadarStationElevatorSwitch.OnRep_bIsLockedForColor // (Final|Native|Protected) // @ game+0x63ebe50
	void OnDelayRefreshLockColor(); // Function DFMGameplay.RadarStationElevatorSwitch.OnDelayRefreshLockColor // (Final|Native|Protected) // @ game+0x63eb8b0
	void NetMultiSwitchLockColor(bool InbLocked); // Function DFMGameplay.RadarStationElevatorSwitch.NetMultiSwitchLockColor // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6346ca0
	void NetMultiReleaseLockSuccess(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.RadarStationElevatorSwitch.NetMultiReleaseLockSuccess // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6346c10
	void BP_PlayUseAudio(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.RadarStationElevatorSwitch.BP_PlayUseAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayReleaseLockAudio(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.RadarStationElevatorSwitch.BP_PlayReleaseLockAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UMeshComponent* BP_GetCachedLock(); // Function DFMGameplay.RadarStationElevatorSwitch.BP_GetCachedLock // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEquipmentItemSkeletalMesh
// Size: 0x78 (Inherited: 0x68)
class UDFMEquipmentItemSkeletalMesh : public UDFMEquipmentItemBase {
public:

	struct TWeakObjectPtr<struct UGPSkeletalMeshComponent> MeshComp; // 0x68(0x08)
	struct TWeakObjectPtr<struct UGPSkeletalMeshComponent> MeshCompFPP; // 0x70(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEquipmentItemStaticMesh
// Size: 0x78 (Inherited: 0x68)
class UDFMEquipmentItemStaticMesh : public UDFMEquipmentItemBase {
public:

	struct TWeakObjectPtr<struct UStaticMeshComponent> MeshComp; // 0x68(0x08)
	struct TWeakObjectPtr<struct UStaticMeshComponent> MeshCompFPP; // 0x70(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBAIMarkerItem
// Size: 0x5d0 (Inherited: 0x5d0)
class UOBAIMarkerItem : public UDFMFriendMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBFriendMarkerItem
// Size: 0x5e0 (Inherited: 0x5d0)
class UOBFriendMarkerItem : public UDFMFriendMarkerItem {
public:

	char pad_5D0[0x10]; // 0x5d0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSkillFSMInstance
// Size: 0x738 (Inherited: 0x728)
class UDFMSkillFSMInstance : public UDFMFSMInstance {
public:

	struct UDFMFSMSkillEntityComponent* DFMSkillFSMStateMachineComponent; // 0x728(0x08)
	enum class ESkillUISlot UISlot; // 0x730(0x01)
	char pad_731[0x3]; // 0x731(0x03)
	int32_t CurrentSkillID; // 0x734(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_20V20
// Size: 0x880 (Inherited: 0x7c0)
class AGameMode_20V20 : public ADFMGameMode {
public:

	int32_t TargetKillCount; // 0x7c0(0x04)
	int32_t MaxMatchDuration; // 0x7c4(0x04)
	int32_t RebornTime; // 0x7c8(0x04)
	int32_t SingleKillValue; // 0x7cc(0x04)
	int32_t OneSideCountLimit; // 0x7d0(0x04)
	char pad_7D4[0x4]; // 0x7d4(0x04)
	struct AGameState_20V20* GameState_20V20; // 0x7d8(0x08)
	char pad_7E0[0x38]; // 0x7e0(0x38)
	/*struct FMulticastInlineDelegate*/char OnAllPlayerLoginFinishedDelegate[0x10]; // 0x818(0x10)
	char pad_828[0x58]; // 0x828(0x58)

	void OnReachKillCount(int32_t Camp); // Function DFMGameplay.GameMode_20V20.OnReachKillCount // (Native|Event|Public|BlueprintEvent) // @ game+0x631d5b0
	void OnPlayerDied(struct AController* Controller); // Function DFMGameplay.GameMode_20V20.OnPlayerDied // (Native|Event|Public|BlueprintEvent) // @ game+0x631d2f0
	void OnPlayerBeKilled(struct FKillInfo& NewAddKillInfo); // Function DFMGameplay.GameMode_20V20.OnPlayerBeKilled // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x631d190
	void OnMatchTimeout(); // Function DFMGameplay.GameMode_20V20.OnMatchTimeout // (Native|Event|Public|BlueprintEvent) // @ game+0x631d170
	void OnEndMatch(); // Function DFMGameplay.GameMode_20V20.OnEndMatch // (Exec|Native|Public) // @ game+0x631cf60
	struct AActor* ChoosePlayerStart_20V20(struct AController* Player); // Function DFMGameplay.GameMode_20V20.ChoosePlayerStart_20V20 // (Final|Native|Public|BlueprintCallable) // @ game+0x631c900
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_PVPVE
// Size: 0x990 (Inherited: 0x7c0)
class AGameMode_PVPVE : public ADFMGameMode {
public:

	char pad_7C0[0x4]; // 0x7c0(0x04)
	float DelayDieDuration; // 0x7c4(0x04)
	char pad_7C8[0x50]; // 0x7c8(0x50)
	int32_t MaxMatchDuration; // 0x818(0x04)
	bool bLimitMatchDuration; // 0x81c(0x01)
	char pad_81D[0x3]; // 0x81d(0x03)
	struct AGameState_PVPVE* GameState_PVPVE; // 0x820(0x08)
	struct UGPSeamlessEnterSubsystem* IrisEnterSubsystem; // 0x828(0x08)
	struct APlayerStart* FixPosPlayerStart; // 0x830(0x08)
	struct TMap<uint64_t, struct ADFMCharacter*> DeadPlayerCharacterCache; // 0x838(0x50)
	char pad_888[0x60]; // 0x888(0x60)
	bool bUsePilotVerify; // 0x8e8(0x01)
	char pad_8E9[0x3]; // 0x8e9(0x03)
	float TolerableDelayTime; // 0x8ec(0x04)
	char pad_8F0[0x10]; // 0x8f0(0x10)
	struct UDFMSOLStatisticsComponent* SOLStatisticsComponent; // 0x900(0x08)
	char pad_908[0x30]; // 0x908(0x30)
	/*struct TSet<struct TWeakObjectPtr<struct ADFMCharacter>>*/char PilotCharacters[0x50]; // 0x938(0x50)
	char pad_988[0x8]; // 0x988(0x08)

	void OnSOLPlayerBeKilled(struct FKillInfo& NewAddKillInfo, struct UGPModularWeaponDesc* Desc); // Function DFMGameplay.GameMode_PVPVE.OnSOLPlayerBeKilled // (Final|Native|Public|HasOutParms) // @ game+0x631d6f0
	void OnServerPlayerRescueSucceed(struct AGPCharacterBase* Player, struct AGPCharacterBase* RescueTarget); // Function DFMGameplay.GameMode_PVPVE.OnServerPlayerRescueSucceed // (Final|Native|Public) // @ game+0x631d930
	void OnServerPlayerBeRescued(struct AGPCharacter* BeRescuedPlayer); // Function DFMGameplay.GameMode_PVPVE.OnServerPlayerBeRescued // (Final|Native|Public) // @ game+0x631d8b0
	void OnProcSyncPlayerReq(uint64_t PlayerId); // Function DFMGameplay.GameMode_PVPVE.OnProcSyncPlayerReq // (Native|Public) // @ game+0x631d3f0
	void OnProcessPlayerBeKillOrBeKnockDownScore(struct FKillInfo& NewAddKillInfo); // Function DFMGameplay.GameMode_PVPVE.OnProcessPlayerBeKillOrBeKnockDownScore // (Final|Native|Public|HasOutParms) // @ game+0x631d480
	void OnPlayerBeKnockedDown(struct FKillInfo& NewAddKillInfo); // Function DFMGameplay.GameMode_PVPVE.OnPlayerBeKnockedDown // (Final|Native|Public|HasOutParms) // @ game+0x631d240
	void OnEndMatch(); // Function DFMGameplay.GameMode_PVPVE.OnEndMatch // (Exec|Native|Public) // @ game+0x631cf80
	void NotifyAllPlayerExitWaitingAction(); // Function DFMGameplay.GameMode_PVPVE.NotifyAllPlayerExitWaitingAction // (Final|Native|Public) // @ game+0x631cce0
	void DoPilotVerify(); // Function DFMGameplay.GameMode_PVPVE.DoPilotVerify // (Final|Native|Public) // @ game+0x631c990
	void ChangeCharacterToWaitingStart(struct ASOLCharacter* SOLCharacter); // Function DFMGameplay.GameMode_PVPVE.ChangeCharacterToWaitingStart // (Final|Native|Public) // @ game+0x631c880
	void CancelLimitMatchDuration(); // Function DFMGameplay.GameMode_PVPVE.CancelLimitMatchDuration // (Final|Exec|Native|Public) // @ game+0x631c860
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_SafeHouse
// Size: 0x7d0 (Inherited: 0x7c0)
class AGameMode_SafeHouse : public ADFMGameMode {
public:

	struct TArray<struct FName> PlayerStartTags; // 0x7c0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_Tutorial3C
// Size: 0x7e0 (Inherited: 0x7c0)
class AGameMode_Tutorial3C : public ADFMGameMode {
public:

	struct FString QuestDir; // 0x7c0(0x10)
	int32_t QuestID; // 0x7d0(0x04)
	char pad_7D4[0xc]; // 0x7d4(0x0c)

	void OnQuestAsyncLoadComplete(struct AGPQuest* Quest); // Function DFMGameplay.GameMode_Tutorial3C.OnQuestAsyncLoadComplete // (Final|Native|Protected) // @ game+0x63226d0
	void OnClientGameLoadingFinished(int32_t MapID, enum class EGameFlowStageType StageType); // Function DFMGameplay.GameMode_Tutorial3C.OnClientGameLoadingFinished // (Final|Native|Protected) // @ game+0x6322340
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameState_20V20
// Size: 0xab0 (Inherited: 0xa38)
class AGameState_20V20 : public ADFMGameState {
public:

	struct TArray<int32_t> CampKillList; // 0xa38(0x10)
	struct TArray<int32_t> CampIdList; // 0xa48(0x10)
	struct TArray<int32_t> PlayerKillList; // 0xa58(0x10)
	struct TArray<int32_t> PlayerDeathList; // 0xa68(0x10)
	struct TArray<int32_t> PlayerAssistList; // 0xa78(0x10)
	struct TArray<int32_t> PlayerIdList; // 0xa88(0x10)
	int32_t TargetKillCount; // 0xa98(0x04)
	char pad_A9C[0x4]; // 0xa9c(0x04)
	struct FString LeftTime; // 0xaa0(0x10)

	void OnPlayerDied(int32_t Camp); // Function DFMGameplay.GameState_20V20.OnPlayerDied // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void MulticastMatchEnd(int32_t Camp); // Function DFMGameplay.GameState_20V20.MulticastMatchEnd // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0x6322160
	void MatchEndEvent(int32_t Camp); // Function DFMGameplay.GameState_20V20.MatchEndEvent // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	int32_t GetKillCount(int32_t Camp); // Function DFMGameplay.GameState_20V20.GetKillCount // (Final|Native|Public|BlueprintCallable) // @ game+0x6321f50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameState_PVPVE
// Size: 0xba0 (Inherited: 0xa38)
class AGameState_PVPVE : public ADFMGameState {
public:

	struct USOLTimeLineComponnet* TimeLineEventComponent; // 0xa38(0x08)
	struct UDFMContractManagerComponent* ContractManagerComponent; // 0xa40(0x08)
	char pad_A48[0x10]; // 0xa48(0x10)
	struct TArray<uint64_t> BeAimedPlayerUinArr; // 0xa58(0x10)
	struct TArray<struct FString> ScriptLevelPaths; // 0xa68(0x10)
	char pad_A78[0x4]; // 0xa78(0x04)
	struct FVector2D SOLRemainTimeHUDViewportPos; // 0xa7c(0x08)
	char pad_A84[0x4]; // 0xa84(0x04)
	struct TArray<struct APlayerExitBase*> CachedIconLoadedByMiniMap; // 0xa88(0x10)
	float EarlyEndExitCutSceneTime; // 0xa98(0x04)
	char pad_A9C[0x4]; // 0xa9c(0x04)
	struct FSoftObjectPath CommonExitLevelPath; // 0xaa0(0x18)
	struct FGamePlayWantedInfo WantedInfo; // 0xab8(0x10)
	struct ABlueprintPlunder* BlueprintPlunder; // 0xac8(0x08)
	char pad_AD0[0x28]; // 0xad0(0x28)
	bool bCanSwitchToAbseil; // 0xaf8(0x01)
	bool bMatchRealStart; // 0xaf9(0x01)
	char pad_AFA[0x6]; // 0xafa(0x06)
	struct UClass* FXProxy_Exit; // 0xb00(0x08)
	struct UClass* FXProxy_Exit_PC; // 0xb08(0x08)
	char pad_B10[0x8]; // 0xb10(0x08)
	struct TArray<struct FAllRandomSIContainerSafeBoxInfo> AllRandomSIContainerSafeBoxInfo; // 0xb18(0x10)
	struct FName SingleItemContainerSafeBoxTagName; // 0xb28(0x08)
	int32_t UnlockMiniGameCylinderMinNum; // 0xb30(0x04)
	int32_t UnlockMiniGameCylinderMaxNum; // 0xb34(0x04)
	struct TMap<struct FString, struct APOITriggerActor*> POITriggerMap; // 0xb38(0x50)
	struct TArray<struct FDoorOpenInfo> DoorOpenInfoList; // 0xb88(0x10)
	char pad_B98[0x8]; // 0xb98(0x08)

	void SetPlayerCanAbseil(bool CanAbseil); // Function DFMGameplay.GameState_PVPVE.SetPlayerCanAbseil // (Final|Native|Public) // @ game+0x6322ef0
	void OnSOLStartMatchInfoHUDDisplayEnd(); // Function DFMGameplay.GameState_PVPVE.OnSOLStartMatchInfoHUDDisplayEnd // (Final|Native|Public) // @ game+0x6322930
	void OnSOLPlayerLoadingEnterFinish(int32_t MapID, enum class EGameFlowStageType StageType); // Function DFMGameplay.GameState_PVPVE.OnSOLPlayerLoadingEnterFinish // (Final|Native|Public) // @ game+0x6322870
	void OnServerPlayerSettlement(enum class EMatchOverReason MatchOverReason, struct ADFMCharacter* CHARACTER); // Function DFMGameplay.GameState_PVPVE.OnServerPlayerSettlement // (Final|Native|Public) // @ game+0x6322950
	void OnRep_CanSwitchToAbseil(); // Function DFMGameplay.GameState_PVPVE.OnRep_CanSwitchToAbseil // (Final|Native|Public) // @ game+0x63227f0
	void OnRep_bMatchRealStart(); // Function DFMGameplay.GameState_PVPVE.OnRep_bMatchRealStart // (Final|Native|Public) // @ game+0x6322850
	void OnRep_BeAimedPlayerUinArr(); // Function DFMGameplay.GameState_PVPVE.OnRep_BeAimedPlayerUinArr // (Final|Native|Protected) // @ game+0x63227d0
	bool GetPlayerCanAbseil(); // Function DFMGameplay.GameState_PVPVE.GetPlayerCanAbseil // (Final|Native|Public|Const) // @ game+0x63220e0
	void DoRandomSIContainerSafeBoxID(struct FName InSafeBoxArea); // Function DFMGameplay.GameState_PVPVE.DoRandomSIContainerSafeBoxID // (Final|Native|Protected) // @ game+0x6321740
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLHealthDataComponent
// Size: 0x928 (Inherited: 0x890)
class USOLHealthDataComponent : public UDFMHealthDataComponent {
public:

	struct UDataTable* BuffTriggerRow; // 0x890(0x08)
	char pad_898[0x50]; // 0x898(0x50)
	/*struct FMulticastInlineDelegate*/char OnSolHealthStateChanged[0x10]; // 0x8e8(0x10)
	/*struct FMulticastInlineDelegate*/char OnSolHealthChanged[0x10]; // 0x8f8(0x10)
	char pad_908[0x8]; // 0x908(0x08)
	struct TArray<enum class ECharacterPartHealthState> PartHealthStates; // 0x910(0x10)
	bool bEnableHealthState; // 0x920(0x01)
	bool bInnerAddBuff; // 0x921(0x01)
	char pad_922[0x6]; // 0x922(0x06)

	void TriggerWoundOnHit(struct FHealthBuffTrigger& BuffTrigger, struct FDamageResultInfo& DamageResultInfo, enum class ECharacterPart& HitPart); // Function DFMGameplay.SOLHealthDataComponent.TriggerWoundOnHit // (Final|Native|Protected|HasOutParms) // @ game+0x6404bf0
	void TriggerDizzyOnHit(struct FHealthBuffTrigger& BuffTrigger, struct FDamageResultInfo& DamageResultInfo, enum class ECharacterPart& HitPart); // Function DFMGameplay.SOLHealthDataComponent.TriggerDizzyOnHit // (Final|Native|Protected|HasOutParms) // @ game+0x6404a80
	void TickRecoverHealth(float TimeSeconds); // Function DFMGameplay.SOLHealthDataComponent.TickRecoverHealth // (Final|Native|Protected) // @ game+0x6404a00
	void StartRecoverHealth(); // Function DFMGameplay.SOLHealthDataComponent.StartRecoverHealth // (Final|Native|Protected) // @ game+0x6404900
	void SetBodyPartHealth(enum class ECharacterPart Part, float NewMaxHealth); // Function DFMGameplay.SOLHealthDataComponent.SetBodyPartHealth // (Final|Native|Protected|BlueprintCallable) // @ game+0x64046d0
	void ResetBodyPartHealth(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.ResetBodyPartHealth // (Final|Native|Public) // @ game+0x64044d0
	void OnServerRemoveBuff(uint32_t BuffId, enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.OnServerRemoveBuff // (Final|Native|Protected) // @ game+0x6404310
	void OnServerAddBuff(uint32_t BuffId, enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.OnServerAddBuff // (Final|Native|Protected) // @ game+0x6404250
	void OnRep_PartHealthStates(struct TArray<enum class ECharacterPartHealthState> OldHealthStates); // Function DFMGameplay.SOLHealthDataComponent.OnRep_PartHealthStates // (Final|Native|Protected) // @ game+0x6403f30
	float GetRecoverHealthFrequnce(); // Function DFMGameplay.SOLHealthDataComponent.GetRecoverHealthFrequnce // (Final|Native|Public) // @ game+0x6402a50
	enum class ECharacterPartHealthState GetPartHealthStateByHealth(enum class ECharacterPart Part, float HealthValue); // Function DFMGameplay.SOLHealthDataComponent.GetPartHealthStateByHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x6402690
	enum class ECharacterPartHealthState GetPartHealthState(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.GetPartHealthState // (Final|Native|Public|BlueprintCallable) // @ game+0x6402600
	float GetHealthTriggerRateAlpha(enum class ECharacterPart HitPart); // Function DFMGameplay.SOLHealthDataComponent.GetHealthTriggerRateAlpha // (Final|Native|Public) // @ game+0x6402570
	struct FHealthStateTriggerRow GetHealthHitTrigger(enum class ECharacterPart HitPart); // Function DFMGameplay.SOLHealthDataComponent.GetHealthHitTrigger // (Final|Native|Public) // @ game+0x6402450
	float GetCharacterTreatableHelmetHealth(); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterTreatableHelmetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x6402420
	float GetCharacterTreatableHealth(); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterTreatableHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x64023f0
	float GetCharacterTreatableArmorHealth(); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterTreatableArmorHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x64023c0
	float GetCharacterPartTreatableHealth(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterPartTreatableHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x6402330
	float GetCharacterPartMaxHealth(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterPartMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x64022a0
	float GetCharacterPartHealthPercent(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterPartHealthPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x6402210
	float GetCharacterPartHealth(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.GetCharacterPartHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x6402180
	float GetBuffTriggerProbability(struct FHealthStateBuffConfig& Config, float Health); // Function DFMGameplay.SOLHealthDataComponent.GetBuffTriggerProbability // (Final|Native|Public|HasOutParms) // @ game+0x6402090
	enum class ECharacterPart FindBestHealthPart(); // Function DFMGameplay.SOLHealthDataComponent.FindBestHealthPart // (Final|Native|Public) // @ game+0x6402060
	void CureBodyPart(enum class ECharacterPart Part); // Function DFMGameplay.SOLHealthDataComponent.CureBodyPart // (Final|Native|Public) // @ game+0x6401dd0
	void CureBodyDefault(int32_t CureNum); // Function DFMGameplay.SOLHealthDataComponent.CureBodyDefault // (Final|Native|Public) // @ game+0x6401d50
	void AddHealthSystemBuff(int32_t BuffId, enum class ECharacterPart BuffPart, struct AActor* SourceActor, struct AActor* MakerInstigator, uint64_t AmmoId); // Function DFMGameplay.SOLHealthDataComponent.AddHealthSystemBuff // (Final|Native|Protected) // @ game+0x6401960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.OBDFMImpendingDeathMarkerItem
// Size: 0x5a0 (Inherited: 0x5a0)
class UOBDFMImpendingDeathMarkerItem : public UDFMImpendingDeathMarkerItem {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSafeHouseInteractorComponent
// Size: 0x6e0 (Inherited: 0x6e0)
class UDFMSafeHouseInteractorComponent : public UDFMInteractorComponentBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorComponent
// Size: 0x770 (Inherited: 0x6e0)
class UInteractorComponent : public UDFMInteractorComponentBase {
public:

	float RescueZDistance; // 0x6e0(0x04)
	float CameraForwardCheckRescueDistance; // 0x6e4(0x04)
	struct AGPCharacter* GPOwner; // 0x6e8(0x08)
	struct TArray<struct FGeneralSkillInfo> GeneralSkillInfos; // 0x6f0(0x10)
	struct TArray<struct AActor*> MostPotentialRescueInteractors; // 0x700(0x10)
	struct TMap<uint64_t, struct AInventoryPickup*> LastPickups; // 0x710(0x50)
	bool bCurrentInteractUIIsOpened; // 0x760(0x01)
	bool UpdateVisableBeforeInteract; // 0x761(0x01)
	bool bUseResortRescueTags; // 0x762(0x01)
	char pad_763[0xd]; // 0x763(0x0d)

	void ServerResetCharacterToWaitingMultiInteract(struct AActor* Interactor, struct AGPCharacter* GPCharacter); // Function DFMGameplay.InteractorComponent.ServerResetCharacterToWaitingMultiInteract // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6357ba0
	void ServerMultiInteractAction(struct AActor* Interactor, int32_t InteractIndex); // Function DFMGameplay.InteractorComponent.ServerMultiInteractAction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6357ad0
	void ServerExchangeMultiInteractIndex(struct AActor* Interactor, struct AGPCharacter* GPCharacter, int32_t TargetInteractIndex, struct FName TargetName); // Function DFMGameplay.InteractorComponent.ServerExchangeMultiInteractIndex // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6357970
	void OnServerLeaveVolume(struct AActor* Interactor, struct AGPCharacter* Interactoperator); // Function DFMGameplay.InteractorComponent.OnServerLeaveVolume // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6357480
	void OnServerEnterVolume(struct AActor* Interactor, struct AGPCharacter* Interactoperator); // Function DFMGameplay.InteractorComponent.OnServerEnterVolume // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63573b0
	void OnRep_GeneralSkillInfos(); // Function DFMGameplay.InteractorComponent.OnRep_GeneralSkillInfos // (Final|Native|Public) // @ game+0x6357370
	void OnPossessedBy(); // Function DFMGameplay.InteractorComponent.OnPossessedBy // (Final|Native|Public) // @ game+0x63572f0
	void OnMultiInteractAction(/*struct TScriptInterface<IMultiInteractorInterface>& MultiInteractorInterface, int32_t InteractIndex, bool ignoreOperateFlag*/); // Function DFMGameplay.InteractorComponent.OnMultiInteractAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x63571e0
	void OnClientResetCharacterToWaitingMultiInteract(/*struct TScriptInterface<IMultiInteractorInterface>& MultiInteractorInterface*/); // Function DFMGameplay.InteractorComponent.OnClientResetCharacterToWaitingMultiInteract // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6357140
	void OnClientExchangeMultiInteractIndex(/*struct TScriptInterface<IMultiInteractorInterface>& MultiInteractorInterface, int32_t TargetInteractIndex, struct FName TargetName*/); // Function DFMGameplay.InteractorComponent.OnClientExchangeMultiInteractIndex // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6357030
	bool CheckOneInteractorIsPotential(struct AInteractorBase* Target); // Function DFMGameplay.InteractorComponent.CheckOneInteractorIsPotential // (Final|Native|Public|BlueprintCallable) // @ game+0x6356030
	void AutoPickUpItem(struct AActor* LootPoint); // Function DFMGameplay.InteractorComponent.AutoPickUpItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6355fb0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMLevelThreeTieBreaker
// Size: 0x5f0 (Inherited: 0x5f0)
class ADFMLevelThreeTieBreaker : public ADFMTieBreaker {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMSecondaryTieBreaker
// Size: 0x5f0 (Inherited: 0x5f0)
class ADFMSecondaryTieBreaker : public ADFMTieBreaker {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.EquipmentItemBP
// Size: 0x50 (Inherited: 0x48)
class UEquipmentItemBP : public UCommentItemBP {
public:

	enum class EEquipmentType EquipmentType; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkCondLowHealth
// Size: 0x38 (Inherited: 0x30)
class UDFMPerkCondLowHealth : public UDFMPerkCondBase {
public:

	char pad_30[0x8]; // 0x30(0x08)

	void OnHealthChange(struct AActor* Owner, int32_t CurrentValue, int32_t MaxValue); // Function DFMGameplay.DFMPerkCondLowHealth.OnHealthChange // (Final|Native|Public) // @ game+0x62da2f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkLogicDurationAndCD
// Size: 0x48 (Inherited: 0x30)
class UDFMPerkLogicDurationAndCD : public UDFMPerkLogicBase {
public:

	char pad_30[0x18]; // 0x30(0x18)

	void OnBuffRemoved(uint32_t InBuffId, enum class ECharacterPart InCharacterPart); // Function DFMGameplay.DFMPerkLogicDurationAndCD.OnBuffRemoved // (Final|Native|Public) // @ game+0x62d9f80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPerkLogicTriggerIcon
// Size: 0x38 (Inherited: 0x30)
class UDFMPerkLogicTriggerIcon : public UDFMPerkLogicBase {
public:

	char pad_30[0x8]; // 0x30(0x08)

	void OnPerkIconStateDirty(); // Function DFMGameplay.DFMPerkLogicTriggerIcon.OnPerkIconStateDirty // (Final|Native|Public) // @ game+0x62da3f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPlayerActivityComponent
// Size: 0x628 (Inherited: 0x470)
class UDFMPlayerActivityComponent : public UDFMPlayerStatisticsComponent {
public:

	char pad_470[0xc0]; // 0x470(0xc0)
	/*struct FMulticastInlineDelegate*/char OnUpdateGMView[0x10]; // 0x530(0x10)
	struct TArray<struct FString> GM_CurItemInfo; // 0x540(0x10)
	struct TArray<struct FString> GM_History; // 0x550(0x10)
	struct TArray<int64_t> QuestPropItemIDArray; // 0x560(0x10)
	struct TArray<int64_t> ValidActivityGoalArray; // 0x570(0x10)
	struct TArray<uint64_t> UnlockedSafeBoxIDArray; // 0x580(0x10)
	struct TArray<struct FString> NeedShowAdjutantInfoArray; // 0x590(0x10)
	/*struct TSet<struct ASOLQuestTriggerBase*>*/char QuestTriggerCache[0x50]; // 0x5a0(0x50)
	char pad_5F0[0x10]; // 0x5f0(0x10)
	bool bShowAdjutantBornVO; // 0x600(0x01)
	char pad_601[0x1f]; // 0x601(0x1f)
	bool bIsGameLoadingFinish; // 0x620(0x01)
	char pad_621[0x7]; // 0x621(0x07)

	void ShowAdjutantBornVO(struct FName& AdjutantBornVO); // Function DFMGameplay.DFMPlayerActivityComponent.ShowAdjutantBornVO // (Final|Native|Public|HasOutParms) // @ game+0x62db050
	void SetNeedShowAdjutantInfo(struct FString ActivityGoalIdsStr); // Function DFMGameplay.DFMPlayerActivityComponent.SetNeedShowAdjutantInfo // (Final|Native|Public) // @ game+0x62dae40
	void ServerUpdateGMViewInfo(); // Function DFMGameplay.DFMPlayerActivityComponent.ServerUpdateGMViewInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1e377d0
	void ServerOnClientMatchStart(); // Function DFMGameplay.DFMPlayerActivityComponent.ServerOnClientMatchStart // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1e36270
	void ServerGMAddActivity(int64_t TaskID, int64_t GoalID); // Function DFMGameplay.DFMPlayerActivityComponent.ServerGMAddActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x62dac40
	void OnRep_NeedShowAdjutantInfoArray(); // Function DFMGameplay.DFMPlayerActivityComponent.OnRep_NeedShowAdjutantInfoArray // (Final|Native|Protected) // @ game+0x62da580
	void OnRep_GM_History(); // Function DFMGameplay.DFMPlayerActivityComponent.OnRep_GM_History // (Final|Native|Protected) // @ game+0x62da520
	void OnRep_GM_CurItemInfo(); // Function DFMGameplay.DFMPlayerActivityComponent.OnRep_GM_CurItemInfo // (Final|Native|Protected) // @ game+0x62da500
	void OnGameLoadingFinishNtf(int32_t MapID, enum class EGameFlowStageType StageType, bool bIsLoadingSuccess); // Function DFMGameplay.DFMPlayerActivityComponent.OnGameLoadingFinishNtf // (Final|Native|Protected) // @ game+0x62da1f0
	void OnClientSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.DFMPlayerActivityComponent.OnClientSeamlessTravelEnd // (Final|Native|Protected) // @ game+0x62da060
	bool IsSingleGameAchievementGoalCompleted(int64_t GoalID); // Function DFMGameplay.DFMPlayerActivityComponent.IsSingleGameAchievementGoalCompleted // (Final|Native|Public) // @ game+0x62d9e30
	bool GetNeedShowAdjutantInfo(struct FString ActivityGoalIdsStr); // Function DFMGameplay.DFMPlayerActivityComponent.GetNeedShowAdjutantInfo // (Final|Native|Public|Const) // @ game+0x62d9d40
	void DelayInitialData(); // Function DFMGameplay.DFMPlayerActivityComponent.DelayInitialData // (Final|Native|Protected) // @ game+0x62d9c40
	bool CheckActivityValid(uint64_t GoalID); // Function DFMGameplay.DFMPlayerActivityComponent.CheckActivityValid // (Final|Native|Public) // @ game+0x62d98f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLPlayerQuestComponent
// Size: 0x7b8 (Inherited: 0x470)
class USOLPlayerQuestComponent : public UDFMPlayerStatisticsComponent {
public:

	char pad_470[0x8]; // 0x470(0x08)
	/*struct FMulticastInlineDelegate*/char OnServerEnterQuestVolume[0x10]; // 0x478(0x10)
	struct TArray<struct FSOLQuest> QuestArr; // 0x488(0x10)
	struct TArray<struct USOLQuestItemBase*> QuestItemArr; // 0x498(0x10)
	char pad_4A8[0x58]; // 0x4a8(0x58)
	struct FContractData ContractData; // 0x500(0x40)
	char pad_540[0x50]; // 0x540(0x50)
	struct TMap<uint64_t, bool> ContractHasEnterVolumeMap; // 0x590(0x50)
	struct TArray<int64_t> QuestPropItemIDArray; // 0x5e0(0x10)
	/*struct TSet<struct ASOLQuestTriggerBase*>*/char QuestTriggerCache[0x50]; // 0x5f0(0x50)
	struct TMap<struct FQuestFullID, struct AInteractorBase*> QuestInteractorCache; // 0x640(0x50)
	struct APlayerController* PlayerController; // 0x690(0x08)
	uint64_t PlayerUin; // 0x698(0x08)
	char pad_6A0[0x8]; // 0x6a0(0x08)
	struct TMap<struct FQuestFullID, struct FSOLQuestMapInfo> QuestObjectionLocationMap; // 0x6a8(0x50)
	char pad_6F8[0x60]; // 0x6f8(0x60)
	struct UAnimMontage* TargetMontageFPP; // 0x758(0x08)
	struct UAnimMontage* TargetMontageTPP; // 0x760(0x08)
	char pad_768[0x18]; // 0x768(0x18)
	struct USOLQuestTLog* SOLQuestTLog; // 0x780(0x08)
	bool bIsOnRepQuestArrayExecuted; // 0x788(0x01)
	char pad_789[0x7]; // 0x789(0x07)
	struct UDataTable* QuestTable; // 0x790(0x08)
	struct UDataTable* QuestObjectionTable; // 0x798(0x08)
	bool bIsGameLoadingFinish; // 0x7a0(0x01)
	char pad_7A1[0x17]; // 0x7a1(0x17)

	void UpdateClientQuestLocationInfo(); // Function DFMGameplay.SOLPlayerQuestComponent.UpdateClientQuestLocationInfo // (Final|Native|Protected) // @ game+0x6404d60
	void TgLogSendQuestChangeFlow(bool HasEscape); // Function DFMGameplay.SOLPlayerQuestComponent.TgLogSendQuestChangeFlow // (Final|Native|Public) // @ game+0x6404970
	void StopQuestAction(); // Function DFMGameplay.SOLPlayerQuestComponent.StopQuestAction // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x6404920
	void SetQuestObjectionState(struct FQuestFullID& QuestFullID, enum class ESOLQuestObjectionState State); // Function DFMGameplay.SOLPlayerQuestComponent.SetQuestObjectionState // (Final|Native|Public|HasOutParms) // @ game+0x6404790
	void ServerStopQuestAction(bool bSwitchToLastGun); // Function DFMGameplay.SOLPlayerQuestComponent.ServerStopQuestAction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6404640
	void ServerOnClientMatchStart(); // Function DFMGameplay.SOLPlayerQuestComponent.ServerOnClientMatchStart // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x3624900
	void ServerNotifyContractCanceled(int32_t ContractID); // Function DFMGameplay.SOLPlayerQuestComponent.ServerNotifyContractCanceled // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x367b100
	void SendTLog(); // Function DFMGameplay.SOLPlayerQuestComponent.SendTLog // (Final|Native|Public) // @ game+0x6404550
	void PlayQuestAction(struct UAnimMontage* AnimMontageTPP, struct UAnimMontage* AnimMontageFPP); // Function DFMGameplay.SOLPlayerQuestComponent.PlayQuestAction // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x64043d0
	void OnRepOldQuest(struct FSOLQuest& NewQuest, struct FSOLQuest& OldQuest); // Function DFMGameplay.SOLPlayerQuestComponent.OnRepOldQuest // (Final|Native|Public|HasOutParms) // @ game+0x6403c70
	void OnRepNewQuest(struct FSOLQuest& NewQuest); // Function DFMGameplay.SOLPlayerQuestComponent.OnRepNewQuest // (Final|Native|Public|HasOutParms) // @ game+0x6403b80
	void OnRep_QuestArr(struct TArray<struct FSOLQuest>& OldQuestArr); // Function DFMGameplay.SOLPlayerQuestComponent.OnRep_QuestArr // (Final|Native|Public|HasOutParms) // @ game+0x6404050
	void OnRep_ContractData(struct FContractData& InContractData); // Function DFMGameplay.SOLPlayerQuestComponent.OnRep_ContractData // (Final|Native|Public|HasOutParms) // @ game+0x6403e10
	void OnQuestUpdate(uint64_t InPlayerUin, int64_t QuestID, char QuestState); // Function DFMGameplay.SOLPlayerQuestComponent.OnQuestUpdate // (Final|Native|Public) // @ game+0x6403a80
	void OnQuestObjectionUpdate(uint64_t InPlayerUin, int64_t QuestID, int64_t QuestObjectionID, char ObjState, bool ShouldShowUpdateUI); // Function DFMGameplay.SOLPlayerQuestComponent.OnQuestObjectionUpdate // (Final|Native|Public) // @ game+0x64038f0
	void OnQuestObjectionTimerUpdate(uint64_t InPlayerUin, int64_t QuestID, int64_t QuestObjectionID, float TimeSpent); // Function DFMGameplay.SOLPlayerQuestComponent.OnQuestObjectionTimerUpdate // (Final|Native|Public) // @ game+0x64037a0
	void OnQuestConditionUpdate(uint64_t InPlayerUin, int64_t QuestID, int64_t ForbbidenQuestConditionID); // Function DFMGameplay.SOLPlayerQuestComponent.OnQuestConditionUpdate // (Final|Native|Public) // @ game+0x64036a0
	void OnPlayerControllerChanged(struct APlayerController* NewController); // Function DFMGameplay.SOLPlayerQuestComponent.OnPlayerControllerChanged // (Final|Native|Public) // @ game+0x64031e0
	void OnInitQuestDialogConfigTable(); // Function DFMGameplay.SOLPlayerQuestComponent.OnInitQuestDialogConfigTable // (Final|Native|Protected) // @ game+0x64031c0
	void OnGameLoadingFinishNtf(int32_t MapID, enum class EGameFlowStageType StageType, bool bIsLoadingSuccess); // Function DFMGameplay.SOLPlayerQuestComponent.OnGameLoadingFinishNtf // (Final|Native|Public) // @ game+0x64030c0
	void OnDisableQuestConditionUpdate(int64_t QuestID); // Function DFMGameplay.SOLPlayerQuestComponent.OnDisableQuestConditionUpdate // (Final|Native|Public) // @ game+0x6403040
	void OnClientSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.SOLPlayerQuestComponent.OnClientSeamlessTravelEnd // (Final|Native|Public) // @ game+0x6402fb0
	void NtfWaitClientStartMatchTimeout(); // Function DFMGameplay.SOLPlayerQuestComponent.NtfWaitClientStartMatchTimeout // (Final|Native|Protected) // @ game+0x6402f00
	void NtfServerQuestEnd(uint64_t InPlayerUin, uint64_t QuestID, int32_t objectiveId, enum class EGPQuestEndReason EndReason, int32_t Step); // Function DFMGameplay.SOLPlayerQuestComponent.NtfServerQuestEnd // (Final|Native|Public) // @ game+0x6402d70
	void NtfContractTimeout(); // Function DFMGameplay.SOLPlayerQuestComponent.NtfContractTimeout // (Final|Native|Public) // @ game+0x6402d50
	void NtfClientEnterQuestVolume(uint64_t QuestID); // Function DFMGameplay.SOLPlayerQuestComponent.NtfClientEnterQuestVolume // (Final|Native|Public) // @ game+0x6402cd0
	void NotifyServerClientMatchStart(); // Function DFMGameplay.SOLPlayerQuestComponent.NotifyServerClientMatchStart // (Final|Native|Public) // @ game+0x6402cb0
	struct UDataTable* GetQuestTable(); // Function DFMGameplay.SOLPlayerQuestComponent.GetQuestTable // (Final|Native|Public) // @ game+0x6402a20
	struct UDataTable* GetQuestObjectiveTable(); // Function DFMGameplay.SOLPlayerQuestComponent.GetQuestObjectiveTable // (Final|Native|Public) // @ game+0x64029f0
	bool GetQuestObjectionInfo(int64_t QuestID, int32_t QuestObjID, struct FSOLQuestObjection& ObjectionInfo); // Function DFMGameplay.SOLPlayerQuestComponent.GetQuestObjectionInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6402890
	bool GetQuestInfo(int64_t QuestID, struct FSOLQuest& QuestInfo); // Function DFMGameplay.SOLPlayerQuestComponent.GetQuestInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x6402760
	void DisplayDialog(struct FName GroupID); // Function DFMGameplay.SOLPlayerQuestComponent.DisplayDialog // (Final|Native|Protected) // @ game+0x6401fe0
	void DelayNtfServerQuestEnd(uint64_t InPlayerUin, uint64_t QuestID, int32_t objectiveId, enum class EGPQuestEndReason EndReason, int32_t Step); // Function DFMGameplay.SOLPlayerQuestComponent.DelayNtfServerQuestEnd // (Final|Native|Public) // @ game+0x6401e50
	void ClientOnQuestCompTryDisplayDialog(struct FName DialogGroupID); // Function DFMGameplay.SOLPlayerQuestComponent.ClientOnQuestCompTryDisplayDialog // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0xbd8930
	void ClientFillQuestName(struct FSOLQuest& Quest); // Function DFMGameplay.SOLPlayerQuestComponent.ClientFillQuestName // (Final|Native|Public|HasOutParms) // @ game+0x6401c60
	void ClientFillObjectiveName(struct FSOLQuestObjection& QuestObjection); // Function DFMGameplay.SOLPlayerQuestComponent.ClientFillObjectiveName // (Final|Native|Public|HasOutParms) // @ game+0x6401b80
	bool CheckIsContractPropID(uint64_t ItemID); // Function DFMGameplay.SOLPlayerQuestComponent.CheckIsContractPropID // (Final|Native|Public) // @ game+0x6401af0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.IntroPlayerCameraManager
// Size: 0x51c0 (Inherited: 0x5170)
class AIntroPlayerCameraManager : public ADFMPlayerCameraManager {
public:

	float TransitionSpeed; // 0x5170(0x04)
	char pad_5174[0x4c]; // 0x5174(0x4c)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphDPVSVisibleManager
// Size: 0x120 (Inherited: 0xe0)
class UDFMReplicationGraphDPVSVisibleManager : public UDFMReplicationGraphVisibleSetManager {
public:

	char pad_E0[0x40]; // 0xe0(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMReplicationGraphVolumeVisibleManager
// Size: 0x140 (Inherited: 0xe0)
class UDFMReplicationGraphVolumeVisibleManager : public UDFMReplicationGraphVisibleSetManager {
public:

	char pad_E0[0x10]; // 0xe0(0x10)
	struct TArray<struct AReplicationVisibleVolume*> VolumeList; // 0xf0(0x10)
	char pad_100[0x40]; // 0x100(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TutorialSettlementComponent
// Size: 0x298 (Inherited: 0x298)
class UTutorialSettlementComponent : public UDFMSettlementComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GiantTowerWeaponAnimInstance
// Size: 0x2a0 (Inherited: 0x298)
class UGiantTowerWeaponAnimInstance : public UDFMWeaponAAGunAnimInstance {
public:

	bool bIsActiving; // 0x298(0x01)
	bool bIsActived; // 0x299(0x01)
	char pad_29A[0x6]; // 0x29a(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DialogStateBaseAction
// Size: 0x148 (Inherited: 0x138)
class UDialogStateBaseAction : public UDialogStateNode {
public:

	float Timer; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	int64_t CachedSubtitleHandle; // 0x140(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DialogStateNPCFocus
// Size: 0x140 (Inherited: 0x138)
class UDialogStateNPCFocus : public UDialogStateNode {
public:

	bool IsFocusComplete; // 0x138(0x01)
	bool bHasStart; // 0x139(0x01)
	char pad_13A[0x2]; // 0x13a(0x02)
	float Timer; // 0x13c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DramaTriggerForPlayer
// Size: 0x388 (Inherited: 0x378)
class ADramaTriggerForPlayer : public ADramaTrigger {
public:

	char pad_378[0x8]; // 0x378(0x08)
	struct UBoxComponent* CollisionMesh; // 0x380(0x08)

	void OnTestOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.DramaTriggerForPlayer.OnTestOverlapEnd // (Final|Native|Private) // @ game+0x630f970
	void OnTestOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.DramaTriggerForPlayer.OnTestOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x630f770
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerAlwaysPass
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerAlwaysPass : public UExitCheckerBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerAlwaysFail
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerAlwaysFail : public UExitCheckerBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerInRange
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerInRange : public UExitCheckerBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerLimitCountInSameTime
// Size: 0x48 (Inherited: 0x40)
class UExitCheckerLimitCountInSameTime : public UExitCheckerBase {
public:

	uint64_t MaxCountingNum; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerHaveItem
// Size: 0x48 (Inherited: 0x40)
class UExitCheckerHaveItem : public UExitCheckerBase {
public:

	uint64_t ItemID; // 0x40(0x08)

	void OnServerItemMoveNotify(struct FItemMoveCmd ItemMoveCmd); // Function DFMGameplay.ExitCheckerHaveItem.OnServerItemMoveNotify // (Final|Native|Public) // @ game+0x63194d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerReachEscapeNum
// Size: 0x48 (Inherited: 0x40)
class UExitCheckerReachEscapeNum : public UExitCheckerBase {
public:

	int32_t TargetEscapeNum; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)

	void OnPlayerEscaped(struct ACHARACTER* CHARACTER); // Function DFMGameplay.ExitCheckerReachEscapeNum.OnPlayerEscaped // (Final|Native|Protected) // @ game+0x6319450
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerReachCountdownOverNum
// Size: 0x48 (Inherited: 0x40)
class UExitCheckerReachCountdownOverNum : public UExitCheckerBase {
public:

	int32_t TargetCoundownOverNum; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerByTrigger
// Size: 0x48 (Inherited: 0x40)
class UExitCheckerByTrigger : public UExitCheckerBase {
public:

	char pad_40[0x8]; // 0x40(0x08)

	void OnTriggered(struct APlayerExitBase* InPlayerExit, struct AInteractor_ExitTrigger* ExitTrigger, int32_t TriggerAnimState, struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.ExitCheckerByTrigger.OnTriggered // (Final|Native|Protected) // @ game+0x6319630
	bool CheckPlayerExitValid(struct APlayerExitBase* InPlayerExit); // Function DFMGameplay.ExitCheckerByTrigger.CheckPlayerExitValid // (Final|Native|Protected|Const) // @ game+0x6319250
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerConsumeItem
// Size: 0x50 (Inherited: 0x40)
class UExitCheckerConsumeItem : public UExitCheckerBase {
public:

	uint64_t ItemID; // 0x40(0x08)
	uint32_t Count; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerConditionBase
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerConditionBase : public UExitCheckerBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerReachMatchTime
// Size: 0x50 (Inherited: 0x40)
class UExitCheckerReachMatchTime : public UExitCheckerBase {
public:

	int32_t TargetMatchTime; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct ADFMGameState* GameState; // 0x48(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FormationSlotPattern_Config
// Size: 0x60 (Inherited: 0x50)
class UFormationSlotPattern_Config : public UFormationSlotPattern {
public:

	struct TArray<struct FFormationSlot> Slots; // 0x50(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameplayMonitor_V2
// Size: 0x410 (Inherited: 0x3e0)
class AGameplayMonitor_V2 : public AGameplayMonitor {
public:

	struct FText AreaName; // 0x3e0(0x18)
	bool bIsMonitorActive; // 0x3f8(0x01)
	char pad_3F9[0x3]; // 0x3f9(0x03)
	struct FVector2D LastDelta; // 0x3fc(0x08)
	struct FVector2D CachedDelta; // 0x404(0x08)
	char pad_40C[0x4]; // 0x40c(0x04)

	void UpdateInputDelta(struct FVector2D Delta); // Function DFMGameplay.GameplayMonitor_V2.UpdateInputDelta // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x7ed88c0
	void SetMonitorActive(bool IsActive); // Function DFMGameplay.GameplayMonitor_V2.SetMonitorActive // (Final|Native|Public|BlueprintCallable) // @ game+0x6322e60
	bool GetMonitorIsActive(); // Function DFMGameplay.GameplayMonitor_V2.GetMonitorIsActive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x6321fe0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_BeHitMoveCamera
// Size: 0xb8 (Inherited: 0x68)
class UGPCameraModifier_BeHitMoveCamera : public UGPCameraModifier_FPPCameraBoneAnimScaleCurve {
public:

	char pad_68[0x50]; // 0x68(0x50)

	void SetBeHitMoveCameraModify(int64_t RecID, float DamageValue, float animTime, float WeaponScale); // Function DFMGameplay.GPCameraModifier_BeHitMoveCamera.SetBeHitMoveCameraModify // (Final|Native|Public|BlueprintCallable) // @ game+0x63270b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_FPPFocusActor
// Size: 0x70 (Inherited: 0x68)
class UGPCameraModifier_FPPFocusActor : public UGPCameraModifier_FPPCameraBoneAnimScaleCurve {
public:

	struct AActor* FocusTarget; // 0x68(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_FPPSprintCameraAnimScale
// Size: 0x78 (Inherited: 0x68)
class UGPCameraModifier_FPPSprintCameraAnimScale : public UGPCameraModifier_FPPCameraBoneAnimScaleCurve {
public:

	bool currentIsSprinting; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float StartFallingTime; // 0x6c(0x04)
	bool currentIsPause; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float StartPauseTime; // 0x74(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPCameraModifier_ProneImpactCheckActor
// Size: 0x78 (Inherited: 0x68)
class UGPCameraModifier_ProneImpactCheckActor : public UGPCameraModifier_FPPCameraBoneAnimScaleCurve {
public:

	char pad_68[0x10]; // 0x68(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIEvent_JoinGroup
// Size: 0x48 (Inherited: 0x40)
class UAIEvent_JoinGroup : public UAIEvent {
public:

	char pad_40[0x8]; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIEvent_QuitGroup
// Size: 0x40 (Inherited: 0x40)
class UAIEvent_QuitGroup : public UAIEvent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICommandEvent
// Size: 0x40 (Inherited: 0x40)
class UAICommandEvent : public UAIEvent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIReportEvent
// Size: 0x40 (Inherited: 0x40)
class UAIReportEvent : public UAIEvent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIThreatUpdateEvent
// Size: 0x88 (Inherited: 0x40)
class UAIThreatUpdateEvent : public UAIEvent {
public:

	struct ACHARACTER* SelfAI; // 0x40(0x08)
	struct ACHARACTER* CHARACTER; // 0x48(0x08)
	char pad_50[0x38]; // 0x50(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SceneShowReportEvent
// Size: 0x70 (Inherited: 0x40)
class USceneShowReportEvent : public UAIEvent {
public:

	struct FAISingleState SingleState; // 0x40(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetViewAnim
// Size: 0xa8 (Inherited: 0x40)
class UHelmetViewAnim : public UHelmetViewBase {
public:

	struct USkeletalMeshComponent* HelmetMask; // 0x40(0x08)
	struct UHelmetEffectMeshAnimInstance* EffectMeshAnim; // 0x48(0x08)
	struct UHelmetEffectMeshAnimInstance* HelmetMeshAnim; // 0x50(0x08)
	struct UAnimSequence* CharOpenMask_1P; // 0x58(0x08)
	struct UAnimSequence* CharOpenMask_3P; // 0x60(0x08)
	struct UAnimSequence* CharCloseMask_1P; // 0x68(0x08)
	struct UAnimSequence* CharCloseMask_3P; // 0x70(0x08)
	struct UAnimSequence* CloseHelmet; // 0x78(0x08)
	struct UAnimSequence* CharCloseMask; // 0x80(0x08)
	struct TArray<struct UObject*> AssetCache; // 0x88(0x10)
	char pad_98[0x10]; // 0x98(0x10)

	void ShowHelmetMask(); // Function DFMGameplay.HelmetViewAnim.ShowHelmetMask // (Final|Native|Public) // @ game+0x6337ce0
	void OnAssetLoadFinish(struct TArray<struct FSoftObjectPath> InPath); // Function DFMGameplay.HelmetViewAnim.OnAssetLoadFinish // (Final|Native|Public) // @ game+0x63372a0
	void DestoryHelmet(); // Function DFMGameplay.HelmetViewAnim.DestoryHelmet // (Final|Native|Public) // @ game+0x6336d20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetViewMaskAudio
// Size: 0x50 (Inherited: 0x40)
class UHelmetViewMaskAudio : public UHelmetViewBase {
public:

	struct UGPAudioEventAsset* OpenMaskAudio; // 0x40(0x08)
	struct UGPAudioEventAsset* CloseMaskAudio; // 0x48(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetViewMaskEffect
// Size: 0x50 (Inherited: 0x40)
class UHelmetViewMaskEffect : public UHelmetViewBase {
public:

	struct UHelemetParticalSystemComponent* ParticalComp; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HelmetViewHitEffect
// Size: 0x40 (Inherited: 0x40)
class UHelmetViewHitEffect : public UHelmetViewBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HitEffectComponent
// Size: 0x118 (Inherited: 0x100)
class UHitEffectComponent : public UHitNotifyComponent {
public:

	struct UParticleSystem* Effect; // 0x100(0x08)
	struct UGPAudioEventAsset* Audio; // 0x108(0x08)
	char bOnlyOnce : 1; // 0x110(0x01)
	char pad_110_1 : 7; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HittableComponent
// Size: 0x108 (Inherited: 0x100)
class UHittableComponent : public UHitNotifyComponent {
public:

	float HitSpeed; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorProcessComponent_DecipherDevice
// Size: 0x250 (Inherited: 0x250)
class UInteractorOperatorProcessComponent_DecipherDevice : public UInteractorOperatorProcessComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorKickDoorProcessComponent
// Size: 0x268 (Inherited: 0x250)
class UInteractorKickDoorProcessComponent : public UInteractorOperatorProcessComponent {
public:

	struct FGameplayTag KickSuccessTag; // 0x250(0x08)
	struct FGameplayTag KickFailedTag; // 0x258(0x08)
	int32_t BuffId; // 0x260(0x04)
	int32_t KickCounter; // 0x264(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorProcessMandelBrickComponent
// Size: 0x258 (Inherited: 0x250)
class UInteractorOperatorProcessMandelBrickComponent : public UInteractorOperatorProcessComponent {
public:

	uint64_t MandelBrickItemID; // 0x250(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RadarStationElevator
// Size: 0x5c0 (Inherited: 0x570)
class ARadarStationElevator : public AInteractor_Elevator {
public:

	bool bIsLocked; // 0x570(0x01)
	char pad_571[0x7]; // 0x571(0x07)
	struct TArray<struct AInteractor_RadarStationElevatorSwitch*> CachedRadarStationElevatorSwitches; // 0x578(0x10)
	struct ADFMCharacter* CachedReleaseLockCharacter; // 0x588(0x08)
	char pad_590[0x8]; // 0x590(0x08)
	struct UCurveFloat* ElevatorMovingCurve; // 0x598(0x08)
	float ElevatorMovingTotalTime; // 0x5a0(0x04)
	char pad_5A4[0x4]; // 0x5a4(0x04)
	struct UGPAudioEventAsset* ElevatorMovingUpAudio; // 0x5a8(0x08)
	struct UGPAudioEventAsset* ElevatorMovingDownAudio; // 0x5b0(0x08)
	struct UBoxComponent* ElevatorOverlapBoxComp; // 0x5b8(0x08)

	void OnRep_bIsLocked(); // Function DFMGameplay.RadarStationElevator.OnRep_bIsLocked // (Final|Native|Public) // @ game+0x88f4d0
	void OnElevatorOverlapBoxEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.RadarStationElevator.OnElevatorOverlapBoxEnd // (Native|Protected) // @ game+0x63ebad0
	void OnElevatorOverlapBoxBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.RadarStationElevator.OnElevatorOverlapBoxBegin // (Native|Protected|HasOutParms) // @ game+0x63eb8d0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRadarStationElevator
// Size: 0x5c0 (Inherited: 0x570)
class ASOLRadarStationElevator : public AInteractor_Elevator {
public:

	struct FElevatorMovingInfo CurMovingInfo; // 0x570(0x08)
	bool bIsLocked; // 0x578(0x01)
	char pad_579[0x7]; // 0x579(0x07)
	struct USOLRadarStationElevatorMovementComponent* RadarStationElevatorMovementComponent; // 0x580(0x08)
	struct TArray<struct AInteractor_RadarStationElevatorSwitch*> CachedRadarStationElevatorSwitches; // 0x588(0x10)
	struct UCurveFloat* ElevatorMovingCurve; // 0x598(0x08)
	float ElevatorMovingTotalTime; // 0x5a0(0x04)
	char pad_5A4[0x4]; // 0x5a4(0x04)
	struct UGPAudioEventAsset* ElevatorMovingUpAudio; // 0x5a8(0x08)
	struct UGPAudioEventAsset* ElevatorMovingDownAudio; // 0x5b0(0x08)
	struct UBoxComponent* ElevatorOverlapBoxComp; // 0x5b8(0x08)

	void OnRep_bIsLocked(); // Function DFMGameplay.SOLRadarStationElevator.OnRep_bIsLocked // (Final|Native|Public) // @ game+0x88f4d0
	void OnElevatorOverlapBoxEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.SOLRadarStationElevator.OnElevatorOverlapBoxEnd // (Native|Protected) // @ game+0x6407320
	void OnElevatorOverlapBoxBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.SOLRadarStationElevator.OnElevatorOverlapBoxBegin // (Native|Protected|HasOutParms) // @ game+0x6407120
	void ElevatorMovingHandle(float InDeltaTime); // Function DFMGameplay.SOLRadarStationElevator.ElevatorMovingHandle // (Native|Public) // @ game+0x6406ba0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorInterface
// Size: 0x30 (Inherited: 0x30)
class UInteractorInterface : public UInteractorInterfaceBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorAcquireItemComponent
// Size: 0x70 (Inherited: 0x60)
class UInteractorOperatorAcquireItemComponent : public UInteractorOperatorConditionComponent {
public:

	struct TArray<struct FCondAcquireItemInfo> AcquireItems; // 0x60(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorAcquireItemComponent_V2
// Size: 0x68 (Inherited: 0x60)
class UInteractorOperatorAcquireItemComponent_V2 : public UInteractorOperatorConditionComponent {
public:

	struct FName ProcessUseItemCompName; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorAcquireArmdedForceComponent
// Size: 0x68 (Inherited: 0x60)
class UInteractorOperatorAcquireArmdedForceComponent : public UInteractorOperatorConditionComponent {
public:

	enum class EInGameBattleClassType AcquireArmdedForce; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorAcquireDestructableComponent
// Size: 0x60 (Inherited: 0x60)
class UInteractorOperatorAcquireDestructableComponent : public UInteractorOperatorConditionComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorAcquireMainWeapon
// Size: 0x60 (Inherited: 0x60)
class UInteractorOperatorAcquireMainWeapon : public UInteractorOperatorConditionComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionAcquireGeneralSkill
// Size: 0x70 (Inherited: 0x60)
class UInteractorOperatorConditionAcquireGeneralSkill : public UInteractorOperatorConditionComponent {
public:

	struct FName AcquireID; // 0x60(0x08)
	int32_t AcquireLevel; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionBombActivated
// Size: 0x60 (Inherited: 0x60)
class UInteractorOperatorConditionBombActivated : public UInteractorOperatorConditionComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionNoOneInInteractRange
// Size: 0x60 (Inherited: 0x60)
class UInteractorOperatorConditionNoOneInInteractRange : public UInteractorOperatorConditionComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionOuterSetting
// Size: 0x88 (Inherited: 0x60)
class UInteractorOperatorConditionOuterSetting : public UInteractorOperatorConditionComponent {
public:

	struct FName OuterPropertyName; // 0x60(0x08)
	/*struct TFieldPath<FNone>*/char OuterProperty[0x20]; // 0x68(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionRequirePartComponent
// Size: 0x70 (Inherited: 0x60)
class UInteractorOperatorConditionRequirePartComponent : public UInteractorOperatorConditionComponent {
public:

	uint64_t PartItemId; // 0x60(0x08)
	int32_t PartUseCount; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionUnableGrab
// Size: 0x68 (Inherited: 0x60)
class UInteractorOperatorConditionUnableGrab : public UInteractorOperatorConditionComponent {
public:

	struct FName ItemID; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOperatorConditionWithoutGrab
// Size: 0x60 (Inherited: 0x60)
class UInteractorOperatorConditionWithoutGrab : public UInteractorOperatorConditionComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RepairOperatorConditionComponent
// Size: 0x70 (Inherited: 0x60)
class URepairOperatorConditionComponent : public UInteractorOperatorConditionComponent {
public:

	bool bRepairParent; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	uint64_t WeaponID; // 0x68(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptDurativeExecuteComponent
// Size: 0x190 (Inherited: 0x168)
class UInteractorOptDurativeExecuteComponent : public UInteractorOptExecuteComponent {
public:

	float ExecuteDuration; // 0x168(0x04)
	bool bEnterInteractState; // 0x16c(0x01)
	char pad_16D[0x1b]; // 0x16d(0x1b)
	bool bNeedInterrupt; // 0x188(0x01)
	bool bIgnoreCheckProcessing; // 0x189(0x01)
	char pad_18A[0x6]; // 0x18a(0x06)

	void ServerEndExecute(); // Function DFMGameplay.InteractorOptDurativeExecuteComponent.ServerEndExecute // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x21b1c40
	void ServerBeginExecute(); // Function DFMGameplay.InteractorOptDurativeExecuteComponent.ServerBeginExecute // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x17553a0
	void OnFakeTick(); // Function DFMGameplay.InteractorOptDurativeExecuteComponent.OnFakeTick // (Native|Protected) // @ game+0xaa98d0
	void ClientEndExecute(); // Function DFMGameplay.InteractorOptDurativeExecuteComponent.ClientEndExecute // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x174fe70
	void ClientBeginExecute(); // Function DFMGameplay.InteractorOptDurativeExecuteComponent.ClientBeginExecute // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x21b1c60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptInstantExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptInstantExecuteComponent : public UInteractorOptExecuteComponent {
public:


	void ServerDoExecute(); // Function DFMGameplay.InteractorOptInstantExecuteComponent.ServerDoExecute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x21b1c60
	void ClientDoExecute(); // Function DFMGameplay.InteractorOptInstantExecuteComponent.ClientDoExecute // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x174fe70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptTwoStateProcessComponent
// Size: 0x210 (Inherited: 0x200)
class UInteractorOptTwoStateProcessComponent : public UInteractorOptProcessComponent {
public:

	struct UInteractorOptSwitcherExecuteComponent* OptSwitcherExecuteComp; // 0x200(0x08)
	struct FName OptSwitcherExecuteCompName; // 0x208(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItem_Ammo
// Size: 0x628 (Inherited: 0x618)
class UInventoryItem_Ammo : public UInventoryItemBase {
public:

	float Duration; // 0x618(0x04)
	float ChangeClipTimeBackground; // 0x61c(0x04)
	float ChangeClipTimer; // 0x620(0x04)
	enum class EGPWeaponChangeClipMode ChangeClipMode; // 0x624(0x01)
	char pad_625[0x3]; // 0x625(0x03)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItem_GadgetCommon
// Size: 0x648 (Inherited: 0x618)
class UInventoryItem_GadgetCommon : public UInventoryItemBase {
public:

	char pad_618[0x8]; // 0x618(0x08)
	/*struct TSoftClassPtr<UObject>*/char HoldAndUseItemClass[0x28]; // 0x620(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItem_HealthPackageTime
// Size: 0x748 (Inherited: 0x618)
class UInventoryItem_HealthPackageTime : public UInventoryItemBase {
public:

	struct TArray<int32_t> AddBuffIDs; // 0x618(0x10)
	struct TArray<enum class EUseItemAddBuffFunctionType> AddBuffConditions; // 0x628(0x10)
	char pad_638[0x110]; // 0x638(0x110)

	bool ApplyEffect(); // Function DFMGameplay.InventoryItem_HealthPackageTime.ApplyEffect // (Final|Native|Public) // @ game+0x6374410
	void AddHelmetArmor(int32_t Value); // Function DFMGameplay.InventoryItem_HealthPackageTime.AddHelmetArmor // (Final|Native|Protected|BlueprintCallable) // @ game+0x6374390
	void AddHealth(int32_t HealthValue, enum class ECharacterPart Part); // Function DFMGameplay.InventoryItem_HealthPackageTime.AddHealth // (Final|Native|Protected|BlueprintCallable) // @ game+0x63742d0
	void AddArmor(int32_t Value); // Function DFMGameplay.InventoryItem_HealthPackageTime.AddArmor // (Final|Native|Protected|BlueprintCallable) // @ game+0x6374250
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItem_Skill
// Size: 0x620 (Inherited: 0x618)
class UInventoryItem_Skill : public UInventoryItemBase {
public:

	char pad_618[0x8]; // 0x618(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MedicalSyringeFunComponent
// Size: 0x170 (Inherited: 0x118)
class UMedicalSyringeFunComponent : public UItemBaseFunComponent {
public:

	float CheckDistance; // 0x118(0x04)
	char pad_11C[0x18]; // 0x11c(0x18)
	struct TWeakObjectPtr<struct ADFMCharacter> HitCharater; // 0x134(0x08)
	struct TWeakObjectPtr<struct ADFMCharacter> SkillTarget; // 0x13c(0x08)
	char pad_144[0x1c]; // 0x144(0x1c)
	struct UInventoryManager* CacheInvMgr; // 0x160(0x08)
	struct UInventoryUseItemManager* CacheInvUseMgr; // 0x168(0x08)

	void ProcessInputAction(char InputAction); // Function DFMGameplay.MedicalSyringeFunComponent.ProcessInputAction // (Final|Native|Protected) // @ game+0x639a380
	void OnClickButtonView(); // Function DFMGameplay.MedicalSyringeFunComponent.OnClickButtonView // (Final|Native|Protected) // @ game+0x6399b00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionActionComponent3
// Size: 0x640 (Inherited: 0x478)
class UMotionActionComponent3 : public UMotionActionComponent {
public:

	struct FVector MoveDir; // 0x478(0x0c)
	struct FName IdleState; // 0x484(0x08)
	char pad_48C[0x128]; // 0x48c(0x128)
	float AnimBlendTime; // 0x5b4(0x04)
	float MinAnimScale; // 0x5b8(0x04)
	float MaxAnimScale; // 0x5bc(0x04)
	float LoopMinAnimScale; // 0x5c0(0x04)
	float LoopMaxAnimScale; // 0x5c4(0x04)
	float PlayRate; // 0x5c8(0x04)
	char pad_5CC[0x54]; // 0x5cc(0x54)
	float RotateSpeed8Dir; // 0x620(0x04)
	struct FName StateMachineName; // 0x624(0x08)
	char pad_62C[0x14]; // 0x62c(0x14)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PerformingHackAlarm
// Size: 0x3b0 (Inherited: 0x3a8)
class APerformingHackAlarm : public APerformingActorBase {
public:

	bool bIsTurnOn; // 0x3a8(0x01)
	char pad_3A9[0x7]; // 0x3a9(0x07)

	void ServerTurnOn(bool bTurnOn); // Function DFMGameplay.PerformingHackAlarm.ServerTurnOn // (Final|Native|Public|BlueprintCallable) // @ game+0x63b3fb0
	void OnRep_bIsTurnOn(); // Function DFMGameplay.PerformingHackAlarm.OnRep_bIsTurnOn // (Final|Native|Public) // @ game+0x63b3c40
	void BP_TurnOn(bool bInIsTurnOn); // Function DFMGameplay.PerformingHackAlarm.BP_TurnOn // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitNormal
// Size: 0xb30 (Inherited: 0xb30)
class APlayerExitNormal : public APlayerExitBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitLimitEscapeTimes
// Size: 0xb38 (Inherited: 0xb30)
class APlayerExitLimitEscapeTimes : public APlayerExitBase {
public:

	int32_t MaxEscapeNum; // 0xb30(0x04)
	char pad_B34[0x4]; // 0xb34(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitLimitCountdownOverTimes
// Size: 0xb38 (Inherited: 0xb30)
class APlayerExitLimitCountdownOverTimes : public APlayerExitBase {
public:

	int32_t MaxCountdownOverNum; // 0xb30(0x04)
	char pad_B34[0x4]; // 0xb34(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerExitMultiArea
// Size: 0xb90 (Inherited: 0xb30)
class APlayerExitMultiArea : public APlayerExitBase {
public:

	struct TArray<struct UShapeComponent*> CollisionComponents; // 0xb30(0x10)
	struct TMap<struct ADFMCharacter*, char> InExitAreaCharactersMap; // 0xb40(0x50)

	void ToggleExitCallback(bool bEnable); // Function DFMGameplay.PlayerExitMultiArea.ToggleExitCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x63e3d70
	void RemoveExitArea(struct UShapeComponent* Collision); // Function DFMGameplay.PlayerExitMultiArea.RemoveExitArea // (Final|Native|Public|BlueprintCallable) // @ game+0x63deda0
	void AddExitArea(struct UShapeComponent* Collision); // Function DFMGameplay.PlayerExitMultiArea.AddExitArea // (Final|Native|Public|BlueprintCallable) // @ game+0x63ce460
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FlankNavigationQueryFilter
// Size: 0x50 (Inherited: 0x50)
class UFlankNavigationQueryFilter : public UPVPNavigationQueryFilterBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AvoidSightNavigationQueryFilter
// Size: 0x58 (Inherited: 0x50)
class UAvoidSightNavigationQueryFilter : public UPVPNavigationQueryFilterBase {
public:

	char pad_50[0x8]; // 0x50(0x08)

	bool ProvideFilterParam(struct UObject* Querier, struct AActor*& Target, struct FVector& AvoidTargetEye); // Function DFMGameplay.AvoidSightNavigationQueryFilter.ProvideFilterParam // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x63ebef0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RankSkillPreviewPlacementActor
// Size: 0x4f0 (Inherited: 0x3c0)
class ARankSkillPreviewPlacementActor : public ARankSkillSelectPositionActor {
public:

	float LongestDistanceToVehicle; // 0x3c0(0x04)
	float ShortestDistanceToVehicle; // 0x3c4(0x04)
	float MaxDeltaHeight; // 0x3c8(0x04)
	struct FVector2D RebornFlagCheckSize; // 0x3cc(0x08)
	float StepbackDistance; // 0x3d4(0x04)
	float ValidAngle; // 0x3d8(0x04)
	float CheckCenterOnLandOffset; // 0x3dc(0x04)
	float CheckConnerOnLandOffset; // 0x3e0(0x04)
	bool bCheckSpaceEnoughCharacterStand; // 0x3e4(0x01)
	char pad_3E5[0x3]; // 0x3e5(0x03)
	struct FVector2D SpaceEnoughCharacterStand; // 0x3e8(0x08)
	bool bCheckInsideWalkableSplines; // 0x3f0(0x01)
	char pad_3F1[0x3]; // 0x3f1(0x03)
	struct FLinearColor ValidColor; // 0x3f4(0x10)
	struct FLinearColor InValidColor; // 0x404(0x10)
	char pad_414[0x4]; // 0x414(0x04)
	struct UMaterial* PreviewMaterial; // 0x418(0x08)
	struct TArray<struct UClass*> ClassesForbidToPlace; // 0x420(0x10)
	struct UPrimitiveComponent* PrimitiveComp; // 0x430(0x08)
	char pad_438[0x20]; // 0x438(0x20)
	struct AGPCharacter* UserCharacter; // 0x458(0x08)
	char pad_460[0x90]; // 0x460(0x90)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TacticalPoint
// Size: 0x3c8 (Inherited: 0x3c8)
class ATacticalPoint : public AAISceneAnnotation {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLRocketEvacuation
// Size: 0x5f0 (Inherited: 0x3f8)
class ASOLRocketEvacuation : public ASOLEvacuationEvent {
public:

	int32_t LaunchCountDownTime; // 0x3f8(0x04)
	int32_t ExitCountDownTime; // 0x3fc(0x04)
	int32_t EventInvalidTime; // 0x400(0x04)
	int32_t MainHudCountDownTime; // 0x404(0x04)
	struct FSOLEvacuationWirelessConfig_Rocket WirelessConfig; // 0x408(0x18)
	struct FCutSceneTagsConfig_Rocket CutSceneTagsConfig; // 0x420(0x18)
	struct FSOLEvacuationUIConfig_Rocket UIConfig; // 0x438(0x138)
	struct UFXResourceContainerComponent* FXContainerComponent; // 0x570(0x08)
	struct UExponentialHeightFogComponent* ExponentialHeightFogComponent; // 0x578(0x08)
	struct UBoxComponent* FXBoxComponent; // 0x580(0x08)
	bool bServerFogEnd; // 0x588(0x01)
	char pad_589[0x1]; // 0x589(0x01)
	bool bServerHasPlay_RocketEventStart; // 0x58a(0x01)
	bool bServerHasPlay_RocketHacked; // 0x58b(0x01)
	bool bServerHasPlay_RocketLeave3P; // 0x58c(0x01)
	char pad_58D[0x3]; // 0x58d(0x03)
	struct AGPSequenceActor* RePlaySequenceActor; // 0x590(0x08)
	char pad_598[0x10]; // 0x598(0x10)
	float JumpSecondOffsetTime; // 0x5a8(0x04)
	int32_t MainHudRedServerTime; // 0x5ac(0x04)
	char pad_5B0[0x28]; // 0x5b0(0x28)
	bool bCanHackRocketPC; // 0x5d8(0x01)
	char pad_5D9[0x17]; // 0x5d9(0x17)

	void UpdateMainHud(); // Function DFMGameplay.SOLRocketEvacuation.UpdateMainHud // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void ServerSmokeDisappear(); // Function DFMGameplay.SOLRocketEvacuation.ServerSmokeDisappear // (Final|Native|Public) // @ game+0x640adf0
	void PrintLog(struct FString LogStr); // Function DFMGameplay.SOLRocketEvacuation.PrintLog // (Final|Native|Protected|BlueprintCallable) // @ game+0x640ad10
	void OnShowPreparationCutScene(int32_t PlayerExitID); // Function DFMGameplay.SOLRocketEvacuation.OnShowPreparationCutScene // (Final|Native|Public) // @ game+0x640ac50
	void OnShowFinishCutScene(int32_t PlayerExitID); // Function DFMGameplay.SOLRocketEvacuation.OnShowFinishCutScene // (Final|Native|Public) // @ game+0x640abd0
	void OnSequenceAssetLoadComplete(struct FSoftObjectPath& ResourcePaths); // Function DFMGameplay.SOLRocketEvacuation.OnSequenceAssetLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x640aaf0
	void OnRocketPCHacked(uint64_t Uin, struct AActor* Actor, enum class EInteractorType InteractorType, struct FString Param); // Function DFMGameplay.SOLRocketEvacuation.OnRocketPCHacked // (Final|Native|Public) // @ game+0x640a920
	void OnRep_MainHudRedServerTime(); // Function DFMGameplay.SOLRocketEvacuation.OnRep_MainHudRedServerTime // (Final|Native|Protected) // @ game+0x640a880
	void OnRep_CanHackRocketPC(); // Function DFMGameplay.SOLRocketEvacuation.OnRep_CanHackRocketPC // (Final|Native|Protected) // @ game+0x640a820
	void OnEndSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.SOLRocketEvacuation.OnEndSequence // (Final|Native|Protected) // @ game+0x640a6e0
	void OnBeginSequence(struct AGPSequenceActor* GPSeqActor); // Function DFMGameplay.SOLRocketEvacuation.OnBeginSequence // (Final|Native|Protected) // @ game+0x640a660
	void MulticastRocketLeave(struct TArray<uint64_t> CanExitPlayerUinArr); // Function DFMGameplay.SOLRocketEvacuation.MulticastRocketLeave // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x640a590
	void MulticastRocketBeenHacked(); // Function DFMGameplay.SOLRocketEvacuation.MulticastRocketBeenHacked // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x640a570
	void MulticastEventStart(); // Function DFMGameplay.SOLRocketEvacuation.MulticastEventStart // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2279be0
	void HideSceneFogAndShowRocketFog(struct UExponentialHeightFogComponent* SceneFogComp, struct UExponentialHeightFogComponent* RocketFogComp, bool bHide); // Function DFMGameplay.SOLRocketEvacuation.HideSceneFogAndShowRocketFog // (Final|Native|Protected|BlueprintCallable) // @ game+0x640a440
	void CloseSkeletalMeshTick(); // Function DFMGameplay.SOLRocketEvacuation.CloseSkeletalMeshTick // (Final|Native|Protected) // @ game+0x640a3d0
	void ClientSmokeDisappear(); // Function DFMGameplay.SOLRocketEvacuation.ClientSmokeDisappear // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2278e10
	void ClientReconnectPlayCutScene(); // Function DFMGameplay.SOLRocketEvacuation.ClientReconnectPlayCutScene // (Final|Native|Protected) // @ game+0x640a3b0
	void BP_StartFog(enum class ERocketSmokeType Type); // Function DFMGameplay.SOLRocketEvacuation.BP_StartFog // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_SmokeDisappear1PExit(); // Function DFMGameplay.SOLRocketEvacuation.BP_SmokeDisappear1PExit // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_EndFog(); // Function DFMGameplay.SOLRocketEvacuation.BP_EndFog // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLSluiceEvacuation
// Size: 0x530 (Inherited: 0x3f8)
class ASOLSluiceEvacuation : public ASOLEvacuationEvent {
public:

	int32_t AutoOpenTime; // 0x3f8(0x04)
	float AutoOpenActiveRatio; // 0x3fc(0x04)
	struct AInteractorBase* ExitTrigger1; // 0x400(0x08)
	struct AInteractorBase* ExitTrigger2; // 0x408(0x08)
	int32_t MaxOpenCount; // 0x410(0x04)
	char pad_414[0x4]; // 0x414(0x04)
	struct TArray<struct FName> CallAITagArray; // 0x418(0x10)
	struct FSOLEvacuationWirelessConfig_Sluice WirelessConfig; // 0x428(0x10)
	struct FSOLEvacuationUIConfig_Sluice UIConfig; // 0x438(0xd0)
	char pad_508[0x4]; // 0x508(0x04)
	bool bIsInCoolDown; // 0x50c(0x01)
	char pad_50D[0x3]; // 0x50d(0x03)
	int32_t OpenedCount; // 0x510(0x04)
	int32_t ServerMaxOpenedCount; // 0x514(0x04)
	char pad_518[0x18]; // 0x518(0x18)

	void UpdateMainHud(); // Function DFMGameplay.SOLSluiceEvacuation.UpdateMainHud // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void TurnOnAlarm(bool bTurnOn); // Function DFMGameplay.SOLSluiceEvacuation.TurnOnAlarm // (Final|Native|Protected|Const) // @ game+0x640b220
	void ServerTriggerExitStart(); // Function DFMGameplay.SOLSluiceEvacuation.ServerTriggerExitStart // (Final|Native|Public|BlueprintCallable) // @ game+0x640ae10
	void ServerCoolDownEnd(); // Function DFMGameplay.SOLSluiceEvacuation.ServerCoolDownEnd // (Final|Native|Public) // @ game+0x640add0
	void OnRep_OpenedCount(); // Function DFMGameplay.SOLSluiceEvacuation.OnRep_OpenedCount // (Final|Native|Protected) // @ game+0x640a8a0
	void OnRep_IsInCoolDown(); // Function DFMGameplay.SOLSluiceEvacuation.OnRep_IsInCoolDown // (Final|Native|Protected) // @ game+0x640a840
	int32_t GetAwakeLeftTime(); // Function DFMGameplay.SOLSluiceEvacuation.GetAwakeLeftTime // (Final|Native|Protected|BlueprintCallable) // @ game+0x640a3f0
	bool CanTriggerExit(); // Function DFMGameplay.SOLSluiceEvacuation.CanTriggerExit // (Final|Native|Public|BlueprintCallable) // @ game+0x640a380
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTrainEvacuation
// Size: 0x588 (Inherited: 0x3f8)
class ASOLTrainEvacuation : public ASOLEvacuationEvent {
public:

	int32_t EventStartTime; // 0x3f8(0x04)
	bool AutoDoorTrain; // 0x3fc(0x01)
	char pad_3FD[0x3]; // 0x3fd(0x03)
	int32_t TrainDoorOpenWaitTime; // 0x400(0x04)
	int32_t TrainLeaveWaitTime; // 0x404(0x04)
	struct TArray<struct FSOLTrainMarshallingAndWeightConfig> TrainMarshallingWeights; // 0x408(0x10)
	float TrainMoveSpeed; // 0x418(0x04)
	struct FSOLEvacuationTrainWirelessConfig TrainWirelessConfig; // 0x41c(0x18)
	char pad_434[0x4]; // 0x434(0x04)
	struct FSOLEvacuationTrainUIConfig TrainUIConfig; // 0x438(0xa8)
	float TrainDoorCloseAdvanceTime; // 0x4e0(0x04)
	float TrainLeaveDelayTime; // 0x4e4(0x04)
	bool bOpenReflection; // 0x4e8(0x01)
	char pad_4E9[0x7]; // 0x4e9(0x07)
	struct USOLTrainMarshallingConfig* TrainMarshalling; // 0x4f0(0x08)
	bool IsTrainHackable; // 0x4f8(0x01)
	char pad_4F9[0x43]; // 0x4f9(0x43)
	struct FSOLEvacuationTrainInfo TrainInfo; // 0x53c(0x0c)
	struct FBox AllTrainCombinedBox; // 0x548(0x1c)
	bool bOpenTrainOccurDynamicLevelLoadOnSpawn; // 0x564(0x01)
	bool bOpenTrainOccurDynamicLevelUnLoadOnLeave; // 0x565(0x01)
	char pad_566[0x2]; // 0x566(0x02)
	struct FString TrainOccurNavProxyLevelPrefix; // 0x568(0x10)
	struct TArray<struct FString> TrainOccurLevelArray; // 0x578(0x10)

	void TriggerDeadPlayerEscapeFailed(); // Function DFMGameplay.SOLTrainEvacuation.TriggerDeadPlayerEscapeFailed // (Final|Native|Public) // @ game+0x6413fa0
	void TrainLeaveWireless(); // Function DFMGameplay.SOLTrainEvacuation.TrainLeaveWireless // (Final|Native|Public) // @ game+0x6413f80
	void ShowTrainIcon(bool bShow); // Function DFMGameplay.SOLTrainEvacuation.ShowTrainIcon // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void ServerTrainDoorOpenClose(bool Open); // Function DFMGameplay.SOLTrainEvacuation.ServerTrainDoorOpenClose // (Final|Native|Public) // @ game+0x6413b80
	void ServerTrainDoorOpen_BP(); // Function DFMGameplay.SOLTrainEvacuation.ServerTrainDoorOpen_BP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void ServerTrainDoorClose_BP(); // Function DFMGameplay.SOLTrainEvacuation.ServerTrainDoorClose_BP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void ServerHackToLeave(); // Function DFMGameplay.SOLTrainEvacuation.ServerHackToLeave // (Final|Native|Public|BlueprintCallable) // @ game+0x6413b60
	void ReduceTrainLeaveTime(float ReduceCountDownTime); // Function DFMGameplay.SOLTrainEvacuation.ReduceTrainLeaveTime // (Final|Native|Public) // @ game+0x6413980
	void ReadyToLeave(bool Hacked); // Function DFMGameplay.SOLTrainEvacuation.ReadyToLeave // (Final|Native|Public) // @ game+0x64138f0
	void OnTrainStateChangeBP(struct AActor* DFMTrain, char TrainState); // Function DFMGameplay.SOLTrainEvacuation.OnTrainStateChangeBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnTrainStateChange(struct AActor* DFMTrain, char TrainState); // Function DFMGameplay.SOLTrainEvacuation.OnTrainStateChange // (Final|Native|Public) // @ game+0x64137f0
	void OnTrainSpawnedBP(struct AActor* Train); // Function DFMGameplay.SOLTrainEvacuation.OnTrainSpawnedBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnTrainSpawned(struct AActor* Train); // Function DFMGameplay.SOLTrainEvacuation.OnTrainSpawned // (Final|Native|Public) // @ game+0x6413770
	void OnTrainLeaveBP(); // Function DFMGameplay.SOLTrainEvacuation.OnTrainLeaveBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnTrainArrived(); // Function DFMGameplay.SOLTrainEvacuation.OnTrainArrived // (Final|Native|Public|BlueprintCallable) // @ game+0x6413750
	void OnRep_TrainInfo(); // Function DFMGameplay.SOLTrainEvacuation.OnRep_TrainInfo // (Final|Native|Public) // @ game+0x6413240
	void OnReadyToLeaveBP(bool Hacked); // Function DFMGameplay.SOLTrainEvacuation.OnReadyToLeaveBP // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void LoadTrainNavLevel(bool bLoad); // Function DFMGameplay.SOLTrainEvacuation.LoadTrainNavLevel // (Final|Native|Public) // @ game+0x6412c50
	bool IsTrainAtStation(); // Function DFMGameplay.SOLTrainEvacuation.IsTrainAtStation // (Final|Native|Public|BlueprintCallable) // @ game+0x6412c20
	void HideDeadBody(); // Function DFMGameplay.SOLTrainEvacuation.HideDeadBody // (Final|Native|Public|Const) // @ game+0x6412ac0
	struct FText GetHackFailedTipsText(); // Function DFMGameplay.SOLTrainEvacuation.GetHackFailedTipsText // (Final|Native|Public|BlueprintCallable) // @ game+0x64128f0
	void DestroyPickUp(); // Function DFMGameplay.SOLTrainEvacuation.DestroyPickUp // (Final|Native|Public|Const) // @ game+0x6412700
	void ClientActiveReflection(bool bActive); // Function DFMGameplay.SOLTrainEvacuation.ClientActiveReflection // (Final|Native|Public|Const) // @ game+0x64124d0
	void BP_TrainInfo(); // Function DFMGameplay.SOLTrainEvacuation.BP_TrainInfo // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void AddTrainCombineBox(struct UPrimitiveComponent* TrainBoxComp); // Function DFMGameplay.SOLTrainEvacuation.AddTrainCombineBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6412330
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQAQuestObjectionItem
// Size: 0x88 (Inherited: 0x80)
class USOLQAQuestObjectionItem : public USOLQuestObjectionItemBase {
public:

	char pad_80[0x8]; // 0x80(0x08)

	void OnPlayerEndMatch(enum class EMatchOverReason MatchOverReason, int64_t InPlayerUin); // Function DFMGameplay.SOLQAQuestObjectionItem.OnPlayerEndMatch // (Final|Native|Public) // @ game+0x64075b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLQuestRadioTrigger
// Size: 0x978 (Inherited: 0x940)
class ASOLQuestRadioTrigger : public ASOLQuestTriggerBase {
public:

	int64_t QuestID; // 0x940(0x08)
	int64_t QuestObjectiveID; // 0x948(0x08)
	int64_t RadioTriggerID; // 0x950(0x08)
	struct TArray<struct FQuestRadioTriggerDialogData> DialogConfigDataArr; // 0x958(0x10)
	struct TArray<uint64_t> EnteredPlayerUinArr; // 0x968(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineAntiAircraft
// Size: 0x498 (Inherited: 0x458)
class ASOLTimelineAntiAircraft : public ASOLTimeLineEventActor {
public:

	bool Active; // 0x458(0x01)
	char pad_459[0x3]; // 0x459(0x03)
	float FireDuration; // 0x45c(0x04)
	float FireIntervalMax; // 0x460(0x04)
	float FireIntervalMin; // 0x464(0x04)
	float BulletLifeTime; // 0x468(0x04)
	float MissRate; // 0x46c(0x04)
	struct FVector BulletRange; // 0x470(0x0c)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct USceneComponent* SceneRoot; // 0x480(0x08)
	struct USplineComponent* BulletTrack; // 0x488(0x08)
	char pad_490[0x8]; // 0x490(0x08)

	void OnFireBP(); // Function DFMGameplay.SOLTimelineAntiAircraft.OnFireBP // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void Multicast_ActiveFire(); // Function DFMGameplay.SOLTimelineAntiAircraft.Multicast_ActiveFire // (Net|NetReliableNative|Event|NetMulticast|Public|BlueprintCallable) // @ game+0xbcc1a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimeLineAtmosphericEventActor
// Size: 0x4c0 (Inherited: 0x458)
class ASOLTimeLineAtmosphericEventActor : public ASOLTimeLineEventActor {
public:

	bool bUseSequence; // 0x458(0x01)
	char pad_459[0x7]; // 0x459(0x07)
	struct UParticleSystem* ParticleSystem; // 0x460(0x08)
	struct FString LevelName; // 0x468(0x10)
	struct FSoftObjectPath LevelSequenceAssetPath; // 0x478(0x18)
	struct FMovieSceneSequencePlaybackSettings PlaybackSettings; // 0x490(0x14)
	char pad_4A4[0x4]; // 0x4a4(0x04)
	struct UParticleSystemComponent* PSystemComp; // 0x4a8(0x08)
	enum class EAtmosphericEventState CurrentState; // 0x4b0(0x01)
	char pad_4B1[0x7]; // 0x4b1(0x07)
	struct ALevelSequenceActor* LevelSequenceActor; // 0x4b8(0x08)

	void UnloadLevel(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.UnloadLevel // (Final|Native|Protected|BlueprintCallable) // @ game+0x640b2b0
	void PlayParticleSystem(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.PlayParticleSystem // (Final|Native|Protected|BlueprintCallable) // @ game+0x640acf0
	void PlayLevelSequence(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.PlayLevelSequence // (Final|Native|Protected) // @ game+0x640acd0
	void OnRep_LevelSequenceActor(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnRep_LevelSequenceActor // (Final|Native|Protected) // @ game+0x640a860
	void OnPSystemParamsSetup(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnPSystemParamsSetup // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0xbcb880
	void OnPSystemFinished(struct UParticleSystemComponent* PSystem); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnPSystemFinished // (Final|Native|Protected) // @ game+0x640a7a0
	void OnPSystemActive(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnPSystemActive // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void OnLevelUnloadSuccess(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnLevelUnloadSuccess // (Final|Native|Protected) // @ game+0x640a780
	void OnLevelSeuqencePlay(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnLevelSeuqencePlay // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0xbcb8a0
	void OnLevelSeuqenceFinished(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnLevelSeuqenceFinished // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0xbcc1a0
	void OnLevelLoadSuccess(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.OnLevelLoadSuccess // (Final|Native|Protected) // @ game+0x640a760
	void LoadLevel(); // Function DFMGameplay.SOLTimeLineAtmosphericEventActor.LoadLevel // (Final|Native|Protected|BlueprintCallable) // @ game+0x640a550
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineFakeParatrooper
// Size: 0x468 (Inherited: 0x458)
class ASOLTimelineFakeParatrooper : public ASOLTimeLineEventActor {
public:

	struct TArray<struct AFakeParatrooperDropZone*> DropZones; // 0x458(0x10)

	void BPDebug(); // Function DFMGameplay.SOLTimelineFakeParatrooper.BPDebug // (Final|Native|Private|BlueprintCallable) // @ game+0x640f000
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineKuroshioShelling
// Size: 0x510 (Inherited: 0x470)
class ASOLTimelineKuroshioShelling : public ASOLTimelineMajorEvent {
public:

	struct UClass* ShellTemplate; // 0x470(0x08)
	float ShellFireDistance; // 0x478(0x04)
	float ShellFireHeight; // 0x47c(0x04)
	struct UClass* SmokeFX; // 0x480(0x08)
	char pad_488[0x40]; // 0x488(0x40)
	struct AKuroshioShellingArea* ShellingArea; // 0x4c8(0x08)
	char pad_4D0[0x10]; // 0x4d0(0x10)
	struct TArray<struct AFXProxyActor*> SmokeFXs; // 0x4e0(0x10)
	struct TArray<struct ADFMAICharacter*> NotifiedAICharacters; // 0x4f0(0x10)
	struct TArray<struct AShellingRedZone*> RedZones; // 0x500(0x10)

	void ShowShellingAreaOnMap(int32_t WaveIndex, struct FVector2D pos, float size); // Function DFMGameplay.SOLTimelineKuroshioShelling.ShowShellingAreaOnMap // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x640fdd0
	void ShowAllShellingAreaOnMap(struct TArray<struct FShellingZoneIconInfo> Info); // Function DFMGameplay.SOLTimelineKuroshioShelling.ShowAllShellingAreaOnMap // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x640fcc0
	void RemoveShellingAreaOnMap(); // Function DFMGameplay.SOLTimelineKuroshioShelling.RemoveShellingAreaOnMap // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x632ccb0
	void Multicast_NotifyOneZoneOver(); // Function DFMGameplay.SOLTimelineKuroshioShelling.Multicast_NotifyOneZoneOver // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x12a7870
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineMajorEventVoid
// Size: 0x470 (Inherited: 0x470)
class ASOLTimelineMajorEventVoid : public ASOLTimelineMajorEvent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLTimelineParatrooper
// Size: 0x538 (Inherited: 0x470)
class ASOLTimelineParatrooper : public ASOLTimelineMajorEvent {
public:

	struct UClass* TransportAircraft; // 0x470(0x08)
	float AircraftHeight; // 0x478(0x04)
	float AircraftSpawnDistance; // 0x47c(0x04)
	struct FSOLTimelineEventRange Range; // 0x480(0x08)
	float POIEmphasizeTime; // 0x488(0x04)
	char pad_48C[0x74]; // 0x48c(0x74)
	struct TArray<struct AParatrooperDropZone*> DropZones; // 0x500(0x10)
	char pad_510[0x8]; // 0x510(0x08)
	struct TArray<struct ASOLFakeParatrooperSpawner*> FakeParatrooperSpawners; // 0x518(0x10)
	struct ASOLParatrooperAircraft* Aircraft; // 0x528(0x08)
	char pad_530[0x8]; // 0x530(0x08)

	void TriggerFakeParatrooper(int32_t Period); // Function DFMGameplay.SOLTimelineParatrooper.TriggerFakeParatrooper // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x63d1960
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SpawnDeadBody
// Size: 0x3e0 (Inherited: 0x3a8)
class ASpawnDeadBody : public ASpawnStaticMesh {
public:

	struct FName EquipID; // 0x3a8(0x08)
	struct FText KillerName; // 0x3b0(0x18)
	struct TArray<struct FBeKilledInfo> BeKilledInfo; // 0x3c8(0x10)
	bool bIsPlayer; // 0x3d8(0x01)
	bool IgnoreArchive_Overseas; // 0x3d9(0x01)
	char pad_3DA[0x6]; // 0x3da(0x06)

	void InitDropItem(struct TArray<struct FAIDropItem>& dropItemList, struct AAIController* Control); // Function DFMGameplay.SpawnDeadBody.InitDropItem // (Final|Native|Public|HasOutParms) // @ game+0x6412b00
	uint32_t GetRandomSeed(uint64_t RoomId); // Function DFMGameplay.SpawnDeadBody.GetRandomSeed // (Final|Native|Public) // @ game+0x6412990
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StartSpotAllocator_SOL
// Size: 0x2b8 (Inherited: 0x90)
class UStartSpotAllocator_SOL : public UStartSpotAllocator {
public:

	struct TArray<struct FOrientationGroup> OrientationGroups; // 0x90(0x10)
	struct TMap<uint32_t, struct ATeamStart*> AllTeamStartsMap; // 0xa0(0x50)
	struct TMap<uint32_t, struct ATeamStart*> RemainingTeamStarts; // 0xf0(0x50)
	struct TMap<uint32_t, uint32_t> OrientationPlayerNums; // 0x140(0x50)
	struct UDataTable* AllocatorTemplateTable; // 0x190(0x08)
	char pad_198[0x68]; // 0x198(0x68)
	struct TMap<uint32_t, struct ATeamStart*> AllocatedStarts; // 0x200(0x50)
	char pad_250[0x68]; // 0x250(0x68)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponSkinApperanceModifer_InspectKillInfo
// Size: 0x120 (Inherited: 0x110)
class UWeaponSkinApperanceModifer_InspectKillInfo : public UWeaponSkinApperanceModifer_NameCard {
public:

	struct FString DefaultPlayerName; // 0x110(0x10)

	void UpdateMaterial(struct FString KilledName); // Function DFMGameplay.WeaponSkinApperanceModifer_InspectKillInfo.UpdateMaterial // (Final|Native|Public) // @ game+0x6430060
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectAbilityC202Flash
// Size: 0x250 (Inherited: 0x1d0)
class UGPEffectAbilityC202Flash : public UGPEffectAbilityAssult {
public:

	struct FString PostProcessVolumeName_PC; // 0x1d0(0x10)
	struct FName FlashCenterXParameterName; // 0x1e0(0x08)
	struct FName FlashCenterYParameterName; // 0x1e8(0x08)
	float EdgeBuffer; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)
	struct FPostProcessVolumeBloomCurveConfig BloomCurveConfig; // 0x1f8(0x30)
	struct FName MobileHUDName; // 0x228(0x08)
	int32_t FlashDroneFlashLevel; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct UCurveFloat* CurrCurve; // 0x238(0x08)
	struct APostProcessVolume* PostProcessVolume; // 0x240(0x08)
	struct ADFMCharacter* TargetChar; // 0x248(0x08)

	bool TryFindFlashDrone(struct AGPCharacter* LocalChar, struct FVector& FlashDronePos); // Function DFMGameplay.GPEffectAbilityC202Flash.TryFindFlashDrone // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x632d3a0
	void SetPostVolumeBloomValue(float Intensity); // Function DFMGameplay.GPEffectAbilityC202Flash.SetPostVolumeBloomValue // (Final|Native|Private) // @ game+0x632d040
	struct FVector2D GetViewportLocation(struct AGPCharacter* LocalChar, struct FVector FlashDronePos); // Function DFMGameplay.GPEffectAbilityC202Flash.GetViewportLocation // (Final|Native|Private|HasDefaults) // @ game+0x632b9c0
	bool GetSceneDefaultBloomIntensity(float& Out); // Function DFMGameplay.GPEffectAbilityC202Flash.GetSceneDefaultBloomIntensity // (Final|Native|Public|HasOutParms) // @ game+0x632b8e0
	struct FVector2D CaculSceenPos(struct AGPCharacter* LocalChar, struct FVector FlashDronePos); // Function DFMGameplay.GPEffectAbilityC202Flash.CaculSceenPos // (Final|Native|Private|HasDefaults) // @ game+0x632b500
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectC102BlindingSmoke
// Size: 0x290 (Inherited: 0x1d0)
class UGPEffectC102BlindingSmoke : public UGPEffectAbilityAssult {
public:

	struct FName FXName; // 0x1d0(0x08)
	struct FName FXOpaqueName; // 0x1d8(0x08)
	struct FName FXRootName; // 0x1e0(0x08)
	bool bForceFXSourceFirst; // 0x1e8(0x01)
	bool bUseFX; // 0x1e9(0x01)
	bool bNeedFadeOut; // 0x1ea(0x01)
	bool bFadeOutInFXComponent; // 0x1eb(0x01)
	float FXOpaqueDelayTime; // 0x1ec(0x04)
	struct FName FadeOutParamName; // 0x1f0(0x08)
	/*struct TSoftObjectPtr<UCurveFloat>*/char FadeOutCurveFloatPath[0x28]; // 0x1f8(0x28)
	struct ADFMCharacter* TargetChar; // 0x220(0x08)
	struct UFXResourceContainerComponent* FXResourceComp; // 0x228(0x08)
	int32_t FXResourceCompHandle; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct UFXResourceContainerComponent* FXResourceCompOpaque; // 0x238(0x08)
	int32_t FXResourceCompOpaqueHandle; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct FTimerHandle FadeOutTickHandle; // 0x248(0x08)
	struct UCurveFloat* FadeOutCurveFloat; // 0x250(0x08)
	char pad_258[0x38]; // 0x258(0x38)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GPEffectBleedingEx
// Size: 0x1e8 (Inherited: 0x190)
class UGPEffectBleedingEx : public UGPEffectBleeding {
public:

	/*struct TSoftObjectPtr<UMaterialInstance>*/char PostEffectMat_End[0x28]; // 0x190(0x28)
	struct FString PostEffectName_End; // 0x1b8(0x10)
	struct UMaterialInstanceDynamic* PostEffectMat_End_DMI; // 0x1c8(0x08)
	float EndPretime; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct FTimerHandle EndTimerHandle; // 0x1d8(0x08)
	struct UClass* CameraModifier; // 0x1e0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAI3Character
// Size: 0x2ef0 (Inherited: 0x2e60)
class ADFMAI3Character : public ADFMAICharacter {
public:

	struct UAnimMontage* RecoilMontage; // 0x2e60(0x08)
	struct TArray<struct UAnimMontage*> BeHitMontages; // 0x2e68(0x10)
	struct TArray<struct FAnimConfigWithDirRange> StandLeftLegBeHitMontage; // 0x2e78(0x10)
	struct TArray<struct FAnimConfigWithDirRange> StandRightLegBeHitMontage; // 0x2e88(0x10)
	struct TArray<struct FAnimConfigWithDirRange> StandHeadBeHitMontage; // 0x2e98(0x10)
	struct TArray<struct FAnimConfigWithDirRange> StandThoraxBeHitMontage; // 0x2ea8(0x10)
	struct TArray<struct FAnimConfigWithDirRange> StandDeathMontages; // 0x2eb8(0x10)
	struct TArray<struct FAnimConfigWithDirRange> CrouchDeathMontages; // 0x2ec8(0x10)
	char pad_2ED8[0x18]; // 0x2ed8(0x18)

	void PlayMontage(struct UAnimMontage* Montage); // Function DFMGameplay.DFMAI3Character.PlayMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x6239280
	void PlayBeHitMontage(); // Function DFMGameplay.DFMAI3Character.PlayBeHitMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x6239260
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIAnimalCharacter
// Size: 0x2e70 (Inherited: 0x2e60)
class ADFMAIAnimalCharacter : public ADFMAICharacter {
public:

	bool bUseHPDamageScaleWithAmmoLevel; // 0x2e60(0x01)
	char pad_2E61[0x7]; // 0x2e61(0x07)
	struct UCurveFloat* HPDamageScaleCurve; // 0x2e68(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMNPCCharacter
// Size: 0x2ea0 (Inherited: 0x2e60)
class ADFMNPCCharacter : public ADFMAICharacter {
public:

	enum class EDialogueRule DialogueConstraint; // 0x2e60(0x01)
	enum class ENPCService NPCServiceType; // 0x2e61(0x01)
	char pad_2E62[0x6]; // 0x2e62(0x06)
	struct UClass* MarkerClass; // 0x2e68(0x08)
	struct FSoftObjectPath IdleAnimPath; // 0x2e70(0x18)
	int32_t marker; // 0x2e88(0x04)
	char pad_2E8C[0x14]; // 0x2e8c(0x14)

	void OnRep_IdleAnimPath(); // Function DFMGameplay.DFMNPCCharacter.OnRep_IdleAnimPath // (Final|Native|Protected) // @ game+0x62da560
	void OnControllerBindDrama(); // Function DFMGameplay.DFMNPCCharacter.OnControllerBindDrama // (Final|Native|Public|BlueprintCallable) // @ game+0x62da0f0
	bool BPStateCanBeCarry(); // Function DFMGameplay.DFMNPCCharacter.BPStateCanBeCarry // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x62d9630
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SOLCharacter
// Size: 0x2b30 (Inherited: 0x2a98)
class ASOLCharacter : public ADFMPlayerCharacter {
public:

	struct TMap<enum class ECharacterPart, float> ExplodeDamageDistancePriority; // 0x2a98(0x50)
	struct UDFMExpDataComponent* DFMExpDataComp; // 0x2ae8(0x08)
	struct UPlayerExitComponent* PlayerExitComponent; // 0x2af0(0x08)
	struct URoleLoadComponent* RoleLoadComponent; // 0x2af8(0x08)
	struct USOLHealthDataComponent* SOLHealthDataComponent; // 0x2b00(0x08)
	struct USOLCurrencyInGameComponent* CurrencyInGameComponent; // 0x2b08(0x08)
	struct UDFMHidingBodyComponent* HidingBodyComponent; // 0x2b10(0x08)
	struct UDFMManholeCoverTriggerComponent* ManholeCoverTriggerComponent; // 0x2b18(0x08)
	struct USOLVoiceOverComponent* SOLVoiceOverComponent; // 0x2b20(0x08)
	bool bEnableSignificance; // 0x2b28(0x01)
	char pad_2B29[0x7]; // 0x2b29(0x07)

	void OnRep_bEnableSignificance(); // Function DFMGameplay.SOLCharacter.OnRep_bEnableSignificance // (Final|Native|Protected) // @ game+0x63fd720
	struct USOLVoiceOverComponent* GetSOLVoiceOverComponent(); // Function DFMGameplay.SOLCharacter.GetSOLVoiceOverComponent // (Final|Native|Public|Const) // @ game+0x63fce50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireCommonAction
// Size: 0x1a8 (Inherited: 0x190)
class UDFMFSM_FireCommonAction : public UDFMFSM_FireBaseAction {
public:

	float BulletMaxDisatance; // 0x190(0x04)
	struct FName BulletFlightingEffectID; // 0x194(0x08)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UFXResourceContainerComponent* CreatedBulletFlightingPSC; // 0x1a0(0x08)

	void PlayBulletFlightingEffect(struct FHitResult HitResult); // Function DFMGameplay.DFMFSM_FireCommonAction.PlayBulletFlightingEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x6299a30
	void MakeDamage(struct FHitResult HitResult); // Function DFMGameplay.DFMFSM_FireCommonAction.MakeDamage // (Final|Native|Protected|BlueprintCallable) // @ game+0x62990d0
	struct FHitResult FireTraceSingle(struct TArray<struct AActor*> IgnoreActors, struct FRotator FireDirction); // Function DFMGameplay.DFMFSM_FireCommonAction.FireTraceSingle // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x62988f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireProjectileAction
// Size: 0x1b0 (Inherited: 0x190)
class UDFMFSM_FireProjectileAction : public UDFMFSM_FireBaseAction {
public:

	struct UClass* GPSkillProjectile; // 0x190(0x08)
	float InSpeed; // 0x198(0x04)
	float ZeroGravityDistance; // 0x19c(0x04)
	float KillRadius; // 0x1a0(0x04)
	float DamageRadius; // 0x1a4(0x04)
	char pad_1A8[0x8]; // 0x1a8(0x08)

	void ServerSpawnGPSkillProjectile(struct FVector InLocation, struct FRotator InRotation); // Function DFMGameplay.DFMFSM_FireProjectileAction.ServerSpawnGPSkillProjectile // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x6299c10
	void OnStateEnd(); // Function DFMGameplay.DFMFSM_FireProjectileAction.OnStateEnd // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnServerProjectileHit(struct AGPSkillProjectile* SkillProjectile, struct FHitResult HitResult, float InPenetrateDamageRate); // Function DFMGameplay.DFMFSM_FireProjectileAction.OnServerProjectileHit // (Native|Protected) // @ game+0x62998a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseDoubleHandsSkillAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseDoubleHandsSkillAction : public UDFMFSM_SkillStateActionBase {
public:


	void OnEndDoubleHandsSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseDoubleHandsSkillAction.OnEndDoubleHandsSkill // (Final|Native|Public) // @ game+0x62a9d80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseLeftHandSkillAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseLeftHandSkillAction : public UDFMFSM_SkillStateActionBase {
public:


	void OnOwnerIsAssassinate(bool bAssassinate); // Function DFMGameplay.DFMFSM_UseLeftHandSkillAction.OnOwnerIsAssassinate // (Final|Native|Public) // @ game+0x62afa10
	void OnEndLeftHandSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseLeftHandSkillAction.OnEndLeftHandSkill // (Final|Native|Public) // @ game+0x62af140
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseLegsSkillAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseLegsSkillAction : public UDFMFSM_SkillStateActionBase {
public:


	void OnEndUseLegsSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseLegsSkillAction.OnEndUseLegsSkill // (Final|Native|Public) // @ game+0x62af250
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseRightHandSkillAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseRightHandSkillAction : public UDFMFSM_SkillStateActionBase {
public:


	void OnEndUseRightHandSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseRightHandSkillAction.OnEndUseRightHandSkill // (Final|Native|Public) // @ game+0x62af360
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_UseSpecialSkillAction
// Size: 0x110 (Inherited: 0x110)
class UDFMFSM_UseSpecialSkillAction : public UDFMFSM_SkillStateActionBase {
public:


	void OnEndUseSpecialSkill(enum class ECharacterFSMEventDefine FSMEvent, float Value, struct UObject* EventObject); // Function DFMGameplay.DFMFSM_UseSpecialSkillAction.OnEndUseSpecialSkill // (Final|Native|Public) // @ game+0x62af470
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CountDownReleaseMapViewController
// Size: 0x380 (Inherited: 0x2c8)
class UCountDownReleaseMapViewController : public USelectableMapIconController {
public:

	struct AInteractor_ExitTrigger* ExitTrigger; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)
	struct FText TipsTitleText; // 0x2d8(0x18)
	struct FText TipsFunctionText; // 0x2f0(0x18)
	struct FText TipsActiveText; // 0x308(0x18)
	struct FText TipsInActiveText; // 0x320(0x18)
	struct FText TipsActiveDescText; // 0x338(0x18)
	struct FText TipsCountDownDescText; // 0x350(0x18)
	struct FText TipsInActiveDescText; // 0x368(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMExitIconHUDController
// Size: 0x2f0 (Inherited: 0x2c8)
class UDFMExitIconHUDController : public USelectableMapIconController {
public:

	struct APlayerExitBase* LocalPlayerExit; // 0x2c8(0x08)
	struct FSoftObjectPath DescImagePath; // 0x2d0(0x18)
	char pad_2E8[0x8]; // 0x2e8(0x08)

	void OnClientExitIconStatusChanged(bool bIconStatus); // Function DFMGameplay.DFMExitIconHUDController.OnClientExitIconStatusChanged // (Final|Native|Public) // @ game+0x62942d0
	void OnClientExitExploredChanged(bool bInExplored); // Function DFMGameplay.DFMExitIconHUDController.OnClientExitExploredChanged // (Final|Native|Public) // @ game+0x6294240
	void OnClientExitAwakeChanged(struct APlayerExitBase* ExitPtr, bool bInAwake); // Function DFMGameplay.DFMExitIconHUDController.OnClientExitAwakeChanged // (Final|Native|Public) // @ game+0x6294170
	void OnClientExitActiveChanged(bool bInActive); // Function DFMGameplay.DFMExitIconHUDController.OnClientExitActiveChanged // (Final|Native|Public) // @ game+0x62940e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HighValueBoxViewController
// Size: 0x330 (Inherited: 0x2c8)
class UHighValueBoxViewController : public USelectableMapIconController {
public:

	char pad_2C8[0x68]; // 0x2c8(0x68)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.IronGauzeMapIconViewController
// Size: 0x300 (Inherited: 0x2c8)
class UIronGauzeMapIconViewController : public USelectableMapIconController {
public:

	struct FText Title; // 0x2c8(0x18)
	struct FText Description; // 0x2e0(0x18)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PakMachineMapViewController
// Size: 0x310 (Inherited: 0x2c8)
class UPakMachineMapViewController : public USelectableMapIconController {
public:

	struct AInteractor_SingleItemContainer* PakMachine; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)
	struct FText FunctionText; // 0x2d8(0x18)
	struct FText TipsBoxDescText; // 0x2f0(0x18)
	char pad_308[0x8]; // 0x308(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ScouterMapIconViewController
// Size: 0x300 (Inherited: 0x2c8)
class UScouterMapIconViewController : public USelectableMapIconController {
public:

	struct FText Title; // 0x2c8(0x18)
	struct FText Description; // 0x2e0(0x18)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMEvacRefMapIconViewController
// Size: 0x340 (Inherited: 0x2c8)
class UDFMEvacRefMapIconViewController : public USelectableMapIconController {
public:

	struct FName EvacRefName; // 0x2c8(0x08)
	struct FText EvacRefNameText; // 0x2d0(0x18)
	struct FText DescText; // 0x2e8(0x18)
	struct FText StateText; // 0x300(0x18)
	struct AActor* EvacRefActor; // 0x318(0x08)
	struct APlayerExitBase* LocalPlayerExit; // 0x320(0x08)
	char pad_328[0x18]; // 0x328(0x18)

	void OnClientExitIconStatusChanged(bool bIconStatus); // Function DFMGameplay.DFMEvacRefMapIconViewController.OnClientExitIconStatusChanged // (Final|Native|Public) // @ game+0x6402f20
	bool NeedShowTime(struct FString& OutTimeString); // Function DFMGameplay.DFMEvacRefMapIconViewController.NeedShowTime // (Final|Native|Public|HasOutParms) // @ game+0x6402bd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TeamMateSignIconViewController
// Size: 0x310 (Inherited: 0x2c8)
class UTeamMateSignIconViewController : public USelectableMapIconController {
public:

	char pad_2C8[0x8]; // 0x2c8(0x08)
	struct FDFMMapSignInfo MapSignInfo; // 0x2d0(0x38)
	char pad_308[0x8]; // 0x308(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponBlueprintStationIconViewController
// Size: 0x2f0 (Inherited: 0x2c8)
class UWeaponBlueprintStationIconViewController : public USelectableMapIconController {
public:

	struct AInteractor_DecipherDevice* DecipherDevice; // 0x2c8(0x08)
	struct ABlueprintPlunder* TempBlueprintPlunder; // 0x2d0(0x08)
	char pad_2D8[0x18]; // 0x2d8(0x18)

	void OnBlueprintPlunderInfoUpdate(struct FBlueprintPlunderInfo& BlueprintPlunderInfo); // Function DFMGameplay.WeaponBlueprintStationIconViewController.OnBlueprintPlunderInfoUpdate // (Final|Native|Public|HasOutParms) // @ game+0x64263c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerItemMarkingIconViewController
// Size: 0x400 (Inherited: 0x298)
class UPlayerItemMarkingIconViewController : public UPlayerMarkingBaseIconViewController {
public:

	struct FItemMarkingInfo MarkingItemInfo; // 0x298(0x168)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerLocationMarkingIconViewController
// Size: 0x320 (Inherited: 0x298)
class UPlayerLocationMarkingIconViewController : public UPlayerMarkingBaseIconViewController {
public:

	struct FLocationMarkingInfo MarkingLocationInfo; // 0x298(0x48)
	struct UMarkingLocationTypeDataTableManager* MarkingLocationTypeDataTableMng; // 0x2e0(0x08)
	struct FSoftObjectPath LocationMarkerIconPath; // 0x2e8(0x18)
	struct FLinearColor EnemyColor; // 0x300(0x10)
	struct FLinearColor NotEnemyColor; // 0x310(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerUnitActorMarkingIconViewController
// Size: 0x2f0 (Inherited: 0x298)
class UPlayerUnitActorMarkingIconViewController : public UPlayerMarkingBaseIconViewController {
public:

	struct FUnitMarkingInfo UnitMarkingInfo; // 0x298(0x58)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BoxOrBagExecutor
// Size: 0x128 (Inherited: 0xe0)
class UBoxOrBagExecutor : public UInteractorBaseExecutor {
public:

	bool bOnlyExcuteClient; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	/*struct TSoftObjectPtr<UObject>*/char AlreadySearchedSoftIcon[0x28]; // 0xe8(0x28)
	bool bDelayShowLootingUI; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float DelayShowLootingUIDuration; // 0x114(0x04)
	char pad_118[0x8]; // 0x118(0x08)
	struct AInventoryPickup_Container* CachedDelayShowLootingUIContainer; // 0x120(0x08)

	void OnDelayShowLootingUI(); // Function DFMGameplay.BoxOrBagExecutor.OnDelayShowLootingUI // (Final|Native|Public) // @ game+0x61f51f0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CarryDeadBodyExecutor
// Size: 0xe0 (Inherited: 0xe0)
class UCarryDeadBodyExecutor : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractExecutor_OpenHackPC
// Size: 0xe0 (Inherited: 0xe0)
class UInteractExecutor_OpenHackPC : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractExecutor_VoiceOver
// Size: 0xe0 (Inherited: 0xe0)
class UInteractExecutor_VoiceOver : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_AccurateTrans
// Size: 0xe8 (Inherited: 0xe0)
class UInteractorExecutor_AccurateTrans : public UInteractorBaseExecutor {
public:

	char pad_E0[0x8]; // 0xe0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_DecipherDevice
// Size: 0x138 (Inherited: 0xe0)
class UInteractorExecutor_DecipherDevice : public UInteractorBaseExecutor {
public:

	enum class EBlueprintPlunderInteractResultType InteractResultType; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	/*struct TSoftObjectPtr<UObject>*/char SoftIcon_DecipherDevice[0x28]; // 0xe8(0x28)
	/*struct TSoftObjectPtr<UObject>*/char SoftIcon_MandelBrick[0x28]; // 0x110(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_DisposalBomb
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_DisposalBomb : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_Elevator
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_Elevator : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_InteractCodedLock
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_InteractCodedLock : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_ItemHeap
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_ItemHeap : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_OpenHUD
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_OpenHUD : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_PakMachine
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_PakMachine : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_RadarStationElevatorSwitch
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_RadarStationElevatorSwitch : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_SignalStation
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_SignalStation : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_SingleItemContainer
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_SingleItemContainer : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorExecutor_TieBreaker
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorExecutor_TieBreaker : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorRadioExecutor
// Size: 0xe0 (Inherited: 0xe0)
class UInteractorRadioExecutor : public UInteractorBaseExecutor {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.VehicleBagExecutor
// Size: 0xe8 (Inherited: 0xe0)
class UVehicleBagExecutor : public UInteractorBaseExecutor {
public:

	bool bOnlyExcuteClient; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RootMotionAction
// Size: 0x1c0 (Inherited: 0x70)
class URootMotionAction : public UMotionAction {
public:

	struct ADFMAICharacter* CHARACTER; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)
	struct FAnimRootMotionInfo RootMotionAnim; // 0x80(0xd0)
	char pad_150[0x70]; // 0x150(0x70)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Wander2D
// Size: 0x68 (Inherited: 0x58)
class UWander2D : public USeek {
public:

	float WanderOffset; // 0x58(0x04)
	float WanderRadius; // 0x5c(0x04)
	float WanderRate; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ObstacleAvoidance
// Size: 0x68 (Inherited: 0x58)
class UObstacleAvoidance : public USeek {
public:

	float LookAheadDistance; // 0x58(0x04)
	float AvoidanceDistance; // 0x5c(0x04)
	float SweepRadius; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PathFollowSteering
// Size: 0xd8 (Inherited: 0x58)
class UPathFollowSteering : public USeek {
public:

	float TargetRadius; // 0x58(0x04)
	float SlowRadius; // 0x5c(0x04)
	char pad_60[0x20]; // 0x60(0x20)
	struct FMotionPath Path; // 0x80(0x30)
	char pad_B0[0x28]; // 0xb0(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Align2D
// Size: 0x80 (Inherited: 0x70)
class UAlign2D : public UAlign3D {
public:

	char pad_70[0x10]; // 0x70(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Face3D
// Size: 0x90 (Inherited: 0x70)
class UFace3D : public UAlign3D {
public:

	char pad_70[0x20]; // 0x70(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIRCVController
// Size: 0xfc0 (Inherited: 0xf90)
class ADFMAIRCVController : public ADFMAIControllerDerived {
public:

	bool bEnablePathWayPoint; // 0xf90(0x01)
	char pad_F91[0x7]; // 0xf91(0x07)
	struct UDFMAIRCVDataComponent* RCVDataComponent; // 0xf98(0x08)
	struct TArray<struct ARCVWayPoint*> LastWayPointPath; // 0xfa0(0x10)
	struct ARCVWayPoint* CurrentWaypoint; // 0xfb0(0x08)
	char pad_FB8[0x8]; // 0xfb8(0x08)

	struct ARCVWayPoint* GetCurrentWayppoint(); // Function DFMGameplay.DFMAIRCVController.GetCurrentWayppoint // (Final|Native|Public|BlueprintCallable) // @ game+0x6255800
	void ForceReborn(struct FTransform RebornLoc); // Function DFMGameplay.DFMAIRCVController.ForceReborn // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62555c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMPVETankAIController
// Size: 0xfc0 (Inherited: 0xf90)
class ADFMPVETankAIController : public ADFMAIControllerDerived {
public:

	char pad_F90[0x30]; // 0xf90(0x30)

	void SetFirePointTransform(struct FTransform Trans); // Function DFMGameplay.DFMPVETankAIController.SetFirePointTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x62ec010
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel0
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel0 : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel1
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel1 : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel2
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel2 : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel3
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel3 : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel4
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel4 : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAIMovementLODFeatureLevel_Idle
// Size: 0x160 (Inherited: 0x160)
class UClientAIMovementLODFeatureLevel_Idle : public UClientAIMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UCharacterAppearanceFeatureLevel0 : public UCharacterAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UCharacterAppearanceFeatureLevel1 : public UCharacterAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UCharacterAppearanceFeatureLevel2 : public UCharacterAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CharacterAppearanceFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UCharacterAppearanceFeatureLevel_Idle : public UCharacterAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel0 : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel1 : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel2 : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel3
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel3 : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel4
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel4 : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAnimFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UClientAnimFeatureLevel_Idle : public UClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UClientAudioLODFeatureLevel0 : public UClientAudioLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UClientAudioLODFeatureLevel1 : public UClientAudioLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UClientAudioLODFeatureLevel2 : public UClientAudioLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientAudioLODFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UClientAudioLODFeatureLevel_Idle : public UClientAudioLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UClientTickLODFeatureLevel0 : public UClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UClientTickLODFeatureLevel1 : public UClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UClientTickLODFeatureLevel2 : public UClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeatureLevel3
// Size: 0x150 (Inherited: 0x150)
class UClientTickLODFeatureLevel3 : public UClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ClientTickLODFeatureLevel4
// Size: 0x150 (Inherited: 0x150)
class UClientTickLODFeatureLevel4 : public UClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UPlayerAppearanceFeatureLevel0 : public UPlayerAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UPlayerAppearanceFeatureLevel1 : public UPlayerAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UPlayerAppearanceFeatureLevel2 : public UPlayerAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerAppearanceFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UPlayerAppearanceFeatureLevel_Idle : public UPlayerAppearanceFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel0 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel1 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel2 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel3
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel3 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel4
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel4 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel5
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel5 : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientAnimFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientAnimFeatureLevel_Idle : public UPlayerClientAnimFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientTickLODFeatureLevel0 : public UPlayerClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientTickLODFeatureLevel1 : public UPlayerClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientTickLODFeatureLevel2 : public UPlayerClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeatureLevel3
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientTickLODFeatureLevel3 : public UPlayerClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientTickLODFeatureLevel4
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientTickLODFeatureLevel4 : public UPlayerClientTickFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientMovementLODFeatureLevel0 : public UPlayerClientMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientMovementLODFeatureLevel1 : public UPlayerClientMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientMovementLODFeatureLevel2 : public UPlayerClientMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlayerClientMovementLODFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UPlayerClientMovementLODFeatureLevel_Idle : public UPlayerClientMovementLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel0
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel0 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel1
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel1 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel2
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel2 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel3
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel3 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel4
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel4 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DSReplicationLODFeatureLevel5
// Size: 0x148 (Inherited: 0x148)
class UDSReplicationLODFeatureLevel5 : public UDSReplicationLODFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponLODFeatureLevel0
// Size: 0x150 (Inherited: 0x150)
class UWeaponLODFeatureLevel0 : public UWeaponFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponLODFeatureLevel1
// Size: 0x150 (Inherited: 0x150)
class UWeaponLODFeatureLevel1 : public UWeaponFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponLODFeatureLevel2
// Size: 0x150 (Inherited: 0x150)
class UWeaponLODFeatureLevel2 : public UWeaponFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.WeaponLODFeatureLevel_Idle
// Size: 0x150 (Inherited: 0x150)
class UWeaponLODFeatureLevel_Idle : public UWeaponFeatureLevelBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FormationLocation
// Size: 0x280 (Inherited: 0x248)
class UFormationLocation : public UDramaLocationComponent {
public:

	int32_t Order; // 0x248(0x04)
	bool bSquadCommander; // 0x24c(0x01)
	char pad_24D[0x3]; // 0x24d(0x03)
	struct TArray<struct FAngleRange> AngleRanges; // 0x250(0x10)
	float MinRadius; // 0x260(0x04)
	float MaxRadius; // 0x264(0x04)
	float MinStartTime; // 0x268(0x04)
	float MaxStartTime; // 0x26c(0x04)
	float MinStartTime_Shield; // 0x270(0x04)
	float MaxStartTime_Shield; // 0x274(0x04)
	bool bIsGuarder; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MovePathPointEx
// Size: 0x260 (Inherited: 0x248)
class UMovePathPointEx : public UMovePathPoint {
public:

	bool bIsWait; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	float StayTime; // 0x24c(0x04)
	enum class EGroupPatrolPose MoveState; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	int32_t FormationID; // 0x254(0x04)
	char pad_258[0x8]; // 0x258(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemBatchBuilding
// Size: 0xf90 (Inherited: 0xf80)
class ABreakableItemBatchBuilding : public ABreakableItemBuildingBase {
public:

	int32_t ResidualMeshIndex; // 0xf80(0x04)
	char pad_F84[0x4]; // 0xf84(0x04)
	/*struct UDestructibleStaticMeshComponent**/char DestructibleStaticMeshComponent[0x8]; // 0xf88(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemBuildingWall
// Size: 0xf80 (Inherited: 0xf80)
class ABreakableItemBuildingWall : public ABreakableItemBuildingBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.BreakableItemWholeBuilding
// Size: 0xf80 (Inherited: 0xf80)
class ABreakableItemWholeBuilding : public ABreakableItemBuildingBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorSwitcherComponent
// Size: 0x270 (Inherited: 0x240)
class UInteractorSwitcherComponent : public UInteractorAppearanceComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnSwitcherOpenStateChange[0x10]; // 0x240(0x10)
	bool OpenState; // 0x250(0x01)
	char pad_251[0xb]; // 0x251(0x0b)
	struct FGameplayTag OpenTag; // 0x25c(0x08)
	struct FGameplayTag CloseTag; // 0x264(0x08)
	char pad_26C[0x4]; // 0x26c(0x04)

	void OnRepOpenState(); // Function DFMGameplay.InteractorSwitcherComponent.OnRepOpenState // (Native|Protected) // @ game+0x1751300
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorApperanceIronGauzeComponent
// Size: 0x2f8 (Inherited: 0x240)
class UInteractorApperanceIronGauzeComponent : public UInteractorAppearanceComponent {
public:

	enum class EInteractorIronGauzeState CurState; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct TMap<enum class EInteractorIronGauzeState, struct FGameplayTag> ActiveTags; // 0x248(0x50)
	/*struct FMulticastInlineDelegate*/char OnStateChanged[0x10]; // 0x298(0x10)
	uint64_t PartItemId; // 0x2a8(0x08)
	float ShowDuration; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct FString NoDuabilityTips; // 0x2b8(0x10)
	struct FString NoItemTips; // 0x2c8(0x10)
	struct FString ConsumeTips; // 0x2d8(0x10)
	struct FString ConsumeEmptyTips; // 0x2e8(0x10)

	void SwitchBurnningPotState(struct ACHARACTER* OperateCharacter); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.SwitchBurnningPotState // (Final|Native|Public|BlueprintCallable) // @ game+0x634f500
	void SwitchAutoCroushState(struct AActor* Actor, bool bCrouch); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.SwitchAutoCroushState // (Final|Native|Public|BlueprintCallable) // @ game+0x634f430
	void ShowCannotInteractTips(struct ACHARACTER* OperateCharacter); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.ShowCannotInteractTips // (Final|Native|Public|BlueprintCallable) // @ game+0x634f390
	void SetCurState(enum class EInteractorIronGauzeState InState); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.SetCurState // (Final|Native|Public|BlueprintCallable) // @ game+0x634f110
	void OnRep_State(enum class EInteractorIronGauzeState OldState); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.OnRep_State // (Final|Native|Public) // @ game+0x634ed30
	void ConsumeDuability(struct ACHARACTER* OperateCharacter); // Function DFMGameplay.InteractorApperanceIronGauzeComponent.ConsumeDuability // (Final|Native|Public|BlueprintCallable) // @ game+0x634dd10
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorApperanceSwitchShowComponent
// Size: 0x2b0 (Inherited: 0x240)
class UInteractorApperanceSwitchShowComponent : public UInteractorAppearanceComponent {
public:

	struct FGameplayTagContainer AnimStartInteruptTags; // 0x240(0x20)
	struct FGameplayTagContainer AnimCompleteInteruptTags; // 0x260(0x20)
	float ShowDelay; // 0x280(0x04)
	float ShowDuration; // 0x284(0x04)
	float HideDelay; // 0x288(0x04)
	char pad_28C[0x14]; // 0x28c(0x14)
	/*struct FMulticastInlineDelegate*/char OnSwitchShow[0x10]; // 0x2a0(0x10)

	void TmpSetVisible(bool bVisible, float Delay); // Function DFMGameplay.InteractorApperanceSwitchShowComponent.TmpSetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x63528e0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractoRepairEffectComponent
// Size: 0x258 (Inherited: 0x240)
class UInteractoRepairEffectComponent : public UInteractorAppearanceComponent {
public:

	uint64_t RepairPartItemId; // 0x240(0x08)
	struct UGPAudioEventAsset* RepairAudioEventAsset; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessDestructableComponent
// Size: 0x250 (Inherited: 0x240)
class UInteractorProcessDestructableComponent : public UInteractorAppearanceComponent {
public:

	struct FGameplayTag DestructableTag; // 0x240(0x08)
	struct FGameplayTag DestructunableTag; // 0x248(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorWirelessTriggerComponent
// Size: 0x250 (Inherited: 0x240)
class UInteractorWirelessTriggerComponent : public UInteractorAppearanceComponent {
public:

	int64_t DialogGroupID; // 0x240(0x08)
	bool bDoOnce; // 0x248(0x01)
	bool HasDone; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.RadioExecuteComponent
// Size: 0x2b0 (Inherited: 0x240)
class URadioExecuteComponent : public UInteractorAppearanceComponent {
public:

	struct TArray<struct FName> Channels; // 0x240(0x10)
	int32_t ExitStateChannelIdx; // 0x250(0x04)
	int32_t CurrCahnnelIdx; // 0x254(0x04)
	struct FSoftObjectPath RadioTablePath; // 0x258(0x18)
	/*struct FMulticastInlineDelegate*/char OnChannelIdxChange[0x10]; // 0x270(0x10)
	/*struct FMulticastInlineDelegate*/char OnExitStateNty[0x10]; // 0x280(0x10)
	/*struct FMulticastInlineDelegate*/char OnExecute[0x10]; // 0x290(0x10)
	int32_t DefaultChannelIdx; // 0x2a0(0x04)
	char pad_2A4[0xc]; // 0x2a4(0x0c)

	void OnRep_ChannelIdx(int32_t LastChannelIdx); // Function DFMGameplay.RadioExecuteComponent.OnRep_ChannelIdx // (Final|Native|Protected) // @ game+0x63f2130
	void OnRadioTableLoadComplete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.RadioExecuteComponent.OnRadioTableLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x63f1f50
	void NetMultiPlayExitInfo(); // Function DFMGameplay.RadioExecuteComponent.NetMultiPlayExitInfo // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1751300
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimComponent
// Size: 0x2a8 (Inherited: 0x1b0)
class UInteractorProcessPawnAnimComponent : public UInteractorProcessPawnComponent {
public:

	char pad_1B0[0x8]; // 0x1b0(0x08)
	struct TArray<struct UAnimSequenceBase*> CacheAnimationPaths; // 0x1b8(0x10)
	enum class EAnimationPlayType FPPPlayType; // 0x1c8(0x01)
	char pad_1C9[0x7]; // 0x1c9(0x07)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPAnimationPath[0x28]; // 0x1d0(0x28)
	bool FPPStopAllMontage; // 0x1f8(0x01)
	enum class EAnimationPlayType TPPPlayType; // 0x1f9(0x01)
	char pad_1FA[0x6]; // 0x1fa(0x06)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPAnimationPath[0x28]; // 0x200(0x28)
	struct FName CharacterLeftArmAnimName; // 0x228(0x08)
	bool TPPStopAllMontage; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	float FPPBlendInTime; // 0x234(0x04)
	float FPPBlendOutTime; // 0x238(0x04)
	float AnimDuration; // 0x23c(0x04)
	bool bStayLoopAnim; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	struct FGameplayTag AnimBeginPlayTag; // 0x244(0x08)
	struct FGameplayTag AnimPlayCompleteTag; // 0x24c(0x08)
	struct FGameplayTag AnimPlayInterruptTag; // 0x254(0x08)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct FGameplayTagContainer AnimPlayCompleteTriggerTags; // 0x260(0x20)
	struct FName StartSection; // 0x280(0x08)
	bool bUseDefaultFOVforInteract; // 0x288(0x01)
	bool bDisableCameraAnimationAddMethod; // 0x289(0x01)
	bool bUse3PSpineHeightEnable; // 0x28a(0x01)
	bool bFPPUseZero3PLowBodyWeight; // 0x28b(0x01)
	bool bFPPMontageAutoBlendOut; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
	/*struct FMulticastInlineDelegate*/char OnClientProcessPawnAnimEndInteraction[0x10]; // 0x290(0x10)
	char pad_2A0[0x8]; // 0x2a0(0x08)

	void OnDetectValidSystem(); // Function DFMGameplay.InteractorProcessPawnAnimComponent.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x6369280
	void OnAnimsToLoad(struct TArray<struct FSoftObjectPath> SoftObjectPaths); // Function DFMGameplay.InteractorProcessPawnAnimComponent.OnAnimsToLoad // (Final|Native|Public) // @ game+0x6369060
	struct FName GetStartSection(); // Function DFMGameplay.InteractorProcessPawnAnimComponent.GetStartSection // (Native|Event|Public|BlueprintEvent) // @ game+0x6368f20
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimSeqsComponent
// Size: 0x218 (Inherited: 0x1b0)
class UInteractorProcessPawnAnimSeqsComponent : public UInteractorProcessPawnComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnAnimBegin[0x10]; // 0x1b0(0x10)
	/*struct FMulticastInlineDelegate*/char OnAnimEnd[0x10]; // 0x1c0(0x10)
	struct TArray<struct FInteractAnimConfig> AnimList; // 0x1d0(0x10)
	struct FGameplayTag EndTag; // 0x1e0(0x08)
	struct ACHARACTER* CachedChar; // 0x1e8(0x08)
	struct UAnimMontage* CurFppMontage; // 0x1f0(0x08)
	struct UAnimMontage* CurTppMontage; // 0x1f8(0x08)
	char pad_200[0x18]; // 0x200(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnSwitchEmptyHandComponent
// Size: 0x250 (Inherited: 0x1b0)
class UInteractorProcessPawnSwitchEmptyHandComponent : public UInteractorProcessPawnComponent {
public:

	char pad_1B0[0xc]; // 0x1b0(0x0c)
	struct FGameplayTag EmptyHandTag; // 0x1bc(0x08)
	struct FGameplayTag LastWeaponTag; // 0x1c4(0x08)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct FGameplayTagContainer AnimStartTriggerTags; // 0x1d0(0x20)
	struct FGameplayTagContainer AnimCompleteTriggerTags; // 0x1f0(0x20)
	struct FGameplayTagContainer AnimStartInteruptTags; // 0x210(0x20)
	struct FGameplayTagContainer AnimCompleteInteruptTags; // 0x230(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnSwitchWeaponComponent
// Size: 0x200 (Inherited: 0x1b0)
class UInteractorProcessPawnSwitchWeaponComponent : public UInteractorProcessPawnComponent {
public:

	char pad_1B0[0x8]; // 0x1b0(0x08)
	uint64_t ItemID; // 0x1b8(0x08)
	enum class EAttachPosition AttachPos; // 0x1c0(0x04)
	struct FGameplayTag SwitchItemCompleteTag; // 0x1c4(0x08)
	struct FGameplayTag SwitchBackCompleteTag; // 0x1cc(0x08)
	struct FGameplayTag SwitchBackTriggerTag; // 0x1d4(0x08)
	char pad_1DC[0x4]; // 0x1dc(0x04)
	/*struct TScriptInterface<IWeaponInterface>*/char OldWeapon[0x10]; // 0x1e0(0x10)
	char pad_1F0[0x8]; // 0x1f0(0x08)
	struct AWeaponBase* TempSpawnedWeapon; // 0x1f8(0x08)

	void MultiSwitchComplete(struct ACHARACTER* OperatorCharacter, struct FGameplayTag Tag); // Function DFMGameplay.InteractorProcessPawnSwitchWeaponComponent.MultiSwitchComplete // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x636cb00
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnSwitchPotComponent
// Size: 0x1d0 (Inherited: 0x1b0)
class UInteractorProcessPawnSwitchPotComponent : public UInteractorProcessPawnComponent {
public:

	uint64_t PartItemId; // 0x1b0(0x08)
	uint64_t PartUseCount; // 0x1b8(0x08)
	struct FGameplayTag SwitchPotCompleteTag; // 0x1c0(0x08)
	char pad_1C8[0x8]; // 0x1c8(0x08)

	void MultiSwitchPotCompleted(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorProcessPawnSwitchPotComponent.MultiSwitchPotCompleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x636cbd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnUseHeavyMachineGunComponent
// Size: 0x1c8 (Inherited: 0x1b0)
class UInteractorProcessPawnUseHeavyMachineGunComponent : public UInteractorProcessPawnComponent {
public:

	float Durations; // 0x1b0(0x04)
	struct FGameplayTag UsingTag; // 0x1b4(0x08)
	struct FGameplayTag UnusingTag; // 0x1bc(0x08)
	bool bAttachtoWeaponMesh; // 0x1c4(0x01)
	char pad_1C5[0x3]; // 0x1c5(0x03)

	void DelayUseSecenWeapon(); // Function DFMGameplay.InteractorProcessPawnUseHeavyMachineGunComponent.DelayUseSecenWeapon // (Final|Native|Protected) // @ game+0x636c980
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorRunMiniGameComponent
// Size: 0x2b8 (Inherited: 0x1b0)
class UInteractorRunMiniGameComponent : public UInteractorProcessPawnComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnGameStart[0x10]; // 0x1b0(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameEnd[0x10]; // 0x1c0(0x10)
	/*struct FMulticastInlineDelegate*/char OnGameUpdate[0x10]; // 0x1d0(0x10)
	bool bHasSuccess; // 0x1e0(0x01)
	char pad_1E1[0x7]; // 0x1e1(0x07)
	struct UUserWidget* MiniGameView; // 0x1e8(0x08)
	struct FGameplayTag CloseGameTag; // 0x1f0(0x08)
	/*struct TSoftClassPtr<UObject>*/char ObstacleWidget[0x28]; // 0x1f8(0x28)
	enum class EAnimationPlayType FPPPlayType; // 0x220(0x01)
	char pad_221[0x7]; // 0x221(0x07)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPAnimationPath[0x28]; // 0x228(0x28)
	bool FPPStopAllMontage; // 0x250(0x01)
	enum class EAnimationPlayType TPPPlayType; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPAnimationPath[0x28]; // 0x258(0x28)
	bool TPPStopAllMontage; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float FPPBlendInTime; // 0x284(0x04)
	float FPPBlendOutTime; // 0x288(0x04)
	float AnimDuration; // 0x28c(0x04)
	float RunMiniGameViewDelay; // 0x290(0x04)
	float RunMiniGameViewTimeStamp; // 0x294(0x04)
	int32_t MiniGameRandSeed; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct FTimerHandle DelayRunMGViewHandle; // 0x2a0(0x08)
	char pad_2A8[0x10]; // 0x2a8(0x10)

	void ServerQuit(bool bIsSuccess); // Function DFMGameplay.InteractorRunMiniGameComponent.ServerQuit // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x636d010
	void ServerInterrupt(); // Function DFMGameplay.InteractorRunMiniGameComponent.ServerInterrupt // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x174fe70
	void OnWidgetRemoveFromViewport(struct UUserWidget* Widget); // Function DFMGameplay.InteractorRunMiniGameComponent.OnWidgetRemoveFromViewport // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnWidgetCreate(struct UUserWidget* Widget); // Function DFMGameplay.InteractorRunMiniGameComponent.OnWidgetCreate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnWidgetAddToViewport(struct UUserWidget* Widget); // Function DFMGameplay.InteractorRunMiniGameComponent.OnWidgetAddToViewport // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void NetMultiQuit(bool bIsSuccess); // Function DFMGameplay.InteractorRunMiniGameComponent.NetMultiQuit // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x17501f0
	void NetMultiInterrupt(); // Function DFMGameplay.InteractorRunMiniGameComponent.NetMultiInterrupt // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x17512c0
	void GameInterrupt(); // Function DFMGameplay.InteractorRunMiniGameComponent.GameInterrupt // (Final|Native|Public|BlueprintCallable) // @ game+0x636ca50
	void GameClose(bool bIsSuccess); // Function DFMGameplay.InteractorRunMiniGameComponent.GameClose // (Final|Native|Public|BlueprintCallable) // @ game+0x636c9c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.PlunderProcessPawnComponent
// Size: 0x4e0 (Inherited: 0x1b0)
class UPlunderProcessPawnComponent : public UInteractorProcessPawnComponent {
public:

	int32_t LayerNum; // 0x1b0(0x04)
	int32_t RowNum; // 0x1b4(0x04)
	int32_t ListNum; // 0x1b8(0x04)
	struct FSubPickupInfo CurrSubPickupInfo; // 0x1bc(0x08)
	struct FGameplayTag CloseGameTag; // 0x1c4(0x08)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPStartAnimPath[0x28]; // 0x1d0(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPEndAnimPath[0x28]; // 0x1f8(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPLFPath[0x28]; // 0x220(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPLBPath[0x28]; // 0x248(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPRFPath[0x28]; // 0x270(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPRBPath[0x28]; // 0x298(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPStartAnimPath[0x28]; // 0x2c0(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPEndAnimPath[0x28]; // 0x2e8(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPLFPath[0x28]; // 0x310(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPLBPath[0x28]; // 0x338(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPRFPath[0x28]; // 0x360(0x28)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPRBPath[0x28]; // 0x388(0x28)
	struct FName FPPGrabSocketLF; // 0x3b0(0x08)
	struct FName FPPGrabSocketLB; // 0x3b8(0x08)
	struct FName FPPGrabSocketRF; // 0x3c0(0x08)
	struct FName FPPGrabSocketRB; // 0x3c8(0x08)
	float StartDuration; // 0x3d0(0x04)
	bool FPPStopAllMontage; // 0x3d4(0x01)
	bool TPPStopAllMontage; // 0x3d5(0x01)
	char pad_3D6[0x2]; // 0x3d6(0x02)
	float TPPBlendInTime; // 0x3d8(0x04)
	float TPPBlendOutTime; // 0x3dc(0x04)
	float TimeIKTrack; // 0x3e0(0x04)
	float TimeDelayGrabHand; // 0x3e4(0x04)
	struct UClass* SpawnChildClass; // 0x3e8(0x08)
	struct FName GrabSocket; // 0x3f0(0x08)
	struct FName HandMoveToSocket; // 0x3f8(0x08)
	/*struct FMulticastInlineDelegate*/char OnPlayerPickup[0x10]; // 0x400(0x10)
	/*struct FMulticastInlineDelegate*/char OnPlayerOperator[0x10]; // 0x410(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerPickUp[0x10]; // 0x420(0x10)
	struct UCurveFloat* FOVAdditiveCurve; // 0x430(0x08)
	float FOVAdditiveCurveEndSmoothTime; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
	struct UCurveFloat* FOVMutrixOneMinusCurve; // 0x440(0x08)
	float FOVMutrixOneMinusCurveEndTime; // 0x448(0x04)
	float FOVMutrixOneMinusCurveEndSmoothTime; // 0x44c(0x04)
	float PickupInterval; // 0x450(0x04)
	float RaceSingleClickOverlay; // 0x454(0x04)
	float RaceFallSpeed; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct TArray<float> RaceScoreLevels; // 0x460(0x10)
	struct TArray<float> RaceLevelAnimDurations; // 0x470(0x10)
	int32_t ServerCurrLeaveNumber; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct TArray<struct FVector> SubPlciupLocs; // 0x488(0x10)
	struct TArray<struct AActor*> SubPickups; // 0x498(0x10)
	struct FTimerHandle DelayPickupHandle; // 0x4a8(0x08)
	struct FTimerHandle IKTrackTimerHandle; // 0x4b0(0x08)
	struct FTimerHandle GrabHandTimerHandle; // 0x4b8(0x08)
	struct FTimerHandle RemovePickupTimerHandle; // 0x4c0(0x08)
	float NextPickTimeStamp; // 0x4c8(0x04)
	float IKTrackTimeStamp; // 0x4cc(0x04)
	char pad_4D0[0x8]; // 0x4d0(0x08)
	float RaceCurrValue; // 0x4d8(0x04)
	float RaceMaxValue; // 0x4dc(0x04)

	void ServerRPCTest2(uint32_t Level, struct FVector FLevel); // Function DFMGameplay.PlunderProcessPawnComponent.ServerRPCTest2 // (Final|Native|Public|HasDefaults) // @ game+0x63e8a60
	void ServerRPCTest(struct FName FuncName, struct TArray<char> Params); // Function DFMGameplay.PlunderProcessPawnComponent.ServerRPCTest // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x63e8b30
	void ServerQuitGame(); // Function DFMGameplay.PlunderProcessPawnComponent.ServerQuitGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x174fe70
	void ServerPickUp(char Level); // Function DFMGameplay.PlunderProcessPawnComponent.ServerPickUp // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x6208050
	void OnRep_CurrPickupInfo(); // Function DFMGameplay.PlunderProcessPawnComponent.OnRep_CurrPickupInfo // (Final|Native|Protected) // @ game+0x63e88a0
	void NetMultiQuitGame(); // Function DFMGameplay.PlunderProcessPawnComponent.NetMultiQuitGame // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1751300
	void GetSpawnLoc(struct FVector& TopLeft, struct FVector& ButtomRight, struct FVector& LeftDir, struct FVector& ForwardDir, struct FVector& UpDir); // Function DFMGameplay.PlunderProcessPawnComponent.GetSpawnLoc // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x63e84b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAIInteractAction_AssembleThreeAnim
// Size: 0x80 (Inherited: 0x60)
class UDFMAIInteractAction_AssembleThreeAnim : public UDFMAIInteractAction_SingleMontage {
public:

	struct UAnimSequenceBase* InteractStartAnim; // 0x60(0x08)
	struct UAnimSequenceBase* InteractLoopAnim; // 0x68(0x08)
	struct UAnimSequenceBase* InteractEndAnim; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_RCVChangeMoveState
// Size: 0x1c0 (Inherited: 0x1b8)
class UMotionAction_RCVChangeMoveState : public UPathMotionAction {
public:

	enum class EGPAIMotionType TargetMotionType; // 0x1b8(0x01)
	char pad_1B9[0x7]; // 0x1b9(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_RCVPathFollow
// Size: 0x200 (Inherited: 0x1b8)
class UMotionAction_RCVPathFollow : public UPathMotionAction {
public:

	float RotationSpeed; // 0x1b8(0x04)
	float MoveSpeed; // 0x1bc(0x04)
	float MoveAcceleration; // 0x1c0(0x04)
	bool bRotateToTargetOnFinish; // 0x1c4(0x01)
	bool bResetVelocityOnFinish; // 0x1c5(0x01)
	bool bWaitRotationToFinish; // 0x1c6(0x01)
	bool bUseCharacterSpeedConfig; // 0x1c7(0x01)
	struct UCurveFloat* RotationSpeedCurve; // 0x1c8(0x08)
	struct UDFMAIRCVDataComponent* RCVDataComponent; // 0x1d0(0x08)
	char pad_1D8[0x28]; // 0x1d8(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_AnimPath
// Size: 0x1f8 (Inherited: 0x1b8)
class UMotionAction_AnimPath : public UPathMotionAction {
public:

	char pad_1B8[0x40]; // 0x1b8(0x40)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_CustomMontage
// Size: 0x3b0 (Inherited: 0x1b8)
class UMotionAction_CustomMontage : public UPathMotionAction {
public:

	char pad_1B8[0x8]; // 0x1b8(0x08)
	struct FAnimRootMotionInfo RootMotionAnim; // 0x1c0(0xd0)
	struct FAnimRootMotionInfo SimRootMotionAnim; // 0x290(0xd0)
	char pad_360[0x10]; // 0x360(0x10)
	struct UAnimSequence* AnimSeq; // 0x370(0x08)
	char pad_378[0x28]; // 0x378(0x28)
	struct UGPAIAnimInstance* AnimInst; // 0x3a0(0x08)
	char pad_3A8[0x8]; // 0x3a8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_Interaction
// Size: 0x1b8 (Inherited: 0x1b8)
class UMotionAction_Interaction : public UPathMotionAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_OpenDoor
// Size: 0x1c0 (Inherited: 0x1b8)
class UMotionAction_OpenDoor : public UPathMotionAction {
public:

	char pad_1B8[0x8]; // 0x1b8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_FixedMachineGun
// Size: 0x1c8 (Inherited: 0x1b8)
class UMotionAction_FixedMachineGun : public UPathMotionAction {
public:

	struct ADFMSceneWeapon* SceneWeapon; // 0x1b8(0x08)
	char pad_1C0[0x8]; // 0x1c0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_RootMotion
// Size: 0x2e0 (Inherited: 0x1b8)
class UMotionAction_RootMotion : public UPathMotionAction {
public:

	char pad_1B8[0x8]; // 0x1b8(0x08)
	struct FAnimRootMotionInfo RootMotionAnim; // 0x1c0(0xd0)
	char pad_290[0x18]; // 0x290(0x18)
	struct UAnimSequence* AnimSeq; // 0x2a8(0x08)
	char pad_2B0[0x28]; // 0x2b0(0x28)
	struct UGPAIAnimInstance* AnimInst; // 0x2d8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_PathFollow
// Size: 0x1e0 (Inherited: 0x1b8)
class UMotionAction_PathFollow : public UPathMotionAction {
public:

	bool bUseVelocityFixedYawOffset; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	float FixedYawClampMin; // 0x1bc(0x04)
	float FixedYawClampMax; // 0x1c0(0x04)
	float RotationSpeed; // 0x1c4(0x04)
	bool bRotateToTargetOnFinish; // 0x1c8(0x01)
	char pad_1C9[0x17]; // 0x1c9(0x17)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_CrocodileDeadRoll
// Size: 0x1f0 (Inherited: 0x1b8)
class UMotionAction_CrocodileDeadRoll : public UPathMotionAction {
public:

	struct ADFMCharacter* TargetCharacter; // 0x1b8(0x08)
	struct FTransform RelAnimStarTransform; // 0x1c0(0x30)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_Teleport
// Size: 0x1b8 (Inherited: 0x1b8)
class UMotionAction_Teleport : public UPathMotionAction {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_ModifyLocoAnim
// Size: 0x1b8 (Inherited: 0x1b8)
class UMotionAction_ModifyLocoAnim : public UPathMotionAction {
public:


	struct UAnimSequence* GetBasicLocomotionAnim(); // Function DFMGameplay.MotionAction_ModifyLocoAnim.GetBasicLocomotionAnim // (Event|Public|BlueprintEvent|Const) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMAITask_MauriceCrossbowMultiShoot
// Size: 0x138 (Inherited: 0xc0)
class UDFMAITask_MauriceCrossbowMultiShoot : public UDFMAITask_MauriceCrossbowShoot {
public:

	struct FBlackboardKeySelector Target1BBKey; // 0xc0(0x28)
	struct FBlackboardKeySelector Target2BBKey; // 0xe8(0x28)
	struct FBlackboardKeySelector Target3BBKey; // 0x110(0x28)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMCharBuffEntityScoutSkillCD
// Size: 0x1b8 (Inherited: 0x1b0)
class UDFMCharBuffEntityScoutSkillCD : public UDFMCharacterBuffEntitySkillCD {
public:

	uint32_t TargetBuffID; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)

	void OnKillPlayer(struct FKillInfo& KillInfo); // Function DFMGameplay.DFMCharBuffEntityScoutSkillCD.OnKillPlayer // (Final|Native|Public|HasOutParms) // @ game+0x6289c70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_AerialWorkPlatform
// Size: 0xd40 (Inherited: 0xc40)
class AInteractor_AerialWorkPlatform : public AInteractorBaseProxy {
public:

	struct TMap<struct FString, struct FVector> WorkPlatformBoneTranslate; // 0xc40(0x50)
	struct TMap<struct FString, struct FRotator> WorkPlatformBoneRotation; // 0xc90(0x50)
	float CloseSkeletalMeshTickDelayTime; // 0xce0(0x04)
	float CheckTickMaxTotalTime; // 0xce4(0x04)
	float CheckTickIntervalTime; // 0xce8(0x04)
	struct FGameplayTag AscendTag; // 0xcec(0x08)
	struct FGameplayTag DescendTag; // 0xcf4(0x08)
	char pad_CFC[0x4]; // 0xcfc(0x04)
	struct UGPAudioEventAsset* StartWorkAudioEvent; // 0xd00(0x08)
	struct UGPAudioEventAsset* StopWorkAudioEvent; // 0xd08(0x08)
	struct UGPAudioEventAsset* UpLoopAudioEvent; // 0xd10(0x08)
	struct UGPAudioEventAsset* UpLoopStopAudioEvent; // 0xd18(0x08)
	struct UGPAudioEventAsset* DownLoopAudioEvent; // 0xd20(0x08)
	struct UGPAudioEventAsset* DownLoopStopAudioEvent; // 0xd28(0x08)
	char pad_D30[0x8]; // 0xd30(0x08)
	float StartCheckTime; // 0xd38(0x04)
	bool bNeedCheckTickState; // 0xd3c(0x01)
	bool bAlreadyOpenTick; // 0xd3d(0x01)
	bool bAlreadyCheckSwitcherState; // 0xd3e(0x01)
	char pad_D3F[0x1]; // 0xd3f(0x01)

	void OpenSkeletonMeshTickStateInTimer(); // Function DFMGameplay.Interactor_AerialWorkPlatform.OpenSkeletonMeshTickStateInTimer // (Final|Native|Protected) // @ game+0x633c860
	void OpenSkeletonMeshTickState(); // Function DFMGameplay.Interactor_AerialWorkPlatform.OpenSkeletonMeshTickState // (Final|Native|Protected) // @ game+0x633c840
	struct FVector GetWorkPlatformBoneTranslate(struct FString Key); // Function DFMGameplay.Interactor_AerialWorkPlatform.GetWorkPlatformBoneTranslate // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x633bbc0
	struct FRotator GetWorkPlatformBoneRotation(struct FString Key); // Function DFMGameplay.Interactor_AerialWorkPlatform.GetWorkPlatformBoneRotation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x633bae0
	void DelayCloseTick(); // Function DFMGameplay.Interactor_AerialWorkPlatform.DelayCloseTick // (Final|Native|Protected) // @ game+0x633b050
	void CheckSwitcherStateAndInit(); // Function DFMGameplay.Interactor_AerialWorkPlatform.CheckSwitcherStateAndInit // (Final|Native|Protected) // @ game+0x633aea0
	bool CheckIfCharacterNearUpOrDown(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.CheckIfCharacterNearUpOrDown // (Final|Native|Protected) // @ game+0x633ad40
	void BP_PlayUpLoopStopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayUpLoopStopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayUpLoopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayUpLoopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayStopWorkAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayStopWorkAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayStartWorkAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayStartWorkAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayDownLoopStopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayDownLoopStopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayDownLoopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_PlayDownLoopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_GetUpInteractPoint(); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_GetUpInteractPoint // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_GetDownInteractPoint(); // Function DFMGameplay.Interactor_AerialWorkPlatform.BP_GetDownInteractPoint // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_SingleItemContainer
// Size: 0xf60 (Inherited: 0xc40)
class AInteractor_SingleItemContainer : public AInteractorBaseProxy {
public:

	uint32_t boxId; // 0xc40(0x04)
	char pad_C44[0x4]; // 0xc44(0x04)
	struct UInteractorAsyncSkeletalMeshComponent* CachedMeshComponent; // 0xc48(0x08)
	struct UInteractorOptOpenCloseSingleItemContainerExecuteComponent* CachedOpenCloseSIContainerComp; // 0xc50(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0xc58(0x08)
	bool bFirstOpened; // 0xc60(0x01)
	char pad_C61[0x3]; // 0xc61(0x03)
	struct FGameplayTag OpenTag; // 0xc64(0x08)
	struct FGameplayTag CloseTag; // 0xc6c(0x08)
	struct FGameplayTag OpenHUDTag; // 0xc74(0x08)
	char pad_C7C[0x4]; // 0xc7c(0x04)
	struct TArray<struct FName> CachedSpotNames; // 0xc80(0x10)
	struct TArray<struct USceneComponent*> CachedSpots; // 0xc90(0x10)
	struct TArray<struct AInventoryPickup*> CachedPickups; // 0xca0(0x10)
	enum class ESingleItemContainerType SIContainerType; // 0xcb0(0x01)
	char pad_CB1[0x3]; // 0xcb1(0x03)
	struct FName DustbinBoxName; // 0xcb4(0x08)
	char pad_CBC[0x4]; // 0xcbc(0x04)
	struct UBoxComponent* CachedDustbinBox; // 0xcc0(0x08)
	int32_t DustbinBoxID; // 0xcc8(0x04)
	char pad_CCC[0x4]; // 0xccc(0x04)
	struct TArray<struct FSingleItemContainerAimBoxArray> AimBoxesArray; // 0xcd0(0x10)
	struct UInteractorOptMultiSwitcherExecuteComponent* CachedMultiSwitcherComp; // 0xce0(0x08)
	struct UInteractorOptOpenCloseMultiSIContainerExecuteComponent* CachedMultiOpenCloseSIContainerComp; // 0xce8(0x08)
	char pad_CF0[0x8]; // 0xcf0(0x08)
	struct AInventoryPickup_OpenBox* CachedOpenBox; // 0xcf8(0x08)
	uint64_t UnlockingPlayerUin; // 0xd00(0x08)
	bool bRandomEnabled; // 0xd08(0x01)
	char pad_D09[0x3]; // 0xd09(0x03)
	int32_t SafeBoxId; // 0xd0c(0x04)
	struct FName SafeBoxArea; // 0xd10(0x08)
	bool bTestSafeBox; // 0xd18(0x01)
	bool bTestSafeBoxWithUI; // 0xd19(0x01)
	bool bTestSpawnPickUp; // 0xd1a(0x01)
	char pad_D1B[0x5]; // 0xd1b(0x05)
	uint64_t TestItemID; // 0xd20(0x08)
	bool bFinished; // 0xd28(0x01)
	bool bSafeBoxUnlocked; // 0xd29(0x01)
	char pad_D2A[0x6]; // 0xd2a(0x06)
	struct TArray<int32_t> SafeBoxUnlockMiniGameCylinder; // 0xd30(0x10)
	struct UGPAudioEventAsset* OpenAudioEvent; // 0xd40(0x08)
	struct UGPAudioEventAsset* CloseAudioEvent; // 0xd48(0x08)
	struct FName DesaturationName; // 0xd50(0x08)
	struct FLinearColor EnabledColor; // 0xd58(0x10)
	struct FLinearColor NotEnabledColor; // 0xd68(0x10)
	float DelayRefreshColorTime; // 0xd78(0x04)
	char pad_D7C[0xc]; // 0xd7c(0x0c)
	bool bTestColor; // 0xd88(0x01)
	bool bInitBright; // 0xd89(0x01)
	char pad_D8A[0x2]; // 0xd8a(0x02)
	struct FVector SingleItemContainerUpOffset; // 0xd8c(0x0c)
	struct FInventoryOwnInfo InventoryOwnInfo; // 0xd98(0x10)
	float OwnDuration; // 0xda8(0x04)
	char pad_DAC[0x4]; // 0xdac(0x04)
	struct TArray<uint64_t> PakedPlayerUinArray; // 0xdb0(0x10)
	struct TArray<uint64_t> PakAndGenedPlayerUinArray; // 0xdc0(0x10)
	struct FGameplayTagContainer PakSubmitItemTags; // 0xdd0(0x20)
	struct TMap<uint64_t, struct FTimerHandle> PakMachineUin2TH; // 0xdf0(0x50)
	struct UPakMachineMapViewController* IconCtrl; // 0xe40(0x08)
	struct TArray<uint64_t> SubmitItemHeapPlayerUinArray; // 0xe48(0x10)
	struct TArray<uint64_t> SubmitAndGetItemHeapPlayerUinArray; // 0xe58(0x10)
	struct FGameplayTagContainer ItemHeapSubmitItemTags; // 0xe68(0x20)
	struct TMap<uint64_t, struct FTimerHandle> ItemHeapUin2TH; // 0xe88(0x50)
	bool bShowSpawnEffect; // 0xed8(0x01)
	char pad_ED9[0x3]; // 0xed9(0x03)
	struct FName SpawnEffectName; // 0xedc(0x08)
	struct FVector SpawnEffectOffset; // 0xee4(0x0c)
	struct TArray<uint64_t> UnlockingUinArray; // 0xef0(0x10)
	struct TMap<uint64_t, float> UnlockStampMap; // 0xf00(0x50)
	float UnlockSuccessMinDuration; // 0xf50(0x04)
	float UnlockSuccessMaxDuration; // 0xf54(0x04)
	bool bUseCheckUnlock; // 0xf58(0x01)
	char pad_F59[0x7]; // 0xf59(0x07)

	void SpawnPickup(struct ADFMPlayerState* InDFMPS); // Function DFMGameplay.Interactor_SingleItemContainer.SpawnPickup // (Final|Native|Public) // @ game+0x634ac40
	void SetSafeBoxUnlocked(bool InbNew); // Function DFMGameplay.Interactor_SingleItemContainer.SetSafeBoxUnlocked // (Final|Native|Public|BlueprintCallable) // @ game+0x634abb0
	void SetFinished(bool InbNew); // Function DFMGameplay.Interactor_SingleItemContainer.SetFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x634ab20
	void OnRep_UnlockingPlayerUin(uint64_t InPreUin); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_UnlockingPlayerUin // (Final|Native|Protected) // @ game+0x634a8e0
	void OnRep_SafeBoxUnlockMiniGameCylinder(); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_SafeBoxUnlockMiniGameCylinder // (Final|Native|Protected) // @ game+0x634a790
	void OnRep_SafeBoxUnlocked(bool InbPre); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_SafeBoxUnlocked // (Final|Native|Protected) // @ game+0x634a7b0
	void OnRep_RandomEnabled(bool InbPre); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_RandomEnabled // (Final|Native|Protected) // @ game+0x634a700
	void OnRep_PakedPlayerUinArray(); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_PakedPlayerUinArray // (Final|Native|Protected) // @ game+0x634a6e0
	void OnRep_PakAndGenedPlayerUinArray(); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_PakAndGenedPlayerUinArray // (Final|Native|Protected) // @ game+0x17621d0
	void OnRep_InventoryOwnInfo(); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_InventoryOwnInfo // (Final|Native|Protected) // @ game+0x17621d0
	void OnRep_FirstOpened(bool bPre); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_FirstOpened // (Final|Native|Protected) // @ game+0x634a650
	void OnRep_Finished(bool InbPre); // Function DFMGameplay.Interactor_SingleItemContainer.OnRep_Finished // (Final|Native|Protected) // @ game+0x634a5c0
	void OnOfflineNumberAdd(struct AGPPlayerState* GPPlayerState); // Function DFMGameplay.Interactor_SingleItemContainer.OnOfflineNumberAdd // (Native|Public) // @ game+0x634a4d0
	void OnMeshPrepared(); // Function DFMGameplay.Interactor_SingleItemContainer.OnMeshPrepared // (Final|Native|Public) // @ game+0x634a4b0
	void OnLoadedAllControllerClass(); // Function DFMGameplay.Interactor_SingleItemContainer.OnLoadedAllControllerClass // (Final|Native|Protected) // @ game+0x634a490
	void OnDustbinEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_SingleItemContainer.OnDustbinEndOverlap // (Final|Native|Protected) // @ game+0x634a350
	void OnDustbinBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_SingleItemContainer.OnDustbinBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x35f0e10
	int32_t GetBoxID(); // Function DFMGameplay.Interactor_SingleItemContainer.GetBoxID // (Final|Native|Public|BlueprintCallable) // @ game+0x6346a30
	void EnterItemHeapArea(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.EnterItemHeapArea // (Final|Native|Public|BlueprintCallable) // @ game+0x634a040
	void DoRefreshEnabledColor(); // Function DFMGameplay.Interactor_SingleItemContainer.DoRefreshEnabledColor // (Final|Native|Protected) // @ game+0x634a020
	void BP_PlaySpawnEffect(); // Function DFMGameplay.Interactor_SingleItemContainer.BP_PlaySpawnEffect // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_PlayOpenAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayCloseAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_PlayCloseAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ClientOnSubmitItem(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_ClientOnSubmitItem // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ClientOnPakSuccess(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_ClientOnPakSuccess // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ClientOnItemHeapSubmitItem(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_ClientOnItemHeapSubmitItem // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ClientOnItemHeapExchangeSuccess(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SingleItemContainer.BP_ClientOnItemHeapExchangeSuccess // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_DoorBaseProxy
// Size: 0xc40 (Inherited: 0xc40)
class AInteractor_DoorBaseProxy : public AInteractorBaseProxy {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_CodedLock
// Size: 0xee0 (Inherited: 0xc40)
class AInteractor_CodedLock : public AInteractorBaseProxy {
public:

	struct UAsyncStaticMeshComponent* LockMesh; // 0xc40(0x08)
	struct FName HudName; // 0xc48(0x08)
	struct AInteractor_DoorBase* Door; // 0xc50(0x08)
	float DoorMarkerMaxTime; // 0xc58(0x04)
	int32_t PwdDigitsNum; // 0xc5c(0x04)
	bool bRandomPassWord; // 0xc60(0x01)
	char pad_C61[0x7]; // 0xc61(0x07)
	struct TArray<int32_t> FixConfigPwd; // 0xc68(0x10)
	bool bRandomPassWordPersistentInOneDay; // 0xc78(0x01)
	char pad_C79[0x7]; // 0xc79(0x07)
	struct FString PersistentRandomPassWordCodedLockID; // 0xc80(0x10)
	struct TArray<int32_t> Pwd; // 0xc90(0x10)
	int32_t PwdSum; // 0xca0(0x04)
	char pad_CA4[0x4]; // 0xca4(0x04)
	struct FString PwdStr; // 0xca8(0x10)
	bool bVerifyWhenAnyInput; // 0xcb8(0x01)
	char pad_CB9[0x3]; // 0xcb9(0x03)
	float ErrorCoolDownSecond; // 0xcbc(0x04)
	struct FText TipsText; // 0xcc0(0x18)
	struct FTimerHandle ErrorCoolDownTimer; // 0xcd8(0x08)
	bool bUseDecalTips; // 0xce0(0x01)
	char pad_CE1[0x7]; // 0xce1(0x07)
	/*struct TArray<struct TSoftObjectPtr<UStaticMesh>>*/char NumberMeshs[0x10]; // 0xce8(0x10)
	struct TArray<struct UAsyncStaticMeshComponent*> NumberMeshComponents; // 0xcf8(0x10)
	struct TArray<struct FTransform> NumberMeshCompTransforms; // 0xd08(0x10)
	struct TMap<int32_t, struct AInteractor_CodedLock_SubNumberActor*> InGameSubNumberActors; // 0xd18(0x50)
	bool bUseDecalEffect; // 0xd68(0x01)
	char pad_D69[0x7]; // 0xd69(0x07)
	struct UClass* SOLDecalActorToSpawn; // 0xd70(0x08)
	/*struct TSoftObjectPtr<UStaticMesh>*/char DecalPreviewMesh[0x28]; // 0xd78(0x28)
	int32_t DecalNumForOnePwd; // 0xda0(0x04)
	char pad_DA4[0x4]; // 0xda4(0x04)
	struct TArray<struct FSOLPwdDecalInfo> PwdDecalInfos; // 0xda8(0x10)
	struct TArray<struct UAsyncStaticMeshComponent*> NumberDecalPreviewMeshComponents; // 0xdb8(0x10)
	bool bNeedBrainComputerShow; // 0xdc8(0x01)
	char pad_DC9[0x7]; // 0xdc9(0x07)
	struct TArray<struct UShapeComponent*> DecalPostProcessTriggerVolume; // 0xdd0(0x10)
	struct TArray<struct FName> DecalScreenEffectNames; // 0xde0(0x10)
	struct TArray<struct FTransform> NumberDecalMeshCompTransforms; // 0xdf0(0x10)
	struct TArray<struct ASOLDecalActor*> SOLDecalActorArray; // 0xe00(0x10)
	struct TArray<struct UShapeComponent*> AudioTriggerCollisionComps; // 0xe10(0x10)
	/*struct TSoftObjectPtr<UGPAudioEventAsset>*/char BGMAudioEvent[0x28]; // 0xe20(0x28)
	/*struct TArray<struct TSoftObjectPtr<UGPAudioEventAsset>>*/char NumberAudioEvents[0x10]; // 0xe48(0x10)
	float NumberAudioEventInternalTimeLength; // 0xe58(0x04)
	float NumberAudioLoopEndTimeLength; // 0xe5c(0x04)
	int32_t InCollsionsNum; // 0xe60(0x04)
	struct FGPAudioFuturePlayingID BGMAudioPlayingID; // 0xe64(0x08)
	int32_t CurPlayPwdAudioIndex; // 0xe6c(0x04)
	/*struct FMulticastInlineDelegate*/char OnClientCodedLockPassWordCorrect[0x10]; // 0xe70(0x10)
	struct AGPCharacterBase* OperatingCharacter; // 0xe80(0x08)
	/*struct FMulticastInlineDelegate*/char OnClientCodedLockOperatingChanged[0x10]; // 0xe88(0x10)
	int32_t PassWordCorrectType; // 0xe98(0x04)
	int32_t OpenLockTeamId; // 0xe9c(0x04)
	struct FTimerHandle DoorMarkTimerHandle; // 0xea0(0x08)
	struct TArray<int32_t> CachedInPwdDigits; // 0xea8(0x10)
	struct TArray<struct ADFMCharacter*> NeedShowDecalCharacterArray; // 0xeb8(0x10)
	bool bShouldBePlaying; // 0xec8(0x01)
	bool bPlaying; // 0xec9(0x01)
	char pad_ECA[0x6]; // 0xeca(0x06)
	struct FTimerHandle PwdAudioLoopTimer; // 0xed0(0x08)
	char pad_ED8[0x8]; // 0xed8(0x08)

	void UpdateInteractorEnable(struct AGPCharacterBase* InOperatingCharacter, int32_t InPassWordCorrectType); // Function DFMGameplay.Interactor_CodedLock.UpdateInteractorEnable // (Final|Native|Public) // @ game+0x6341660
	struct TArray<int32_t> SumToDigits(int32_t Sum); // Function DFMGameplay.Interactor_CodedLock.SumToDigits // (Final|Native|Protected) // @ game+0x6341560
	struct ASOLDecalActor* SpawnSOLDecalActor(struct FTransform& Trans); // Function DFMGameplay.Interactor_CodedLock.SpawnSOLDecalActor // (Final|Native|Protected|HasOutParms|HasDefaults|Const) // @ game+0x6341480
	void ShowDecalEffect(bool bShow); // Function DFMGameplay.Interactor_CodedLock.ShowDecalEffect // (Final|Native|Protected) // @ game+0x63413f0
	void RefreshTipsMeshComps(); // Function DFMGameplay.Interactor_CodedLock.RefreshTipsMeshComps // (Final|Native|Public|BlueprintCallable) // @ game+0x6341350
	void RefreshPassWord(); // Function DFMGameplay.Interactor_CodedLock.RefreshPassWord // (Final|Native|Protected) // @ game+0x6341330
	void RefreshDecalTipsMeshComps(); // Function DFMGameplay.Interactor_CodedLock.RefreshDecalTipsMeshComps // (Final|Native|Public|BlueprintCallable) // @ game+0x6341310
	void RefreshDecalId(); // Function DFMGameplay.Interactor_CodedLock.RefreshDecalId // (Final|Native|Protected) // @ game+0x63412f0
	void PlayPwdAudio(); // Function DFMGameplay.Interactor_CodedLock.PlayPwdAudio // (Final|Native|Protected) // @ game+0x63412d0
	void OnSOLShowDecalBufferChange(struct ADFMCharacter* OwnerCharacter, bool bAddOrRemove); // Function DFMGameplay.Interactor_CodedLock.OnSOLShowDecalBufferChange // (Final|Native|Protected) // @ game+0x6340da0
	void OnRep_PwdSum(int32_t Pre); // Function DFMGameplay.Interactor_CodedLock.OnRep_PwdSum // (Final|Native|Protected) // @ game+0x6340d20
	void OnRep_PassWordCorrectType(int32_t Pre); // Function DFMGameplay.Interactor_CodedLock.OnRep_PassWordCorrectType // (Final|Native|Protected) // @ game+0x6340ca0
	void OnRep_OperatingCharacter(struct AGPCharacterBase* Pre); // Function DFMGameplay.Interactor_CodedLock.OnRep_OperatingCharacter // (Final|Native|Protected) // @ game+0x6340c20
	void OnRep_NeedShowDecalCharacterArray(); // Function DFMGameplay.Interactor_CodedLock.OnRep_NeedShowDecalCharacterArray // (Final|Native|Protected) // @ game+0x6340b80
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_CodedLock.OnOverlapEnd // (Native|Protected) // @ game+0x6340840
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_CodedLock.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x6340440
	void OnOfflineNumberAdd(struct AGPPlayerState* GPPlayerState); // Function DFMGameplay.Interactor_CodedLock.OnOfflineNumberAdd // (Final|Native|Protected) // @ game+0x63403c0
	void OnGameLoadSuccess(int32_t MapID, enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.Interactor_CodedLock.OnGameLoadSuccess // (Final|Native|Protected) // @ game+0x6340200
	void OnDoorMarkTimerEnd(); // Function DFMGameplay.Interactor_CodedLock.OnDoorMarkTimerEnd // (Final|Native|Public) // @ game+0x6340140
	void OnDecalVolumeOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_CodedLock.OnDecalVolumeOverlapEnd // (Native|Protected) // @ game+0x6340000
	void OnDecalVolumeOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_CodedLock.OnDecalVolumeOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x633fe00
	void OnClientSeamlessTravelEnd(bool bReconnect); // Function DFMGameplay.Interactor_CodedLock.OnClientSeamlessTravelEnd // (Final|Native|Protected) // @ game+0x633fd70
	void OnApplyNumberMeshLoadAssetCompleted(/*int32_t Index, int32_t Number, struct TSoftObjectPtr<UStaticMesh> Mesh*/); // Function DFMGameplay.Interactor_CodedLock.OnApplyNumberMeshLoadAssetCompleted // (Final|Native|Protected) // @ game+0x633fa80
	void OnApplyDecalPreviewMeshLoadAssetCompleted(/*struct TSoftObjectPtr<UStaticMesh> LoadedDecalPreviewMesh*/); // Function DFMGameplay.Interactor_CodedLock.OnApplyDecalPreviewMeshLoadAssetCompleted // (Final|Native|Protected) // @ game+0x633f8f0
	void MulticastOnVerifyPassWord(int32_t InPassWordCorrectType, int32_t InOpenTeamId); // Function DFMGameplay.Interactor_CodedLock.MulticastOnVerifyPassWord // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x633f7a0
	void MulticastOnSetOperating(struct AGPCharacterBase* InOperatingCharacter, bool bStartOperate); // Function DFMGameplay.Interactor_CodedLock.MulticastOnSetOperating // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x633f6d0
	uint64_t STATIC_LockIDuintAndDate2uint64(uint64_t InLockIDuint, int32_t InYear, int32_t InMonth, int32_t InDay); // Function DFMGameplay.Interactor_CodedLock.LockIDuintAndDate2uint64 // (Final|Native|Static|Protected) // @ game+0x633f5a0
	uint64_t STATIC_LockID2uint64(struct FString InLockID); // Function DFMGameplay.Interactor_CodedLock.LockID2uint64 // (Final|Native|Static|Protected) // @ game+0x633f480
	bool IsPassWordCorrect(); // Function DFMGameplay.Interactor_CodedLock.IsPassWordCorrect // (Final|Native|Public|BlueprintCallable) // @ game+0x633f450
	void InitDecalSOLDecalActorArray(); // Function DFMGameplay.Interactor_CodedLock.InitDecalSOLDecalActorArray // (Final|Native|Protected) // @ game+0x633f2a0
	void InitDecalEffectComp(); // Function DFMGameplay.Interactor_CodedLock.InitDecalEffectComp // (Final|Native|Protected) // @ game+0x633f280
	struct TArray<int32_t> GetPassWord(); // Function DFMGameplay.Interactor_CodedLock.GetPassWord // (Final|Native|Public) // @ game+0x633f200
	void EndPlayPwdAudio(); // Function DFMGameplay.Interactor_CodedLock.EndPlayPwdAudio // (Final|Native|Protected) // @ game+0x633f1e0
	void ClientVerifyPassWord(struct TArray<int32_t> InPwdDigits); // Function DFMGameplay.Interactor_CodedLock.ClientVerifyPassWord // (Final|Native|Public) // @ game+0x633efe0
	void ClientSetOperating(bool InbOperating); // Function DFMGameplay.Interactor_CodedLock.ClientSetOperating // (Final|Native|Public) // @ game+0x633ee40
	void ClientOnDoorOpen(); // Function DFMGameplay.Interactor_CodedLock.ClientOnDoorOpen // (Final|Native|Public) // @ game+0x633ee20
	void ClearTipsMeshComps(); // Function DFMGameplay.Interactor_CodedLock.ClearTipsMeshComps // (Final|Native|Public|BlueprintCallable) // @ game+0x633ee00
	void ClearDecalTipsMeshComps(); // Function DFMGameplay.Interactor_CodedLock.ClearDecalTipsMeshComps // (Final|Native|Public|BlueprintCallable) // @ game+0x633ede0
	void ApplyNumberMesh(); // Function DFMGameplay.Interactor_CodedLock.ApplyNumberMesh // (Final|Native|Protected) // @ game+0x633edc0
	void AddOneCollisionComp(); // Function DFMGameplay.Interactor_CodedLock.AddOneCollisionComp // (Final|Native|Public|BlueprintCallable) // @ game+0x633eda0
	void AddDecalPostProcessTriggerVolume(); // Function DFMGameplay.Interactor_CodedLock.AddDecalPostProcessTriggerVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x633ed80
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_DrillingDoor
// Size: 0xc40 (Inherited: 0xc40)
class AInteractor_DrillingDoor : public AInteractorBaseProxy {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_HackPC
// Size: 0xd40 (Inherited: 0xc40)
class AInteractor_HackPC : public AInteractorBaseProxy {
public:

	uint32_t boxId; // 0xc40(0x04)
	int32_t Password; // 0xc44(0x04)
	struct FMorseCodeSuccessInfo MorseCodeSuccessInfo; // 0xc48(0x10)
	struct UInteractorOptHackPCDownloadExecuteComponent* DownloadExecuteComponent; // 0xc58(0x08)
	struct FName DownloadExecuteCompName; // 0xc60(0x08)
	struct UInteractorOptHackPCOpenDoorExecuteComponent* OpenDoorExecuteComponent; // 0xc68(0x08)
	struct FName OpenDoorExecuteCompName; // 0xc70(0x08)
	struct UInteractorOptHackPCFireMissileExecuteComponent* FireMissileExecuteComponent; // 0xc78(0x08)
	struct FName FireMissileExecuteCompName; // 0xc80(0x08)
	struct UInteractorOptHackPCFireRocketExecuteComponent* FireRocketExecuteComponent; // 0xc88(0x08)
	struct FName FireRocketExecuteCompName; // 0xc90(0x08)
	struct AInteractor_DoorBase* CachedDoor; // 0xc98(0x08)
	struct FName CachedDoorTagName; // 0xca0(0x08)
	bool bDownload; // 0xca8(0x01)
	bool bOpenDoor; // 0xca9(0x01)
	bool bCheckInfo; // 0xcaa(0x01)
	bool bImplantVirus; // 0xcab(0x01)
	bool bFireMissile; // 0xcac(0x01)
	char pad_CAD[0x3]; // 0xcad(0x03)
	int32_t FireMissileNum; // 0xcb0(0x04)
	bool bFireRocket; // 0xcb4(0x01)
	bool bNotShowOperationsViewFirstTime; // 0xcb5(0x01)
	char pad_CB6[0x2]; // 0xcb6(0x02)
	struct FInventoryOwnInfo InventoryOwnInfo; // 0xcb8(0x10)
	float OwnDuration; // 0xcc8(0x04)
	char pad_CCC[0x4]; // 0xccc(0x04)
	struct TArray<uint64_t> HackingUinArray; // 0xcd0(0x10)
	struct TMap<uint64_t, float> HackStampMap; // 0xce0(0x50)
	float HackSuccessMinDuration; // 0xd30(0x04)
	float HackSuccessMaxDuration; // 0xd34(0x04)
	bool bUseCheckHack; // 0xd38(0x01)
	char pad_D39[0x7]; // 0xd39(0x07)

	void OnRep_MorseCodeSuccessInfo(struct FMorseCodeSuccessInfo InPre); // Function DFMGameplay.Interactor_HackPC.OnRep_MorseCodeSuccessInfo // (Final|Native|Protected) // @ game+0x6347710
	void OnRep_InventoryOwnInfo(); // Function DFMGameplay.Interactor_HackPC.OnRep_InventoryOwnInfo // (Final|Native|Protected) // @ game+0x17621d0
	void OnOfflineNumberAdd(struct AGPPlayerState* GPPlayerState); // Function DFMGameplay.Interactor_HackPC.OnOfflineNumberAdd // (Native|Public) // @ game+0x6347480
	bool IsMorseCodeSuccess(); // Function DFMGameplay.Interactor_HackPC.IsMorseCodeSuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x6346b50
	int32_t GetBoxID(); // Function DFMGameplay.Interactor_HackPC.GetBoxID // (Final|Native|Public|BlueprintCallable) // @ game+0x6346a30
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ManholeCover
// Size: 0xc78 (Inherited: 0xc40)
class AInteractor_ManholeCover : public AInteractorBaseProxy {
public:

	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0xc40(0x08)
	struct FName ManholeCoverAboveCheckCylinderMeshName; // 0xc48(0x08)
	struct FName ManholeCoverBelowCheckBoxName; // 0xc50(0x08)
	struct FName ManholeCoverBelowCollisionBoxName; // 0xc58(0x08)
	struct UStaticMeshComponent* CachedManholeCoverAboveCheckCylinderMesh; // 0xc60(0x08)
	struct UBoxComponent* CachedManholeCoverBelowCheckBox; // 0xc68(0x08)
	struct UBoxComponent* CachedManholeCoverBelowCollisionBox; // 0xc70(0x08)

	void SetCanNotTriggerManholeCover(); // Function DFMGameplay.Interactor_ManholeCover.SetCanNotTriggerManholeCover // (Final|Native|Private) // @ game+0x6347a00
	void SetCanClimbLadder(); // Function DFMGameplay.Interactor_ManholeCover.SetCanClimbLadder // (Final|Native|Private) // @ game+0x63479e0
	void OnManholeCoverBelowCheckBoxEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_ManholeCover.OnManholeCoverBelowCheckBoxEndOverlap // (Final|Native|Private) // @ game+0x6347340
	void OnManholeCoverBelowCheckBoxBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_ManholeCover.OnManholeCoverBelowCheckBoxBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x6347140
	void OnManholeCoverAboveCheckEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_ManholeCover.OnManholeCoverAboveCheckEndOverlap // (Final|Native|Private) // @ game+0x6347000
	void OnManholeCoverAboveCheckBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_ManholeCover.OnManholeCoverAboveCheckBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x6346e00
	void InitManholeCoverCheckBox(); // Function DFMGameplay.Interactor_ManholeCover.InitManholeCoverCheckBox // (Final|Native|Private) // @ game+0x6346b30
	struct UInteractorOptSwitcherExecuteComponent* GetSwitcherComp(); // Function DFMGameplay.Interactor_ManholeCover.GetSwitcherComp // (Final|Native|Private) // @ game+0x6346b00
	bool GetIsBelowManholeCover(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_ManholeCover.GetIsBelowManholeCover // (Final|Native|Private|Const) // @ game+0x6346a50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_Scouter
// Size: 0xc50 (Inherited: 0xc40)
class AInteractor_Scouter : public AInteractorBaseProxy {
public:

	uint64_t ScoutingPlayerUin; // 0xc40(0x08)
	bool bUsed; // 0xc48(0x01)
	bool bTest; // 0xc49(0x01)
	enum class EInGameBattleClassType AcquireClassType; // 0xc4a(0x01)
	char pad_C4B[0x5]; // 0xc4b(0x05)

	void OnRep_ScoutingPlayerUin(uint64_t InPreUin); // Function DFMGameplay.Interactor_Scouter.OnRep_ScoutingPlayerUin // (Final|Native|Protected) // @ game+0x634a840
	void OnRep_bUsed(bool InbPre); // Function DFMGameplay.Interactor_Scouter.OnRep_bUsed // (Final|Native|Protected) // @ game+0x634a980
	bool GetUsed(); // Function DFMGameplay.Interactor_Scouter.GetUsed // (Final|Native|Public|BlueprintCallable) // @ game+0x634a1b0
	bool GetCanUse(); // Function DFMGameplay.Interactor_Scouter.GetCanUse // (Final|Native|Public|BlueprintCallable) // @ game+0x634a180
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_SignalStation
// Size: 0xc58 (Inherited: 0xc40)
class AInteractor_SignalStation : public AInteractorBaseProxy {
public:

	int32_t SignalStationID; // 0xc40(0x04)
	char pad_C44[0x4]; // 0xc44(0x04)
	struct TArray<uint64_t> BuildedPlayerIDArray; // 0xc48(0x10)

	void PlayOrStopBuildedAudio(bool InbPlay); // Function DFMGameplay.Interactor_SignalStation.PlayOrStopBuildedAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x634aa10
	void OnRep_BuildedPlayerIDArray(); // Function DFMGameplay.Interactor_SignalStation.OnRep_BuildedPlayerIDArray // (Final|Native|Protected) // @ game+0x634a560
	void BP_StopBuildedAudio(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SignalStation.BP_StopBuildedAudio // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayBuildedAudio(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SignalStation.BP_PlayBuildedAudio // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_VoiceOver
// Size: 0xc70 (Inherited: 0xc40)
class AInteractor_VoiceOver : public AInteractorBaseProxy {
public:

	struct UShapeComponent* TriggerVolumeComp; // 0xc40(0x08)
	enum class EVoiceOverTriggerType VoiceOverTriggerType; // 0xc48(0x01)
	char pad_C49[0x3]; // 0xc49(0x03)
	struct FName SubtitleGroupId; // 0xc4c(0x08)
	enum class ESubtitleSequenceType SubtitleSequenceType; // 0xc54(0x01)
	char pad_C55[0x3]; // 0xc55(0x03)
	struct TArray<struct FString> ActivityGoalIdStrArray; // 0xc58(0x10)
	char pad_C68[0x8]; // 0xc68(0x08)

	void TriggerVoiceOver(struct ACHARACTER* InCharacter, bool bTrigger); // Function DFMGameplay.Interactor_VoiceOver.TriggerVoiceOver // (Final|Native|Private|Const) // @ game+0x634f5a0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_VoiceOver.OnOverlapEnd // (Final|Native|Private) // @ game+0x634ea50
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_VoiceOver.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x634e850
	struct UShapeComponent* GetTriggerVolumeComp(); // Function DFMGameplay.Interactor_VoiceOver.GetTriggerVolumeComp // (Final|Native|Private) // @ game+0x634e0e0
	bool CheckVOActivityValid(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_VoiceOver.CheckVOActivityValid // (Final|Native|Public|Const) // @ game+0x634dbb0
	bool CheckIfInTriggerVolume(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_VoiceOver.CheckIfInTriggerVolume // (Final|Native|Public) // @ game+0x634db20
	void CheckAndTriggerVoiceOver(struct ACHARACTER* InCharacter, bool bTrigger); // Function DFMGameplay.Interactor_VoiceOver.CheckAndTriggerVoiceOver // (Final|Native|Public) // @ game+0x634da50
	struct UShapeComponent* BP_GetTriggerVolumeComp(); // Function DFMGameplay.Interactor_VoiceOver.BP_GetTriggerVolumeComp // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorDelayMissile
// Size: 0xc60 (Inherited: 0xc40)
class AInteractorDelayMissile : public AInteractorBaseProxy {
public:

	char pad_C40[0x18]; // 0xc40(0x18)
	bool IsExplode; // 0xc58(0x01)
	char pad_C59[0x7]; // 0xc59(0x07)

	void ServerExplode(); // Function DFMGameplay.InteractorDelayMissile.ServerExplode // (Final|Native|Protected|BlueprintCallable) // @ game+0x6357ab0
	void OnRep_Explode(); // Function DFMGameplay.InteractorDelayMissile.OnRep_Explode // (Final|Native|Protected) // @ game+0x6357310
	void MakeRadialDamage(struct AActor* MakerInstigator, struct FHitResult& HitResult, int64_t& AttakerValueId, struct TArray<struct AActor*>& IgnoreActors, int32_t& HitId, struct FMakeDamageParams& Params); // Function DFMGameplay.InteractorDelayMissile.MakeRadialDamage // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x6356bf0
	void BP_ClientExplode(); // Function DFMGameplay.InteractorDelayMissile.BP_ClientExplode // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_ContractNPC
// Size: 0xb80 (Inherited: 0xb30)
class AInteractor_ContractNPC : public AInteractor_PureContractNPC {
public:

	float WillEnableTimeStep; // 0xb30(0x04)
	float WillEnableServerTime; // 0xb34(0x04)
	char pad_B38[0x8]; // 0xb38(0x08)
	struct FSoftObjectPath StartAudioAssetPath; // 0xb40(0x18)
	struct FSoftObjectPath StopAudioAssetPath; // 0xb58(0x18)
	char pad_B70[0x8]; // 0xb70(0x08)
	struct FTimerHandle DelayEnableContractNPCHandle; // 0xb78(0x08)

	void OnAudioAssetLoadComplete(struct FSoftObjectPath& AssetRef); // Function DFMGameplay.Interactor_ContractNPC.OnAudioAssetLoadComplete // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x633fc70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_SOLQuestTimeBomb
// Size: 0xbd8 (Inherited: 0xba0)
class AInteractor_SOLQuestTimeBomb : public AInteractor_TimeBomb {
public:

	struct FName ItemID; // 0xba0(0x08)
	int64_t QuestID; // 0xba8(0x08)
	int64_t objectiveId; // 0xbb0(0x08)
	char BindType; // 0xbb8(0x01)
	bool bInteractOnce; // 0xbb9(0x01)
	char pad_BBA[0x6]; // 0xbba(0x06)
	struct TArray<uint64_t> InteractCharacterArr; // 0xbc0(0x10)
	char pad_BD0[0x8]; // 0xbd0(0x08)

	void OnSolRefreshQuest(bool bGMAddQuest); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.OnSolRefreshQuest // (Final|Native|Protected) // @ game+0x634eec0
	void OnRep_InteractCharacterArr(); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.OnRep_InteractCharacterArr // (Final|Native|Protected) // @ game+0x634ecf0
	void OnPlayerControllerChanged(struct APlayerController* NewController); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.OnPlayerControllerChanged // (Final|Native|Protected) // @ game+0x634ec10
	void OnInteractQuestObject(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.OnInteractQuestObject // (Native|Public|BlueprintCallable) // @ game+0x634a4d0
	void OnClientQuestObjectionUpdate(int64_t InQuestId, int64_t InQuestObjectionID, char ObjectionState, char ObjectionType); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.OnClientQuestObjectionUpdate // (Final|Native|Protected) // @ game+0x634e5f0
	void InitQuestLootInteractor(); // Function DFMGameplay.Interactor_SOLQuestTimeBomb.InitQuestLootInteractor // (Final|Native|Protected) // @ game+0x634e130
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup
// Size: 0x1558 (Inherited: 0xba0)
class AInventoryPickup : public APickupBase {
public:

	char pad_BA0[0x18]; // 0xba0(0x18)
	/*struct FMulticastInlineDelegate*/char StartLootSearchEvent[0x10]; // 0xbb8(0x10)
	char pad_BC8[0x8]; // 0xbc8(0x08)
	/*struct FMulticastInlineDelegate*/char GivePawnEvent[0x10]; // 0xbd0(0x10)
	struct FGPWeaponDescInfo GunDescInfo; // 0xbe0(0x108)
	struct UGPModularWeaponDesc* ModularWeaponDesc; // 0xce8(0x08)
	char pad_CF0[0x10]; // 0xcf0(0x10)
	struct FPickupAttachActorInfo AttachInfo; // 0xd00(0x28)
	struct FGameplayTag TriggerPawnPickupAnimTag; // 0xd28(0x08)
	float SpawnedTime; // 0xd30(0x04)
	char pad_D34[0x4]; // 0xd34(0x04)
	struct FInventoryItemInfo PickupItemInfo; // 0xd38(0x538)
	struct FItemArchiveInfo ArchiveInfo; // 0x1270(0x1c8)
	uint64_t LastOwnedPlayerId; // 0x1438(0x08)
	enum class EItemState ItemState; // 0x1440(0x01)
	char pad_1441[0x7]; // 0x1441(0x07)
	uint64_t PointID; // 0x1448(0x08)
	struct FString BigAreaName; // 0x1450(0x10)
	char pad_1460[0x18]; // 0x1460(0x18)
	struct UItemSpace* ContainerSpace; // 0x1478(0x08)
	char pad_1480[0x28]; // 0x1480(0x28)
	struct UGPStaticMeshComponent* OutlineMeshStaticMeshComp; // 0x14a8(0x08)
	struct TArray<struct UGPStaticMeshComponent*> OutlineMeshSMs; // 0x14b0(0x10)
	struct USkeletalMeshComponent* OutlineMeshSkeletalMeshComp; // 0x14c0(0x08)
	struct TArray<struct USkeletalMeshComponent*> OutlineMeshSKMs; // 0x14c8(0x10)
	int32_t ActorPoolDefaultPreloadSize; // 0x14d8(0x04)
	int32_t ActorPoolMaxPoolSize; // 0x14dc(0x04)
	bool ActorPoolNetDriverSupport; // 0x14e0(0x01)
	bool bAutoClearOuterReferences; // 0x14e1(0x01)
	bool bSkipPhysicsState; // 0x14e2(0x01)
	char pad_14E3[0x5]; // 0x14e3(0x05)
	struct USphereComponent* Sphere; // 0x14e8(0x08)
	float SphereRadius; // 0x14f0(0x04)
	bool bReportOverlap; // 0x14f4(0x01)
	char pad_14F5[0x1b]; // 0x14f5(0x1b)
	struct FInventoryOwnInfo InventoryOwnInfo; // 0x1510(0x10)
	float OwnDuration; // 0x1520(0x04)
	bool bOnlyOwnedOnce; // 0x1524(0x01)
	char pad_1525[0x2]; // 0x1525(0x02)
	bool bNeedDynamicPriorityByOwn; // 0x1527(0x01)
	enum class EInteractorPriority DynamicPriorityOwnBySelf; // 0x1528(0x01)
	enum class EInteractorPriority DynamicPriorityOwnByTeammate; // 0x1529(0x01)
	bool bFromSingleItemContainer; // 0x152a(0x01)
	char pad_152B[0x1]; // 0x152b(0x01)
	struct FVector SingleItemContainerUpOffset; // 0x152c(0x0c)
	bool bUseCustomMinUpOffsetZ; // 0x1538(0x01)
	char pad_1539[0x3]; // 0x1539(0x03)
	float CustomMinUpOffsetZ; // 0x153c(0x04)
	bool bIsPickupContainer; // 0x1540(0x01)
	bool bIsSingleItem; // 0x1541(0x01)
	char pad_1542[0x2]; // 0x1542(0x02)
	float GatherDis_HD; // 0x1544(0x04)
	float GatherAngle_HD; // 0x1548(0x04)
	float SingleItemCustomNetCullDistanceSquared; // 0x154c(0x04)
	struct UAssetBaseManager* AssetBaseManager; // 0x1550(0x08)

	void SetSpwanedTime(float InSpawnedTime); // Function DFMGameplay.InventoryPickup.SetSpwanedTime // (Final|Native|Public) // @ game+0x637e0a0
	void SetGunDesc(struct FGPWeaponDescInfo _GunDescInfo); // Function DFMGameplay.InventoryPickup.SetGunDesc // (Native|Public) // @ game+0x637df30
	void SetArchiveInfo(struct FItemArchiveInfo& ArchInfo); // Function DFMGameplay.InventoryPickup.SetArchiveInfo // (Final|Native|Public|HasOutParms) // @ game+0x637dda0
	void OnServerMatchEnded(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.InventoryPickup.OnServerMatchEnded // (Native|Public) // @ game+0x637dc90
	void OnRepExtraInfoDataVesion(struct FGPWeaponDescInfo OldInfo); // Function DFMGameplay.InventoryPickup.OnRepExtraInfoDataVesion // (Native|Public) // @ game+0x637d860
	void OnRepAttachInfo(); // Function DFMGameplay.InventoryPickup.OnRepAttachInfo // (Native|Protected) // @ game+0x361da60
	void OnRep_PickupItemInfo(); // Function DFMGameplay.InventoryPickup.OnRep_PickupItemInfo // (Native|Protected) // @ game+0x637da90
	void OnRep_ItemState(); // Function DFMGameplay.InventoryPickup.OnRep_ItemState // (Native|Public) // @ game+0x361d920
	void OnRep_InventoryOwnInfo(); // Function DFMGameplay.InventoryPickup.OnRep_InventoryOwnInfo // (Final|Native|Protected) // @ game+0x637da50
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.InventoryPickup.OnOverlapEnd // (Native|Public) // @ game+0x637d700
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.InventoryPickup.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x637d500
	void OnOfflineNumberAdd(struct AGPPlayerState* GPPlayerState); // Function DFMGameplay.InventoryPickup.OnOfflineNumberAdd // (Native|Public) // @ game+0x637d470
	void InitContainerSpace(); // Function DFMGameplay.InventoryPickup.InitContainerSpace // (Native|Public) // @ game+0x361d940
	void GetSubPickups(struct TArray<struct FInventoryItemInfo>& Pickups); // Function DFMGameplay.InventoryPickup.GetSubPickups // (Native|Public|HasOutParms) // @ game+0x637cb70
	float GetSpawnedTime(); // Function DFMGameplay.InventoryPickup.GetSpawnedTime // (Final|RequiredAPI|Native|Public) // @ game+0x637cb20
	struct FGPWeaponDescInfo GetGunDesc(); // Function DFMGameplay.InventoryPickup.GetGunDesc // (Native|Public) // @ game+0x637c6b0
	struct UGPModularWeaponDesc* GetExtraInfoData(); // Function DFMGameplay.InventoryPickup.GetExtraInfoData // (RequiredAPI|Native|Public) // @ game+0x637c680
	struct FItemArchiveInfo GetArchiveInfo(); // Function DFMGameplay.InventoryPickup.GetArchiveInfo // (Final|Native|Public) // @ game+0x637c420
	void ExecuteHighValueItemInspect(struct ACHARACTER* OperatorCharacter, bool bEnter); // Function DFMGameplay.InventoryPickup.ExecuteHighValueItemInspect // (Final|Native|Public) // @ game+0x637c350
	bool ConsumeItemDurability(uint32_t DurabilityUsed, uint64_t gid); // Function DFMGameplay.InventoryPickup.ConsumeItemDurability // (Native|Public) // @ game+0x637c250
	void ClientPlayDropToGroundAudio(struct ADFMCharacter* CmdOwner); // Function DFMGameplay.InventoryPickup.ClientPlayDropToGroundAudio // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x637c1c0
	bool CheckIfCanExecuteHighValueItemInspect(struct ACHARACTER* PickupCharacter); // Function DFMGameplay.InventoryPickup.CheckIfCanExecuteHighValueItemInspect // (Final|Native|Public) // @ game+0x637bff0
	struct UBoxComponent* BP_GetFakeBoxFotHit(); // Function DFMGameplay.InventoryPickup.BP_GetFakeBoxFotHit // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_Raid
// Size: 0xab0 (Inherited: 0x990)
class AGameMode_Raid : public AGameMode_PVPVE {
public:

	float WaitAllPlayerTimeOutLimit; // 0x990(0x04)
	struct FName DefaultPlayerStartTag; // 0x994(0x08)
	char pad_99C[0x4]; // 0x99c(0x04)
	struct FString QuestDir; // 0x9a0(0x10)
	int32_t QuestID; // 0x9b0(0x04)
	float FadeTimeMin; // 0x9b4(0x04)
	float FadeTimeMax; // 0x9b8(0x04)
	char pad_9BC[0x4]; // 0x9bc(0x04)
	struct TArray<uint32_t> RebornClearBuffs; // 0x9c0(0x10)
	char pad_9D0[0x60]; // 0x9d0(0x60)
	struct TArray<struct APlayerStart*> CurrentPlayerStarts; // 0xa30(0x10)
	char pad_A40[0x40]; // 0xa40(0x40)
	struct TArray<struct ADFMCharacter*> AllPlayers; // 0xa80(0x10)
	char pad_A90[0x20]; // 0xa90(0x20)

	void TransToCurrentStartSpot(); // Function DFMGameplay.GameMode_Raid.TransToCurrentStartSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x631e2a0
	void SetCurrentStartSpot(struct FName StartSpotTag); // Function DFMGameplay.GameMode_Raid.SetCurrentStartSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x631de80
	void RebornDeadPlayers(float RebornHealthPercent); // Function DFMGameplay.GameMode_Raid.RebornDeadPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x631dce0
	void PreEnterNextStage(struct AGPQuestStage* NewStage); // Function DFMGameplay.GameMode_Raid.PreEnterNextStage // (Final|Native|Public) // @ game+0x631dc60
	void PreBeginQuest(struct AGPQuest* CurQuest); // Function DFMGameplay.GameMode_Raid.PreBeginQuest // (Final|Native|Public) // @ game+0x631dbe0
	void PostLeaveOldStage(struct AGPQuestStage* OldStage); // Function DFMGameplay.GameMode_Raid.PostLeaveOldStage // (Final|Native|Public) // @ game+0x631db60
	void PostEndQuest(struct AGPQuest* CurQuest); // Function DFMGameplay.GameMode_Raid.PostEndQuest // (Final|Native|Public) // @ game+0x631dae0
	void OnStageTimeOut(); // Function DFMGameplay.GameMode_Raid.OnStageTimeOut // (Final|Native|Public) // @ game+0x631d9f0
	void OnServerMatchEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.GameMode_Raid.OnServerMatchEnd // (Final|Native|Public) // @ game+0x631d7f0
	void OnQuestAsyncLoadComplete(struct AGPQuest* Quest); // Function DFMGameplay.GameMode_Raid.OnQuestAsyncLoadComplete // (Final|Native|Private) // @ game+0x631d530
	void OnPlayerDied(struct AController* InPlayer); // Function DFMGameplay.GameMode_Raid.OnPlayerDied // (Final|Native|Public) // @ game+0x631d370
	void OnClientLevelLoadFinished(uint64_t PlayerUin); // Function DFMGameplay.GameMode_Raid.OnClientLevelLoadFinished // (Final|Native|Public) // @ game+0x631cee0
	void OnCharacterRagDollEnd(struct AGPCharacterBase* RagDollCharacter); // Function DFMGameplay.GameMode_Raid.OnCharacterRagDollEnd // (Final|Native|Public) // @ game+0x631ce60
	void NotifyTeamMemberAllDead(struct FTeamInfo InTeamInfo); // Function DFMGameplay.GameMode_Raid.NotifyTeamMemberAllDead // (Final|Native|Public) // @ game+0x631cd00
	struct APlayerStart* GetCurrentStartSpot(int32_t SpotIndex); // Function DFMGameplay.GameMode_Raid.GetCurrentStartSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x631ca90
	int32_t GetCurrentStageIndex(); // Function DFMGameplay.GameMode_Raid.GetCurrentStageIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x631ca60
	int32_t STATIC_GetCurrentDifficultyLevel(struct UObject* WorldContextObject); // Function DFMGameplay.GameMode_Raid.GetCurrentDifficultyLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x631c9e0
	struct APlayerStart* FindDefaultPlayerStart(); // Function DFMGameplay.GameMode_Raid.FindDefaultPlayerStart // (Final|Native|Private) // @ game+0x631c9b0
	void BP_OnPlayerReborn(); // Function DFMGameplay.GameMode_Raid.BP_OnPlayerReborn // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameMode_Tutorial
// Size: 0x9d0 (Inherited: 0x990)
class AGameMode_Tutorial : public AGameMode_PVPVE {
public:

	struct FString QuestDir; // 0x990(0x10)
	int32_t QuestID; // 0x9a0(0x04)
	float RebornDuration; // 0x9a4(0x04)
	float RebornFillHealthPercent; // 0x9a8(0x04)
	float RebornMinAmmoPercent; // 0x9ac(0x04)
	float RebornFillAmmoPercent; // 0x9b0(0x04)
	char pad_9B4[0x4]; // 0x9b4(0x04)
	struct APlayerStart* RebornPlayerStart; // 0x9b8(0x08)
	char pad_9C0[0x10]; // 0x9c0(0x10)

	void ReplayCurrentStage(bool bResetAI); // Function DFMGameplay.GameMode_Tutorial.ReplayCurrentStage // (Final|Native|Public) // @ game+0x6322c20
	void OnQuestAsyncLoadComplete(struct AGPQuest* Quest); // Function DFMGameplay.GameMode_Tutorial.OnQuestAsyncLoadComplete // (Final|Native|Private) // @ game+0x6322750
	void NotifyTeamMemberAllDead(struct FTeamInfo InTeamInfo); // Function DFMGameplay.GameMode_Tutorial.NotifyTeamMemberAllDead // (Final|Native|Public) // @ game+0x63221e0
	struct APlayerStart* FindDefaultPlayerStart(); // Function DFMGameplay.GameMode_Tutorial.FindDefaultPlayerStart // (Final|Native|Private) // @ game+0x63219d0
	void BP_OnPlayerReborn(); // Function DFMGameplay.GameMode_Tutorial.BP_OnPlayerReborn // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.GameState_Raid
// Size: 0xc40 (Inherited: 0xba0)
class AGameState_Raid : public AGameState_PVPVE {
public:

	struct FCommonCountDownInfo CachedCountDownInfo; // 0xba0(0x30)
	int32_t CurrentStageIndex; // 0xbd0(0x04)
	char pad_BD4[0x4]; // 0xbd4(0x04)
	float StageRemainingTime; // 0xbd8(0x04)
	char pad_BDC[0x64]; // 0xbdc(0x64)

	void UpdateSceneConfig(int32_t NewStageIndex); // Function DFMGameplay.GameState_Raid.UpdateSceneConfig // (Final|Native|Protected) // @ game+0x6323320
	void UpdateCoutDownEndTime(float DecreaseSeconds); // Function DFMGameplay.GameState_Raid.UpdateCoutDownEndTime // (Final|Native|Public|BlueprintCallable) // @ game+0x63232a0
	void StopCoutDown(); // Function DFMGameplay.GameState_Raid.StopCoutDown // (Final|Native|Public|BlueprintCallable) // @ game+0x6323280
	void StartCountDown(struct FText CountDownTitle, float CountDownSeconds, bool bShowUi, bool bUseTenSecondsWidgetShow, bool ColoredTitle, int32_t UrgentTime, bool EmphasizeTen); // Function DFMGameplay.GameState_Raid.StartCountDown // (Final|Native|Public|BlueprintCallable) // @ game+0x6323000
	void SetStageRemainingTime(float RemainingTime); // Function DFMGameplay.GameState_Raid.SetStageRemainingTime // (Final|Native|Public|BlueprintCallable) // @ game+0x6322f80
	void SetCurrentStageIndex(int32_t NewIndex); // Function DFMGameplay.GameState_Raid.SetCurrentStageIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x6322de0
	void RestoreSceneConfig(); // Function DFMGameplay.GameState_Raid.RestoreSceneConfig // (Final|Native|Protected) // @ game+0x6322cb0
	void OnRep_StageIndex(); // Function DFMGameplay.GameState_Raid.OnRep_StageIndex // (Final|Native|Protected) // @ game+0x6322830
	void OnRep_CountDownInfo(); // Function DFMGameplay.GameState_Raid.OnRep_CountDownInfo // (Final|Native|Protected) // @ game+0x6322810
	void OnGameFlowEnter(enum class EGameFlowStageType GameFlowStage); // Function DFMGameplay.GameState_Raid.OnGameFlowEnter // (Final|Native|Public) // @ game+0x6322400
	void InitSceneConfig(); // Function DFMGameplay.GameState_Raid.InitSceneConfig // (Final|Native|Protected) // @ game+0x6322140
	float GetStageRemainingTime(); // Function DFMGameplay.GameState_Raid.GetStageRemainingTime // (Final|Native|Public|BlueprintCallable) // @ game+0x6322110
	int32_t GetCurrentStageIndex(); // Function DFMGameplay.GameState_Raid.GetCurrentStageIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x6321f20
	void EnableAllPlayersAction(bool bEnableAction); // Function DFMGameplay.GameState_Raid.EnableAllPlayersAction // (Final|Native|Public|BlueprintCallable) // @ game+0x63217c0
	void ClientLeaveStage(int32_t OldStageIndex); // Function DFMGameplay.GameState_Raid.ClientLeaveStage // (Final|Native|Protected) // @ game+0x63215b0
	void ClientEnterStage(int32_t NewStageIndex); // Function DFMGameplay.GameState_Raid.ClientEnterStage // (Final|Native|Protected) // @ game+0x6321530
	void CacheSceneConfig(); // Function DFMGameplay.GameState_Raid.CacheSceneConfig // (Final|Native|Protected) // @ game+0x6321510
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerNotInRange
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerNotInRange : public UExitCheckerInRange {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerPayment
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerPayment : public UExitCheckerConditionBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerEquipment
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerEquipment : public UExitCheckerConditionBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerRoleLoad
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerRoleLoad : public UExitCheckerConditionBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ExitCheckerItem
// Size: 0x40 (Inherited: 0x40)
class UExitCheckerItem : public UExitCheckerConditionBase {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AICommandScenesInteractive
// Size: 0x68 (Inherited: 0x40)
class UAICommandScenesInteractive : public UAICommandEvent {
public:

	struct UActorComponent* InteractiveComp; // 0x40(0x08)
	struct FVector Location; // 0x48(0x0c)
	struct FRotator Rotation; // 0x54(0x0c)
	struct UScenesAnimates* ScenesAnimate; // 0x60(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIReportMemberDead
// Size: 0x48 (Inherited: 0x40)
class UAIReportMemberDead : public UAIReportEvent {
public:

	struct AAIController* member; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIReportTargetDead
// Size: 0x48 (Inherited: 0x40)
class UAIReportTargetDead : public UAIReportEvent {
public:

	struct ACHARACTER* Target; // 0x40(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIReportTargetNearBy
// Size: 0x50 (Inherited: 0x40)
class UAIReportTargetNearBy : public UAIReportEvent {
public:

	struct AAIController* member; // 0x40(0x08)
	struct ACHARACTER* Target; // 0x48(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.AIReportScenesFinish
// Size: 0x50 (Inherited: 0x40)
class UAIReportScenesFinish : public UAIReportEvent {
public:

	struct AActor* InteractiveActor; // 0x40(0x08)
	bool Success; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.HitMatEffectComponent
// Size: 0x138 (Inherited: 0x118)
class UHitMatEffectComponent : public UHitEffectComponent {
public:

	struct TArray<struct FMatScalarParameter> MatScalarParameters; // 0x118(0x10)
	struct TArray<struct FMatVectorParamter> MatVectorParamters; // 0x128(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MultiInteractorInterface
// Size: 0x30 (Inherited: 0x30)
class UMultiInteractorInterface : public UInteractorInterface {
public:


	void OnServerLeaveVolume(struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorInterface.OnServerLeaveVolume // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnServerEnterVolume(struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorInterface.OnServerEnterVolume // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnClientLeaveVolume(struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorInterface.OnClientLeaveVolume // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnClientEnterVolume(struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorInterface.OnClientEnterVolume // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerResetCharacterToWaitingMultiInteract(struct AGPCharacter* GPCharacter); // Function DFMGameplay.MultiInteractorInterface.BP_ServerResetCharacterToWaitingMultiInteract // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	bool BP_ServerExecuteMultiInteractor(int32_t InteractIndex, struct AGPCharacter* OperatorCharacter); // Function DFMGameplay.MultiInteractorInterface.BP_ServerExecuteMultiInteractor // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_ServerCharacterExchangeMultiInteractIndex(struct AGPCharacter* GPCharacter, int32_t TargetInteractIndex, struct FName TargetName); // Function DFMGameplay.MultiInteractorInterface.BP_ServerCharacterExchangeMultiInteractIndex // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnInteractedOperatorChanged(); // Function DFMGameplay.MultiInteractorInterface.BP_OnInteractedOperatorChanged // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent
// Size: 0x3b0 (Inherited: 0x190)
class UInteractorOptAerialWorkPlatformExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	float MaxAscendHeightRate; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct TMap<struct FString, struct FVector> MaxAscendBoneLocs; // 0x1a8(0x50)
	struct TMap<struct FString, struct FRotator> MaxAscendBoneRots; // 0x1f8(0x50)
	struct TMap<struct FString, struct FVector> MinDescendBoneLocs; // 0x248(0x50)
	struct TMap<struct FString, struct FRotator> MinDescendBoneRots; // 0x298(0x50)
	float MaxHeightToMinHeightTime; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct AInteractor_AerialWorkPlatform* CachedAerialWorkPlatform; // 0x2f0(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0x2f8(0x08)
	struct TMap<struct FString, float> RunBoneTranslateSpeed; // 0x300(0x50)
	struct TMap<struct FString, float> RunBoneRotationSpeed; // 0x350(0x50)
	float TranslateTotalTime; // 0x3a0(0x04)
	enum class EAerialWorkPlatformState AerialWorkPlatformState; // 0x3a4(0x01)
	bool bInitMaxAscendHeightSuc; // 0x3a5(0x01)
	bool bInitTranslateSpeedSuc; // 0x3a6(0x01)
	char pad_3A7[0x9]; // 0x3a7(0x09)

	void SetDescendFinished(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.SetDescendFinished // (Final|Native|Public) // @ game+0x6360120
	void SetAscendFinished(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.SetAscendFinished // (Final|Native|Public) // @ game+0x6360100
	void OpenSkeletalMeshTick(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.OpenSkeletalMeshTick // (Final|Native|Private) // @ game+0x635fd00
	void OnRep_IsAscendOrDescend(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.OnRep_IsAscendOrDescend // (Final|Native|Private) // @ game+0x635fca0
	void NextFrameCloseSkeletalMeshTick(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.NextFrameCloseSkeletalMeshTick // (Final|Native|Private) // @ game+0x635f800
	void InitTranslateSpeed(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.InitTranslateSpeed // (Final|Native|Private) // @ game+0x635f710
	void InitMaxAscendHeight(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.InitMaxAscendHeight // (Final|Native|Private) // @ game+0x635f6f0
	void InitAerialWorkPlatformStatus(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.InitAerialWorkPlatformStatus // (Final|Native|Private) // @ game+0x635f6d0
	struct UInteractorOptSwitcherExecuteComponent* GetSwitcherComp(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.GetSwitcherComp // (Final|Native|Private) // @ game+0x635f580
	enum class EAerialWorkPlatformState GetAerialWorkPlatformState(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.GetAerialWorkPlatformState // (Final|Native|Public|Const) // @ game+0x635f310
	struct AInteractor_AerialWorkPlatform* GetAerialWorkPlatform(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.GetAerialWorkPlatform // (Final|Native|Private) // @ game+0x635f2e0
	void DoOpenProcess(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.DoOpenProcess // (Final|Native|Private) // @ game+0x635f2c0
	void DoCloseProcess(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.DoCloseProcess // (Final|Native|Private) // @ game+0x635f2a0
	void CloseSkeletalMeshTick(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.CloseSkeletalMeshTick // (Final|Native|Private) // @ game+0x635f280
	bool CheckAssetPrepared(); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.CheckAssetPrepared // (Final|Native|Private) // @ game+0x635f250
	void ChangeSkeletalMeshTick(bool bOpenOrClose); // Function DFMGameplay.InteractorOptAerialWorkPlatformExecuteComponent.ChangeSkeletalMeshTick // (Final|Native|Private) // @ game+0x635f1c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptAgitatingLorryExecuteComponent
// Size: 0x1f8 (Inherited: 0x190)
class UInteractorOptAgitatingLorryExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct FName CementDropEffectID; // 0x1a0(0x08)
	struct FSoftObjectPath CementDropAudioEvent; // 0x1a8(0x18)
	float RunOppositeRotateTime; // 0x1c0(0x04)
	float RunOppositeRotateScale; // 0x1c4(0x04)
	struct AInteractor_AgitatingLorry* CachedAgitatingLorry; // 0x1c8(0x08)
	bool RunningOppositeRotateFinished; // 0x1d0(0x01)
	char pad_1D1[0x3]; // 0x1d1(0x03)
	float RotateTotalTime; // 0x1d4(0x04)
	float AgitatingLorryIdleRotateSpeed; // 0x1d8(0x04)
	float CurrentBoneRotateSpeed; // 0x1dc(0x04)
	float RunRotateTickInterval; // 0x1e0(0x04)
	char pad_1E4[0xc]; // 0x1e4(0x0c)
	struct UFXResourceContainerComponent* FXResourceComponent; // 0x1f0(0x08)

	void PlayFXResource(); // Function DFMGameplay.InteractorOptAgitatingLorryExecuteComponent.PlayFXResource // (Final|Native|Public) // @ game+0x6363280
	void OnRunRotateFinishTick(); // Function DFMGameplay.InteractorOptAgitatingLorryExecuteComponent.OnRunRotateFinishTick // (Final|Native|Protected) // @ game+0x6363260
	struct AInteractor_AgitatingLorry* GetAgitatingLorry(); // Function DFMGameplay.InteractorOptAgitatingLorryExecuteComponent.GetAgitatingLorry // (Final|Native|Protected) // @ game+0x6362ad0
	void ClientPlayAudio(struct FSoftObjectPath& AudioPath); // Function DFMGameplay.InteractorOptAgitatingLorryExecuteComponent.ClientPlayAudio // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x6362590
	bool CheckAssetPrepared(); // Function DFMGameplay.InteractorOptAgitatingLorryExecuteComponent.CheckAssetPrepared // (Final|Native|Protected) // @ game+0x6362560
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptAutoSlideDoorExecuteComponent
// Size: 0x1b8 (Inherited: 0x190)
class UInteractorOptAutoSlideDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	float MoveSpeed; // 0x1a0(0x04)
	float Tolerance; // 0x1a4(0x04)
	struct TArray<struct FSlideDoorProxy> CachedDoorProxies; // 0x1a8(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptDelayExecuteComponent
// Size: 0x190 (Inherited: 0x190)
class UInteractorOptDelayExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptDoubleDotateDoorExecuteComponent
// Size: 0x1c0 (Inherited: 0x190)
class UInteractorOptDoubleDotateDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct TArray<struct FRotateDoorChains> RotateChains; // 0x1a0(0x10)
	struct FRotator ReallyOpenedRot; // 0x1b0(0x0c)
	char pad_1BC[0x4]; // 0x1bc(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptDoubleSlideDoorExecuteComponent
// Size: 0x1b0 (Inherited: 0x190)
class UInteractorOptDoubleSlideDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct TArray<struct FSlideDoorChains> SlideChains; // 0x1a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptEmptyHandExecuteComponent
// Size: 0x198 (Inherited: 0x190)
class UInteractorOptEmptyHandExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	float DelayAfterEmptyHand; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptIdleExecuteComponent
// Size: 0x190 (Inherited: 0x190)
class UInteractorOptIdleExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptInteractorAnimExecuteComponent
// Size: 0x2b8 (Inherited: 0x190)
class UInteractorOptInteractorAnimExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenedIdle[0x28]; // 0x1a0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char ClosedIdle[0x28]; // 0x1c8(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenForward[0x28]; // 0x1f0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char CloseForward[0x28]; // 0x218(0x28)
	struct FSoftObjectPath OpenAudioPath; // 0x240(0x18)
	struct FSoftObjectPath CloseAudioPath; // 0x258(0x18)
	struct TArray<struct UAnimSequence*> CachedAnimSequences; // 0x270(0x10)
	struct AInteractorBaseProxy* CachedInteractorBaseProxy; // 0x280(0x08)
	struct UAsyncSkeletalMeshComponent* CachedMeshComponent; // 0x288(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0x290(0x08)
	char pad_298[0x20]; // 0x298(0x20)

	void OnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function DFMGameplay.InteractorOptInteractorAnimExecuteComponent.OnMontageEnded // (Final|Native|Protected) // @ game+0x6366900
	void OnDetectValidSystem(); // Function DFMGameplay.InteractorOptInteractorAnimExecuteComponent.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x6366700
	void OnAnimLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.InteractorOptInteractorAnimExecuteComponent.OnAnimLoadComplete // (Final|Native|Protected) // @ game+0x6365de0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptPawnExecuteComponent
// Size: 0x190 (Inherited: 0x190)
class UInteractorOptPawnExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptMultiSwitcherExecuteComponent
// Size: 0x1d0 (Inherited: 0x190)
class UInteractorOptMultiSwitcherExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag TrueTag; // 0x190(0x08)
	struct FGameplayTag FalseTag; // 0x198(0x08)
	struct FMultiSwitcherStateWithContext MultiSwitcherState; // 0x1a0(0x30)

	void OnRep_SwitcherState(struct FMultiSwitcherStateWithContext InMultiSwitcherStatePre); // Function DFMGameplay.InteractorOptMultiSwitcherExecuteComponent.OnRep_SwitcherState // (Final|Native|Protected) // @ game+0x6366b50
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptSwitcherExecuteComponent
// Size: 0x1e0 (Inherited: 0x190)
class UInteractorOptSwitcherExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag TrueTag; // 0x190(0x08)
	struct FGameplayTag FalseTag; // 0x198(0x08)
	bool bSwitcherState; // 0x1a0(0x01)
	char pad_1A1[0x3]; // 0x1a1(0x03)
	float SwitcherOpenedProbability; // 0x1a4(0x04)
	struct FSwitcherStateWithContext SwitcherStateWithContext; // 0x1a8(0x30)
	enum class EInteractorOptSwitcherType OptSwitcherType; // 0x1d8(0x01)
	char pad_1D9[0x7]; // 0x1d9(0x07)

	void OnRep_SwitcherStateWithContext(struct FSwitcherStateWithContext InPreContext); // Function DFMGameplay.InteractorOptSwitcherExecuteComponent.OnRep_SwitcherStateWithContext // (Final|Native|Protected) // @ game+0x6369540
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptOpenCloseDoorExecuteComponent
// Size: 0x1f0 (Inherited: 0x190)
class UInteractorOptOpenCloseDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct FRotator ClosedRot; // 0x1a0(0x0c)
	struct FRotator ForwardOpenRot; // 0x1ac(0x0c)
	struct FRotator BackwardOpenRot; // 0x1b8(0x0c)
	float MoveSpeed; // 0x1c4(0x04)
	float Tolerance; // 0x1c8(0x04)
	char pad_1CC[0x4]; // 0x1cc(0x04)
	struct AInteractor_DoorBase* CachedDoorBase; // 0x1d0(0x08)
	struct USceneComponent* CachedDoorProxy; // 0x1d8(0x08)
	struct FRotator ReallyOpenedRot; // 0x1e0(0x0c)
	char pad_1EC[0x4]; // 0x1ec(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptOpenCloseMultiSIContainerExecuteComponent
// Size: 0x3a0 (Inherited: 0x190)
class UInteractorOptOpenCloseMultiSIContainerExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpOpenDownClosed[0x28]; // 0x1a0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpOpenDownOpened[0x28]; // 0x1c8(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpCloseDownClosed[0x28]; // 0x1f0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpCloseDownOpened[0x28]; // 0x218(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char DownOpenUpClosed[0x28]; // 0x240(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char DownOpenUpOpened[0x28]; // 0x268(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char DownCloseUpClosed[0x28]; // 0x290(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char DownCloseUpOpened[0x28]; // 0x2b8(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpClosedDownClosed[0x28]; // 0x2e0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpClosedDownOpened[0x28]; // 0x308(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpOpenedDownClosed[0x28]; // 0x330(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char UpOpenedDownOpened[0x28]; // 0x358(0x28)
	struct TArray<struct UAnimSequence*> CachedAnimSequences; // 0x380(0x10)
	struct AInteractor_SingleItemContainer* CachedSingleItemContainer; // 0x390(0x08)
	char pad_398[0x8]; // 0x398(0x08)

	void OnAnimLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.InteractorOptOpenCloseMultiSIContainerExecuteComponent.OnAnimLoadComplete // (Final|Native|Protected) // @ game+0x6365f70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptOpenCloseSingleItemContainerExecuteComponent
// Size: 0x290 (Inherited: 0x190)
class UInteractorOptOpenCloseSingleItemContainerExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenedIdle[0x28]; // 0x1a0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char ClosedIdle[0x28]; // 0x1c8(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenForward[0x28]; // 0x1f0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char CloseForward[0x28]; // 0x218(0x28)
	bool bClosedIdleLoop; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct TArray<struct UAnimSequence*> CachedAnimSequences; // 0x248(0x10)
	struct AInteractor_SingleItemContainer* CachedSingleItemContainer; // 0x258(0x08)
	char pad_260[0x20]; // 0x260(0x20)
	float CloseSkeletalMeshTickDelayTime; // 0x280(0x04)
	char pad_284[0xc]; // 0x284(0x0c)

	void OnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function DFMGameplay.InteractorOptOpenCloseSingleItemContainerExecuteComponent.OnMontageEnded // (Final|Native|Protected) // @ game+0x63669d0
	void OnDetectValidSystem(); // Function DFMGameplay.InteractorOptOpenCloseSingleItemContainerExecuteComponent.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x6366720
	void OnAnimLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.InteractorOptOpenCloseSingleItemContainerExecuteComponent.OnAnimLoadComplete // (Final|Native|Protected) // @ game+0x6366100
	void CloseSkeletalMeshTick(); // Function DFMGameplay.InteractorOptOpenCloseSingleItemContainerExecuteComponent.CloseSkeletalMeshTick // (Final|Native|Protected) // @ game+0x6365910
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptRollingDoorExecuteComponent
// Size: 0x1b0 (Inherited: 0x190)
class UInteractorOptRollingDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct TArray<struct FRollingDoorChains> RollingChains; // 0x1a0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent
// Size: 0x230 (Inherited: 0x190)
class UInteractorOptServerSetMeshTransformExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	bool bIfNeedForceSetRelativeTransformOnDs; // 0x1a0(0x01)
	char pad_1A1[0x3]; // 0x1a1(0x03)
	struct FVector ForceSetOpenedRelativeLocOnDs; // 0x1a4(0x0c)
	struct FRotator ForceSetOpenedRelativeRotOnDs; // 0x1b0(0x0c)
	struct FVector ForceSetOpenedRelativeScaleOnDs; // 0x1bc(0x0c)
	struct FVector ForceSetClosedRelativeLocOnDs; // 0x1c8(0x0c)
	struct FRotator ForceSetClosedRelativeRotOnDs; // 0x1d4(0x0c)
	struct FVector ForceSetClosedRelativeScaleOnDs; // 0x1e0(0x0c)
	float TotalMoveTime; // 0x1ec(0x04)
	struct FVector CurrentRelativeLoc; // 0x1f0(0x0c)
	struct FRotator CurrentRelativeRot; // 0x1fc(0x0c)
	struct FVector CurrentRelativeScale; // 0x208(0x0c)
	char pad_214[0x4]; // 0x214(0x04)
	struct AInteractorBaseProxy* CachedInteractorBaseProxy; // 0x218(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0x220(0x08)
	struct UInteractorAsyncSkeletalMeshComponent* CachedMeshComponent; // 0x228(0x08)

	void SetOpened(); // Function DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent.SetOpened // (Final|Native|Protected) // @ game+0x6369690
	void SetClosed(); // Function DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent.SetClosed // (Final|Native|Protected) // @ game+0x6369670
	struct UInteractorAsyncSkeletalMeshComponent* GetMeshComponent(); // Function DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent.GetMeshComponent // (Final|Native|Protected) // @ game+0x6368ec0
	struct AInteractorBaseProxy* GetInteractorBaseProxy(); // Function DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent.GetInteractorBaseProxy // (Final|Native|Protected) // @ game+0x6368e90
	bool CheckAssetPrepared(); // Function DFMGameplay.InteractorOptServerSetMeshTransformExecuteComponent.CheckAssetPrepared // (Final|Native|Protected) // @ game+0x6368d40
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptSingleItemContainerSpawnPickupExecuteComponent
// Size: 0x1b0 (Inherited: 0x190)
class UInteractorOptSingleItemContainerSpawnPickupExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct AInteractor_SingleItemContainer* CachedSingleItemContainer; // 0x1a0(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedSwitcherComp; // 0x1a8(0x08)

	void SpawnPickup(); // Function DFMGameplay.InteractorOptSingleItemContainerSpawnPickupExecuteComponent.SpawnPickup // (Final|Native|Private) // @ game+0x63696b0
	struct UInteractorOptSwitcherExecuteComponent* GetSwitcherComp(); // Function DFMGameplay.InteractorOptSingleItemContainerSpawnPickupExecuteComponent.GetSwitcherComp // (Final|Native|Private) // @ game+0x6368f60
	struct AInteractor_SingleItemContainer* GetSingleItemContainer(); // Function DFMGameplay.InteractorOptSingleItemContainerSpawnPickupExecuteComponent.GetSingleItemContainer // (Final|Native|Private) // @ game+0x6368ef0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptSlideDoorExecuteComponent
// Size: 0x1d8 (Inherited: 0x190)
class UInteractorOptSlideDoorExecuteComponent : public UInteractorOptDurativeExecuteComponent {
public:

	struct FGameplayTag OpenTag; // 0x190(0x08)
	struct FGameplayTag CloseTag; // 0x198(0x08)
	struct FVector ClosedLoc; // 0x1a0(0x0c)
	struct FVector OpenedLoc; // 0x1ac(0x0c)
	float MoveSpeed; // 0x1b8(0x04)
	float Tolerance; // 0x1bc(0x04)
	struct AInteractor_DoorBase* CachedDoorBase; // 0x1c0(0x08)
	struct USceneComponent* CachedDoorProxy; // 0x1c8(0x08)
	char pad_1D0[0x8]; // 0x1d0(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptBuildSignalStationExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptBuildSignalStationExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptConsumeItemExecuteComponent
// Size: 0x178 (Inherited: 0x168)
class UInteractorOptConsumeItemExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	struct FInteractorOptConsumeItemInfo ConsumeItemInfo; // 0x168(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptGetLastWeaponExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptGetLastWeaponExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptHackPCDownloadExecuteComponent
// Size: 0x198 (Inherited: 0x168)
class UInteractorOptHackPCDownloadExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	bool bSpecifyItem; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	struct FName SpecifyItemName; // 0x16c(0x08)
	char pad_174[0x4]; // 0x174(0x04)
	int64_t DropID; // 0x178(0x08)
	int32_t DownloadState; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct ACHARACTER* CustomCachedCharacter; // 0x188(0x08)
	char pad_190[0x8]; // 0x190(0x08)

	void OnRep_SpecifyItemName(); // Function DFMGameplay.InteractorOptHackPCDownloadExecuteComponent.OnRep_SpecifyItemName // (Final|Native|Protected) // @ game+0x6363240
	void OnRep_DownloadState(int32_t PreState); // Function DFMGameplay.InteractorOptHackPCDownloadExecuteComponent.OnRep_DownloadState // (Final|Native|Protected) // @ game+0x6363000
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptHackPCFireMissileExecuteComponent
// Size: 0x178 (Inherited: 0x168)
class UInteractorOptHackPCFireMissileExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	bool bReadyToFire; // 0x168(0x01)
	bool bFireMissileOnInteract; // 0x169(0x01)
	char pad_16A[0x2]; // 0x16a(0x02)
	int32_t FireState; // 0x16c(0x04)
	struct ACHARACTER* CustomCachedCharacter; // 0x170(0x08)

	void SetReadyToFire(bool Ready); // Function DFMGameplay.InteractorOptHackPCFireMissileExecuteComponent.SetReadyToFire // (Final|Native|Public|BlueprintCallable) // @ game+0x6363530
	void SetFireMissileOnInteract(bool FireMissileOnInteract); // Function DFMGameplay.InteractorOptHackPCFireMissileExecuteComponent.SetFireMissileOnInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x6363320
	void OnRep_FireState(int32_t PreState); // Function DFMGameplay.InteractorOptHackPCFireMissileExecuteComponent.OnRep_FireState // (Final|Native|Protected) // @ game+0x6363080
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptHackPCFireRocketExecuteComponent
// Size: 0x190 (Inherited: 0x168)
class UInteractorOptHackPCFireRocketExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	struct FName ItemID; // 0x168(0x08)
	int32_t ConsumeCount; // 0x170(0x04)
	int32_t ConsumeHealth; // 0x174(0x04)
	struct FName AirDropGroupTag; // 0x178(0x08)
	int32_t FireState; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct ACHARACTER* CustomCachedCharacter; // 0x188(0x08)

	void SetAirDropGroupTag(struct FName InAirDropGroupTag); // Function DFMGameplay.InteractorOptHackPCFireRocketExecuteComponent.SetAirDropGroupTag // (Final|Native|Public|BlueprintCallable) // @ game+0x63632a0
	void OnRep_FireState(int32_t PreState); // Function DFMGameplay.InteractorOptHackPCFireRocketExecuteComponent.OnRep_FireState // (Final|Native|Protected) // @ game+0x6363100
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptHackPCMorseCodeExecuteComponent
// Size: 0x170 (Inherited: 0x168)
class UInteractorOptHackPCMorseCodeExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	int32_t Password; // 0x168(0x04)
	bool bMorseCodeSuccess; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)

	void OnRep_Password(); // Function DFMGameplay.InteractorOptHackPCMorseCodeExecuteComponent.OnRep_Password // (Final|Native|Protected) // @ game+0x6363220
	void OnRep_MorseCodeSuccess(); // Function DFMGameplay.InteractorOptHackPCMorseCodeExecuteComponent.OnRep_MorseCodeSuccess // (Final|Native|Protected) // @ game+0x6363180
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptHackPCOpenDoorExecuteComponent
// Size: 0x178 (Inherited: 0x168)
class UInteractorOptHackPCOpenDoorExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	int32_t OpenState; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct ACHARACTER* CustomCachedCharacter; // 0x170(0x08)

	void OnRep_OpenState(int32_t PreState); // Function DFMGameplay.InteractorOptHackPCOpenDoorExecuteComponent.OnRep_OpenState // (Final|Native|Protected) // @ game+0x63631a0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptInteractCodedLockExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptInteractCodedLockExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptItemHeapSubmitItemExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptItemHeapSubmitItemExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptOpenHUDExecuteComponent
// Size: 0x178 (Inherited: 0x168)
class UInteractorOptOpenHUDExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	enum class GameHUDSate HUDState; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	struct FName HudName; // 0x16c(0x08)
	char pad_174[0x4]; // 0x174(0x04)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptPakSubmitItemExecuteComponent
// Size: 0x168 (Inherited: 0x168)
class UInteractorOptPakSubmitItemExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptSpawnMeshExecuteComponent
// Size: 0x1a0 (Inherited: 0x168)
class UInteractorOptSpawnMeshExecuteComponent : public UInteractorOptInstantExecuteComponent {
public:

	struct FName ItemIDName; // 0x168(0x08)
	float LifeSpan; // 0x170(0x04)
	struct FVector translation; // 0x174(0x0c)
	struct FRotator Rot; // 0x180(0x0c)
	struct FVector Scale; // 0x18c(0x0c)
	struct AInteractAcquireItemBase* CachedAcquireItem; // 0x198(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptKickDoorStateProcessComponent
// Size: 0x238 (Inherited: 0x210)
class UInteractorOptKickDoorStateProcessComponent : public UInteractorOptTwoStateProcessComponent {
public:

	char pad_210[0x8]; // 0x210(0x08)
	struct TArray<struct FInteractorOptExecuteContainer> FailedExecuteChains; // 0x218(0x10)
	struct TArray<struct FInteractorOptExecuteNameContainer> FailedExecuteNameChains; // 0x228(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryItem_AmmoBox
// Size: 0x648 (Inherited: 0x648)
class UInventoryItem_AmmoBox : public UInventoryItem_GadgetCommon {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.SafeHouseCharacter
// Size: 0x2b30 (Inherited: 0x2b30)
class ASafeHouseCharacter : public ASOLCharacter {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.DFMFSM_FireFlame_SingleFireAction
// Size: 0x1b0 (Inherited: 0x1a8)
class UDFMFSM_FireFlame_SingleFireAction : public UDFMFSM_FireCommonAction {
public:

	float MakeDamageDelayTime; // 0x1a8(0x04)
	float FireCircleNeedTime; // 0x1ac(0x04)

	void OnStateEnd(); // Function DFMGameplay.DFMFSM_FireFlame_SingleFireAction.OnStateEnd // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void OnStateBegin(); // Function DFMGameplay.DFMFSM_FireFlame_SingleFireAction.OnStateBegin // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	struct FHitResult FireTraceSingleToTarget(struct TArray<struct AActor*> IgnoreActors, struct FVector EndPosition); // Function DFMGameplay.DFMFSM_FireFlame_SingleFireAction.FireTraceSingleToTarget // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x6298ac0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.TurnAction
// Size: 0x1d0 (Inherited: 0x1c0)
class UTurnAction : public URootMotionAction {
public:

	char pad_1C0[0x10]; // 0x1c0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MoveTurnAction
// Size: 0x1e0 (Inherited: 0x1c0)
class UMoveTurnAction : public URootMotionAction {
public:

	char pad_1C0[0x20]; // 0x1c0(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StartMoveAction
// Size: 0x1d0 (Inherited: 0x1c0)
class UStartMoveAction : public URootMotionAction {
public:

	char pad_1C0[0x10]; // 0x1c0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StopMoveAction
// Size: 0x1e0 (Inherited: 0x1c0)
class UStopMoveAction : public URootMotionAction {
public:

	char pad_1C0[0x20]; // 0x1c0(0x20)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.StaggerAction
// Size: 0x1d0 (Inherited: 0x1c0)
class UStaggerAction : public URootMotionAction {
public:

	char pad_1C0[0x10]; // 0x1c0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CustomRootMotionAction
// Size: 0x1d0 (Inherited: 0x1c0)
class UCustomRootMotionAction : public URootMotionAction {
public:

	char pad_1C0[0x10]; // 0x1c0(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.CrashSteering
// Size: 0xe0 (Inherited: 0xd8)
class UCrashSteering : public UPathFollowSteering {
public:

	char pad_D8[0x8]; // 0xd8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Face2D
// Size: 0x90 (Inherited: 0x80)
class UFace2D : public UAlign2D {
public:

	char pad_80[0x10]; // 0x80(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FaceGoing2D
// Size: 0x80 (Inherited: 0x80)
class UFaceGoing2D : public UAlign2D {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.FaceFocusPoint
// Size: 0x80 (Inherited: 0x80)
class UFaceFocusPoint : public UAlign2D {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Wander3D
// Size: 0xc0 (Inherited: 0x90)
class UWander3D : public UFace3D {
public:

	struct FVector WanderOffset; // 0x90(0x0c)
	float WanderRadiusXY; // 0x9c(0x04)
	float WanderRadiusZ; // 0xa0(0x04)
	float WanderRate; // 0xa4(0x04)
	char pad_A8[0x18]; // 0xa8(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAnimSwitcherComponent
// Size: 0x3a8 (Inherited: 0x270)
class UInteractorAnimSwitcherComponent : public UInteractorSwitcherComponent {
public:

	/*struct FMulticastInlineDelegate*/char OnAnimSwitcherStateChange[0x10]; // 0x270(0x10)
	char pad_280[0x8]; // 0x280(0x08)
	float CloseAnimEvaluateDelayTime; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenedIdle[0x28]; // 0x290(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char ClosedIdle[0x28]; // 0x2b8(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char OpenForward[0x28]; // 0x2e0(0x28)
	/*struct TSoftObjectPtr<UAnimSequence>*/char CloseForward[0x28]; // 0x308(0x28)
	float OpenForwardTime; // 0x330(0x04)
	float CloseForwardTime; // 0x334(0x04)
	struct FGameplayTag OpeningTag; // 0x338(0x08)
	struct FGameplayTag ClosingTag; // 0x340(0x08)
	enum class EAnimSwitcher_State AnimState; // 0x348(0x01)
	char pad_349[0xf]; // 0x349(0x0f)
	struct FTimerHandle ClientSimBlendOutTimerHandle; // 0x358(0x08)
	struct FTimerHandle ExecuteResetSkeletalRenderStateTimerHandle; // 0x360(0x08)
	char pad_368[0x10]; // 0x368(0x10)
	struct TArray<struct UAnimSequence*> CacheAnimSequences; // 0x378(0x10)
	char pad_388[0x20]; // 0x388(0x20)

	void OnRepAnimState(); // Function DFMGameplay.InteractorAnimSwitcherComponent.OnRepAnimState // (Native|Protected) // @ game+0x21b1c60
	void OnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function DFMGameplay.InteractorAnimSwitcherComponent.OnMontageEnded // (Final|Native|Protected) // @ game+0x634e780
	void OnMeshLoadComplete(); // Function DFMGameplay.InteractorAnimSwitcherComponent.OnMeshLoadComplete // (Final|Native|Protected) // @ game+0x634e760
	void OnDetectValidSystem(); // Function DFMGameplay.InteractorAnimSwitcherComponent.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x634e740
	void OnAnimLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.InteractorAnimSwitcherComponent.OnAnimLoadComplete // (Final|Native|Protected) // @ game+0x634e290
	void CloseAnimEvaluate(); // Function DFMGameplay.InteractorAnimSwitcherComponent.CloseAnimEvaluate // (Final|Native|Public) // @ game+0x634dcf0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorLightSwitcherComponent
// Size: 0x280 (Inherited: 0x270)
class UInteractorLightSwitcherComponent : public UInteractorSwitcherComponent {
public:

	struct TArray<struct AInteractor_ChildLight*> SceneChildLights; // 0x270(0x10)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorRadarStationElevatorSwitcherComponent
// Size: 0x270 (Inherited: 0x270)
class UInteractorRadarStationElevatorSwitcherComponent : public UInteractorSwitcherComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorApperanceShowMeshComponent
// Size: 0x2f8 (Inherited: 0x2b0)
class UInteractorApperanceShowMeshComponent : public UInteractorApperanceSwitchShowComponent {
public:

	/*struct TSoftObjectPtr<USkeletalMesh>*/char SkeletalMeshPtr[0x28]; // 0x2b0(0x28)
	struct UClass* ChildActorClass; // 0x2d8(0x08)
	struct FName AttachSocket; // 0x2e0(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComp; // 0x2e8(0x08)
	struct UChildActorComponent* ChildActorComp; // 0x2f0(0x08)

	struct USceneComponent* GetRootComponent(struct ACHARACTER* OperactorCharacter); // Function DFMGameplay.InteractorApperanceShowMeshComponent.GetRootComponent // (Native|Event|Protected|BlueprintEvent) // @ game+0x6352040
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimReleaseLockComponent
// Size: 0x2a8 (Inherited: 0x2a8)
class UInteractorProcessPawnAnimReleaseLockComponent : public UInteractorProcessPawnAnimComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessInteractorAnimSequenceComponent
// Size: 0x360 (Inherited: 0x2a8)
class UInteractorProcessInteractorAnimSequenceComponent : public UInteractorProcessPawnAnimComponent {
public:

	float DelayOpenDoorTime; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FSoftObjectPath AnimationStartPath; // 0x2b0(0x18)
	float AnimationStartDuration; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
	struct FSoftObjectPath AnimationLoopPath; // 0x2d0(0x18)
	float AnimationLoopDuration; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
	struct FSoftObjectPath AnimationEndPath; // 0x2f0(0x18)
	float AnimationEndDuration; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct AActor* CacheOperatorCharacter; // 0x310(0x08)
	char pad_318[0x10]; // 0x318(0x10)
	bool bInterrupted; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)
	struct UAnimMontage* AnimMontage; // 0x330(0x08)
	char pad_338[0x8]; // 0x338(0x08)
	struct UBoxComponent* ClosedBox; // 0x340(0x08)
	struct UBoxComponent* OpenedBox; // 0x348(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComp; // 0x350(0x08)
	bool bDelayPlayAnimation; // 0x358(0x01)
	bool bIsOpened; // 0x359(0x01)
	char pad_35A[0x6]; // 0x35a(0x06)

	void ServerDelayPlayAnimation(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorProcessInteractorAnimSequenceComponent.ServerDelayPlayAnimation // (Final|Native|Public) // @ game+0x63695f0
	void OnRep_IsOpened(); // Function DFMGameplay.InteractorProcessInteractorAnimSequenceComponent.OnRep_IsOpened // (Final|Native|Protected) // @ game+0x6369520
	void OnRep_Interrupted(); // Function DFMGameplay.InteractorProcessInteractorAnimSequenceComponent.OnRep_Interrupted // (Final|Native|Protected) // @ game+0x6369500
	void OnRep_DelayPlayAnimation(); // Function DFMGameplay.InteractorProcessInteractorAnimSequenceComponent.OnRep_DelayPlayAnimation // (Final|Native|Protected) // @ game+0x63694a0
	void DelayPlayAnimation(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorProcessInteractorAnimSequenceComponent.DelayPlayAnimation // (Final|Native|Public) // @ game+0x6368df0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimJumpSectionComponent
// Size: 0x2d0 (Inherited: 0x2a8)
class UInteractorProcessPawnAnimJumpSectionComponent : public UInteractorProcessPawnAnimComponent {
public:

	struct FName StartSectionName; // 0x2a8(0x08)
	struct FName EndSectionName; // 0x2b0(0x08)
	float RandAnimTimeMin; // 0x2b8(0x04)
	float RandAnimTimeMax; // 0x2bc(0x04)
	struct FGameplayTag EndSectionTag; // 0x2c0(0x08)
	struct FTimerHandle EndInteractAnimSectionTimerHandle; // 0x2c8(0x08)

	void MultiPlayInteraction(struct ACHARACTER* OperatorCharacter, float PlayLength); // Function DFMGameplay.InteractorProcessPawnAnimJumpSectionComponent.MultiPlayInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6368f90
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnAnimSequenceComponent
// Size: 0x300 (Inherited: 0x2a8)
class UInteractorProcessPawnAnimSequenceComponent : public UInteractorProcessPawnAnimComponent {
public:

	int64_t AnimsID; // 0x2a8(0x08)
	struct FName ResourceFXId; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)
	struct UAnimMontage* AnimMontage; // 0x2c0(0x08)
	struct UAnimMontage* PropAnimMontage; // 0x2c8(0x08)
	char pad_2D0[0x18]; // 0x2d0(0x18)
	struct TArray<struct UObject*> CacheLoadedAssetArray; // 0x2e8(0x10)
	struct UFXResourceContainerComponent* FXResourceComponent; // 0x2f8(0x08)

	void CheckEmptyHandAndPlayAnimationInner(struct AActor* OperatorCharacter); // Function DFMGameplay.InteractorProcessPawnAnimSequenceComponent.CheckEmptyHandAndPlayAnimationInner // (Final|Native|Protected) // @ game+0x6368d70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnMontageComponent
// Size: 0x360 (Inherited: 0x2a8)
class UInteractorProcessPawnMontageComponent : public UInteractorProcessPawnAnimComponent {
public:

	struct TMap<struct FName, struct FGameplayTag> SectionBeginTagMap; // 0x2a8(0x50)
	struct TMap<struct FName, struct FGameplayTag> SectionEndTagMap; // 0x2f8(0x50)
	char pad_348[0x18]; // 0x348(0x18)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnRestartGrabComponent
// Size: 0x2b0 (Inherited: 0x2a8)
class UInteractorProcessPawnRestartGrabComponent : public UInteractorProcessPawnAnimComponent {
public:

	struct FName ItemID; // 0x2a8(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnUseRadarElevatorComponent
// Size: 0x2a8 (Inherited: 0x2a8)
class UInteractorProcessPawnUseRadarElevatorComponent : public UInteractorProcessPawnAnimComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MandelBrickProcessPawnComponent
// Size: 0x320 (Inherited: 0x2a8)
class UMandelBrickProcessPawnComponent : public UInteractorProcessPawnAnimComponent {
public:

	struct FTimerHandle MandelBrickToHandTimerHandle; // 0x2a8(0x08)
	struct FTimerHandle MandelBrickToBagTimerHandle; // 0x2b0(0x08)
	struct FTimerHandle MandelBrickMeshOffsetTimerHandle; // 0x2b8(0x08)
	float MandelBrickToHandTime; // 0x2c0(0x04)
	float MandelBrickToBagTime; // 0x2c4(0x04)
	float MandelBrickMeshOffsetTime; // 0x2c8(0x04)
	struct FName MandelBrickToHandSocketName; // 0x2cc(0x08)
	struct FName MandelBrickToContainerSocketName; // 0x2d4(0x08)
	char pad_2DC[0x4]; // 0x2dc(0x04)
	/*struct FMulticastInlineDelegate*/char OnMandelBrickToHand[0x10]; // 0x2e0(0x10)
	/*struct FMulticastInlineDelegate*/char OnServerProcessPawnEndInteraction[0x10]; // 0x2f0(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientProcessPawnSimulateInteraction[0x10]; // 0x300(0x10)
	struct UInteractorAsyncStaticMeshComponent* CacheMandelBrickMesh; // 0x310(0x08)
	struct UInteractorAsyncSkeletalMeshComponent* MandelBrickContainerMesh; // 0x318(0x08)

	void ResetBrickToContainer(); // Function DFMGameplay.MandelBrickProcessPawnComponent.ResetBrickToContainer // (Final|Native|Public) // @ game+0x6390f60
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnSwitchAnimSeqsComponent
// Size: 0x230 (Inherited: 0x218)
class UInteractorProcessPawnSwitchAnimSeqsComponent : public UInteractorProcessPawnAnimSeqsComponent {
public:

	struct TArray<struct FInteractAnimConfig> BackAnimList; // 0x218(0x10)
	char pad_228[0x8]; // 0x228(0x08)

	bool CheckUseBackAnim(struct ACHARACTER* OperatorCharacter); // Function DFMGameplay.InteractorProcessPawnSwitchAnimSeqsComponent.CheckUseBackAnim // (Native|Event|Protected|BlueprintEvent) // @ game+0x35e41c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessPawnSwitchWeaponComponent_Airbrush
// Size: 0x210 (Inherited: 0x200)
class UInteractorProcessPawnSwitchWeaponComponent_Airbrush : public UInteractorProcessPawnSwitchWeaponComponent {
public:

	uint64_t PartItemId; // 0x200(0x08)
	uint64_t PartUseCount; // 0x208(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_CustomMontageRealTime
// Size: 0x3b0 (Inherited: 0x3b0)
class UMotionAction_CustomMontageRealTime : public UMotionAction_CustomMontage {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_CustomMongtageDebugTurret
// Size: 0x3b0 (Inherited: 0x3b0)
class UMotionAction_CustomMongtageDebugTurret : public UMotionAction_CustomMontage {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_GetOnFixedMGMontage
// Size: 0x3b0 (Inherited: 0x3b0)
class UMotionAction_GetOnFixedMGMontage : public UMotionAction_CustomMontage {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_LocoTypeTrans
// Size: 0x2f0 (Inherited: 0x2e0)
class UMotionAction_LocoTypeTrans : public UMotionAction_RootMotion {
public:

	enum class EGPCharacterFightStateType TargetFightState; // 0x2e0(0x01)
	enum class EGPAIMotionType TargetMotionType; // 0x2e1(0x01)
	char pad_2E2[0xe]; // 0x2e2(0x0e)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_MoveStart
// Size: 0x2f0 (Inherited: 0x2e0)
class UMotionAction_MoveStart : public UMotionAction_RootMotion {
public:

	enum class EGPCharacterFightStateType FightState; // 0x2e0(0x01)
	enum class EGPAIMotionType MotionType; // 0x2e1(0x01)
	char pad_2E2[0xe]; // 0x2e2(0x0e)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_MoveStop
// Size: 0x2f0 (Inherited: 0x2e0)
class UMotionAction_MoveStop : public UMotionAction_RootMotion {
public:

	enum class EGPCharacterFightStateType FightState; // 0x2e0(0x01)
	enum class EGPAIMotionType MotionType; // 0x2e1(0x01)
	char pad_2E2[0xe]; // 0x2e2(0x0e)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_CoverArrival
// Size: 0x2e0 (Inherited: 0x2e0)
class UMotionAction_CoverArrival : public UMotionAction_RootMotion {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_Run2Sprint
// Size: 0x2e0 (Inherited: 0x2e0)
class UMotionAction_Run2Sprint : public UMotionAction_RootMotion {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_PathFollowForward
// Size: 0x1e0 (Inherited: 0x1e0)
class UMotionAction_PathFollowForward : public UMotionAction_PathFollow {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_MoveLoop
// Size: 0x1e8 (Inherited: 0x1e0)
class UMotionAction_MoveLoop : public UMotionAction_PathFollow {
public:

	enum class EGPCharacterFightStateType FightState; // 0x1e0(0x01)
	enum class EGPAIMotionType MotionType; // 0x1e1(0x01)
	char pad_1E2[0x6]; // 0x1e2(0x06)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_AgitatingLorry
// Size: 0xfc8 (Inherited: 0xf60)
class AInteractor_AgitatingLorry : public AInteractor_SingleItemContainer {
public:

	float AgitatingLorryIdleRotateSpeed; // 0xf60(0x04)
	struct FRotator AgitatingLorryIdleRotateValue; // 0xf64(0x0c)
	bool bCloseTickOnBeginPlay; // 0xf70(0x01)
	bool bOpenAgitatingLorryBoneTickRotate; // 0xf71(0x01)
	char pad_F72[0x2]; // 0xf72(0x02)
	struct FRotator AgitatingLorryBoneRotatorValue; // 0xf74(0x0c)
	struct USceneComponent* AgitatingLorryEffectSpawnComp; // 0xf80(0x08)
	struct UGPAudioEventAsset* IdleLoopAudioEvent; // 0xf88(0x08)
	struct UGPAudioEventAsset* IdleLoopStopAudioEvent; // 0xf90(0x08)
	struct UGPAudioEventAsset* ActivateAudioEvent; // 0xf98(0x08)
	struct UGPAudioEventAsset* ActivateLoopAudioEvent; // 0xfa0(0x08)
	struct UGPAudioEventAsset* ActivateLoopStopAudioEvent; // 0xfa8(0x08)
	struct UGPAudioEventAsset* TurnOffAudioEvent; // 0xfb0(0x08)
	struct FGPAudioFuturePlayingID IdleLoopAudioPlayingID; // 0xfb8(0x08)
	char pad_FC0[0x8]; // 0xfc0(0x08)

	void SetOpenAgitatingLorryBoneTickRotate(bool bOpenBoneTickRotate); // Function DFMGameplay.Interactor_AgitatingLorry.SetOpenAgitatingLorryBoneTickRotate // (Final|Native|Public) // @ game+0x633ca50
	void SetAgitatingLorryBoneRotatorValue(struct FRotator BoneRotatorValue); // Function DFMGameplay.Interactor_AgitatingLorry.SetAgitatingLorryBoneRotatorValue // (Final|Native|Public|HasDefaults) // @ game+0x633c9c0
	void OpenOrCloseTick(bool bOpenOrClose); // Function DFMGameplay.Interactor_AgitatingLorry.OpenOrCloseTick // (Final|Native|Private) // @ game+0x633c7b0
	void ModFloat(float& InOutValue, float MinValue, float MaxValue); // Function DFMGameplay.Interactor_AgitatingLorry.ModFloat // (Final|Native|Private|HasOutParms|Const) // @ game+0x633c510
	struct FTransform GetAgitatingLorryEffectSpawnCompTransform(); // Function DFMGameplay.Interactor_AgitatingLorry.GetAgitatingLorryEffectSpawnCompTransform // (Final|Native|Public|HasDefaults) // @ game+0x633b470
	struct FRotator GetAgitatingLorryBoneRotatorValue(); // Function DFMGameplay.Interactor_AgitatingLorry.GetAgitatingLorryBoneRotatorValue // (Final|Native|Public|HasDefaults|Const) // @ game+0x633b430
	void CloseTickAfter(); // Function DFMGameplay.Interactor_AgitatingLorry.CloseTickAfter // (Final|Native|Private) // @ game+0x633b030
	void CloseTick(); // Function DFMGameplay.Interactor_AgitatingLorry.CloseTick // (Final|Native|Private) // @ game+0x633b010
	void ClientPlayStopAudio(struct UGPAudioEventAsset* AudioAsset, struct FGPAudioFuturePlayingID PlayingId); // Function DFMGameplay.Interactor_AgitatingLorry.ClientPlayStopAudio // (Final|Native|Private|Const) // @ game+0x633af50
	struct FGPAudioFuturePlayingID ClientPlayAudio(struct UGPAudioEventAsset* AudioAsset); // Function DFMGameplay.Interactor_AgitatingLorry.ClientPlayAudio // (Final|Native|Private|Const) // @ game+0x633aec0
	void BP_PlayTurnOffAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AgitatingLorry.BP_PlayTurnOffAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayActivateLoopStopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AgitatingLorry.BP_PlayActivateLoopStopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayActivateLoopAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AgitatingLorry.BP_PlayActivateLoopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayActivateAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_AgitatingLorry.BP_PlayActivateAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_AgitatingLorryEffectSpawnComp(); // Function DFMGameplay.Interactor_AgitatingLorry.BP_AgitatingLorryEffectSpawnComp // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_DoorBase
// Size: 0x10d0 (Inherited: 0xc40)
class AInteractor_DoorBase : public AInteractor_DoorBaseProxy {
public:

	struct USceneComponent* CachedDoorProxy; // 0xc40(0x08)
	struct UBoxComponent* CachedFrontBox; // 0xc48(0x08)
	struct UMeshComponent* CachedForwardLock; // 0xc50(0x08)
	struct UMeshComponent* CachedBackwardLock; // 0xc58(0x08)
	struct TMap<struct FGameplayTag, struct USceneComponent*> CachedForwardInteractPointMap; // 0xc60(0x50)
	struct TMap<struct FGameplayTag, struct USceneComponent*> CachedBackwardInteractPointMap; // 0xcb0(0x50)
	struct TMap<struct FGameplayTag, struct FName> ForwardInteractPointNameMap; // 0xd00(0x50)
	struct TMap<struct FGameplayTag, struct FName> BackwardInteractPointNameMap; // 0xd50(0x50)
	int32_t DoorType; // 0xda0(0x04)
	bool bUseDoorMeshAsAimBox; // 0xda4(0x01)
	bool bUseNavBoxAsAimBox; // 0xda5(0x01)
	char pad_DA6[0x2]; // 0xda6(0x02)
	int32_t KickDurability; // 0xda8(0x04)
	char pad_DAC[0x4]; // 0xdac(0x04)
	struct UBoxComponent* CachedForwardLockBoxComp; // 0xdb0(0x08)
	struct UBoxComponent* CachedBackwardLockBoxComp; // 0xdb8(0x08)
	struct UMeshComponent* CachedFrame; // 0xdc0(0x08)
	bool UseBaseFrame; // 0xdc8(0x01)
	char pad_DC9[0x7]; // 0xdc9(0x07)
	struct UBoxComponent* CachedNavAreaBox; // 0xdd0(0x08)
	struct UGPAudioEventAsset* ReleaseAudioEvent; // 0xdd8(0x08)
	struct UGPAudioEventAsset* KickFailedAudioEvent; // 0xde0(0x08)
	struct UGPAudioEventAsset* KickSucceedAudioEvent; // 0xde8(0x08)
	struct FName KickEffectName; // 0xdf0(0x08)
	struct UGPAudioEventAsset* OpenAudioEvent; // 0xdf8(0x08)
	struct UGPAudioEventAsset* CloseAudioEvent; // 0xe00(0x08)
	char pad_E08[0x28]; // 0xe08(0x28)
	struct UInteractorOptConsumeItemExecuteComponent* CachedConsumeItemExecuteComponent; // 0xe30(0x08)
	struct TArray<struct UBoxComponent*> NavBoxComponents; // 0xe38(0x10)
	char pad_E48[0x18]; // 0xe48(0x18)
	struct UInteractorOptOpenCloseDoorExecuteComponent* CachedOpenCloseDoorExecuteComponent; // 0xe60(0x08)
	struct UInteractorOptSlideDoorExecuteComponent* CachedSlideDoorExecuteComponent; // 0xe68(0x08)
	struct UInteractorOptDoubleDotateDoorExecuteComponent* CachedDoubleRotateDoorExecuteComponent; // 0xe70(0x08)
	struct UInteractorOptDoubleSlideDoorExecuteComponent* CachedDoubleSlideDoorExecuteComponent; // 0xe78(0x08)
	struct UInteractorOptRollingDoorExecuteComponent* CachedRollingDoorExecuteComponent; // 0xe80(0x08)
	char pad_E88[0x8]; // 0xe88(0x08)
	struct TArray<struct UMeshComponent*> CachedDoorMeshComponents; // 0xe90(0x10)
	struct TArray<struct FName> CachedDoorMeshComponentNames; // 0xea0(0x10)
	struct TArray<float> DelayRefreshLockColorDurationArray; // 0xeb0(0x10)
	struct TArray<struct FTimerHandle> DelayRefreshLockColorTHArray; // 0xec0(0x10)
	char pad_ED0[0x10]; // 0xed0(0x10)
	struct TArray<struct UBoxComponent*> CachedNavBoxForAimedBox; // 0xee0(0x10)
	bool bIsDavidDoor; // 0xef0(0x01)
	bool bCanInteractByAI; // 0xef1(0x01)
	char pad_EF2[0x2]; // 0xef2(0x02)
	struct FName RelevantOpenBoxTagName; // 0xef4(0x08)
	char pad_EFC[0x4]; // 0xefc(0x04)
	struct TArray<struct AInventoryPickup*> RelevantOpenBoxArray; // 0xf00(0x10)
	struct TArray<struct AInteractor_SingleItemContainer*> RelevantSIContainerArray; // 0xf10(0x10)
	struct TArray<struct AInteractor_HackPC*> RelevantHackPCArray; // 0xf20(0x10)
	struct ADFMCharacter* CachedReleaseLockCharacter; // 0xf30(0x08)
	char pad_F38[0x8]; // 0xf38(0x08)
	struct AInteractor_CodedLock* CodedLock; // 0xf40(0x08)
	struct FString AudioPortalIDString; // 0xf48(0x10)
	bool bReleaseIsOpenAndDoClose; // 0xf58(0x01)
	bool bUseBigLock; // 0xf59(0x01)
	bool bShowOpenEffect; // 0xf5a(0x01)
	char pad_F5B[0x1]; // 0xf5b(0x01)
	struct FVector OpenEffectOffset; // 0xf5c(0x0c)
	struct FName OpenEffectName; // 0xf68(0x08)
	float LockedDesaturation; // 0xf70(0x04)
	struct FLinearColor LockedBright; // 0xf74(0x10)
	float UnLockedDesaturation; // 0xf84(0x04)
	struct FLinearColor UnLockedBright; // 0xf88(0x10)
	/*struct TSoftObjectPtr<UMaterialInterface>*/char BigLockRedMat1[0x28]; // 0xf98(0x28)
	/*struct TSoftObjectPtr<UMaterialInterface>*/char BigLockRedMat3[0x28]; // 0xfc0(0x28)
	/*struct TSoftObjectPtr<UMaterialInterface>*/char BigLockGreedMat1[0x28]; // 0xfe8(0x28)
	/*struct TSoftObjectPtr<UMaterialInterface>*/char BigLockGreedMat3[0x28]; // 0x1010(0x28)
	bool bUseThreeColors; // 0x1038(0x01)
	char pad_1039[0x3]; // 0x1039(0x03)
	int32_t ThreeColorsState; // 0x103c(0x04)
	struct TArray<float> ThreeColorsDesaturationArray; // 0x1040(0x10)
	struct TArray<struct FLinearColor> ThreeColorsBrightArray; // 0x1050(0x10)
	struct FInteractorOptConsumeItemInfo ConsumeItemInfoInEditor; // 0x1060(0x10)
	char pad_1070[0x4]; // 0x1070(0x04)
	float ReleaseTimeStamp; // 0x1074(0x04)
	char pad_1078[0x8]; // 0x1078(0x08)
	bool bUseReleaseCountDown; // 0x1080(0x01)
	char pad_1081[0x3]; // 0x1081(0x03)
	struct FName ReleaseCountDownTag; // 0x1084(0x08)
	bool bForceInitReleaseExitTriggers; // 0x108c(0x01)
	bool bForceInitReleaseDoorBases; // 0x108d(0x01)
	bool bUseForOnlyOneVOVolume; // 0x108e(0x01)
	char pad_108F[0x1]; // 0x108f(0x01)
	struct TArray<struct AInteractor_ExitTrigger*> ReleaseExitTriggers; // 0x1090(0x10)
	struct TArray<struct AInteractor_DoorBase*> ReleaseDoorBases; // 0x10a0(0x10)
	struct USceneComponent* CountDownMarkerAnchor; // 0x10b0(0x08)
	struct UBoxComponent* CountDownMarkerBox; // 0x10b8(0x08)
	struct UBoxComponent* OnlyOneVOBox; // 0x10c0(0x08)
	char pad_10C8[0x8]; // 0x10c8(0x08)

	void OpenDoor(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_DoorBase.OpenDoor // (Final|Native|Public|BlueprintCallable) // @ game+0x6344740
	void OnServerPawnImpendingDeath(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.Interactor_DoorBase.OnServerPawnImpendingDeath // (Final|Native|Public) // @ game+0x63446c0
	void OnServerPawnDie(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.Interactor_DoorBase.OnServerPawnDie // (Final|Native|Public) // @ game+0x6344640
	void OnServerKnockBack(struct AGPCharacterBase* InGPCharacterBase); // Function DFMGameplay.Interactor_DoorBase.OnServerKnockBack // (Final|Native|Public) // @ game+0x63445c0
	void OnServerAssassinate(bool InBeing); // Function DFMGameplay.Interactor_DoorBase.OnServerAssassinate // (Final|Native|Public) // @ game+0x6344510
	void OnRep_ThreeColorsState(); // Function DFMGameplay.Interactor_DoorBase.OnRep_ThreeColorsState // (Final|Native|Protected) // @ game+0x63444d0
	void OnReleaseCountDownEnd(); // Function DFMGameplay.Interactor_DoorBase.OnReleaseCountDownEnd // (Final|Native|Protected) // @ game+0x6344490
	void OnDelayRefreshLockColor(); // Function DFMGameplay.Interactor_DoorBase.OnDelayRefreshLockColor // (Final|Native|Protected) // @ game+0x63443a0
	void OnBigLockMatLoaded(struct TArray<struct FSoftObjectPath> SoftObjectPaths); // Function DFMGameplay.Interactor_DoorBase.OnBigLockMatLoaded // (Final|Native|Protected) // @ game+0x6344110
	void OnArriveDavidDoor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_DoorBase.OnArriveDavidDoor // (Final|Native|Protected|HasOutParms) // @ game+0x6343f10
	void NetMultiAlarm(); // Function DFMGameplay.Interactor_DoorBase.NetMultiAlarm // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x364e770
	void CloseDoor(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_DoorBase.CloseDoor // (Final|Native|Public|BlueprintCallable) // @ game+0x6343b80
	bool CharacterIsInFront(struct ACHARACTER* InCharacter); // Function DFMGameplay.Interactor_DoorBase.CharacterIsInFront // (Final|Native|Public|BlueprintCallable) // @ game+0x6343af0
	void BP_PlayReleaseEndAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayReleaseEndAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayReleaseBeginAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayReleaseBeginAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenEndEffect(); // Function DFMGameplay.Interactor_DoorBase.BP_PlayOpenEndEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenEndAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayOpenEndAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenBeginEffect(); // Function DFMGameplay.Interactor_DoorBase.BP_PlayOpenBeginEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayOpenAudio(struct ACHARACTER* InOptCharacter, float InDelayTime); // Function DFMGameplay.Interactor_DoorBase.BP_PlayOpenAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayKickSucceedAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayKickSucceedAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayKickFailedAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayKickFailedAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayCloseEndEffect(); // Function DFMGameplay.Interactor_DoorBase.BP_PlayCloseEndEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayCloseEndAudio(struct ACHARACTER* InOptCharacter); // Function DFMGameplay.Interactor_DoorBase.BP_PlayCloseEndAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayCloseBeginEffect(); // Function DFMGameplay.Interactor_DoorBase.BP_PlayCloseBeginEffect // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayCloseAudio(struct ACHARACTER* InOptCharacter, float InDelayTime); // Function DFMGameplay.Interactor_DoorBase.BP_PlayCloseAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_PlayAlarmAudio(); // Function DFMGameplay.Interactor_DoorBase.BP_PlayAlarmAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnOpened(); // Function DFMGameplay.Interactor_DoorBase.BP_OnOpened // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	void BP_OnClosed(); // Function DFMGameplay.Interactor_DoorBase.BP_OnClosed // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UMeshComponent*> BP_GetThreeColorsMeshComponents(); // Function DFMGameplay.Interactor_DoorBase.BP_GetThreeColorsMeshComponents // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct FVector BP_GetReleaseAudioLoc(); // Function DFMGameplay.Interactor_DoorBase.BP_GetReleaseAudioLoc // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct FVector BP_GetOpenAudioLoc(); // Function DFMGameplay.Interactor_DoorBase.BP_GetOpenAudioLoc // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetOnlyOneVOBox(); // Function DFMGameplay.Interactor_DoorBase.BP_GetOnlyOneVOBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetNavAreaBox(); // Function DFMGameplay.Interactor_DoorBase.BP_GetNavAreaBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UMeshComponent* BP_GetFrame(); // Function DFMGameplay.Interactor_DoorBase.BP_GetFrame // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetForwardLockBoxComp(); // Function DFMGameplay.Interactor_DoorBase.BP_GetForwardLockBoxComp // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UMeshComponent* BP_GetForwardLock(); // Function DFMGameplay.Interactor_DoorBase.BP_GetForwardLock // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_GetDoorProxy(); // Function DFMGameplay.Interactor_DoorBase.BP_GetDoorProxy // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetDoorFrontBox(); // Function DFMGameplay.Interactor_DoorBase.BP_GetDoorFrontBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UMeshComponent*> BP_GetDoorAndFrame(); // Function DFMGameplay.Interactor_DoorBase.BP_GetDoorAndFrame // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetDavidArriveBox(); // Function DFMGameplay.Interactor_DoorBase.BP_GetDavidArriveBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetCountDownMarkerBox(); // Function DFMGameplay.Interactor_DoorBase.BP_GetCountDownMarkerBox // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct USceneComponent* BP_GetCountDownMarkerAnchor(); // Function DFMGameplay.Interactor_DoorBase.BP_GetCountDownMarkerAnchor // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct FVector BP_GetCloseAudioLoc(); // Function DFMGameplay.Interactor_DoorBase.BP_GetCloseAudioLoc // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetBackwardLockBoxComp(); // Function DFMGameplay.Interactor_DoorBase.BP_GetBackwardLockBoxComp // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UMeshComponent* BP_GetBackwardLock(); // Function DFMGameplay.Interactor_DoorBase.BP_GetBackwardLock // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_Container
// Size: 0x19f0 (Inherited: 0x1558)
class AInventoryPickup_Container : public AInventoryPickup {
public:

	struct FVector CollsionCheckAddOffset; // 0x1558(0x0c)
	enum class EPickupBoxType PickupBoxType; // 0x1564(0x01)
	char pad_1565[0x3]; // 0x1565(0x03)
	struct FLootBoxRepData LootBoxRepData; // 0x1568(0x18)
	struct FItemArray RepItemArray; // 0x1580(0x120)
	struct TArray<uint64_t> CurrentSearchingPlayers; // 0x16a0(0x10)
	char pad_16B0[0x8]; // 0x16b0(0x08)
	struct TMap<bool, struct UGPAudioEventAsset*> SearchAudioEvent; // 0x16b8(0x50)
	bool bClientSearchDone; // 0x1708(0x01)
	bool bCanAutoPick; // 0x1709(0x01)
	bool bAutoLootingMode; // 0x170a(0x01)
	char pad_170B[0x1d]; // 0x170b(0x1d)
	float HideWhiteDotEndTimeStamp; // 0x1728(0x04)
	char pad_172C[0x54]; // 0x172c(0x54)
	struct TArray<uint64_t> CurrentLootingPlayers; // 0x1780(0x10)
	struct FLinearColor LootingTextColor; // 0x1790(0x10)
	bool bShowSpecialUnderlay; // 0x17a0(0x01)
	char pad_17A1[0x7]; // 0x17a1(0x07)
	/*struct TSoftObjectPtr<UPaperSprite>*/char UnderlayImgPath[0x28]; // 0x17a8(0x28)
	/*struct TSoftObjectPtr<UPaperSprite>*/char PatternImgPath[0x28]; // 0x17d0(0x28)
	float BaseBoxSearchTime; // 0x17f8(0x04)
	float BaseItemSearchTime; // 0x17fc(0x04)
	struct TArray<uint64_t> SearchDonePlayer; // 0x1800(0x10)
	char pad_1810[0x140]; // 0x1810(0x140)
	struct FGameplayTag PickupTag; // 0x1950(0x08)
	struct FGameplayTag SearchTag; // 0x1958(0x08)
	struct FGameplayTagContainer CachedTagContainer; // 0x1960(0x20)
	enum class EPickupContainerLootAudioType LootAudioType; // 0x1980(0x04)
	char pad_1984[0x64]; // 0x1984(0x64)
	bool bIsEmpty; // 0x19e8(0x01)
	bool bSceneEquipContainer; // 0x19e9(0x01)
	char pad_19EA[0x6]; // 0x19ea(0x06)

	bool ShowSpecialUnderlay(); // Function DFMGameplay.InventoryPickup_Container.ShowSpecialUnderlay // (Native|Public|Const) // @ game+0x40a6410
	void OnReq_LootBoxRepData(); // Function DFMGameplay.InventoryPickup_Container.OnReq_LootBoxRepData // (Native|Public) // @ game+0x637dad0
	void OnReq_ItemArray(); // Function DFMGameplay.InventoryPickup_Container.OnReq_ItemArray // (Native|Public) // @ game+0x6240170
	void OnRep_CurrentSearchingPlayers(); // Function DFMGameplay.InventoryPickup_Container.OnRep_CurrentSearchingPlayers // (Final|Native|Public) // @ game+0x637d9f0
	void OnLootingPlayerBeingSpectatingStateChanged(struct AController* Controller, bool bBeingSpectated); // Function DFMGameplay.InventoryPickup_Container.OnLootingPlayerBeingSpectatingStateChanged // (Final|Native|Protected) // @ game+0x637d3a0
	void OnLocalOpenBox(); // Function DFMGameplay.InventoryPickup_Container.OnLocalOpenBox // (Final|Native|Public) // @ game+0x637d380
	void OnAudioLoadCompleted(struct FSoftObjectPath& AudioSoftPath, bool bIsPlay); // Function DFMGameplay.InventoryPickup_Container.OnAudioLoadCompleted // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x637ce40
	bool IsOpenBox(); // Function DFMGameplay.InventoryPickup_Container.IsOpenBox // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x35d2040
	bool IsEquipContainerEmpty(); // Function DFMGameplay.InventoryPickup_Container.IsEquipContainerEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x637cd80
	struct FString GetUnderlayImgPath(); // Function DFMGameplay.InventoryPickup_Container.GetUnderlayImgPath // (Native|Public|Const) // @ game+0x637ccb0
	struct UItemSpace* GetSubPickupSpace(); // Function DFMGameplay.InventoryPickup_Container.GetSubPickupSpace // (Final|Native|Public) // @ game+0x637cb40
	void GetSortedSearchItemList(struct APlayerController* PC, struct TArray<uint64_t>& SearchItemList, uint64_t CurrentSearchItemGID); // Function DFMGameplay.InventoryPickup_Container.GetSortedSearchItemList // (Native|Public|HasOutParms) // @ game+0x637c9d0
	struct FString GetPatternImgPath(); // Function DFMGameplay.InventoryPickup_Container.GetPatternImgPath // (Native|Public|Const) // @ game+0x637c850
	struct FSlateColor GetLootingTextColor(); // Function DFMGameplay.InventoryPickup_Container.GetLootingTextColor // (Native|Public|Const) // @ game+0x637c7e0
	int32_t GetCurrentSearchingPlayerNum(); // Function DFMGameplay.InventoryPickup_Container.GetCurrentSearchingPlayerNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x637c610
	uint32_t GetCurrentLootingPlayerNum(); // Function DFMGameplay.InventoryPickup_Container.GetCurrentLootingPlayerNum // (Final|Native|Public|Const) // @ game+0x637c5f0
	void CheckSearchAudioStop(); // Function DFMGameplay.InventoryPickup_Container.CheckSearchAudioStop // (Final|Native|Private) // @ game+0x637c110
	bool CheckIsLegendarySearch(uint64_t PlayerUin); // Function DFMGameplay.InventoryPickup_Container.CheckIsLegendarySearch // (Final|Native|Public) // @ game+0x637c080
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_WeaponModule
// Size: 0x1588 (Inherited: 0x1558)
class AInventoryPickup_WeaponModule : public AInventoryPickup {
public:

	struct AActor* ChildActor; // 0x1558(0x08)
	char pad_1560[0x8]; // 0x1560(0x08)
	struct USkeletalMeshComponent* OutlineMeshSkeletalMeshComp_WeaponModule; // 0x1568(0x08)
	struct TArray<struct USkeletalMeshComponent*> OutlineMeshSKMs_WeaponModule; // 0x1570(0x10)
	char pad_1580[0x8]; // 0x1580(0x08)

	void OnBuildComplete(struct UModularWeaponDesc* Desc, uint32_t ModularWeaponActorHash, struct AActor* WeaponActor); // Function DFMGameplay.InventoryPickup_WeaponModule.OnBuildComplete // (Final|Native|Public) // @ game+0x6383790
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptPawnAnimExecuteComponent
// Size: 0x228 (Inherited: 0x190)
class UInteractorOptPawnAnimExecuteComponent : public UInteractorOptPawnExecuteComponent {
public:

	enum class EAnimationPlayType FPPPlayType; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char FPPAnimationPath[0x28]; // 0x198(0x28)
	bool FPPStopAllMontage; // 0x1c0(0x01)
	char pad_1C1[0x3]; // 0x1c1(0x03)
	float FPPBlendInTime; // 0x1c4(0x04)
	float FPPBlendOutTime; // 0x1c8(0x04)
	enum class EAnimationPlayType TPPPlayType; // 0x1cc(0x01)
	char pad_1CD[0x3]; // 0x1cd(0x03)
	/*struct TSoftObjectPtr<UAnimSequenceBase>*/char TPPAnimationPath[0x28]; // 0x1d0(0x28)
	bool TPPStopAllMontage; // 0x1f8(0x01)
	char pad_1F9[0x3]; // 0x1f9(0x03)
	struct FName CharacterLeftArmAnimName; // 0x1fc(0x08)
	bool bStayLoopAnim; // 0x204(0x01)
	char pad_205[0x3]; // 0x205(0x03)
	struct FName AnimSection; // 0x208(0x08)
	char pad_210[0x8]; // 0x210(0x08)
	struct TArray<struct UAnimSequence*> CachedAnimSequences; // 0x218(0x10)

	void OnDetectValidSystem(); // Function DFMGameplay.InteractorOptPawnAnimExecuteComponent.OnDetectValidSystem // (Final|Native|Protected) // @ game+0x6366740
	void OnAnimLoadComplete(struct TArray<struct FSoftObjectPath> AssetRef); // Function DFMGameplay.InteractorOptPawnAnimExecuteComponent.OnAnimLoadComplete // (Final|Native|Protected) // @ game+0x6366290
	struct FName GetAnimSection(); // Function DFMGameplay.InteractorOptPawnAnimExecuteComponent.GetAnimSection // (Native|Event|Protected|BlueprintEvent) // @ game+0x6365930
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptNeedKickSwitcherExecuteComponent
// Size: 0x1e0 (Inherited: 0x1e0)
class UInteractorOptNeedKickSwitcherExecuteComponent : public UInteractorOptSwitcherExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptRPCSwitcherExecuteComponent
// Size: 0x230 (Inherited: 0x1e0)
class UInteractorOptRPCSwitcherExecuteComponent : public UInteractorOptSwitcherExecuteComponent {
public:

	struct TMap<struct FGameplayTag, struct FGameplayTag> ForceTag2SwitcherStateTag; // 0x1e0(0x50)

	void NetMultiSwitchStateInHalfway(struct FSwitcherStateWithContext NewSwitcherStateWithContext, struct TArray<struct FVector> InDoorProxyLocArray); // Function DFMGameplay.InteractorOptRPCSwitcherExecuteComponent.NetMultiSwitchStateInHalfway // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6365ca0
	void NetMultiSwitchState(struct FSwitcherStateWithContext NewSwitcherStateWithContext); // Function DFMGameplay.InteractorOptRPCSwitcherExecuteComponent.NetMultiSwitchState // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6365be0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.ChristmasAmmoInteractorComponent
// Size: 0x430 (Inherited: 0x3a8)
class UChristmasAmmoInteractorComponent : public UInteractorAnimSwitcherComponent {
public:

	float TimeIntervalOfVisualAndSound; // 0x3a8(0x04)
	float TimeOfVisualAndSoundToOriginalState; // 0x3ac(0x04)
	struct UGPAudioEventAsset* StartInteractionEvent; // 0x3b0(0x08)
	struct UGPAudioEventAsset* InteractionFinishEvent; // 0x3b8(0x08)
	char pad_3C0[0x58]; // 0x3c0(0x58)
	struct FTimerHandle SwitchIdleTimerHandle; // 0x418(0x08)
	struct FTimerHandle ToOriginalStateTimerHandle; // 0x420(0x08)
	char pad_428[0x8]; // 0x428(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger
// Size: 0x3b8 (Inherited: 0x3a8)
class UInteractorAnimSwitcherComponent_ExitTrigger : public UInteractorAnimSwitcherComponent {
public:

	bool bIfGreenOnBlink; // 0x3a8(0x01)
	char pad_3A9[0xf]; // 0x3a9(0x0f)

	void TriggerScreenBlink(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.TriggerScreenBlink // (Final|Native|Public) // @ game+0x634f580
	void ShowScreen(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.ShowScreen // (Final|Native|Public) // @ game+0x634f410
	void SetScreenType(enum class EExitTriggerScreenType ExitTriggerScreenType); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.SetScreenType // (Final|Native|Public|Const) // @ game+0x634f190
	void ScreenBlink(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.ScreenBlink // (Final|Native|Public) // @ game+0x634ef90
	void ResetTrigger(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.ResetTrigger // (Final|Native|Public) // @ game+0x634ef70
	void OpenTrigger(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.OpenTrigger // (Final|Native|Public) // @ game+0x634ef50
	void OnSOLEventClientTrainArrive(struct APlayerExitBase* PlayerExit); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.OnSOLEventClientTrainArrive // (Final|Native|Public) // @ game+0x634edb0
	void OnClientExitStageChange(enum class EExitStageType ExitStage); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.OnClientExitStageChange // (Final|Native|Public) // @ game+0x634e420
	struct APlayerExitBase* GetTargetExit(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.GetTargetExit // (Final|Native|Public|Const) // @ game+0x634e0b0
	enum class EExitTriggerScreenType GetScreenType(); // Function DFMGameplay.InteractorAnimSwitcherComponent_ExitTrigger.GetScreenType // (Final|Native|Public|Const) // @ game+0x634e080
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorAnimSwitcherComponent_MandelBrick
// Size: 0x3b8 (Inherited: 0x3a8)
class UInteractorAnimSwitcherComponent_MandelBrick : public UInteractorAnimSwitcherComponent {
public:

	char pad_3A8[0x8]; // 0x3a8(0x08)
	float BlendOutAnimTime; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)

	void BlendOutMontageMandelBrick(); // Function DFMGameplay.InteractorAnimSwitcherComponent_MandelBrick.BlendOutMontageMandelBrick // (Final|Native|Public) // @ game+0x63902d0
	void BlendOutAnimMontage(); // Function DFMGameplay.InteractorAnimSwitcherComponent_MandelBrick.BlendOutAnimMontage // (Final|Native|Public) // @ game+0x63902b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorApperanceShowMeshForWeaponComponent
// Size: 0x2f8 (Inherited: 0x2f8)
class UInteractorApperanceShowMeshForWeaponComponent : public UInteractorApperanceShowMeshComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorProcessDrillingComponent
// Size: 0x3d8 (Inherited: 0x2a8)
class UInteractorProcessDrillingComponent : public UInteractorProcessPawnAnimReleaseLockComponent {
public:

	struct FSoftObjectPath DrillingAnimationStart_1PPath; // 0x2a8(0x18)
	struct FSoftObjectPath DrillingAnimationStart_3PPath; // 0x2c0(0x18)
	struct FSoftObjectPath DrillingMesh_1PPath; // 0x2d8(0x18)
	struct FSoftObjectPath DrillingMesh_3PPath; // 0x2f0(0x18)
	struct FName DrillingEffectID; // 0x308(0x08)
	float DelayOpenDoorTime; // 0x310(0x04)
	struct FName DrillingTag; // 0x314(0x08)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct FSoftObjectPath DrillingAudioPath; // 0x320(0x18)
	struct FSoftObjectPath DrillingSuccessAudioPath; // 0x338(0x18)
	struct FSoftObjectPath DrillingStopAudioPath; // 0x350(0x18)
	char pad_368[0x8]; // 0x368(0x08)
	bool bDrilling; // 0x370(0x01)
	bool bInterrupted; // 0x371(0x01)
	char pad_372[0x6]; // 0x372(0x06)
	struct USkeletalMeshComponent* DrillingSkeletalMeshComponent; // 0x378(0x08)
	char pad_380[0x8]; // 0x380(0x08)
	struct USkeletalMeshComponent* DrillingSkeletalMeshInDoorComponent; // 0x388(0x08)
	struct UFXResourceContainerComponent* DrillingFXResourceComponent; // 0x390(0x08)
	char pad_398[0x18]; // 0x398(0x18)
	struct TArray<struct USkeletalMesh*> DrillingMeshs; // 0x3b0(0x10)
	char pad_3C0[0x18]; // 0x3c0(0x18)

	void OnRep_Interrupted(); // Function DFMGameplay.InteractorProcessDrillingComponent.OnRep_Interrupted // (Final|Native|Protected) // @ game+0x63694e0
	void OnRep_Drilling(); // Function DFMGameplay.InteractorProcessDrillingComponent.OnRep_Drilling // (Final|Native|Protected) // @ game+0x63694c0
	void DelayPlayDrillingAnimations(); // Function DFMGameplay.InteractorProcessDrillingComponent.DelayPlayDrillingAnimations // (Final|Native|Protected) // @ game+0x6368e70
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_NativeToFightCrouch
// Size: 0x2f0 (Inherited: 0x2f0)
class UMotionAction_NativeToFightCrouch : public UMotionAction_LocoTypeTrans {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_MoveStopDynamic
// Size: 0x2f0 (Inherited: 0x2f0)
class UMotionAction_MoveStopDynamic : public UMotionAction_MoveStop {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.MotionAction_MoveLoopLerpRotation
// Size: 0x1e8 (Inherited: 0x1e8)
class UMotionAction_MoveLoopLerpRotation : public UMotionAction_MoveLoop {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.Interactor_AutoDoorBase
// Size: 0x1188 (Inherited: 0x10d0)
class AInteractor_AutoDoorBase : public AInteractor_DoorBase {
public:

	struct UBoxComponent* CachedNavAreaBox2; // 0x10d0(0x08)
	bool bDoubleDoor; // 0x10d8(0x01)
	char pad_10D9[0x7]; // 0x10d9(0x07)
	struct UBoxComponent* CachedTrigger; // 0x10e0(0x08)
	struct UInteractorOptAutoSlideDoorExecuteComponent* CachedAutoSlideDoorExecuteComp; // 0x10e8(0x08)
	struct UInteractorOptSwitcherExecuteComponent* CachedOpenCloseSwitcherExecuteComp; // 0x10f0(0x08)
	float AutoCloseDelay; // 0x10f8(0x04)
	char pad_10FC[0xc]; // 0x10fc(0x0c)
	float FakeTickInterval; // 0x1108(0x04)
	char pad_110C[0xc]; // 0x110c(0x0c)
	/*struct TSoftObjectPtr<UStaticMesh>*/char CachedYellowPath[0x28]; // 0x1118(0x28)
	/*struct TSoftObjectPtr<UStaticMesh>*/char CachedGreenPath[0x28]; // 0x1140(0x28)
	char pad_1168[0x10]; // 0x1168(0x10)
	struct TArray<struct UInteractorAsyncStaticMeshComponent*> CachedAutoDoors; // 0x1178(0x10)

	void OpenDoorByHackPC(); // Function DFMGameplay.Interactor_AutoDoorBase.OpenDoorByHackPC // (Final|Native|Public|BlueprintCallable) // @ game+0x63412b0
	void OnTriggerEndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function DFMGameplay.Interactor_AutoDoorBase.OnTriggerEndOverlap // (Final|Native|Protected) // @ game+0x6341070
	void OnTriggerBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.Interactor_AutoDoorBase.OnTriggerBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x6340e70
	void OnGreenOrYellowLoaded(struct FSoftObjectPath& InPath); // Function DFMGameplay.Interactor_AutoDoorBase.OnGreenOrYellowLoaded // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x63402c0
	void OnGPCharacterBaseDied(struct AGPCharacterBase* InCharacter); // Function DFMGameplay.Interactor_AutoDoorBase.OnGPCharacterBaseDied // (Final|Native|Protected) // @ game+0x6340180
	void OnFakeTick(); // Function DFMGameplay.Interactor_AutoDoorBase.OnFakeTick // (Final|Native|Protected) // @ game+0x6340160
	void OnAutoDoorMeshLoaded(); // Function DFMGameplay.Interactor_AutoDoorBase.OnAutoDoorMeshLoaded // (Final|Native|Protected) // @ game+0x633fd50
	void DoAutoClose(); // Function DFMGameplay.Interactor_AutoDoorBase.DoAutoClose // (Final|Native|Protected) // @ game+0x633f1c0
	struct UBoxComponent* BP_GetTrigger(); // Function DFMGameplay.Interactor_AutoDoorBase.BP_GetTrigger // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UInteractorOptSwitcherExecuteComponent* BP_GetOpenCloseSwitcherExecuteComp(); // Function DFMGameplay.Interactor_AutoDoorBase.BP_GetOpenCloseSwitcherExecuteComp // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct UBoxComponent* BP_GetNavAreaBox2(); // Function DFMGameplay.Interactor_AutoDoorBase.BP_GetNavAreaBox2 // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	struct TArray<struct UInteractorAsyncStaticMeshComponent*> BP_GetAutoDoors(); // Function DFMGameplay.Interactor_AutoDoorBase.BP_GetAutoDoors // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_DeadBody
// Size: 0x1d48 (Inherited: 0x19f0)
class AInventoryPickup_DeadBody : public AInventoryPickup_Container {
public:

	struct FKillInfo KillInfo; // 0x19f0(0x148)
	struct FString PlayerName_Buffer; // 0x1b38(0x10)
	struct FText PlayerName; // 0x1b48(0x18)
	struct FString PlayerIconUrl; // 0x1b60(0x10)
	int32_t CampId; // 0x1b70(0x04)
	enum class EInGameBattleClassType BattleClassType; // 0x1b74(0x01)
	bool bCarryBodySetting; // 0x1b75(0x01)
	char pad_1B76[0x2]; // 0x1b76(0x02)
	float DeadbodyCurrency; // 0x1b78(0x04)
	char pad_1B7C[0x4]; // 0x1b7c(0x04)
	uint64_t CurrencyGID; // 0x1b80(0x08)
	struct UInteractorAsyncSkeletalMeshComponent* DeadBoxAsyncSkeletalMeshComp; // 0x1b88(0x08)
	/*struct FDelegate*/char OnDeadbodyDestroy[0x10]; // 0x1b90(0x10)
	uint64_t CurrentSearchingPlayerUin; // 0x1ba0(0x08)
	/*struct FDelegate*/char OnCurrentSearchingPlayerChange[0x10]; // 0x1ba8(0x10)
	char pad_1BB8[0x8]; // 0x1bb8(0x08)
	bool bIsAI; // 0x1bc0(0x01)
	char pad_1BC1[0x7]; // 0x1bc1(0x07)
	struct AGPCharacterBase* LootingCharacterOwner; // 0x1bc8(0x08)
	bool bLooted; // 0x1bd0(0x01)
	bool bIsCarrySelfBySomeOne; // 0x1bd1(0x01)
	char pad_1BD2[0xe]; // 0x1bd2(0x0e)
	struct TMap<enum class EAttachPosition, struct UItemSpace*> PlayerDeadbodySpaces; // 0x1be0(0x50)
	uint64_t MeleeWeaponItemId; // 0x1c30(0x08)
	char pad_1C38[0x10]; // 0x1c38(0x10)
	struct FGameplayTag OpenDeadBoxTag; // 0x1c48(0x08)
	bool bCarryBody; // 0x1c50(0x01)
	char pad_1C51[0x3]; // 0x1c51(0x03)
	float LineTraceStartHeight; // 0x1c54(0x04)
	float LineTraceEndHeight; // 0x1c58(0x04)
	float TimeRobotAI2Box_FallDown; // 0x1c5c(0x04)
	float SweepRadiusScale; // 0x1c60(0x04)
	float LODCullingDistance; // 0x1c64(0x04)
	bool bDeadTranslucent; // 0x1c68(0x01)
	char pad_1C69[0x3]; // 0x1c69(0x03)
	float DefaultTranslucentStartTime; // 0x1c6c(0x04)
	float TranslucentTime; // 0x1c70(0x04)
	enum class EaseType TranslucentEaseType; // 0x1c74(0x01)
	char pad_1C75[0x3]; // 0x1c75(0x03)
	struct FVector DestroyBlockingBoxRange; // 0x1c78(0x0c)
	float SceneQueryRadius; // 0x1c84(0x04)
	bool bKillDeadPlayerMesh; // 0x1c88(0x01)
	bool bKillDeadRobotAIMesh; // 0x1c89(0x01)
	bool bKillDeadAILabMesh; // 0x1c8a(0x01)
	char pad_1C8B[0x5]; // 0x1c8b(0x05)
	struct FDeadBodyBoxInfo DeadBodyBoxInfo; // 0x1c90(0x38)
	struct USkeletalMesh* GoalSkeletalMesh; // 0x1cc8(0x08)
	char pad_1CD0[0x20]; // 0x1cd0(0x20)
	struct ADebugTextActor* DebugTextActor; // 0x1cf0(0x08)
	struct FGPGameModeLogicConfig GameModeLogicConfig; // 0x1cf8(0x30)
	struct FRescueCascadeParamInfo RawRescueParamInfo; // 0x1d28(0x18)
	char pad_1D40[0x8]; // 0x1d40(0x08)

	void TryDestroyThrowBlocking(); // Function DFMGameplay.InventoryPickup_DeadBody.TryDestroyThrowBlocking // (Final|Native|Public) // @ game+0x637e1d0
	void TranslucentStart_Inner(); // Function DFMGameplay.InventoryPickup_DeadBody.TranslucentStart_Inner // (Final|Native|Public) // @ game+0x637e1b0
	bool ShouldBehaveAsPlayer(); // Function DFMGameplay.InventoryPickup_DeadBody.ShouldBehaveAsPlayer // (Native|Public) // @ game+0x3579200
	void OnServerTriggerUpdateDeadBox(); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerTriggerUpdateDeadBox // (Final|Native|Public) // @ game+0x637dd80
	void OnServerRebornMe(); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerRebornMe // (Final|Native|Public) // @ game+0x637dd60
	void OnServerGameEnd(enum class EMatchOverReason MatchOverReason, int64_t PlayerUin); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerGameEnd // (Native|Public) // @ game+0x637dbc0
	void OnServerDiedRagdollStart(); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerDiedRagdollStart // (Final|Native|Public) // @ game+0x637dba0
	void OnServerDiedRagdollEnd(); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerDiedRagdollEnd // (Final|Native|Public) // @ game+0x637db80
	void OnServerAILabMatchEnd(int64_t PlayerUin); // Function DFMGameplay.InventoryPickup_DeadBody.OnServerAILabMatchEnd // (Native|Public) // @ game+0x637daf0
	void OnRep_PlayerName_Buffer(); // Function DFMGameplay.InventoryPickup_DeadBody.OnRep_PlayerName_Buffer // (Final|Native|Public) // @ game+0x637dab0
	void OnRep_MeleeWeaponItemId(); // Function DFMGameplay.InventoryPickup_DeadBody.OnRep_MeleeWeaponItemId // (Final|Native|Protected) // @ game+0x637da70
	void OnRep_GoalSkeletalMesh(); // Function DFMGameplay.InventoryPickup_DeadBody.OnRep_GoalSkeletalMesh // (Final|Native|Public) // @ game+0x637da30
	void OnRep_DeadBodyBoxInfo(); // Function DFMGameplay.InventoryPickup_DeadBody.OnRep_DeadBodyBoxInfo // (Final|Native|Public) // @ game+0x637da10
	void OnRep_CurrentSearchingPlayerUin(); // Function DFMGameplay.InventoryPickup_DeadBody.OnRep_CurrentSearchingPlayerUin // (Final|Native|Public) // @ game+0x637d9d0
	void OnOwnerCharacterReborn(); // Function DFMGameplay.InventoryPickup_DeadBody.OnOwnerCharacterReborn // (Final|Native|Public) // @ game+0x637d840
	void OnDeathWaitingRescueEnd(); // Function DFMGameplay.InventoryPickup_DeadBody.OnDeathWaitingRescueEnd // (Final|Native|Public) // @ game+0x637d220
	void OnDeadBoxTextUpdate(int32_t TextType); // Function DFMGameplay.InventoryPickup_DeadBody.OnDeadBoxTextUpdate // (Final|Native|Public) // @ game+0x637d1a0
	void OnDeadBoxSkeletalMeshLoadComplete(); // Function DFMGameplay.InventoryPickup_DeadBody.OnDeadBoxSkeletalMeshLoadComplete // (Final|Native|Public) // @ game+0x637d180
	void OnCurrentSearchingPlayerChange__DelegateSignature(); // DelegateFunction DFMGameplay.InventoryPickup_DeadBody.OnCurrentSearchingPlayerChange__DelegateSignature // (Public|Delegate) // @ game+0x7ed88c0
	void OnClearCarryActorData(); // Function DFMGameplay.InventoryPickup_DeadBody.OnClearCarryActorData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x637d160
	bool IsPlayerAIDeadbody(); // Function DFMGameplay.InventoryPickup_DeadBody.IsPlayerAIDeadbody // (Final|Native|Public|Const) // @ game+0x637ce10
	bool IsNormalAIDeadbody(); // Function DFMGameplay.InventoryPickup_DeadBody.IsNormalAIDeadbody // (Final|Native|Public|Const) // @ game+0x637cde0
	bool IsLabAIDeadbody(); // Function DFMGameplay.InventoryPickup_DeadBody.IsLabAIDeadbody // (Final|Native|Public|Const) // @ game+0x637cdb0
	bool IsAIDeadbody(); // Function DFMGameplay.InventoryPickup_DeadBody.IsAIDeadbody // (Final|Native|Public|Const) // @ game+0x637cd50
	void HideDeadCharacter(); // Function DFMGameplay.InventoryPickup_DeadBody.HideDeadCharacter // (Final|Native|Public) // @ game+0x637cd30
	uint64_t GetUin(); // Function DFMGameplay.InventoryPickup_DeadBody.GetUin // (Native|Public|Const) // @ game+0x637cc70
	struct FString GetPlayerName(); // Function DFMGameplay.InventoryPickup_DeadBody.GetPlayerName // (Final|Native|Public) // @ game+0x637c950
	struct FString GetPlayerIconUrl(); // Function DFMGameplay.InventoryPickup_DeadBody.GetPlayerIconUrl // (Final|Native|Public) // @ game+0x637c8d0
	struct AGPCharacterBase* GetLootingCharacterOwner(); // Function DFMGameplay.InventoryPickup_DeadBody.GetLootingCharacterOwner // (Final|Native|Public|Const) // @ game+0x637c7b0
	struct FKillInfo GetKilledInfo(); // Function DFMGameplay.InventoryPickup_DeadBody.GetKilledInfo // (Final|Native|Public) // @ game+0x637c760
	enum class EDeadBodySkeletalMeshType GetDeadBodyMeshType(); // Function DFMGameplay.InventoryPickup_DeadBody.GetDeadBodyMeshType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x637c630
	float GetDeadbodyCurrency(); // Function DFMGameplay.InventoryPickup_DeadBody.GetDeadbodyCurrency // (Final|Native|Public|Const) // @ game+0x637c660
	enum class EInGameBattleClassType GetBattleClassType(); // Function DFMGameplay.InventoryPickup_DeadBody.GetBattleClassType // (Final|Native|Public|Const) // @ game+0x637c5d0
	bool DoDestroyThrowBlocking(); // Function DFMGameplay.InventoryPickup_DeadBody.DoDestroyThrowBlocking // (Final|Native|Public|Const) // @ game+0x637c320
	void DeadbodyDestroy__DelegateSignature(struct AInventoryPickup_DeadBody* Deadbody, struct FVector CurrentLocation); // DelegateFunction DFMGameplay.InventoryPickup_DeadBody.DeadbodyDestroy__DelegateSignature // (Public|Delegate|HasDefaults) // @ game+0x7ed88c0
	void ClientNotifyPickupCurrencyDone(struct ADFMCharacter* CHARACTER); // Function DFMGameplay.InventoryPickup_DeadBody.ClientNotifyPickupCurrencyDone // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x637c130
	void AutofitGround(); // Function DFMGameplay.InventoryPickup_DeadBody.AutofitGround // (Final|Native|Public) // @ game+0x637bfd0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_OpenBox
// Size: 0x1b90 (Inherited: 0x19f0)
class AInventoryPickup_OpenBox : public AInventoryPickup_Container {
public:

	uint64_t SafeBoxUin; // 0x19f0(0x08)
	uint32_t boxId; // 0x19f8(0x04)
	uint32_t BoxLevel; // 0x19fc(0x04)
	enum class ELootLimitType LootLimit; // 0x1a00(0x01)
	bool bIsOpened; // 0x1a01(0x01)
	bool bIsOpening; // 0x1a02(0x01)
	bool bHasOpened; // 0x1a03(0x01)
	char pad_1A04[0x4]; // 0x1a04(0x04)
	uint64_t OpeningPlayerId; // 0x1a08(0x08)
	float OpenCostSeconds; // 0x1a10(0x04)
	float OpenStartTime; // 0x1a14(0x04)
	bool bMarkRenderStateDirtyOnBeginplay; // 0x1a18(0x01)
	char CapacityLength; // 0x1a19(0x01)
	char CapacityWidth; // 0x1a1a(0x01)
	char pad_1A1B[0x15]; // 0x1a1b(0x15)
	bool UseOverrideItems; // 0x1a30(0x01)
	char pad_1A31[0x7]; // 0x1a31(0x07)
	struct TArray<struct FPointDropItem> OverrideItems; // 0x1a38(0x10)
	int64_t WorldActorId; // 0x1a48(0x08)
	bool IsWorldActor; // 0x1a50(0x01)
	char pad_1A51[0x17]; // 0x1a51(0x17)
	bool bSpecifiedDropItem; // 0x1a68(0x01)
	char pad_1A69[0x7]; // 0x1a69(0x07)
	struct TArray<struct FSpecifiedDropItemInfo> SpecifiedDropItemArr; // 0x1a70(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientSafeBoxCodePassWordCorrect[0x10]; // 0x1a80(0x10)
	/*struct FMulticastInlineDelegate*/char OnClientSafeBoxCodeOperatingChanged[0x10]; // 0x1a90(0x10)
	int32_t PwdDigitsNum; // 0x1aa0(0x04)
	char pad_1AA4[0x4]; // 0x1aa4(0x04)
	struct FText TipsText; // 0x1aa8(0x18)
	struct AGPCharacterBase* CachedOperatingCharacterBase; // 0x1ac0(0x08)
	struct AGPCharacterBase* CachedUnlockedCharacterBase; // 0x1ac8(0x08)
	bool bUseRandomSafeBoxPwd; // 0x1ad0(0x01)
	char pad_1AD1[0x7]; // 0x1ad1(0x07)
	struct TArray<int32_t> SafeBoxPwd; // 0x1ad8(0x10)
	int32_t SafeBoxCodeID; // 0x1ae8(0x04)
	char pad_1AEC[0x4]; // 0x1aec(0x04)
	struct TArray<int32_t> RealSafeBoxPwd; // 0x1af0(0x10)
	bool bUseShortOwnAfterOpenBox; // 0x1b00(0x01)
	bool bUseBoxMatchingContainerColl; // 0x1b01(0x01)
	char pad_1B02[0x6]; // 0x1b02(0x06)
	struct TArray<struct FContainerCollMatchingInfo> ContainerCollMatchingInfos; // 0x1b08(0x10)
	bool bIsNormalSafeBox; // 0x1b18(0x01)
	char pad_1B19[0x7]; // 0x1b19(0x07)
	struct TArray<uint64_t> CapturingUinArray; // 0x1b20(0x10)
	struct TMap<uint64_t, float> CaptureStampMap; // 0x1b30(0x50)
	float CaptureSuccessMinDuration; // 0x1b80(0x04)
	float CaptureSuccessMaxDuration; // 0x1b84(0x04)
	bool bUseCheckCapture; // 0x1b88(0x01)
	bool bIsNest; // 0x1b89(0x01)
	char pad_1B8A[0x6]; // 0x1b8a(0x06)

	bool VerifySafeBoxCode(struct TArray<int32_t>& InPwdDigits); // Function DFMGameplay.InventoryPickup_OpenBox.VerifySafeBoxCode // (Final|Native|Public|HasOutParms|Const) // @ game+0x6386720
	void SyncOpenSafeOperateFast(int32_t Op, float params1, float params2); // Function DFMGameplay.InventoryPickup_OpenBox.SyncOpenSafeOperateFast // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SyncOpenSafeOperate(int32_t Op, float params1, float params2); // Function DFMGameplay.InventoryPickup_OpenBox.SyncOpenSafeOperate // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	void SwitchBoxToOpenState(bool bShowOpen); // Function DFMGameplay.InventoryPickup_OpenBox.SwitchBoxToOpenState // (Native|Protected) // @ game+0x6386690
	void OpenThisBoxInner(uint64_t InPlayerUin); // Function DFMGameplay.InventoryPickup_OpenBox.OpenThisBoxInner // (Final|Native|Protected) // @ game+0x6384be0
	void OpenThisBox(struct APlayerController* PC); // Function DFMGameplay.InventoryPickup_OpenBox.OpenThisBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6384b60
	void OnSimulateOpenSafeBoxFast(int32_t SafeBoxId, float params1, float params2, int32_t OperateId); // Function DFMGameplay.InventoryPickup_OpenBox.OnSimulateOpenSafeBoxFast // (Final|Native|Public) // @ game+0x63847b0
	void OnSimulateOpenSafeBox(struct FSpectSafeBoxInfo& SimulateboxId); // Function DFMGameplay.InventoryPickup_OpenBox.OnSimulateOpenSafeBox // (Final|Native|Public|HasOutParms) // @ game+0x6384700
	void OnRep_RealSafeBoxPwd(); // Function DFMGameplay.InventoryPickup_OpenBox.OnRep_RealSafeBoxPwd // (Final|Native|Protected) // @ game+0x6384600
	void OnRep_CachedOperatingCharacterBase(struct AGPCharacterBase* InPre); // Function DFMGameplay.InventoryPickup_OpenBox.OnRep_CachedOperatingCharacterBase // (Final|Native|Protected) // @ game+0x63844e0
	void OnIsOpeningReplicate(); // Function DFMGameplay.InventoryPickup_OpenBox.OnIsOpeningReplicate // (Final|Native|Protected) // @ game+0x17621d0
	void OnIsOpenedReplicate(); // Function DFMGameplay.InventoryPickup_OpenBox.OnIsOpenedReplicate // (Final|Native|Protected) // @ game+0x6383fd0
	void OnCollisionOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function DFMGameplay.InventoryPickup_OpenBox.OnCollisionOverlapBegin // (Native|Public|HasOutParms) // @ game+0x63839e0
	void NetMultiStopNestLoopAudio(struct AGPCharacter* InGPCharacter); // Function DFMGameplay.InventoryPickup_OpenBox.NetMultiStopNestLoopAudio // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x6383700
	void NetMultiFakeNotifySoundVisualization(struct AGPCharacter* InGPCharacter); // Function DFMGameplay.InventoryPickup_OpenBox.NetMultiFakeNotifySoundVisualization // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x637c130
	void LootDoneThisBox(struct APlayerController* PC); // Function DFMGameplay.InventoryPickup_OpenBox.LootDoneThisBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6383680
	bool IsValidOBSafebox(); // Function DFMGameplay.InventoryPickup_OpenBox.IsValidOBSafebox // (Final|Native|Public|BlueprintCallable) // @ game+0x6383650
	void InitSafeBoxPwd(); // Function DFMGameplay.InventoryPickup_OpenBox.InitSafeBoxPwd // (Final|Native|Public) // @ game+0x6383560
	int32_t GetSafeBoxCodeID(); // Function DFMGameplay.InventoryPickup_OpenBox.GetSafeBoxCodeID // (Final|Native|Public|Const) // @ game+0x6383040
	struct FString GetOpenBoxTypeName(); // Function DFMGameplay.InventoryPickup_OpenBox.GetOpenBoxTypeName // (Event|Public|BlueprintEvent) // @ game+0x7ed88c0
	int32_t GetBoxUin(); // Function DFMGameplay.InventoryPickup_OpenBox.GetBoxUin // (Final|Native|Public|BlueprintCallable) // @ game+0x6382930
	int32_t GetBoxID(); // Function DFMGameplay.InventoryPickup_OpenBox.GetBoxID // (Final|Native|Public|BlueprintCallable) // @ game+0x6382910
	void DoSimulateSafeBoxOperate(int32_t Op, float params1, float params2); // Function DFMGameplay.InventoryPickup_OpenBox.DoSimulateSafeBoxOperate // (Final|Native|Public|BlueprintCallable) // @ game+0x6382630
	void DoFastSimulateSafeBoxOperate(int32_t Op, float params1, float params2); // Function DFMGameplay.InventoryPickup_OpenBox.DoFastSimulateSafeBoxOperate // (Final|Native|Public|BlueprintCallable) // @ game+0x6382530
	struct FPointDropItem CreatePointDropItem(int64_t ID, int32_t Num); // Function DFMGameplay.InventoryPickup_OpenBox.CreatePointDropItem // (Final|Native|Public|BlueprintCallable) // @ game+0x6382350
	void CloseThisBoxInner(); // Function DFMGameplay.InventoryPickup_OpenBox.CloseThisBoxInner // (Final|Native|Protected) // @ game+0x6382330
	void CloseThisBox(); // Function DFMGameplay.InventoryPickup_OpenBox.CloseThisBox // (Final|Native|Public|BlueprintCallable) // @ game+0x6382310
	bool CheckIfNeedVerifySafeBoxCode(); // Function DFMGameplay.InventoryPickup_OpenBox.CheckIfNeedVerifySafeBoxCode // (Final|Native|Public|Const) // @ game+0x6381930
	bool CanOpenThisBox(); // Function DFMGameplay.InventoryPickup_OpenBox.CanOpenThisBox // (Final|Native|Public) // @ game+0x6381790
	void CancelOpenThisBoxInner(); // Function DFMGameplay.InventoryPickup_OpenBox.CancelOpenThisBoxInner // (Final|Native|Protected) // @ game+0x63817c0
	void CancelOpenThisBox(); // Function DFMGameplay.InventoryPickup_OpenBox.CancelOpenThisBox // (Final|Native|Public) // @ game+0x17621d0
	void BP_StopNestLoopAudio(); // Function DFMGameplay.InventoryPickup_OpenBox.BP_StopNestLoopAudio // (Event|Protected|BlueprintEvent) // @ game+0x7ed88c0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptReleaseDoorLockAnimExecuteComponent
// Size: 0x228 (Inherited: 0x228)
class UInteractorOptReleaseDoorLockAnimExecuteComponent : public UInteractorOptPawnAnimExecuteComponent {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_DeadBodyQuest
// Size: 0x1dc0 (Inherited: 0x1d48)
class AInventoryPickup_DeadBodyQuest : public AInventoryPickup_DeadBody {
public:

	struct TArray<uint64_t> InteractCharacterArr; // 0x1d48(0x10)
	char pad_1D58[0x18]; // 0x1d58(0x18)
	bool bIfBaseDeadBodyForQuest; // 0x1d70(0x01)
	char pad_1D71[0x7]; // 0x1d71(0x07)
	int64_t QuestID; // 0x1d78(0x08)
	int64_t objectiveId; // 0x1d80(0x08)
	bool bInteractOnce; // 0x1d88(0x01)
	char pad_1D89[0x7]; // 0x1d89(0x07)
	struct UClass* DeadBodyClass; // 0x1d90(0x08)
	struct FName EquipID; // 0x1d98(0x08)
	struct FText DeadBodyPlayerName; // 0x1da0(0x18)
	bool bIsPlayer; // 0x1db8(0x01)
	char pad_1DB9[0x7]; // 0x1db9(0x07)

	void ShowDeadBodyQuest(bool bShow); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.ShowDeadBodyQuest // (Final|Native|Public) // @ game+0x6386220
	void SetDeadBodyQuestParam(struct AInventoryPickup_DeadBodyQuest* DeadBodyQuest); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.SetDeadBodyQuestParam // (Final|Native|Public) // @ game+0x6385eb0
	void OnSolRefreshQuest(bool bGMAddQuest); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.OnSolRefreshQuest // (Final|Native|Public) // @ game+0x63848f0
	void OnRep_IfBaseDeadBodyForQuest(); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.OnRep_IfBaseDeadBodyForQuest // (Final|Native|Public) // @ game+0x6384580
	void OnPlayerControllerChanged(struct APlayerController* NewController); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.OnPlayerControllerChanged // (Final|Native|Public) // @ game+0x6384460
	void OnClientQuestObjectionUpdate(int64_t InQuestId, int64_t InQuestObjectionID, char ObjectionState, char ObjectionType); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.OnClientQuestObjectionUpdate // (Final|Native|Public) // @ game+0x6383890
	void InitQuestStatusDelegate(); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.InitQuestStatusDelegate // (Final|Native|Public) // @ game+0x6383540
	void InitQuestStatus(); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.InitQuestStatus // (Final|Native|Public) // @ game+0x6383520
	void InitFakePickup(struct AInventoryPickup_DeadBodyQuest* DeadBodyQuest); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.InitFakePickup // (Final|Native|Public) // @ game+0x63834a0
	void InitDropItem(struct TArray<struct FAIDropItem>& dropItemList); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.InitDropItem // (Final|Native|Public|HasOutParms) // @ game+0x63833d0
	uint32_t GetRandomSeed(uint64_t RoomId); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.GetRandomSeed // (Final|Native|Public) // @ game+0x6382f80
	void ClearQuestStatusDelegate(); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.ClearQuestStatusDelegate // (Final|Native|Public) // @ game+0x6381e20
	void AddInteractCharacterArr(uint64_t CharacterUin); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.AddInteractCharacterArr // (Final|Native|Public) // @ game+0x6381340
	void AddDeadBodyBox(); // Function DFMGameplay.InventoryPickup_DeadBodyQuest.AddDeadBodyBox // (Final|Native|Public) // @ game+0x6381320
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_DeadBodyWithSpecialEffect
// Size: 0x1d68 (Inherited: 0x1d48)
class AInventoryPickup_DeadBodyWithSpecialEffect : public AInventoryPickup_DeadBody {
public:

	struct UStaticMeshComponent* StaticMeshComp; // 0x1d48(0x08)
	struct UFXResourceContainerComponent* DefaultEffects; // 0x1d50(0x08)
	struct FName EffectNameRep; // 0x1d58(0x08)
	float EffectDistanceRep; // 0x1d60(0x04)
	char pad_1D64[0x4]; // 0x1d64(0x04)

	void PlayStaticActorEffectInner(); // Function DFMGameplay.InventoryPickup_DeadBodyWithSpecialEffect.PlayStaticActorEffectInner // (Final|Native|Public) // @ game+0x64138b0
	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InventoryPickup_OpenBoxServer
// Size: 0x1b90 (Inherited: 0x1b90)
class AInventoryPickup_OpenBoxServer : public AInventoryPickup_OpenBox {
public:


	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};

// Class DFMGameplay.InteractorOptKickDoorAnimExecuteComponent
// Size: 0x248 (Inherited: 0x228)
class UInteractorOptKickDoorAnimExecuteComponent : public UInteractorOptReleaseDoorLockAnimExecuteComponent {
public:

	enum class EInteractivePutWeaponType PutWeaponType; // 0x228(0x01)
	char pad_229[0x3]; // 0x229(0x03)
	float PutWeaponBlendIn; // 0x22c(0x04)
	float PutWeaponBlendOut; // 0x230(0x04)
	enum class EInteractiveGetWeaponType GetWeaponType; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
	float GetWeaponBlendIn; // 0x238(0x04)
	float GetWeaponBlendOut; // 0x23c(0x04)
	char pad_240[0x8]; // 0x240(0x08)

	static UClass* StaticClass(); // Dumper_Generated_Function // () // @ game+0x000000
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
